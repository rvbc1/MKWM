
MKWM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00011278  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001e64  08011388  08011388  00021388  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000448  080131ec  080131ec  000231ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000450  08013634  08013634  00023634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .init_array   0000001c  08013a84  08013a84  00023a84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .fini_array   00000004  08013aa0  08013aa0  00023aa0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .data         00000694  20000000  08013aa4  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          00000490  20000694  08014138  00030694  2**2
                  ALLOC
  9 ._user_heap_stack 00000600  20000b24  08014138  00030b24  2**0
                  ALLOC
 10 .ARM.attributes 00000029  00000000  00000000  00030694  2**0
                  CONTENTS, READONLY
 11 .debug_info   00017c32  00000000  00000000  000306bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 0000307d  00000000  00000000  000482ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000060c5  00000000  00000000  0004b36c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000c80  00000000  00000000  00051438  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000eb0  00000000  00000000  000520b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00006560  00000000  00000000  00052f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00006fd3  00000000  00000000  000594c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007c  00000000  00000000  0006049b  2**0
                  CONTENTS, READONLY
 19 .debug_frame  0000f8a4  00000000  00000000  00060518  2**2
                  CONTENTS, READONLY, DEBUGGING
 20 .stab         000000cc  00000000  00000000  0006fdbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stabstr      000001ed  00000000  00000000  0006fe88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000694 	.word	0x20000694
 800012c:	00000000 	.word	0x00000000
 8000130:	08011370 	.word	0x08011370

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000698 	.word	0x20000698
 800014c:	08011370 	.word	0x08011370

08000150 <d_make_comp>:
 8000150:	b470      	push	{r4, r5, r6}
 8000152:	1e4c      	subs	r4, r1, #1
 8000154:	2c4c      	cmp	r4, #76	; 0x4c
 8000156:	d82d      	bhi.n	80001b4 <d_make_comp+0x64>
 8000158:	e8df f004 	tbb	[pc, r4]
 800015c:	3c3c3c3c 	.word	0x3c3c3c3c
 8000160:	2c2c2c2c 	.word	0x2c2c2c2c
 8000164:	273c2727 	.word	0x273c2727
 8000168:	27272727 	.word	0x27272727
 800016c:	27272727 	.word	0x27272727
 8000170:	2c272727 	.word	0x2c272727
 8000174:	28282828 	.word	0x28282828
 8000178:	28282828 	.word	0x28282828
 800017c:	2727273c 	.word	0x2727273c
 8000180:	272c2727 	.word	0x272c2727
 8000184:	2c3c3e28 	.word	0x2c3c3e28
 8000188:	3e28283c 	.word	0x3e28283c
 800018c:	27272c2c 	.word	0x27272c2c
 8000190:	3c3c3c27 	.word	0x3c3c3c27
 8000194:	3c273c3c 	.word	0x3c273c3c
 8000198:	2c3c273c 	.word	0x2c3c273c
 800019c:	2727272c 	.word	0x2727272c
 80001a0:	272c2c2c 	.word	0x272c2c2c
 80001a4:	283c2727 	.word	0x283c2727
 80001a8:	3c          	.byte	0x3c
 80001a9:	00          	.byte	0x00
 80001aa:	b11a      	cbz	r2, 80001b4 <d_make_comp+0x64>
 80001ac:	6944      	ldr	r4, [r0, #20]
 80001ae:	6985      	ldr	r5, [r0, #24]
 80001b0:	42ac      	cmp	r4, r5
 80001b2:	db02      	blt.n	80001ba <d_make_comp+0x6a>
 80001b4:	2000      	movs	r0, #0
 80001b6:	bc70      	pop	{r4, r5, r6}
 80001b8:	4770      	bx	lr
 80001ba:	eb04 0544 	add.w	r5, r4, r4, lsl #1
 80001be:	6906      	ldr	r6, [r0, #16]
 80001c0:	00ad      	lsls	r5, r5, #2
 80001c2:	3401      	adds	r4, #1
 80001c4:	6144      	str	r4, [r0, #20]
 80001c6:	1970      	adds	r0, r6, r5
 80001c8:	d0f5      	beq.n	80001b6 <d_make_comp+0x66>
 80001ca:	5571      	strb	r1, [r6, r5]
 80001cc:	6042      	str	r2, [r0, #4]
 80001ce:	6083      	str	r3, [r0, #8]
 80001d0:	bc70      	pop	{r4, r5, r6}
 80001d2:	4770      	bx	lr
 80001d4:	2a00      	cmp	r2, #0
 80001d6:	d0ed      	beq.n	80001b4 <d_make_comp+0x64>
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0eb      	beq.n	80001b4 <d_make_comp+0x64>
 80001dc:	6944      	ldr	r4, [r0, #20]
 80001de:	6985      	ldr	r5, [r0, #24]
 80001e0:	42ac      	cmp	r4, r5
 80001e2:	dae7      	bge.n	80001b4 <d_make_comp+0x64>
 80001e4:	e7e9      	b.n	80001ba <d_make_comp+0x6a>
 80001e6:	bf00      	nop

080001e8 <d_cv_qualifiers>:
 80001e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001ec:	68c3      	ldr	r3, [r0, #12]
 80001ee:	f1b2 0a00 	subs.w	sl, r2, #0
 80001f2:	4604      	mov	r4, r0
 80001f4:	460e      	mov	r6, r1
 80001f6:	781a      	ldrb	r2, [r3, #0]
 80001f8:	bf15      	itete	ne
 80001fa:	f04f 091e 	movne.w	r9, #30
 80001fe:	f04f 091b 	moveq.w	r9, #27
 8000202:	f04f 081d 	movne.w	r8, #29
 8000206:	f04f 081a 	moveq.w	r8, #26
 800020a:	bf14      	ite	ne
 800020c:	271c      	movne	r7, #28
 800020e:	2719      	moveq	r7, #25
 8000210:	460d      	mov	r5, r1
 8000212:	e018      	b.n	8000246 <d_cv_qualifiers+0x5e>
 8000214:	2a56      	cmp	r2, #86	; 0x56
 8000216:	d01f      	beq.n	8000258 <d_cv_qualifiers+0x70>
 8000218:	2a4b      	cmp	r2, #75	; 0x4b
 800021a:	d024      	beq.n	8000266 <d_cv_qualifiers+0x7e>
 800021c:	2a44      	cmp	r2, #68	; 0x44
 800021e:	d12d      	bne.n	800027c <d_cv_qualifiers+0x94>
 8000220:	785a      	ldrb	r2, [r3, #1]
 8000222:	2a78      	cmp	r2, #120	; 0x78
 8000224:	d127      	bne.n	8000276 <d_cv_qualifiers+0x8e>
 8000226:	214c      	movs	r1, #76	; 0x4c
 8000228:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800022a:	3302      	adds	r3, #2
 800022c:	3211      	adds	r2, #17
 800022e:	60e3      	str	r3, [r4, #12]
 8000230:	6322      	str	r2, [r4, #48]	; 0x30
 8000232:	2300      	movs	r3, #0
 8000234:	4620      	mov	r0, r4
 8000236:	461a      	mov	r2, r3
 8000238:	f7ff ff8a 	bl	8000150 <d_make_comp>
 800023c:	6028      	str	r0, [r5, #0]
 800023e:	b1c8      	cbz	r0, 8000274 <d_cv_qualifiers+0x8c>
 8000240:	68e3      	ldr	r3, [r4, #12]
 8000242:	1d05      	adds	r5, r0, #4
 8000244:	781a      	ldrb	r2, [r3, #0]
 8000246:	2a72      	cmp	r2, #114	; 0x72
 8000248:	d1e4      	bne.n	8000214 <d_cv_qualifiers+0x2c>
 800024a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800024c:	3301      	adds	r3, #1
 800024e:	3209      	adds	r2, #9
 8000250:	60e3      	str	r3, [r4, #12]
 8000252:	6322      	str	r2, [r4, #48]	; 0x30
 8000254:	4639      	mov	r1, r7
 8000256:	e7ec      	b.n	8000232 <d_cv_qualifiers+0x4a>
 8000258:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800025a:	3301      	adds	r3, #1
 800025c:	3209      	adds	r2, #9
 800025e:	60e3      	str	r3, [r4, #12]
 8000260:	6322      	str	r2, [r4, #48]	; 0x30
 8000262:	4641      	mov	r1, r8
 8000264:	e7e5      	b.n	8000232 <d_cv_qualifiers+0x4a>
 8000266:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8000268:	3301      	adds	r3, #1
 800026a:	3206      	adds	r2, #6
 800026c:	60e3      	str	r3, [r4, #12]
 800026e:	6322      	str	r2, [r4, #48]	; 0x30
 8000270:	4649      	mov	r1, r9
 8000272:	e7de      	b.n	8000232 <d_cv_qualifiers+0x4a>
 8000274:	4605      	mov	r5, r0
 8000276:	4628      	mov	r0, r5
 8000278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800027c:	f1ba 0f00 	cmp.w	sl, #0
 8000280:	d1f9      	bne.n	8000276 <d_cv_qualifiers+0x8e>
 8000282:	2a46      	cmp	r2, #70	; 0x46
 8000284:	d1f7      	bne.n	8000276 <d_cv_qualifiers+0x8e>
 8000286:	42b5      	cmp	r5, r6
 8000288:	d0f5      	beq.n	8000276 <d_cv_qualifiers+0x8e>
 800028a:	201d      	movs	r0, #29
 800028c:	211e      	movs	r1, #30
 800028e:	221c      	movs	r2, #28
 8000290:	e007      	b.n	80002a2 <d_cv_qualifiers+0xba>
 8000292:	2b1b      	cmp	r3, #27
 8000294:	d00b      	beq.n	80002ae <d_cv_qualifiers+0xc6>
 8000296:	2b19      	cmp	r3, #25
 8000298:	d100      	bne.n	800029c <d_cv_qualifiers+0xb4>
 800029a:	7032      	strb	r2, [r6, #0]
 800029c:	3604      	adds	r6, #4
 800029e:	42b5      	cmp	r5, r6
 80002a0:	d0e9      	beq.n	8000276 <d_cv_qualifiers+0x8e>
 80002a2:	6836      	ldr	r6, [r6, #0]
 80002a4:	7833      	ldrb	r3, [r6, #0]
 80002a6:	2b1a      	cmp	r3, #26
 80002a8:	d1f3      	bne.n	8000292 <d_cv_qualifiers+0xaa>
 80002aa:	7030      	strb	r0, [r6, #0]
 80002ac:	e7f6      	b.n	800029c <d_cv_qualifiers+0xb4>
 80002ae:	7031      	strb	r1, [r6, #0]
 80002b0:	e7f4      	b.n	800029c <d_cv_qualifiers+0xb4>
 80002b2:	bf00      	nop

080002b4 <d_ref_qualifier>:
 80002b4:	b410      	push	{r4}
 80002b6:	68c3      	ldr	r3, [r0, #12]
 80002b8:	460a      	mov	r2, r1
 80002ba:	781c      	ldrb	r4, [r3, #0]
 80002bc:	2c52      	cmp	r4, #82	; 0x52
 80002be:	d00d      	beq.n	80002dc <d_ref_qualifier+0x28>
 80002c0:	2c4f      	cmp	r4, #79	; 0x4f
 80002c2:	d002      	beq.n	80002ca <d_ref_qualifier+0x16>
 80002c4:	4608      	mov	r0, r1
 80002c6:	bc10      	pop	{r4}
 80002c8:	4770      	bx	lr
 80002ca:	2120      	movs	r1, #32
 80002cc:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80002ce:	3403      	adds	r4, #3
 80002d0:	6304      	str	r4, [r0, #48]	; 0x30
 80002d2:	3301      	adds	r3, #1
 80002d4:	60c3      	str	r3, [r0, #12]
 80002d6:	bc10      	pop	{r4}
 80002d8:	2300      	movs	r3, #0
 80002da:	e739      	b.n	8000150 <d_make_comp>
 80002dc:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80002de:	211f      	movs	r1, #31
 80002e0:	3402      	adds	r4, #2
 80002e2:	6304      	str	r4, [r0, #48]	; 0x30
 80002e4:	e7f5      	b.n	80002d2 <d_ref_qualifier+0x1e>
 80002e6:	bf00      	nop

080002e8 <d_count_templates_scopes>:
 80002e8:	2a00      	cmp	r2, #0
 80002ea:	d04d      	beq.n	8000388 <d_count_templates_scopes+0xa0>
 80002ec:	b570      	push	{r4, r5, r6, lr}
 80002ee:	4605      	mov	r5, r0
 80002f0:	460e      	mov	r6, r1
 80002f2:	4614      	mov	r4, r2
 80002f4:	7823      	ldrb	r3, [r4, #0]
 80002f6:	3b01      	subs	r3, #1
 80002f8:	2b4c      	cmp	r3, #76	; 0x4c
 80002fa:	d82b      	bhi.n	8000354 <d_count_templates_scopes+0x6c>
 80002fc:	e8df f003 	tbb	[pc, r3]
 8000300:	3f363636 	.word	0x3f363636
 8000304:	27272a2a 	.word	0x27272a2a
 8000308:	36363636 	.word	0x36363636
 800030c:	36363636 	.word	0x36363636
 8000310:	36363636 	.word	0x36363636
 8000314:	2a363636 	.word	0x2a363636
 8000318:	36363636 	.word	0x36363636
 800031c:	36363636 	.word	0x36363636
 8000320:	2f2f3636 	.word	0x2f2f3636
 8000324:	362a3636 	.word	0x362a3636
 8000328:	2b363636 	.word	0x2b363636
 800032c:	36363636 	.word	0x36363636
 8000330:	3636272a 	.word	0x3636272a
 8000334:	36363636 	.word	0x36363636
 8000338:	36363636 	.word	0x36363636
 800033c:	2a363636 	.word	0x2a363636
 8000340:	2b2b362a 	.word	0x2b2b362a
 8000344:	362a2b2b 	.word	0x362a2b2b
 8000348:	36363636 	.word	0x36363636
 800034c:	36          	.byte	0x36
 800034d:	00          	.byte	0x00
 800034e:	68a4      	ldr	r4, [r4, #8]
 8000350:	2c00      	cmp	r4, #0
 8000352:	d1cf      	bne.n	80002f4 <d_count_templates_scopes+0xc>
 8000354:	bd70      	pop	{r4, r5, r6, pc}
 8000356:	6864      	ldr	r4, [r4, #4]
 8000358:	2c00      	cmp	r4, #0
 800035a:	d1cb      	bne.n	80002f4 <d_count_templates_scopes+0xc>
 800035c:	e7fa      	b.n	8000354 <d_count_templates_scopes+0x6c>
 800035e:	6862      	ldr	r2, [r4, #4]
 8000360:	7813      	ldrb	r3, [r2, #0]
 8000362:	2b05      	cmp	r3, #5
 8000364:	d103      	bne.n	800036e <d_count_templates_scopes+0x86>
 8000366:	6833      	ldr	r3, [r6, #0]
 8000368:	3301      	adds	r3, #1
 800036a:	6033      	str	r3, [r6, #0]
 800036c:	6862      	ldr	r2, [r4, #4]
 800036e:	4631      	mov	r1, r6
 8000370:	4628      	mov	r0, r5
 8000372:	f7ff ffb9 	bl	80002e8 <d_count_templates_scopes>
 8000376:	68a4      	ldr	r4, [r4, #8]
 8000378:	2c00      	cmp	r4, #0
 800037a:	d1bb      	bne.n	80002f4 <d_count_templates_scopes+0xc>
 800037c:	e7ea      	b.n	8000354 <d_count_templates_scopes+0x6c>
 800037e:	682b      	ldr	r3, [r5, #0]
 8000380:	3301      	adds	r3, #1
 8000382:	602b      	str	r3, [r5, #0]
 8000384:	6862      	ldr	r2, [r4, #4]
 8000386:	e7f2      	b.n	800036e <d_count_templates_scopes+0x86>
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop

0800038c <d_append_buffer>:
 800038c:	b37a      	cbz	r2, 80003ee <d_append_buffer+0x62>
 800038e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000392:	460d      	mov	r5, r1
 8000394:	4604      	mov	r4, r0
 8000396:	f04f 0800 	mov.w	r8, #0
 800039a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800039e:	18af      	adds	r7, r5, r2
 80003a0:	e009      	b.n	80003b6 <d_append_buffer+0x2a>
 80003a2:	460b      	mov	r3, r1
 80003a4:	42bd      	cmp	r5, r7
 80003a6:	f101 0101 	add.w	r1, r1, #1
 80003aa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80003ae:	54e6      	strb	r6, [r4, r3]
 80003b0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80003b4:	d019      	beq.n	80003ea <d_append_buffer+0x5e>
 80003b6:	29ff      	cmp	r1, #255	; 0xff
 80003b8:	f815 6b01 	ldrb.w	r6, [r5], #1
 80003bc:	d1f1      	bne.n	80003a2 <d_append_buffer+0x16>
 80003be:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80003c2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80003c6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80003ca:	4620      	mov	r0, r4
 80003cc:	4798      	blx	r3
 80003ce:	2101      	movs	r1, #1
 80003d0:	2300      	movs	r3, #0
 80003d2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80003d6:	42bd      	cmp	r5, r7
 80003d8:	440a      	add	r2, r1
 80003da:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80003de:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80003e2:	54e6      	strb	r6, [r4, r3]
 80003e4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80003e8:	d1e5      	bne.n	80003b6 <d_append_buffer+0x2a>
 80003ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80003ee:	4770      	bx	lr

080003f0 <d_number.isra.0>:
 80003f0:	b470      	push	{r4, r5, r6}
 80003f2:	6802      	ldr	r2, [r0, #0]
 80003f4:	7811      	ldrb	r1, [r2, #0]
 80003f6:	296e      	cmp	r1, #110	; 0x6e
 80003f8:	d018      	beq.n	800042c <d_number.isra.0+0x3c>
 80003fa:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80003fe:	2b09      	cmp	r3, #9
 8000400:	d81e      	bhi.n	8000440 <d_number.isra.0+0x50>
 8000402:	2600      	movs	r6, #0
 8000404:	2300      	movs	r3, #0
 8000406:	3201      	adds	r2, #1
 8000408:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800040c:	6002      	str	r2, [r0, #0]
 800040e:	eb01 0443 	add.w	r4, r1, r3, lsl #1
 8000412:	7811      	ldrb	r1, [r2, #0]
 8000414:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8000418:	f1a1 0530 	sub.w	r5, r1, #48	; 0x30
 800041c:	2d09      	cmp	r5, #9
 800041e:	d9f2      	bls.n	8000406 <d_number.isra.0+0x16>
 8000420:	b10e      	cbz	r6, 8000426 <d_number.isra.0+0x36>
 8000422:	f1c4 0330 	rsb	r3, r4, #48	; 0x30
 8000426:	4618      	mov	r0, r3
 8000428:	bc70      	pop	{r4, r5, r6}
 800042a:	4770      	bx	lr
 800042c:	1c53      	adds	r3, r2, #1
 800042e:	6003      	str	r3, [r0, #0]
 8000430:	7851      	ldrb	r1, [r2, #1]
 8000432:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8000436:	2a09      	cmp	r2, #9
 8000438:	d802      	bhi.n	8000440 <d_number.isra.0+0x50>
 800043a:	461a      	mov	r2, r3
 800043c:	2601      	movs	r6, #1
 800043e:	e7e1      	b.n	8000404 <d_number.isra.0+0x14>
 8000440:	2300      	movs	r3, #0
 8000442:	e7f0      	b.n	8000426 <d_number.isra.0+0x36>

08000444 <d_number_component>:
 8000444:	6943      	ldr	r3, [r0, #20]
 8000446:	6982      	ldr	r2, [r0, #24]
 8000448:	b510      	push	{r4, lr}
 800044a:	4293      	cmp	r3, r2
 800044c:	da0f      	bge.n	800046e <d_number_component+0x2a>
 800044e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8000452:	6901      	ldr	r1, [r0, #16]
 8000454:	0092      	lsls	r2, r2, #2
 8000456:	3301      	adds	r3, #1
 8000458:	188c      	adds	r4, r1, r2
 800045a:	6143      	str	r3, [r0, #20]
 800045c:	d005      	beq.n	800046a <d_number_component+0x26>
 800045e:	2341      	movs	r3, #65	; 0x41
 8000460:	300c      	adds	r0, #12
 8000462:	548b      	strb	r3, [r1, r2]
 8000464:	f7ff ffc4 	bl	80003f0 <d_number.isra.0>
 8000468:	6060      	str	r0, [r4, #4]
 800046a:	4620      	mov	r0, r4
 800046c:	bd10      	pop	{r4, pc}
 800046e:	2400      	movs	r4, #0
 8000470:	4620      	mov	r0, r4
 8000472:	bd10      	pop	{r4, pc}

08000474 <d_compact_number>:
 8000474:	b510      	push	{r4, lr}
 8000476:	68c3      	ldr	r3, [r0, #12]
 8000478:	4604      	mov	r4, r0
 800047a:	781a      	ldrb	r2, [r3, #0]
 800047c:	2a5f      	cmp	r2, #95	; 0x5f
 800047e:	d00d      	beq.n	800049c <d_compact_number+0x28>
 8000480:	2a6e      	cmp	r2, #110	; 0x6e
 8000482:	d00f      	beq.n	80004a4 <d_compact_number+0x30>
 8000484:	300c      	adds	r0, #12
 8000486:	f7ff ffb3 	bl	80003f0 <d_number.isra.0>
 800048a:	3001      	adds	r0, #1
 800048c:	d40a      	bmi.n	80004a4 <d_compact_number+0x30>
 800048e:	68e3      	ldr	r3, [r4, #12]
 8000490:	781a      	ldrb	r2, [r3, #0]
 8000492:	2a5f      	cmp	r2, #95	; 0x5f
 8000494:	d106      	bne.n	80004a4 <d_compact_number+0x30>
 8000496:	3301      	adds	r3, #1
 8000498:	60e3      	str	r3, [r4, #12]
 800049a:	bd10      	pop	{r4, pc}
 800049c:	3301      	adds	r3, #1
 800049e:	2000      	movs	r0, #0
 80004a0:	60e3      	str	r3, [r4, #12]
 80004a2:	bd10      	pop	{r4, pc}
 80004a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80004a8:	bd10      	pop	{r4, pc}
 80004aa:	bf00      	nop

080004ac <d_template_param>:
 80004ac:	b538      	push	{r3, r4, r5, lr}
 80004ae:	68c3      	ldr	r3, [r0, #12]
 80004b0:	781a      	ldrb	r2, [r3, #0]
 80004b2:	2a54      	cmp	r2, #84	; 0x54
 80004b4:	d001      	beq.n	80004ba <d_template_param+0xe>
 80004b6:	2000      	movs	r0, #0
 80004b8:	bd38      	pop	{r3, r4, r5, pc}
 80004ba:	3301      	adds	r3, #1
 80004bc:	60c3      	str	r3, [r0, #12]
 80004be:	4604      	mov	r4, r0
 80004c0:	f7ff ffd8 	bl	8000474 <d_compact_number>
 80004c4:	1e05      	subs	r5, r0, #0
 80004c6:	dbf6      	blt.n	80004b6 <d_template_param+0xa>
 80004c8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80004ca:	6963      	ldr	r3, [r4, #20]
 80004cc:	69a1      	ldr	r1, [r4, #24]
 80004ce:	3201      	adds	r2, #1
 80004d0:	428b      	cmp	r3, r1
 80004d2:	62a2      	str	r2, [r4, #40]	; 0x28
 80004d4:	daef      	bge.n	80004b6 <d_template_param+0xa>
 80004d6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80004da:	6921      	ldr	r1, [r4, #16]
 80004dc:	0092      	lsls	r2, r2, #2
 80004de:	3301      	adds	r3, #1
 80004e0:	1888      	adds	r0, r1, r2
 80004e2:	6163      	str	r3, [r4, #20]
 80004e4:	d002      	beq.n	80004ec <d_template_param+0x40>
 80004e6:	2305      	movs	r3, #5
 80004e8:	548b      	strb	r3, [r1, r2]
 80004ea:	6045      	str	r5, [r0, #4]
 80004ec:	bd38      	pop	{r3, r4, r5, pc}
 80004ee:	bf00      	nop

080004f0 <d_source_name>:
 80004f0:	b570      	push	{r4, r5, r6, lr}
 80004f2:	4604      	mov	r4, r0
 80004f4:	300c      	adds	r0, #12
 80004f6:	f7ff ff7b 	bl	80003f0 <d_number.isra.0>
 80004fa:	1e06      	subs	r6, r0, #0
 80004fc:	dd4d      	ble.n	800059a <d_source_name+0xaa>
 80004fe:	68e5      	ldr	r5, [r4, #12]
 8000500:	6863      	ldr	r3, [r4, #4]
 8000502:	1b5b      	subs	r3, r3, r5
 8000504:	429e      	cmp	r6, r3
 8000506:	dc2b      	bgt.n	8000560 <d_source_name+0x70>
 8000508:	68a2      	ldr	r2, [r4, #8]
 800050a:	19ab      	adds	r3, r5, r6
 800050c:	0752      	lsls	r2, r2, #29
 800050e:	60e3      	str	r3, [r4, #12]
 8000510:	d504      	bpl.n	800051c <d_source_name+0x2c>
 8000512:	5daa      	ldrb	r2, [r5, r6]
 8000514:	2a24      	cmp	r2, #36	; 0x24
 8000516:	bf04      	itt	eq
 8000518:	3301      	addeq	r3, #1
 800051a:	60e3      	streq	r3, [r4, #12]
 800051c:	2e09      	cmp	r6, #9
 800051e:	dd0c      	ble.n	800053a <d_source_name+0x4a>
 8000520:	2208      	movs	r2, #8
 8000522:	491f      	ldr	r1, [pc, #124]	; (80005a0 <d_source_name+0xb0>)
 8000524:	4628      	mov	r0, r5
 8000526:	f00d fb51 	bl	800dbcc <memcmp>
 800052a:	b930      	cbnz	r0, 800053a <d_source_name+0x4a>
 800052c:	7a2b      	ldrb	r3, [r5, #8]
 800052e:	2b2e      	cmp	r3, #46	; 0x2e
 8000530:	d019      	beq.n	8000566 <d_source_name+0x76>
 8000532:	2b5f      	cmp	r3, #95	; 0x5f
 8000534:	d017      	beq.n	8000566 <d_source_name+0x76>
 8000536:	2b24      	cmp	r3, #36	; 0x24
 8000538:	d015      	beq.n	8000566 <d_source_name+0x76>
 800053a:	6963      	ldr	r3, [r4, #20]
 800053c:	69a2      	ldr	r2, [r4, #24]
 800053e:	4293      	cmp	r3, r2
 8000540:	da0e      	bge.n	8000560 <d_source_name+0x70>
 8000542:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8000546:	6921      	ldr	r1, [r4, #16]
 8000548:	0092      	lsls	r2, r2, #2
 800054a:	3301      	adds	r3, #1
 800054c:	1888      	adds	r0, r1, r2
 800054e:	6163      	str	r3, [r4, #20]
 8000550:	d006      	beq.n	8000560 <d_source_name+0x70>
 8000552:	b12d      	cbz	r5, 8000560 <d_source_name+0x70>
 8000554:	2300      	movs	r3, #0
 8000556:	548b      	strb	r3, [r1, r2]
 8000558:	6045      	str	r5, [r0, #4]
 800055a:	6086      	str	r6, [r0, #8]
 800055c:	62e0      	str	r0, [r4, #44]	; 0x2c
 800055e:	bd70      	pop	{r4, r5, r6, pc}
 8000560:	2000      	movs	r0, #0
 8000562:	62e0      	str	r0, [r4, #44]	; 0x2c
 8000564:	bd70      	pop	{r4, r5, r6, pc}
 8000566:	7a6b      	ldrb	r3, [r5, #9]
 8000568:	2b4e      	cmp	r3, #78	; 0x4e
 800056a:	d1e6      	bne.n	800053a <d_source_name+0x4a>
 800056c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800056e:	6962      	ldr	r2, [r4, #20]
 8000570:	69a1      	ldr	r1, [r4, #24]
 8000572:	3316      	adds	r3, #22
 8000574:	1b9e      	subs	r6, r3, r6
 8000576:	428a      	cmp	r2, r1
 8000578:	6326      	str	r6, [r4, #48]	; 0x30
 800057a:	daf1      	bge.n	8000560 <d_source_name+0x70>
 800057c:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8000580:	6921      	ldr	r1, [r4, #16]
 8000582:	009b      	lsls	r3, r3, #2
 8000584:	3201      	adds	r2, #1
 8000586:	18c8      	adds	r0, r1, r3
 8000588:	6162      	str	r2, [r4, #20]
 800058a:	d0ea      	beq.n	8000562 <d_source_name+0x72>
 800058c:	2600      	movs	r6, #0
 800058e:	2515      	movs	r5, #21
 8000590:	4a04      	ldr	r2, [pc, #16]	; (80005a4 <d_source_name+0xb4>)
 8000592:	54ce      	strb	r6, [r1, r3]
 8000594:	6085      	str	r5, [r0, #8]
 8000596:	6042      	str	r2, [r0, #4]
 8000598:	e7e3      	b.n	8000562 <d_source_name+0x72>
 800059a:	2000      	movs	r0, #0
 800059c:	bd70      	pop	{r4, r5, r6, pc}
 800059e:	bf00      	nop
 80005a0:	08011e50 	.word	0x08011e50
 80005a4:	08011e5c 	.word	0x08011e5c

080005a8 <d_abi_tags>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	68c3      	ldr	r3, [r0, #12]
 80005ac:	4604      	mov	r4, r0
 80005ae:	781a      	ldrb	r2, [r3, #0]
 80005b0:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
 80005b2:	2a42      	cmp	r2, #66	; 0x42
 80005b4:	460d      	mov	r5, r1
 80005b6:	d10f      	bne.n	80005d8 <d_abi_tags+0x30>
 80005b8:	3301      	adds	r3, #1
 80005ba:	60e3      	str	r3, [r4, #12]
 80005bc:	4620      	mov	r0, r4
 80005be:	f7ff ff97 	bl	80004f0 <d_source_name>
 80005c2:	462a      	mov	r2, r5
 80005c4:	4603      	mov	r3, r0
 80005c6:	214b      	movs	r1, #75	; 0x4b
 80005c8:	4620      	mov	r0, r4
 80005ca:	f7ff fdc1 	bl	8000150 <d_make_comp>
 80005ce:	68e3      	ldr	r3, [r4, #12]
 80005d0:	4605      	mov	r5, r0
 80005d2:	781a      	ldrb	r2, [r3, #0]
 80005d4:	2a42      	cmp	r2, #66	; 0x42
 80005d6:	d0ef      	beq.n	80005b8 <d_abi_tags+0x10>
 80005d8:	62e6      	str	r6, [r4, #44]	; 0x2c
 80005da:	4628      	mov	r0, r5
 80005dc:	bd70      	pop	{r4, r5, r6, pc}
 80005de:	bf00      	nop

080005e0 <d_substitution>:
 80005e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005e4:	4605      	mov	r5, r0
 80005e6:	68c0      	ldr	r0, [r0, #12]
 80005e8:	7803      	ldrb	r3, [r0, #0]
 80005ea:	2b53      	cmp	r3, #83	; 0x53
 80005ec:	d002      	beq.n	80005f4 <d_substitution+0x14>
 80005ee:	2000      	movs	r0, #0
 80005f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80005f4:	1c43      	adds	r3, r0, #1
 80005f6:	60eb      	str	r3, [r5, #12]
 80005f8:	7842      	ldrb	r2, [r0, #1]
 80005fa:	b1a2      	cbz	r2, 8000626 <d_substitution+0x46>
 80005fc:	1c83      	adds	r3, r0, #2
 80005fe:	60eb      	str	r3, [r5, #12]
 8000600:	7842      	ldrb	r2, [r0, #1]
 8000602:	2a5f      	cmp	r2, #95	; 0x5f
 8000604:	d15a      	bne.n	80006bc <d_substitution+0xdc>
 8000606:	2300      	movs	r3, #0
 8000608:	6a2a      	ldr	r2, [r5, #32]
 800060a:	4293      	cmp	r3, r2
 800060c:	d2ef      	bcs.n	80005ee <d_substitution+0xe>
 800060e:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8000610:	69e9      	ldr	r1, [r5, #28]
 8000612:	3201      	adds	r2, #1
 8000614:	62aa      	str	r2, [r5, #40]	; 0x28
 8000616:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
 800061a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800061e:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 8000622:	2b19      	cmp	r3, #25
 8000624:	d94f      	bls.n	80006c6 <d_substitution+0xe6>
 8000626:	68ab      	ldr	r3, [r5, #8]
 8000628:	f003 0308 	and.w	r3, r3, #8
 800062c:	2b00      	cmp	r3, #0
 800062e:	bf14      	ite	ne
 8000630:	2401      	movne	r4, #1
 8000632:	2400      	moveq	r4, #0
 8000634:	d101      	bne.n	800063a <d_substitution+0x5a>
 8000636:	2900      	cmp	r1, #0
 8000638:	d169      	bne.n	800070e <d_substitution+0x12e>
 800063a:	4b46      	ldr	r3, [pc, #280]	; (8000754 <d_substitution+0x174>)
 800063c:	2174      	movs	r1, #116	; 0x74
 800063e:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 8000642:	e003      	b.n	800064c <d_substitution+0x6c>
 8000644:	331c      	adds	r3, #28
 8000646:	4283      	cmp	r3, r0
 8000648:	d2d1      	bcs.n	80005ee <d_substitution+0xe>
 800064a:	7819      	ldrb	r1, [r3, #0]
 800064c:	428a      	cmp	r2, r1
 800064e:	d1f9      	bne.n	8000644 <d_substitution+0x64>
 8000650:	695e      	ldr	r6, [r3, #20]
 8000652:	2e00      	cmp	r6, #0
 8000654:	d07b      	beq.n	800074e <d_substitution+0x16e>
 8000656:	696a      	ldr	r2, [r5, #20]
 8000658:	69a9      	ldr	r1, [r5, #24]
 800065a:	428a      	cmp	r2, r1
 800065c:	da63      	bge.n	8000726 <d_substitution+0x146>
 800065e:	eb02 0742 	add.w	r7, r2, r2, lsl #1
 8000662:	f8d5 e010 	ldr.w	lr, [r5, #16]
 8000666:	00bf      	lsls	r7, r7, #2
 8000668:	3201      	adds	r2, #1
 800066a:	eb1e 0007 	adds.w	r0, lr, r7
 800066e:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8000672:	616a      	str	r2, [r5, #20]
 8000674:	d006      	beq.n	8000684 <d_substitution+0xa4>
 8000676:	f04f 0c18 	mov.w	ip, #24
 800067a:	f80e c007 	strb.w	ip, [lr, r7]
 800067e:	6046      	str	r6, [r0, #4]
 8000680:	f8c0 8008 	str.w	r8, [r0, #8]
 8000684:	62e8      	str	r0, [r5, #44]	; 0x2c
 8000686:	2c00      	cmp	r4, #0
 8000688:	d04a      	beq.n	8000720 <d_substitution+0x140>
 800068a:	68de      	ldr	r6, [r3, #12]
 800068c:	691c      	ldr	r4, [r3, #16]
 800068e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000690:	4291      	cmp	r1, r2
 8000692:	4423      	add	r3, r4
 8000694:	632b      	str	r3, [r5, #48]	; 0x30
 8000696:	dd41      	ble.n	800071c <d_substitution+0x13c>
 8000698:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800069c:	6929      	ldr	r1, [r5, #16]
 800069e:	009b      	lsls	r3, r3, #2
 80006a0:	3201      	adds	r2, #1
 80006a2:	18c8      	adds	r0, r1, r3
 80006a4:	616a      	str	r2, [r5, #20]
 80006a6:	d003      	beq.n	80006b0 <d_substitution+0xd0>
 80006a8:	2218      	movs	r2, #24
 80006aa:	54ca      	strb	r2, [r1, r3]
 80006ac:	6046      	str	r6, [r0, #4]
 80006ae:	6084      	str	r4, [r0, #8]
 80006b0:	68eb      	ldr	r3, [r5, #12]
 80006b2:	781b      	ldrb	r3, [r3, #0]
 80006b4:	2b42      	cmp	r3, #66	; 0x42
 80006b6:	d038      	beq.n	800072a <d_substitution+0x14a>
 80006b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006bc:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80006c0:	b2e3      	uxtb	r3, r4
 80006c2:	2b09      	cmp	r3, #9
 80006c4:	d8ab      	bhi.n	800061e <d_substitution+0x3e>
 80006c6:	2100      	movs	r1, #0
 80006c8:	e00d      	b.n	80006e6 <d_substitution+0x106>
 80006ca:	3b30      	subs	r3, #48	; 0x30
 80006cc:	4299      	cmp	r1, r3
 80006ce:	d88e      	bhi.n	80005ee <d_substitution+0xe>
 80006d0:	68e9      	ldr	r1, [r5, #12]
 80006d2:	780a      	ldrb	r2, [r1, #0]
 80006d4:	1c48      	adds	r0, r1, #1
 80006d6:	b11a      	cbz	r2, 80006e0 <d_substitution+0x100>
 80006d8:	60e8      	str	r0, [r5, #12]
 80006da:	780a      	ldrb	r2, [r1, #0]
 80006dc:	2a5f      	cmp	r2, #95	; 0x5f
 80006de:	d014      	beq.n	800070a <d_substitution+0x12a>
 80006e0:	4619      	mov	r1, r3
 80006e2:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80006e6:	b2e4      	uxtb	r4, r4
 80006e8:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 80006ec:	2c09      	cmp	r4, #9
 80006ee:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
 80006f2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80006f6:	d9e8      	bls.n	80006ca <d_substitution+0xea>
 80006f8:	2819      	cmp	r0, #25
 80006fa:	f63f af78 	bhi.w	80005ee <d_substitution+0xe>
 80006fe:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000702:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8000706:	3b37      	subs	r3, #55	; 0x37
 8000708:	e7e0      	b.n	80006cc <d_substitution+0xec>
 800070a:	3301      	adds	r3, #1
 800070c:	e77c      	b.n	8000608 <d_substitution+0x28>
 800070e:	68eb      	ldr	r3, [r5, #12]
 8000710:	781b      	ldrb	r3, [r3, #0]
 8000712:	3b43      	subs	r3, #67	; 0x43
 8000714:	2b01      	cmp	r3, #1
 8000716:	bf98      	it	ls
 8000718:	2401      	movls	r4, #1
 800071a:	e78e      	b.n	800063a <d_substitution+0x5a>
 800071c:	2000      	movs	r0, #0
 800071e:	e7c7      	b.n	80006b0 <d_substitution+0xd0>
 8000720:	685e      	ldr	r6, [r3, #4]
 8000722:	689c      	ldr	r4, [r3, #8]
 8000724:	e7b3      	b.n	800068e <d_substitution+0xae>
 8000726:	2000      	movs	r0, #0
 8000728:	e7ac      	b.n	8000684 <d_substitution+0xa4>
 800072a:	4601      	mov	r1, r0
 800072c:	4628      	mov	r0, r5
 800072e:	f7ff ff3b 	bl	80005a8 <d_abi_tags>
 8000732:	2800      	cmp	r0, #0
 8000734:	f43f af5b 	beq.w	80005ee <d_substitution+0xe>
 8000738:	6a2b      	ldr	r3, [r5, #32]
 800073a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800073c:	4293      	cmp	r3, r2
 800073e:	dabb      	bge.n	80006b8 <d_substitution+0xd8>
 8000740:	69e9      	ldr	r1, [r5, #28]
 8000742:	1c5a      	adds	r2, r3, #1
 8000744:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8000748:	622a      	str	r2, [r5, #32]
 800074a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800074e:	69a9      	ldr	r1, [r5, #24]
 8000750:	696a      	ldr	r2, [r5, #20]
 8000752:	e798      	b.n	8000686 <d_substitution+0xa6>
 8000754:	08011428 	.word	0x08011428

08000758 <d_call_offset>:
 8000758:	b538      	push	{r3, r4, r5, lr}
 800075a:	4604      	mov	r4, r0
 800075c:	b929      	cbnz	r1, 800076a <d_call_offset+0x12>
 800075e:	68c3      	ldr	r3, [r0, #12]
 8000760:	781a      	ldrb	r2, [r3, #0]
 8000762:	b132      	cbz	r2, 8000772 <d_call_offset+0x1a>
 8000764:	1c5a      	adds	r2, r3, #1
 8000766:	60c2      	str	r2, [r0, #12]
 8000768:	7819      	ldrb	r1, [r3, #0]
 800076a:	2968      	cmp	r1, #104	; 0x68
 800076c:	d019      	beq.n	80007a2 <d_call_offset+0x4a>
 800076e:	2976      	cmp	r1, #118	; 0x76
 8000770:	d001      	beq.n	8000776 <d_call_offset+0x1e>
 8000772:	2000      	movs	r0, #0
 8000774:	bd38      	pop	{r3, r4, r5, pc}
 8000776:	f104 050c 	add.w	r5, r4, #12
 800077a:	4628      	mov	r0, r5
 800077c:	f7ff fe38 	bl	80003f0 <d_number.isra.0>
 8000780:	68e3      	ldr	r3, [r4, #12]
 8000782:	781a      	ldrb	r2, [r3, #0]
 8000784:	2a5f      	cmp	r2, #95	; 0x5f
 8000786:	d1f4      	bne.n	8000772 <d_call_offset+0x1a>
 8000788:	3301      	adds	r3, #1
 800078a:	60e3      	str	r3, [r4, #12]
 800078c:	4628      	mov	r0, r5
 800078e:	f7ff fe2f 	bl	80003f0 <d_number.isra.0>
 8000792:	68e3      	ldr	r3, [r4, #12]
 8000794:	781a      	ldrb	r2, [r3, #0]
 8000796:	2a5f      	cmp	r2, #95	; 0x5f
 8000798:	d1eb      	bne.n	8000772 <d_call_offset+0x1a>
 800079a:	2001      	movs	r0, #1
 800079c:	4403      	add	r3, r0
 800079e:	60e3      	str	r3, [r4, #12]
 80007a0:	bd38      	pop	{r3, r4, r5, pc}
 80007a2:	f104 000c 	add.w	r0, r4, #12
 80007a6:	f7ff fe23 	bl	80003f0 <d_number.isra.0>
 80007aa:	e7f2      	b.n	8000792 <d_call_offset+0x3a>

080007ac <d_lookup_template_argument.isra.6>:
 80007ac:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 80007b0:	b19b      	cbz	r3, 80007da <d_lookup_template_argument.isra.6+0x2e>
 80007b2:	680a      	ldr	r2, [r1, #0]
 80007b4:	685b      	ldr	r3, [r3, #4]
 80007b6:	2a00      	cmp	r2, #0
 80007b8:	689b      	ldr	r3, [r3, #8]
 80007ba:	db09      	blt.n	80007d0 <d_lookup_template_argument.isra.6+0x24>
 80007bc:	b923      	cbnz	r3, 80007c8 <d_lookup_template_argument.isra.6+0x1c>
 80007be:	e007      	b.n	80007d0 <d_lookup_template_argument.isra.6+0x24>
 80007c0:	b142      	cbz	r2, 80007d4 <d_lookup_template_argument.isra.6+0x28>
 80007c2:	689b      	ldr	r3, [r3, #8]
 80007c4:	3a01      	subs	r2, #1
 80007c6:	b11b      	cbz	r3, 80007d0 <d_lookup_template_argument.isra.6+0x24>
 80007c8:	7819      	ldrb	r1, [r3, #0]
 80007ca:	292f      	cmp	r1, #47	; 0x2f
 80007cc:	d0f8      	beq.n	80007c0 <d_lookup_template_argument.isra.6+0x14>
 80007ce:	2300      	movs	r3, #0
 80007d0:	4618      	mov	r0, r3
 80007d2:	4770      	bx	lr
 80007d4:	685b      	ldr	r3, [r3, #4]
 80007d6:	4618      	mov	r0, r3
 80007d8:	4770      	bx	lr
 80007da:	2201      	movs	r2, #1
 80007dc:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
 80007e0:	e7f6      	b.n	80007d0 <d_lookup_template_argument.isra.6+0x24>
 80007e2:	bf00      	nop

080007e4 <d_find_pack>:
 80007e4:	2900      	cmp	r1, #0
 80007e6:	d041      	beq.n	800086c <d_find_pack+0x88>
 80007e8:	b538      	push	{r3, r4, r5, lr}
 80007ea:	4605      	mov	r5, r0
 80007ec:	460c      	mov	r4, r1
 80007ee:	7823      	ldrb	r3, [r4, #0]
 80007f0:	2b4b      	cmp	r3, #75	; 0x4b
 80007f2:	d827      	bhi.n	8000844 <d_find_pack+0x60>
 80007f4:	e8df f003 	tbb	[pc, r3]
 80007f8:	2626262e 	.word	0x2626262e
 80007fc:	2b2e3026 	.word	0x2b2e3026
 8000800:	2626262b 	.word	0x2626262b
 8000804:	26262626 	.word	0x26262626
 8000808:	26262626 	.word	0x26262626
 800080c:	26262626 	.word	0x26262626
 8000810:	2626262e 	.word	0x2626262e
 8000814:	26262626 	.word	0x26262626
 8000818:	26262626 	.word	0x26262626
 800081c:	2e262626 	.word	0x2e262626
 8000820:	26262626 	.word	0x26262626
 8000824:	2626262e 	.word	0x2626262e
 8000828:	262b2e26 	.word	0x262b2e26
 800082c:	26262626 	.word	0x26262626
 8000830:	26262626 	.word	0x26262626
 8000834:	26262626 	.word	0x26262626
 8000838:	26262e2e 	.word	0x26262e2e
 800083c:	2e2e2e26 	.word	0x2e2e2e26
 8000840:	2e2e2626 	.word	0x2e2e2626
 8000844:	6861      	ldr	r1, [r4, #4]
 8000846:	4628      	mov	r0, r5
 8000848:	f7ff ffcc 	bl	80007e4 <d_find_pack>
 800084c:	b918      	cbnz	r0, 8000856 <d_find_pack+0x72>
 800084e:	68a4      	ldr	r4, [r4, #8]
 8000850:	2c00      	cmp	r4, #0
 8000852:	d1cc      	bne.n	80007ee <d_find_pack+0xa>
 8000854:	2000      	movs	r0, #0
 8000856:	bd38      	pop	{r3, r4, r5, pc}
 8000858:	1d21      	adds	r1, r4, #4
 800085a:	4628      	mov	r0, r5
 800085c:	f7ff ffa6 	bl	80007ac <d_lookup_template_argument.isra.6>
 8000860:	2800      	cmp	r0, #0
 8000862:	d0f7      	beq.n	8000854 <d_find_pack+0x70>
 8000864:	7803      	ldrb	r3, [r0, #0]
 8000866:	2b2f      	cmp	r3, #47	; 0x2f
 8000868:	d1f4      	bne.n	8000854 <d_find_pack+0x70>
 800086a:	bd38      	pop	{r3, r4, r5, pc}
 800086c:	2000      	movs	r0, #0
 800086e:	4770      	bx	lr

08000870 <d_growable_string_callback_adapter>:
 8000870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000872:	4615      	mov	r5, r2
 8000874:	6852      	ldr	r2, [r2, #4]
 8000876:	1c4b      	adds	r3, r1, #1
 8000878:	68ac      	ldr	r4, [r5, #8]
 800087a:	4413      	add	r3, r2
 800087c:	42a3      	cmp	r3, r4
 800087e:	b083      	sub	sp, #12
 8000880:	460e      	mov	r6, r1
 8000882:	4607      	mov	r7, r0
 8000884:	d813      	bhi.n	80008ae <d_growable_string_callback_adapter+0x3e>
 8000886:	68ec      	ldr	r4, [r5, #12]
 8000888:	b10c      	cbz	r4, 800088e <d_growable_string_callback_adapter+0x1e>
 800088a:	b003      	add	sp, #12
 800088c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800088e:	e895 0009 	ldmia.w	r5, {r0, r3}
 8000892:	4632      	mov	r2, r6
 8000894:	4639      	mov	r1, r7
 8000896:	4418      	add	r0, r3
 8000898:	f00d f9a7 	bl	800dbea <memcpy>
 800089c:	682b      	ldr	r3, [r5, #0]
 800089e:	686a      	ldr	r2, [r5, #4]
 80008a0:	4433      	add	r3, r6
 80008a2:	549c      	strb	r4, [r3, r2]
 80008a4:	686b      	ldr	r3, [r5, #4]
 80008a6:	441e      	add	r6, r3
 80008a8:	606e      	str	r6, [r5, #4]
 80008aa:	b003      	add	sp, #12
 80008ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008ae:	68ea      	ldr	r2, [r5, #12]
 80008b0:	2a00      	cmp	r2, #0
 80008b2:	d1ea      	bne.n	800088a <d_growable_string_callback_adapter+0x1a>
 80008b4:	b91c      	cbnz	r4, 80008be <d_growable_string_callback_adapter+0x4e>
 80008b6:	2b02      	cmp	r3, #2
 80008b8:	f04f 0402 	mov.w	r4, #2
 80008bc:	d902      	bls.n	80008c4 <d_growable_string_callback_adapter+0x54>
 80008be:	0064      	lsls	r4, r4, #1
 80008c0:	42a3      	cmp	r3, r4
 80008c2:	d8fc      	bhi.n	80008be <d_growable_string_callback_adapter+0x4e>
 80008c4:	4621      	mov	r1, r4
 80008c6:	6828      	ldr	r0, [r5, #0]
 80008c8:	f00d fa10 	bl	800dcec <realloc>
 80008cc:	b110      	cbz	r0, 80008d4 <d_growable_string_callback_adapter+0x64>
 80008ce:	6028      	str	r0, [r5, #0]
 80008d0:	60ac      	str	r4, [r5, #8]
 80008d2:	e7d8      	b.n	8000886 <d_growable_string_callback_adapter+0x16>
 80008d4:	9001      	str	r0, [sp, #4]
 80008d6:	6828      	ldr	r0, [r5, #0]
 80008d8:	f00c ff44 	bl	800d764 <free>
 80008dc:	2201      	movs	r2, #1
 80008de:	9b01      	ldr	r3, [sp, #4]
 80008e0:	60ea      	str	r2, [r5, #12]
 80008e2:	602b      	str	r3, [r5, #0]
 80008e4:	606b      	str	r3, [r5, #4]
 80008e6:	60ab      	str	r3, [r5, #8]
 80008e8:	e7cf      	b.n	800088a <d_growable_string_callback_adapter+0x1a>
 80008ea:	bf00      	nop

080008ec <d_append_num>:
 80008ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008f0:	b088      	sub	sp, #32
 80008f2:	460a      	mov	r2, r1
 80008f4:	4604      	mov	r4, r0
 80008f6:	491b      	ldr	r1, [pc, #108]	; (8000964 <d_append_num+0x78>)
 80008f8:	a801      	add	r0, sp, #4
 80008fa:	f00d fbd5 	bl	800e0a8 <sprintf>
 80008fe:	a801      	add	r0, sp, #4
 8000900:	f005 ff7c 	bl	80067fc <strlen>
 8000904:	b350      	cbz	r0, 800095c <d_append_num+0x70>
 8000906:	ad01      	add	r5, sp, #4
 8000908:	f04f 0800 	mov.w	r8, #0
 800090c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000910:	182f      	adds	r7, r5, r0
 8000912:	e009      	b.n	8000928 <d_append_num+0x3c>
 8000914:	460b      	mov	r3, r1
 8000916:	42bd      	cmp	r5, r7
 8000918:	f101 0101 	add.w	r1, r1, #1
 800091c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000920:	54e6      	strb	r6, [r4, r3]
 8000922:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8000926:	d019      	beq.n	800095c <d_append_num+0x70>
 8000928:	29ff      	cmp	r1, #255	; 0xff
 800092a:	f815 6b01 	ldrb.w	r6, [r5], #1
 800092e:	d1f1      	bne.n	8000914 <d_append_num+0x28>
 8000930:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000934:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000938:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800093c:	4620      	mov	r0, r4
 800093e:	4798      	blx	r3
 8000940:	2101      	movs	r1, #1
 8000942:	2300      	movs	r3, #0
 8000944:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8000948:	42bd      	cmp	r5, r7
 800094a:	440a      	add	r2, r1
 800094c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8000950:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000954:	54e6      	strb	r6, [r4, r3]
 8000956:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800095a:	d1e5      	bne.n	8000928 <d_append_num+0x3c>
 800095c:	b008      	add	sp, #32
 800095e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000962:	bf00      	nop
 8000964:	08011e74 	.word	0x08011e74

08000968 <d_exprlist>:
 8000968:	2200      	movs	r2, #0
 800096a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800096e:	68c3      	ldr	r3, [r0, #12]
 8000970:	b083      	sub	sp, #12
 8000972:	781d      	ldrb	r5, [r3, #0]
 8000974:	4604      	mov	r4, r0
 8000976:	428d      	cmp	r5, r1
 8000978:	9201      	str	r2, [sp, #4]
 800097a:	f000 81c6 	beq.w	8000d0a <d_exprlist+0x3a2>
 800097e:	4688      	mov	r8, r1
 8000980:	f8df 949c 	ldr.w	r9, [pc, #1180]	; 8000e20 <d_exprlist+0x4b8>
 8000984:	ae01      	add	r6, sp, #4
 8000986:	e023      	b.n	80009d0 <d_exprlist+0x68>
 8000988:	2a66      	cmp	r2, #102	; 0x66
 800098a:	d04c      	beq.n	8000a26 <d_exprlist+0xbe>
 800098c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8000990:	2909      	cmp	r1, #9
 8000992:	f200 8217 	bhi.w	8000dc4 <d_exprlist+0x45c>
 8000996:	4620      	mov	r0, r4
 8000998:	f001 fafe 	bl	8001f98 <d_unqualified_name>
 800099c:	4605      	mov	r5, r0
 800099e:	2800      	cmp	r0, #0
 80009a0:	f000 8170 	beq.w	8000c84 <d_exprlist+0x31c>
 80009a4:	68e3      	ldr	r3, [r4, #12]
 80009a6:	781b      	ldrb	r3, [r3, #0]
 80009a8:	2b49      	cmp	r3, #73	; 0x49
 80009aa:	f000 8092 	beq.w	8000ad2 <d_exprlist+0x16a>
 80009ae:	6367      	str	r7, [r4, #52]	; 0x34
 80009b0:	462a      	mov	r2, r5
 80009b2:	2300      	movs	r3, #0
 80009b4:	212e      	movs	r1, #46	; 0x2e
 80009b6:	4620      	mov	r0, r4
 80009b8:	f7ff fbca 	bl	8000150 <d_make_comp>
 80009bc:	6030      	str	r0, [r6, #0]
 80009be:	2800      	cmp	r0, #0
 80009c0:	d05b      	beq.n	8000a7a <d_exprlist+0x112>
 80009c2:	68e3      	ldr	r3, [r4, #12]
 80009c4:	f100 0608 	add.w	r6, r0, #8
 80009c8:	781a      	ldrb	r2, [r3, #0]
 80009ca:	4542      	cmp	r2, r8
 80009cc:	f000 8107 	beq.w	8000bde <d_exprlist+0x276>
 80009d0:	2501      	movs	r5, #1
 80009d2:	6b67      	ldr	r7, [r4, #52]	; 0x34
 80009d4:	6365      	str	r5, [r4, #52]	; 0x34
 80009d6:	781a      	ldrb	r2, [r3, #0]
 80009d8:	2a4c      	cmp	r2, #76	; 0x4c
 80009da:	d047      	beq.n	8000a6c <d_exprlist+0x104>
 80009dc:	2a54      	cmp	r2, #84	; 0x54
 80009de:	d051      	beq.n	8000a84 <d_exprlist+0x11c>
 80009e0:	2a73      	cmp	r2, #115	; 0x73
 80009e2:	d1d1      	bne.n	8000988 <d_exprlist+0x20>
 80009e4:	785a      	ldrb	r2, [r3, #1]
 80009e6:	2a72      	cmp	r2, #114	; 0x72
 80009e8:	f000 80e2 	beq.w	8000bb0 <d_exprlist+0x248>
 80009ec:	2a70      	cmp	r2, #112	; 0x70
 80009ee:	f000 80fd 	beq.w	8000bec <d_exprlist+0x284>
 80009f2:	4620      	mov	r0, r4
 80009f4:	f001 fa10 	bl	8001e18 <d_operator_name>
 80009f8:	4605      	mov	r5, r0
 80009fa:	2800      	cmp	r0, #0
 80009fc:	f000 8142 	beq.w	8000c84 <d_exprlist+0x31c>
 8000a00:	782b      	ldrb	r3, [r5, #0]
 8000a02:	2b31      	cmp	r3, #49	; 0x31
 8000a04:	d043      	beq.n	8000a8e <d_exprlist+0x126>
 8000a06:	2b32      	cmp	r3, #50	; 0x32
 8000a08:	d05c      	beq.n	8000ac4 <d_exprlist+0x15c>
 8000a0a:	2b33      	cmp	r3, #51	; 0x33
 8000a0c:	d17b      	bne.n	8000b06 <d_exprlist+0x19e>
 8000a0e:	68e3      	ldr	r3, [r4, #12]
 8000a10:	781a      	ldrb	r2, [r3, #0]
 8000a12:	2a5f      	cmp	r2, #95	; 0x5f
 8000a14:	f040 80c1 	bne.w	8000b9a <d_exprlist+0x232>
 8000a18:	3301      	adds	r3, #1
 8000a1a:	60e3      	str	r3, [r4, #12]
 8000a1c:	2145      	movs	r1, #69	; 0x45
 8000a1e:	4620      	mov	r0, r4
 8000a20:	f7ff ffa2 	bl	8000968 <d_exprlist>
 8000a24:	e0bc      	b.n	8000ba0 <d_exprlist+0x238>
 8000a26:	785a      	ldrb	r2, [r3, #1]
 8000a28:	2a70      	cmp	r2, #112	; 0x70
 8000a2a:	d1e2      	bne.n	80009f2 <d_exprlist+0x8a>
 8000a2c:	1c9a      	adds	r2, r3, #2
 8000a2e:	60e2      	str	r2, [r4, #12]
 8000a30:	789a      	ldrb	r2, [r3, #2]
 8000a32:	2a54      	cmp	r2, #84	; 0x54
 8000a34:	d069      	beq.n	8000b0a <d_exprlist+0x1a2>
 8000a36:	4620      	mov	r0, r4
 8000a38:	f7ff fd1c 	bl	8000474 <d_compact_number>
 8000a3c:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8000a40:	4298      	cmp	r0, r3
 8000a42:	d060      	beq.n	8000b06 <d_exprlist+0x19e>
 8000a44:	1c43      	adds	r3, r0, #1
 8000a46:	d05e      	beq.n	8000b06 <d_exprlist+0x19e>
 8000a48:	3001      	adds	r0, #1
 8000a4a:	6963      	ldr	r3, [r4, #20]
 8000a4c:	69a2      	ldr	r2, [r4, #24]
 8000a4e:	4293      	cmp	r3, r2
 8000a50:	da59      	bge.n	8000b06 <d_exprlist+0x19e>
 8000a52:	6922      	ldr	r2, [r4, #16]
 8000a54:	1c59      	adds	r1, r3, #1
 8000a56:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8000a5a:	eb12 0583 	adds.w	r5, r2, r3, lsl #2
 8000a5e:	6161      	str	r1, [r4, #20]
 8000a60:	d051      	beq.n	8000b06 <d_exprlist+0x19e>
 8000a62:	2106      	movs	r1, #6
 8000a64:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
 8000a68:	6068      	str	r0, [r5, #4]
 8000a6a:	e7a0      	b.n	80009ae <d_exprlist+0x46>
 8000a6c:	4620      	mov	r0, r4
 8000a6e:	f001 fee1 	bl	8002834 <d_expr_primary>
 8000a72:	4605      	mov	r5, r0
 8000a74:	6367      	str	r7, [r4, #52]	; 0x34
 8000a76:	2d00      	cmp	r5, #0
 8000a78:	d19a      	bne.n	80009b0 <d_exprlist+0x48>
 8000a7a:	2500      	movs	r5, #0
 8000a7c:	4628      	mov	r0, r5
 8000a7e:	b003      	add	sp, #12
 8000a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a84:	4620      	mov	r0, r4
 8000a86:	f7ff fd11 	bl	80004ac <d_template_param>
 8000a8a:	4605      	mov	r5, r0
 8000a8c:	e7f2      	b.n	8000a74 <d_exprlist+0x10c>
 8000a8e:	f8d5 b004 	ldr.w	fp, [r5, #4]
 8000a92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000a94:	f8db 2008 	ldr.w	r2, [fp, #8]
 8000a98:	f8db a000 	ldr.w	sl, [fp]
 8000a9c:	3a02      	subs	r2, #2
 8000a9e:	4413      	add	r3, r2
 8000aa0:	6323      	str	r3, [r4, #48]	; 0x30
 8000aa2:	4650      	mov	r0, sl
 8000aa4:	4649      	mov	r1, r9
 8000aa6:	f005 fe9f 	bl	80067e8 <strcmp>
 8000aaa:	2800      	cmp	r0, #0
 8000aac:	f000 80e6 	beq.w	8000c7c <d_exprlist+0x314>
 8000ab0:	f8db 300c 	ldr.w	r3, [fp, #12]
 8000ab4:	2b03      	cmp	r3, #3
 8000ab6:	d826      	bhi.n	8000b06 <d_exprlist+0x19e>
 8000ab8:	e8df f013 	tbh	[pc, r3, lsl #1]
 8000abc:	0135002b 	.word	0x0135002b
 8000ac0:	00a50033 	.word	0x00a50033
 8000ac4:	686b      	ldr	r3, [r5, #4]
 8000ac6:	2b03      	cmp	r3, #3
 8000ac8:	d81d      	bhi.n	8000b06 <d_exprlist+0x19e>
 8000aca:	e8df f003 	tbb	[pc, r3]
 8000ace:	6622      	.short	0x6622
 8000ad0:	1c1c      	.short	0x1c1c
 8000ad2:	4620      	mov	r0, r4
 8000ad4:	f000 fbfe 	bl	80012d4 <d_template_args>
 8000ad8:	462a      	mov	r2, r5
 8000ada:	4603      	mov	r3, r0
 8000adc:	2104      	movs	r1, #4
 8000ade:	4620      	mov	r0, r4
 8000ae0:	f7ff fb36 	bl	8000150 <d_make_comp>
 8000ae4:	4605      	mov	r5, r0
 8000ae6:	e7c5      	b.n	8000a74 <d_exprlist+0x10c>
 8000ae8:	2a74      	cmp	r2, #116	; 0x74
 8000aea:	d182      	bne.n	80009f2 <d_exprlist+0x8a>
 8000aec:	785b      	ldrb	r3, [r3, #1]
 8000aee:	2b6c      	cmp	r3, #108	; 0x6c
 8000af0:	f47f af7f 	bne.w	80009f2 <d_exprlist+0x8a>
 8000af4:	4620      	mov	r0, r4
 8000af6:	f000 fdaf 	bl	8001658 <d_type>
 8000afa:	68e3      	ldr	r3, [r4, #12]
 8000afc:	4605      	mov	r5, r0
 8000afe:	785a      	ldrb	r2, [r3, #1]
 8000b00:	2a00      	cmp	r2, #0
 8000b02:	f040 8169 	bne.w	8000dd8 <d_exprlist+0x470>
 8000b06:	6367      	str	r7, [r4, #52]	; 0x34
 8000b08:	e7b7      	b.n	8000a7a <d_exprlist+0x112>
 8000b0a:	3303      	adds	r3, #3
 8000b0c:	60e3      	str	r3, [r4, #12]
 8000b0e:	2000      	movs	r0, #0
 8000b10:	e79b      	b.n	8000a4a <d_exprlist+0xe2>
 8000b12:	462a      	mov	r2, r5
 8000b14:	2300      	movs	r3, #0
 8000b16:	2135      	movs	r1, #53	; 0x35
 8000b18:	4620      	mov	r0, r4
 8000b1a:	f7ff fb19 	bl	8000150 <d_make_comp>
 8000b1e:	4605      	mov	r5, r0
 8000b20:	e7a8      	b.n	8000a74 <d_exprlist+0x10c>
 8000b22:	f1ba 0f00 	cmp.w	sl, #0
 8000b26:	d0ee      	beq.n	8000b06 <d_exprlist+0x19e>
 8000b28:	686b      	ldr	r3, [r5, #4]
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	785a      	ldrb	r2, [r3, #1]
 8000b2e:	2a63      	cmp	r2, #99	; 0x63
 8000b30:	f000 80d2 	beq.w	8000cd8 <d_exprlist+0x370>
 8000b34:	f89a 3000 	ldrb.w	r3, [sl]
 8000b38:	2b66      	cmp	r3, #102	; 0x66
 8000b3a:	f000 80ef 	beq.w	8000d1c <d_exprlist+0x3b4>
 8000b3e:	4620      	mov	r0, r4
 8000b40:	f000 f970 	bl	8000e24 <d_expression_1>
 8000b44:	4683      	mov	fp, r0
 8000b46:	49b1      	ldr	r1, [pc, #708]	; (8000e0c <d_exprlist+0x4a4>)
 8000b48:	4650      	mov	r0, sl
 8000b4a:	f005 fe4d 	bl	80067e8 <strcmp>
 8000b4e:	2800      	cmp	r0, #0
 8000b50:	f000 809d 	beq.w	8000c8e <d_exprlist+0x326>
 8000b54:	49ae      	ldr	r1, [pc, #696]	; (8000e10 <d_exprlist+0x4a8>)
 8000b56:	4650      	mov	r0, sl
 8000b58:	f005 fe46 	bl	80067e8 <strcmp>
 8000b5c:	b130      	cbz	r0, 8000b6c <d_exprlist+0x204>
 8000b5e:	4650      	mov	r0, sl
 8000b60:	49ac      	ldr	r1, [pc, #688]	; (8000e14 <d_exprlist+0x4ac>)
 8000b62:	f005 fe41 	bl	80067e8 <strcmp>
 8000b66:	2800      	cmp	r0, #0
 8000b68:	f040 8083 	bne.w	8000c72 <d_exprlist+0x30a>
 8000b6c:	4620      	mov	r0, r4
 8000b6e:	f001 fa13 	bl	8001f98 <d_unqualified_name>
 8000b72:	68e3      	ldr	r3, [r4, #12]
 8000b74:	4682      	mov	sl, r0
 8000b76:	781b      	ldrb	r3, [r3, #0]
 8000b78:	2b49      	cmp	r3, #73	; 0x49
 8000b7a:	f000 80e9 	beq.w	8000d50 <d_exprlist+0x3e8>
 8000b7e:	4653      	mov	r3, sl
 8000b80:	465a      	mov	r2, fp
 8000b82:	2138      	movs	r1, #56	; 0x38
 8000b84:	4620      	mov	r0, r4
 8000b86:	f7ff fae3 	bl	8000150 <d_make_comp>
 8000b8a:	462a      	mov	r2, r5
 8000b8c:	4603      	mov	r3, r0
 8000b8e:	2137      	movs	r1, #55	; 0x37
 8000b90:	4620      	mov	r0, r4
 8000b92:	f7ff fadd 	bl	8000150 <d_make_comp>
 8000b96:	4605      	mov	r5, r0
 8000b98:	e76c      	b.n	8000a74 <d_exprlist+0x10c>
 8000b9a:	4620      	mov	r0, r4
 8000b9c:	f000 f942 	bl	8000e24 <d_expression_1>
 8000ba0:	4603      	mov	r3, r0
 8000ba2:	462a      	mov	r2, r5
 8000ba4:	2136      	movs	r1, #54	; 0x36
 8000ba6:	4620      	mov	r0, r4
 8000ba8:	f7ff fad2 	bl	8000150 <d_make_comp>
 8000bac:	4605      	mov	r5, r0
 8000bae:	e761      	b.n	8000a74 <d_exprlist+0x10c>
 8000bb0:	3302      	adds	r3, #2
 8000bb2:	60e3      	str	r3, [r4, #12]
 8000bb4:	4620      	mov	r0, r4
 8000bb6:	f000 fd4f 	bl	8001658 <d_type>
 8000bba:	4682      	mov	sl, r0
 8000bbc:	4620      	mov	r0, r4
 8000bbe:	f001 f9eb 	bl	8001f98 <d_unqualified_name>
 8000bc2:	68e3      	ldr	r3, [r4, #12]
 8000bc4:	4683      	mov	fp, r0
 8000bc6:	781b      	ldrb	r3, [r3, #0]
 8000bc8:	2b49      	cmp	r3, #73	; 0x49
 8000bca:	f000 8093 	beq.w	8000cf4 <d_exprlist+0x38c>
 8000bce:	4603      	mov	r3, r0
 8000bd0:	4629      	mov	r1, r5
 8000bd2:	4652      	mov	r2, sl
 8000bd4:	4620      	mov	r0, r4
 8000bd6:	f7ff fabb 	bl	8000150 <d_make_comp>
 8000bda:	4605      	mov	r5, r0
 8000bdc:	e74a      	b.n	8000a74 <d_exprlist+0x10c>
 8000bde:	9d01      	ldr	r5, [sp, #4]
 8000be0:	3301      	adds	r3, #1
 8000be2:	4628      	mov	r0, r5
 8000be4:	60e3      	str	r3, [r4, #12]
 8000be6:	b003      	add	sp, #12
 8000be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000bec:	3302      	adds	r3, #2
 8000bee:	60e3      	str	r3, [r4, #12]
 8000bf0:	4620      	mov	r0, r4
 8000bf2:	f000 f917 	bl	8000e24 <d_expression_1>
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	4602      	mov	r2, r0
 8000bfa:	214a      	movs	r1, #74	; 0x4a
 8000bfc:	4620      	mov	r0, r4
 8000bfe:	f7ff faa7 	bl	8000150 <d_make_comp>
 8000c02:	4605      	mov	r5, r0
 8000c04:	e736      	b.n	8000a74 <d_exprlist+0x10c>
 8000c06:	f1ba 0f00 	cmp.w	sl, #0
 8000c0a:	f43f af7c 	beq.w	8000b06 <d_exprlist+0x19e>
 8000c0e:	4982      	ldr	r1, [pc, #520]	; (8000e18 <d_exprlist+0x4b0>)
 8000c10:	4650      	mov	r0, sl
 8000c12:	f005 fde9 	bl	80067e8 <strcmp>
 8000c16:	2800      	cmp	r0, #0
 8000c18:	d03f      	beq.n	8000c9a <d_exprlist+0x332>
 8000c1a:	f89a 3000 	ldrb.w	r3, [sl]
 8000c1e:	2b66      	cmp	r3, #102	; 0x66
 8000c20:	f000 80bd 	beq.w	8000d9e <d_exprlist+0x436>
 8000c24:	2b6e      	cmp	r3, #110	; 0x6e
 8000c26:	f47f af6e 	bne.w	8000b06 <d_exprlist+0x19e>
 8000c2a:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8000c2e:	2b77      	cmp	r3, #119	; 0x77
 8000c30:	d002      	beq.n	8000c38 <d_exprlist+0x2d0>
 8000c32:	2b61      	cmp	r3, #97	; 0x61
 8000c34:	f47f af67 	bne.w	8000b06 <d_exprlist+0x19e>
 8000c38:	215f      	movs	r1, #95	; 0x5f
 8000c3a:	4620      	mov	r0, r4
 8000c3c:	f7ff fe94 	bl	8000968 <d_exprlist>
 8000c40:	4682      	mov	sl, r0
 8000c42:	4620      	mov	r0, r4
 8000c44:	f000 fd08 	bl	8001658 <d_type>
 8000c48:	68e3      	ldr	r3, [r4, #12]
 8000c4a:	4683      	mov	fp, r0
 8000c4c:	781a      	ldrb	r2, [r3, #0]
 8000c4e:	2a45      	cmp	r2, #69	; 0x45
 8000c50:	f000 80a1 	beq.w	8000d96 <d_exprlist+0x42e>
 8000c54:	2a70      	cmp	r2, #112	; 0x70
 8000c56:	f000 80a6 	beq.w	8000da6 <d_exprlist+0x43e>
 8000c5a:	2a69      	cmp	r2, #105	; 0x69
 8000c5c:	f47f af53 	bne.w	8000b06 <d_exprlist+0x19e>
 8000c60:	785b      	ldrb	r3, [r3, #1]
 8000c62:	2b6c      	cmp	r3, #108	; 0x6c
 8000c64:	f47f af4f 	bne.w	8000b06 <d_exprlist+0x19e>
 8000c68:	4620      	mov	r0, r4
 8000c6a:	f000 f8db 	bl	8000e24 <d_expression_1>
 8000c6e:	4603      	mov	r3, r0
 8000c70:	e01f      	b.n	8000cb2 <d_exprlist+0x34a>
 8000c72:	4620      	mov	r0, r4
 8000c74:	f000 f8d6 	bl	8000e24 <d_expression_1>
 8000c78:	4682      	mov	sl, r0
 8000c7a:	e780      	b.n	8000b7e <d_exprlist+0x216>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	f000 fceb 	bl	8001658 <d_type>
 8000c82:	e78d      	b.n	8000ba0 <d_exprlist+0x238>
 8000c84:	4628      	mov	r0, r5
 8000c86:	6367      	str	r7, [r4, #52]	; 0x34
 8000c88:	b003      	add	sp, #12
 8000c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c8e:	2145      	movs	r1, #69	; 0x45
 8000c90:	4620      	mov	r0, r4
 8000c92:	f7ff fe69 	bl	8000968 <d_exprlist>
 8000c96:	4682      	mov	sl, r0
 8000c98:	e771      	b.n	8000b7e <d_exprlist+0x216>
 8000c9a:	4620      	mov	r0, r4
 8000c9c:	f000 f8c2 	bl	8000e24 <d_expression_1>
 8000ca0:	4682      	mov	sl, r0
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	f000 f8be 	bl	8000e24 <d_expression_1>
 8000ca8:	4683      	mov	fp, r0
 8000caa:	4620      	mov	r0, r4
 8000cac:	f000 f8ba 	bl	8000e24 <d_expression_1>
 8000cb0:	4603      	mov	r3, r0
 8000cb2:	465a      	mov	r2, fp
 8000cb4:	213b      	movs	r1, #59	; 0x3b
 8000cb6:	4620      	mov	r0, r4
 8000cb8:	f7ff fa4a 	bl	8000150 <d_make_comp>
 8000cbc:	4652      	mov	r2, sl
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	213a      	movs	r1, #58	; 0x3a
 8000cc2:	4620      	mov	r0, r4
 8000cc4:	f7ff fa44 	bl	8000150 <d_make_comp>
 8000cc8:	462a      	mov	r2, r5
 8000cca:	4603      	mov	r3, r0
 8000ccc:	2139      	movs	r1, #57	; 0x39
 8000cce:	4620      	mov	r0, r4
 8000cd0:	f7ff fa3e 	bl	8000150 <d_make_comp>
 8000cd4:	4605      	mov	r5, r0
 8000cd6:	e6cd      	b.n	8000a74 <d_exprlist+0x10c>
 8000cd8:	781b      	ldrb	r3, [r3, #0]
 8000cda:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8000cde:	2a01      	cmp	r2, #1
 8000ce0:	d903      	bls.n	8000cea <d_exprlist+0x382>
 8000ce2:	3b72      	subs	r3, #114	; 0x72
 8000ce4:	2b01      	cmp	r3, #1
 8000ce6:	f63f af25 	bhi.w	8000b34 <d_exprlist+0x1cc>
 8000cea:	4620      	mov	r0, r4
 8000cec:	f000 fcb4 	bl	8001658 <d_type>
 8000cf0:	4683      	mov	fp, r0
 8000cf2:	e728      	b.n	8000b46 <d_exprlist+0x1de>
 8000cf4:	4620      	mov	r0, r4
 8000cf6:	f000 faed 	bl	80012d4 <d_template_args>
 8000cfa:	465a      	mov	r2, fp
 8000cfc:	4603      	mov	r3, r0
 8000cfe:	2104      	movs	r1, #4
 8000d00:	4620      	mov	r0, r4
 8000d02:	f7ff fa25 	bl	8000150 <d_make_comp>
 8000d06:	4603      	mov	r3, r0
 8000d08:	e762      	b.n	8000bd0 <d_exprlist+0x268>
 8000d0a:	3301      	adds	r3, #1
 8000d0c:	60c3      	str	r3, [r0, #12]
 8000d0e:	212e      	movs	r1, #46	; 0x2e
 8000d10:	4613      	mov	r3, r2
 8000d12:	b003      	add	sp, #12
 8000d14:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d18:	f7ff ba1a 	b.w	8000150 <d_make_comp>
 8000d1c:	4620      	mov	r0, r4
 8000d1e:	f001 f87b 	bl	8001e18 <d_operator_name>
 8000d22:	4683      	mov	fp, r0
 8000d24:	e70f      	b.n	8000b46 <d_exprlist+0x1de>
 8000d26:	f1ba 0f00 	cmp.w	sl, #0
 8000d2a:	f43f af36 	beq.w	8000b9a <d_exprlist+0x232>
 8000d2e:	f89a 3000 	ldrb.w	r3, [sl]
 8000d32:	2b70      	cmp	r3, #112	; 0x70
 8000d34:	d017      	beq.n	8000d66 <d_exprlist+0x3fe>
 8000d36:	2b6d      	cmp	r3, #109	; 0x6d
 8000d38:	d015      	beq.n	8000d66 <d_exprlist+0x3fe>
 8000d3a:	4650      	mov	r0, sl
 8000d3c:	4937      	ldr	r1, [pc, #220]	; (8000e1c <d_exprlist+0x4b4>)
 8000d3e:	f005 fd53 	bl	80067e8 <strcmp>
 8000d42:	2800      	cmp	r0, #0
 8000d44:	f47f af29 	bne.w	8000b9a <d_exprlist+0x232>
 8000d48:	4620      	mov	r0, r4
 8000d4a:	f000 fa65 	bl	8001218 <d_template_args_1>
 8000d4e:	e727      	b.n	8000ba0 <d_exprlist+0x238>
 8000d50:	4620      	mov	r0, r4
 8000d52:	f000 fabf 	bl	80012d4 <d_template_args>
 8000d56:	4652      	mov	r2, sl
 8000d58:	4603      	mov	r3, r0
 8000d5a:	2104      	movs	r1, #4
 8000d5c:	4620      	mov	r0, r4
 8000d5e:	f7ff f9f7 	bl	8000150 <d_make_comp>
 8000d62:	4682      	mov	sl, r0
 8000d64:	e70b      	b.n	8000b7e <d_exprlist+0x216>
 8000d66:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8000d6a:	429a      	cmp	r2, r3
 8000d6c:	d1e5      	bne.n	8000d3a <d_exprlist+0x3d2>
 8000d6e:	68e3      	ldr	r3, [r4, #12]
 8000d70:	781a      	ldrb	r2, [r3, #0]
 8000d72:	2a5f      	cmp	r2, #95	; 0x5f
 8000d74:	d023      	beq.n	8000dbe <d_exprlist+0x456>
 8000d76:	4650      	mov	r0, sl
 8000d78:	4928      	ldr	r1, [pc, #160]	; (8000e1c <d_exprlist+0x4b4>)
 8000d7a:	f005 fd35 	bl	80067e8 <strcmp>
 8000d7e:	2800      	cmp	r0, #0
 8000d80:	d03f      	beq.n	8000e02 <d_exprlist+0x49a>
 8000d82:	4620      	mov	r0, r4
 8000d84:	f000 f84e 	bl	8000e24 <d_expression_1>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	461a      	mov	r2, r3
 8000d8c:	2138      	movs	r1, #56	; 0x38
 8000d8e:	4620      	mov	r0, r4
 8000d90:	f7ff f9de 	bl	8000150 <d_make_comp>
 8000d94:	e704      	b.n	8000ba0 <d_exprlist+0x238>
 8000d96:	3301      	adds	r3, #1
 8000d98:	60e3      	str	r3, [r4, #12]
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	e789      	b.n	8000cb2 <d_exprlist+0x34a>
 8000d9e:	4620      	mov	r0, r4
 8000da0:	f001 f83a 	bl	8001e18 <d_operator_name>
 8000da4:	e77c      	b.n	8000ca0 <d_exprlist+0x338>
 8000da6:	785a      	ldrb	r2, [r3, #1]
 8000da8:	2a69      	cmp	r2, #105	; 0x69
 8000daa:	f47f aeac 	bne.w	8000b06 <d_exprlist+0x19e>
 8000dae:	3302      	adds	r3, #2
 8000db0:	60e3      	str	r3, [r4, #12]
 8000db2:	2145      	movs	r1, #69	; 0x45
 8000db4:	4620      	mov	r0, r4
 8000db6:	f7ff fdd7 	bl	8000968 <d_exprlist>
 8000dba:	4603      	mov	r3, r0
 8000dbc:	e779      	b.n	8000cb2 <d_exprlist+0x34a>
 8000dbe:	3301      	adds	r3, #1
 8000dc0:	60e3      	str	r3, [r4, #12]
 8000dc2:	e7ba      	b.n	8000d3a <d_exprlist+0x3d2>
 8000dc4:	2a6f      	cmp	r2, #111	; 0x6f
 8000dc6:	d015      	beq.n	8000df4 <d_exprlist+0x48c>
 8000dc8:	2a69      	cmp	r2, #105	; 0x69
 8000dca:	f47f ae8d 	bne.w	8000ae8 <d_exprlist+0x180>
 8000dce:	785a      	ldrb	r2, [r3, #1]
 8000dd0:	2a6c      	cmp	r2, #108	; 0x6c
 8000dd2:	f47f ae0e 	bne.w	80009f2 <d_exprlist+0x8a>
 8000dd6:	2500      	movs	r5, #0
 8000dd8:	3302      	adds	r3, #2
 8000dda:	60e3      	str	r3, [r4, #12]
 8000ddc:	2145      	movs	r1, #69	; 0x45
 8000dde:	4620      	mov	r0, r4
 8000de0:	f7ff fdc2 	bl	8000968 <d_exprlist>
 8000de4:	462a      	mov	r2, r5
 8000de6:	4603      	mov	r3, r0
 8000de8:	2130      	movs	r1, #48	; 0x30
 8000dea:	4620      	mov	r0, r4
 8000dec:	f7ff f9b0 	bl	8000150 <d_make_comp>
 8000df0:	4605      	mov	r5, r0
 8000df2:	e63f      	b.n	8000a74 <d_exprlist+0x10c>
 8000df4:	785a      	ldrb	r2, [r3, #1]
 8000df6:	2a6e      	cmp	r2, #110	; 0x6e
 8000df8:	f47f adfb 	bne.w	80009f2 <d_exprlist+0x8a>
 8000dfc:	3302      	adds	r3, #2
 8000dfe:	60e3      	str	r3, [r4, #12]
 8000e00:	e5c9      	b.n	8000996 <d_exprlist+0x2e>
 8000e02:	4620      	mov	r0, r4
 8000e04:	f000 fa08 	bl	8001218 <d_template_args_1>
 8000e08:	4603      	mov	r3, r0
 8000e0a:	e7be      	b.n	8000d8a <d_exprlist+0x422>
 8000e0c:	08011e7c 	.word	0x08011e7c
 8000e10:	08011e80 	.word	0x08011e80
 8000e14:	08011e84 	.word	0x08011e84
 8000e18:	08011e88 	.word	0x08011e88
 8000e1c:	08011e78 	.word	0x08011e78
 8000e20:	08012380 	.word	0x08012380

08000e24 <d_expression_1>:
 8000e24:	68c1      	ldr	r1, [r0, #12]
 8000e26:	780b      	ldrb	r3, [r1, #0]
 8000e28:	2b4c      	cmp	r3, #76	; 0x4c
 8000e2a:	f000 8087 	beq.w	8000f3c <d_expression_1+0x118>
 8000e2e:	2b54      	cmp	r3, #84	; 0x54
 8000e30:	f000 8086 	beq.w	8000f40 <d_expression_1+0x11c>
 8000e34:	2b73      	cmp	r3, #115	; 0x73
 8000e36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e3a:	4604      	mov	r4, r0
 8000e3c:	d037      	beq.n	8000eae <d_expression_1+0x8a>
 8000e3e:	2b66      	cmp	r3, #102	; 0x66
 8000e40:	d012      	beq.n	8000e68 <d_expression_1+0x44>
 8000e42:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8000e46:	2a09      	cmp	r2, #9
 8000e48:	f200 81b8 	bhi.w	80011bc <d_expression_1+0x398>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f001 f8a3 	bl	8001f98 <d_unqualified_name>
 8000e52:	4605      	mov	r5, r0
 8000e54:	2800      	cmp	r0, #0
 8000e56:	d06d      	beq.n	8000f34 <d_expression_1+0x110>
 8000e58:	68e3      	ldr	r3, [r4, #12]
 8000e5a:	781b      	ldrb	r3, [r3, #0]
 8000e5c:	2b49      	cmp	r3, #73	; 0x49
 8000e5e:	f000 8088 	beq.w	8000f72 <d_expression_1+0x14e>
 8000e62:	4628      	mov	r0, r5
 8000e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e68:	784b      	ldrb	r3, [r1, #1]
 8000e6a:	2b70      	cmp	r3, #112	; 0x70
 8000e6c:	d039      	beq.n	8000ee2 <d_expression_1+0xbe>
 8000e6e:	4620      	mov	r0, r4
 8000e70:	f000 ffd2 	bl	8001e18 <d_operator_name>
 8000e74:	4605      	mov	r5, r0
 8000e76:	2800      	cmp	r0, #0
 8000e78:	d05c      	beq.n	8000f34 <d_expression_1+0x110>
 8000e7a:	7803      	ldrb	r3, [r0, #0]
 8000e7c:	2b31      	cmp	r3, #49	; 0x31
 8000e7e:	d061      	beq.n	8000f44 <d_expression_1+0x120>
 8000e80:	2b32      	cmp	r3, #50	; 0x32
 8000e82:	d025      	beq.n	8000ed0 <d_expression_1+0xac>
 8000e84:	2b33      	cmp	r3, #51	; 0x33
 8000e86:	d155      	bne.n	8000f34 <d_expression_1+0x110>
 8000e88:	68e3      	ldr	r3, [r4, #12]
 8000e8a:	781a      	ldrb	r2, [r3, #0]
 8000e8c:	2a5f      	cmp	r2, #95	; 0x5f
 8000e8e:	f040 81b4 	bne.w	80011fa <d_expression_1+0x3d6>
 8000e92:	3301      	adds	r3, #1
 8000e94:	60e3      	str	r3, [r4, #12]
 8000e96:	2145      	movs	r1, #69	; 0x45
 8000e98:	4620      	mov	r0, r4
 8000e9a:	f7ff fd65 	bl	8000968 <d_exprlist>
 8000e9e:	4603      	mov	r3, r0
 8000ea0:	462a      	mov	r2, r5
 8000ea2:	4620      	mov	r0, r4
 8000ea4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ea8:	2136      	movs	r1, #54	; 0x36
 8000eaa:	f7ff b951 	b.w	8000150 <d_make_comp>
 8000eae:	784b      	ldrb	r3, [r1, #1]
 8000eb0:	2b72      	cmp	r3, #114	; 0x72
 8000eb2:	d069      	beq.n	8000f88 <d_expression_1+0x164>
 8000eb4:	2b70      	cmp	r3, #112	; 0x70
 8000eb6:	d1da      	bne.n	8000e6e <d_expression_1+0x4a>
 8000eb8:	3102      	adds	r1, #2
 8000eba:	60c1      	str	r1, [r0, #12]
 8000ebc:	f7ff ffb2 	bl	8000e24 <d_expression_1>
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	4602      	mov	r2, r0
 8000ec4:	214a      	movs	r1, #74	; 0x4a
 8000ec6:	4620      	mov	r0, r4
 8000ec8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ecc:	f7ff b940 	b.w	8000150 <d_make_comp>
 8000ed0:	6843      	ldr	r3, [r0, #4]
 8000ed2:	2b03      	cmp	r3, #3
 8000ed4:	d82e      	bhi.n	8000f34 <d_expression_1+0x110>
 8000ed6:	e8df f013 	tbh	[pc, r3, lsl #1]
 8000eda:	0071      	.short	0x0071
 8000edc:	002d0190 	.word	0x002d0190
 8000ee0:	002d      	.short	0x002d
 8000ee2:	1c8b      	adds	r3, r1, #2
 8000ee4:	60c3      	str	r3, [r0, #12]
 8000ee6:	788b      	ldrb	r3, [r1, #2]
 8000ee8:	2b54      	cmp	r3, #84	; 0x54
 8000eea:	d063      	beq.n	8000fb4 <d_expression_1+0x190>
 8000eec:	f7ff fac2 	bl	8000474 <d_compact_number>
 8000ef0:	43c3      	mvns	r3, r0
 8000ef2:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 8000ef6:	d01d      	beq.n	8000f34 <d_expression_1+0x110>
 8000ef8:	3001      	adds	r0, #1
 8000efa:	6963      	ldr	r3, [r4, #20]
 8000efc:	69a2      	ldr	r2, [r4, #24]
 8000efe:	4293      	cmp	r3, r2
 8000f00:	da18      	bge.n	8000f34 <d_expression_1+0x110>
 8000f02:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8000f06:	6921      	ldr	r1, [r4, #16]
 8000f08:	0092      	lsls	r2, r2, #2
 8000f0a:	3301      	adds	r3, #1
 8000f0c:	188d      	adds	r5, r1, r2
 8000f0e:	6163      	str	r3, [r4, #20]
 8000f10:	d0a7      	beq.n	8000e62 <d_expression_1+0x3e>
 8000f12:	2306      	movs	r3, #6
 8000f14:	548b      	strb	r3, [r1, r2]
 8000f16:	6068      	str	r0, [r5, #4]
 8000f18:	e7a3      	b.n	8000e62 <d_expression_1+0x3e>
 8000f1a:	2b74      	cmp	r3, #116	; 0x74
 8000f1c:	d1a7      	bne.n	8000e6e <d_expression_1+0x4a>
 8000f1e:	784b      	ldrb	r3, [r1, #1]
 8000f20:	2b6c      	cmp	r3, #108	; 0x6c
 8000f22:	d1a4      	bne.n	8000e6e <d_expression_1+0x4a>
 8000f24:	f000 fb98 	bl	8001658 <d_type>
 8000f28:	68e1      	ldr	r1, [r4, #12]
 8000f2a:	4605      	mov	r5, r0
 8000f2c:	784b      	ldrb	r3, [r1, #1]
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	f040 814e 	bne.w	80011d0 <d_expression_1+0x3ac>
 8000f34:	2500      	movs	r5, #0
 8000f36:	4628      	mov	r0, r5
 8000f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f3c:	f001 bc7a 	b.w	8002834 <d_expr_primary>
 8000f40:	f7ff bab4 	b.w	80004ac <d_template_param>
 8000f44:	6847      	ldr	r7, [r0, #4]
 8000f46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000f48:	68ba      	ldr	r2, [r7, #8]
 8000f4a:	683e      	ldr	r6, [r7, #0]
 8000f4c:	3a02      	subs	r2, #2
 8000f4e:	4413      	add	r3, r2
 8000f50:	6323      	str	r3, [r4, #48]	; 0x30
 8000f52:	4630      	mov	r0, r6
 8000f54:	49aa      	ldr	r1, [pc, #680]	; (8001200 <d_expression_1+0x3dc>)
 8000f56:	f005 fc47 	bl	80067e8 <strcmp>
 8000f5a:	2800      	cmp	r0, #0
 8000f5c:	f000 80ab 	beq.w	80010b6 <d_expression_1+0x292>
 8000f60:	68ff      	ldr	r7, [r7, #12]
 8000f62:	2f03      	cmp	r7, #3
 8000f64:	d8e6      	bhi.n	8000f34 <d_expression_1+0x110>
 8000f66:	e8df f017 	tbh	[pc, r7, lsl #1]
 8000f6a:	0029      	.short	0x0029
 8000f6c:	007100ff 	.word	0x007100ff
 8000f70:	0031      	.short	0x0031
 8000f72:	4620      	mov	r0, r4
 8000f74:	f000 f9ae 	bl	80012d4 <d_template_args>
 8000f78:	462a      	mov	r2, r5
 8000f7a:	4603      	mov	r3, r0
 8000f7c:	2104      	movs	r1, #4
 8000f7e:	4620      	mov	r0, r4
 8000f80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f84:	f7ff b8e4 	b.w	8000150 <d_make_comp>
 8000f88:	3102      	adds	r1, #2
 8000f8a:	60c1      	str	r1, [r0, #12]
 8000f8c:	f000 fb64 	bl	8001658 <d_type>
 8000f90:	4605      	mov	r5, r0
 8000f92:	4620      	mov	r0, r4
 8000f94:	f001 f800 	bl	8001f98 <d_unqualified_name>
 8000f98:	68e3      	ldr	r3, [r4, #12]
 8000f9a:	4606      	mov	r6, r0
 8000f9c:	781b      	ldrb	r3, [r3, #0]
 8000f9e:	2b49      	cmp	r3, #73	; 0x49
 8000fa0:	f000 80ae 	beq.w	8001100 <d_expression_1+0x2dc>
 8000fa4:	4603      	mov	r3, r0
 8000fa6:	462a      	mov	r2, r5
 8000fa8:	4620      	mov	r0, r4
 8000faa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fae:	2101      	movs	r1, #1
 8000fb0:	f7ff b8ce 	b.w	8000150 <d_make_comp>
 8000fb4:	3103      	adds	r1, #3
 8000fb6:	60c1      	str	r1, [r0, #12]
 8000fb8:	2000      	movs	r0, #0
 8000fba:	e79e      	b.n	8000efa <d_expression_1+0xd6>
 8000fbc:	462a      	mov	r2, r5
 8000fbe:	4620      	mov	r0, r4
 8000fc0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fc4:	2300      	movs	r3, #0
 8000fc6:	2135      	movs	r1, #53	; 0x35
 8000fc8:	f7ff b8c2 	b.w	8000150 <d_make_comp>
 8000fcc:	2e00      	cmp	r6, #0
 8000fce:	d0b1      	beq.n	8000f34 <d_expression_1+0x110>
 8000fd0:	498c      	ldr	r1, [pc, #560]	; (8001204 <d_expression_1+0x3e0>)
 8000fd2:	4630      	mov	r0, r6
 8000fd4:	f005 fc08 	bl	80067e8 <strcmp>
 8000fd8:	2800      	cmp	r0, #0
 8000fda:	d071      	beq.n	80010c0 <d_expression_1+0x29c>
 8000fdc:	7833      	ldrb	r3, [r6, #0]
 8000fde:	2b66      	cmp	r3, #102	; 0x66
 8000fe0:	f000 80b2 	beq.w	8001148 <d_expression_1+0x324>
 8000fe4:	2b6e      	cmp	r3, #110	; 0x6e
 8000fe6:	d1a5      	bne.n	8000f34 <d_expression_1+0x110>
 8000fe8:	7873      	ldrb	r3, [r6, #1]
 8000fea:	2b77      	cmp	r3, #119	; 0x77
 8000fec:	d001      	beq.n	8000ff2 <d_expression_1+0x1ce>
 8000fee:	2b61      	cmp	r3, #97	; 0x61
 8000ff0:	d1a0      	bne.n	8000f34 <d_expression_1+0x110>
 8000ff2:	215f      	movs	r1, #95	; 0x5f
 8000ff4:	4620      	mov	r0, r4
 8000ff6:	f7ff fcb7 	bl	8000968 <d_exprlist>
 8000ffa:	4606      	mov	r6, r0
 8000ffc:	4620      	mov	r0, r4
 8000ffe:	f000 fb2b 	bl	8001658 <d_type>
 8001002:	68e3      	ldr	r3, [r4, #12]
 8001004:	4607      	mov	r7, r0
 8001006:	781a      	ldrb	r2, [r3, #0]
 8001008:	2a45      	cmp	r2, #69	; 0x45
 800100a:	f000 8099 	beq.w	8001140 <d_expression_1+0x31c>
 800100e:	2a70      	cmp	r2, #112	; 0x70
 8001010:	f000 809e 	beq.w	8001150 <d_expression_1+0x32c>
 8001014:	2a69      	cmp	r2, #105	; 0x69
 8001016:	d18d      	bne.n	8000f34 <d_expression_1+0x110>
 8001018:	785b      	ldrb	r3, [r3, #1]
 800101a:	2b6c      	cmp	r3, #108	; 0x6c
 800101c:	d18a      	bne.n	8000f34 <d_expression_1+0x110>
 800101e:	4620      	mov	r0, r4
 8001020:	f7ff ff00 	bl	8000e24 <d_expression_1>
 8001024:	4603      	mov	r3, r0
 8001026:	463a      	mov	r2, r7
 8001028:	213b      	movs	r1, #59	; 0x3b
 800102a:	4620      	mov	r0, r4
 800102c:	f7ff f890 	bl	8000150 <d_make_comp>
 8001030:	4632      	mov	r2, r6
 8001032:	4603      	mov	r3, r0
 8001034:	213a      	movs	r1, #58	; 0x3a
 8001036:	4620      	mov	r0, r4
 8001038:	f7ff f88a 	bl	8000150 <d_make_comp>
 800103c:	462a      	mov	r2, r5
 800103e:	4603      	mov	r3, r0
 8001040:	2139      	movs	r1, #57	; 0x39
 8001042:	4620      	mov	r0, r4
 8001044:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001048:	f7ff b882 	b.w	8000150 <d_make_comp>
 800104c:	2e00      	cmp	r6, #0
 800104e:	f43f af71 	beq.w	8000f34 <d_expression_1+0x110>
 8001052:	686b      	ldr	r3, [r5, #4]
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	785a      	ldrb	r2, [r3, #1]
 8001058:	2a63      	cmp	r2, #99	; 0x63
 800105a:	d044      	beq.n	80010e6 <d_expression_1+0x2c2>
 800105c:	7833      	ldrb	r3, [r6, #0]
 800105e:	2b66      	cmp	r3, #102	; 0x66
 8001060:	d059      	beq.n	8001116 <d_expression_1+0x2f2>
 8001062:	4620      	mov	r0, r4
 8001064:	f7ff fede 	bl	8000e24 <d_expression_1>
 8001068:	4607      	mov	r7, r0
 800106a:	4967      	ldr	r1, [pc, #412]	; (8001208 <d_expression_1+0x3e4>)
 800106c:	4630      	mov	r0, r6
 800106e:	f005 fbbb 	bl	80067e8 <strcmp>
 8001072:	b390      	cbz	r0, 80010da <d_expression_1+0x2b6>
 8001074:	4965      	ldr	r1, [pc, #404]	; (800120c <d_expression_1+0x3e8>)
 8001076:	4630      	mov	r0, r6
 8001078:	f005 fbb6 	bl	80067e8 <strcmp>
 800107c:	b128      	cbz	r0, 800108a <d_expression_1+0x266>
 800107e:	4630      	mov	r0, r6
 8001080:	4963      	ldr	r1, [pc, #396]	; (8001210 <d_expression_1+0x3ec>)
 8001082:	f005 fbb1 	bl	80067e8 <strcmp>
 8001086:	2800      	cmp	r0, #0
 8001088:	d14a      	bne.n	8001120 <d_expression_1+0x2fc>
 800108a:	4620      	mov	r0, r4
 800108c:	f000 ff84 	bl	8001f98 <d_unqualified_name>
 8001090:	68e3      	ldr	r3, [r4, #12]
 8001092:	4606      	mov	r6, r0
 8001094:	781b      	ldrb	r3, [r3, #0]
 8001096:	2b49      	cmp	r3, #73	; 0x49
 8001098:	d047      	beq.n	800112a <d_expression_1+0x306>
 800109a:	4633      	mov	r3, r6
 800109c:	463a      	mov	r2, r7
 800109e:	2138      	movs	r1, #56	; 0x38
 80010a0:	4620      	mov	r0, r4
 80010a2:	f7ff f855 	bl	8000150 <d_make_comp>
 80010a6:	462a      	mov	r2, r5
 80010a8:	4603      	mov	r3, r0
 80010aa:	2137      	movs	r1, #55	; 0x37
 80010ac:	4620      	mov	r0, r4
 80010ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010b2:	f7ff b84d 	b.w	8000150 <d_make_comp>
 80010b6:	4620      	mov	r0, r4
 80010b8:	f000 face 	bl	8001658 <d_type>
 80010bc:	4603      	mov	r3, r0
 80010be:	e6ef      	b.n	8000ea0 <d_expression_1+0x7c>
 80010c0:	4620      	mov	r0, r4
 80010c2:	f7ff feaf 	bl	8000e24 <d_expression_1>
 80010c6:	4606      	mov	r6, r0
 80010c8:	4620      	mov	r0, r4
 80010ca:	f7ff feab 	bl	8000e24 <d_expression_1>
 80010ce:	4607      	mov	r7, r0
 80010d0:	4620      	mov	r0, r4
 80010d2:	f7ff fea7 	bl	8000e24 <d_expression_1>
 80010d6:	4603      	mov	r3, r0
 80010d8:	e7a5      	b.n	8001026 <d_expression_1+0x202>
 80010da:	2145      	movs	r1, #69	; 0x45
 80010dc:	4620      	mov	r0, r4
 80010de:	f7ff fc43 	bl	8000968 <d_exprlist>
 80010e2:	4606      	mov	r6, r0
 80010e4:	e7d9      	b.n	800109a <d_expression_1+0x276>
 80010e6:	781b      	ldrb	r3, [r3, #0]
 80010e8:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80010ec:	2a01      	cmp	r2, #1
 80010ee:	d902      	bls.n	80010f6 <d_expression_1+0x2d2>
 80010f0:	3b72      	subs	r3, #114	; 0x72
 80010f2:	2b01      	cmp	r3, #1
 80010f4:	d8b2      	bhi.n	800105c <d_expression_1+0x238>
 80010f6:	4620      	mov	r0, r4
 80010f8:	f000 faae 	bl	8001658 <d_type>
 80010fc:	4607      	mov	r7, r0
 80010fe:	e7b4      	b.n	800106a <d_expression_1+0x246>
 8001100:	4620      	mov	r0, r4
 8001102:	f000 f8e7 	bl	80012d4 <d_template_args>
 8001106:	4632      	mov	r2, r6
 8001108:	4603      	mov	r3, r0
 800110a:	2104      	movs	r1, #4
 800110c:	4620      	mov	r0, r4
 800110e:	f7ff f81f 	bl	8000150 <d_make_comp>
 8001112:	4603      	mov	r3, r0
 8001114:	e747      	b.n	8000fa6 <d_expression_1+0x182>
 8001116:	4620      	mov	r0, r4
 8001118:	f000 fe7e 	bl	8001e18 <d_operator_name>
 800111c:	4607      	mov	r7, r0
 800111e:	e7a4      	b.n	800106a <d_expression_1+0x246>
 8001120:	4620      	mov	r0, r4
 8001122:	f7ff fe7f 	bl	8000e24 <d_expression_1>
 8001126:	4606      	mov	r6, r0
 8001128:	e7b7      	b.n	800109a <d_expression_1+0x276>
 800112a:	4620      	mov	r0, r4
 800112c:	f000 f8d2 	bl	80012d4 <d_template_args>
 8001130:	4632      	mov	r2, r6
 8001132:	4603      	mov	r3, r0
 8001134:	2104      	movs	r1, #4
 8001136:	4620      	mov	r0, r4
 8001138:	f7ff f80a 	bl	8000150 <d_make_comp>
 800113c:	4606      	mov	r6, r0
 800113e:	e7ac      	b.n	800109a <d_expression_1+0x276>
 8001140:	3301      	adds	r3, #1
 8001142:	60e3      	str	r3, [r4, #12]
 8001144:	2300      	movs	r3, #0
 8001146:	e76e      	b.n	8001026 <d_expression_1+0x202>
 8001148:	4620      	mov	r0, r4
 800114a:	f000 fe65 	bl	8001e18 <d_operator_name>
 800114e:	e7ba      	b.n	80010c6 <d_expression_1+0x2a2>
 8001150:	785a      	ldrb	r2, [r3, #1]
 8001152:	2a69      	cmp	r2, #105	; 0x69
 8001154:	f47f aeee 	bne.w	8000f34 <d_expression_1+0x110>
 8001158:	3302      	adds	r3, #2
 800115a:	60e3      	str	r3, [r4, #12]
 800115c:	2145      	movs	r1, #69	; 0x45
 800115e:	4620      	mov	r0, r4
 8001160:	f7ff fc02 	bl	8000968 <d_exprlist>
 8001164:	4603      	mov	r3, r0
 8001166:	e75e      	b.n	8001026 <d_expression_1+0x202>
 8001168:	2e00      	cmp	r6, #0
 800116a:	d046      	beq.n	80011fa <d_expression_1+0x3d6>
 800116c:	7833      	ldrb	r3, [r6, #0]
 800116e:	2b70      	cmp	r3, #112	; 0x70
 8001170:	d015      	beq.n	800119e <d_expression_1+0x37a>
 8001172:	2b6d      	cmp	r3, #109	; 0x6d
 8001174:	d013      	beq.n	800119e <d_expression_1+0x37a>
 8001176:	2700      	movs	r7, #0
 8001178:	4630      	mov	r0, r6
 800117a:	4926      	ldr	r1, [pc, #152]	; (8001214 <d_expression_1+0x3f0>)
 800117c:	f005 fb34 	bl	80067e8 <strcmp>
 8001180:	b1b8      	cbz	r0, 80011b2 <d_expression_1+0x38e>
 8001182:	4620      	mov	r0, r4
 8001184:	f7ff fe4e 	bl	8000e24 <d_expression_1>
 8001188:	4603      	mov	r3, r0
 800118a:	2f00      	cmp	r7, #0
 800118c:	f43f ae88 	beq.w	8000ea0 <d_expression_1+0x7c>
 8001190:	461a      	mov	r2, r3
 8001192:	2138      	movs	r1, #56	; 0x38
 8001194:	4620      	mov	r0, r4
 8001196:	f7fe ffdb 	bl	8000150 <d_make_comp>
 800119a:	4603      	mov	r3, r0
 800119c:	e680      	b.n	8000ea0 <d_expression_1+0x7c>
 800119e:	7872      	ldrb	r2, [r6, #1]
 80011a0:	429a      	cmp	r2, r3
 80011a2:	d1e8      	bne.n	8001176 <d_expression_1+0x352>
 80011a4:	68e3      	ldr	r3, [r4, #12]
 80011a6:	781a      	ldrb	r2, [r3, #0]
 80011a8:	2a5f      	cmp	r2, #95	; 0x5f
 80011aa:	d1e5      	bne.n	8001178 <d_expression_1+0x354>
 80011ac:	3301      	adds	r3, #1
 80011ae:	60e3      	str	r3, [r4, #12]
 80011b0:	e7e1      	b.n	8001176 <d_expression_1+0x352>
 80011b2:	4620      	mov	r0, r4
 80011b4:	f000 f830 	bl	8001218 <d_template_args_1>
 80011b8:	4603      	mov	r3, r0
 80011ba:	e7e6      	b.n	800118a <d_expression_1+0x366>
 80011bc:	2b6f      	cmp	r3, #111	; 0x6f
 80011be:	d015      	beq.n	80011ec <d_expression_1+0x3c8>
 80011c0:	2b69      	cmp	r3, #105	; 0x69
 80011c2:	f47f aeaa 	bne.w	8000f1a <d_expression_1+0xf6>
 80011c6:	784b      	ldrb	r3, [r1, #1]
 80011c8:	2b6c      	cmp	r3, #108	; 0x6c
 80011ca:	f47f ae50 	bne.w	8000e6e <d_expression_1+0x4a>
 80011ce:	2500      	movs	r5, #0
 80011d0:	3102      	adds	r1, #2
 80011d2:	60e1      	str	r1, [r4, #12]
 80011d4:	4620      	mov	r0, r4
 80011d6:	2145      	movs	r1, #69	; 0x45
 80011d8:	f7ff fbc6 	bl	8000968 <d_exprlist>
 80011dc:	462a      	mov	r2, r5
 80011de:	4603      	mov	r3, r0
 80011e0:	2130      	movs	r1, #48	; 0x30
 80011e2:	4620      	mov	r0, r4
 80011e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80011e8:	f7fe bfb2 	b.w	8000150 <d_make_comp>
 80011ec:	784b      	ldrb	r3, [r1, #1]
 80011ee:	2b6e      	cmp	r3, #110	; 0x6e
 80011f0:	f47f ae3d 	bne.w	8000e6e <d_expression_1+0x4a>
 80011f4:	3102      	adds	r1, #2
 80011f6:	60c1      	str	r1, [r0, #12]
 80011f8:	e628      	b.n	8000e4c <d_expression_1+0x28>
 80011fa:	2700      	movs	r7, #0
 80011fc:	e7c1      	b.n	8001182 <d_expression_1+0x35e>
 80011fe:	bf00      	nop
 8001200:	08012380 	.word	0x08012380
 8001204:	08011e88 	.word	0x08011e88
 8001208:	08011e7c 	.word	0x08011e7c
 800120c:	08011e80 	.word	0x08011e80
 8001210:	08011e84 	.word	0x08011e84
 8001214:	08011e78 	.word	0x08011e78

08001218 <d_template_args_1>:
 8001218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800121c:	68c2      	ldr	r2, [r0, #12]
 800121e:	b082      	sub	sp, #8
 8001220:	7813      	ldrb	r3, [r2, #0]
 8001222:	4604      	mov	r4, r0
 8001224:	2b45      	cmp	r3, #69	; 0x45
 8001226:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8001228:	d049      	beq.n	80012be <d_template_args_1+0xa6>
 800122a:	2100      	movs	r1, #0
 800122c:	2601      	movs	r6, #1
 800122e:	ad02      	add	r5, sp, #8
 8001230:	f845 1d04 	str.w	r1, [r5, #-4]!
 8001234:	3b49      	subs	r3, #73	; 0x49
 8001236:	2b0f      	cmp	r3, #15
 8001238:	d83a      	bhi.n	80012b0 <d_template_args_1+0x98>
 800123a:	e8df f003 	tbb	[pc, r3]
 800123e:	3535      	.short	0x3535
 8001240:	39391a39 	.word	0x39391a39
 8001244:	39393939 	.word	0x39393939
 8001248:	39393939 	.word	0x39393939
 800124c:	0839      	.short	0x0839
 800124e:	3201      	adds	r2, #1
 8001250:	f8d4 8034 	ldr.w	r8, [r4, #52]	; 0x34
 8001254:	60e2      	str	r2, [r4, #12]
 8001256:	4620      	mov	r0, r4
 8001258:	6366      	str	r6, [r4, #52]	; 0x34
 800125a:	f7ff fde3 	bl	8000e24 <d_expression_1>
 800125e:	68e3      	ldr	r3, [r4, #12]
 8001260:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
 8001264:	781a      	ldrb	r2, [r3, #0]
 8001266:	2a45      	cmp	r2, #69	; 0x45
 8001268:	d026      	beq.n	80012b8 <d_template_args_1+0xa0>
 800126a:	2000      	movs	r0, #0
 800126c:	b002      	add	sp, #8
 800126e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001272:	4620      	mov	r0, r4
 8001274:	f001 fade 	bl	8002834 <d_expr_primary>
 8001278:	2800      	cmp	r0, #0
 800127a:	d0f6      	beq.n	800126a <d_template_args_1+0x52>
 800127c:	4602      	mov	r2, r0
 800127e:	2300      	movs	r3, #0
 8001280:	212f      	movs	r1, #47	; 0x2f
 8001282:	4620      	mov	r0, r4
 8001284:	f7fe ff64 	bl	8000150 <d_make_comp>
 8001288:	6028      	str	r0, [r5, #0]
 800128a:	f100 0508 	add.w	r5, r0, #8
 800128e:	2800      	cmp	r0, #0
 8001290:	d0eb      	beq.n	800126a <d_template_args_1+0x52>
 8001292:	68e2      	ldr	r2, [r4, #12]
 8001294:	7813      	ldrb	r3, [r2, #0]
 8001296:	2b45      	cmp	r3, #69	; 0x45
 8001298:	d1cc      	bne.n	8001234 <d_template_args_1+0x1c>
 800129a:	9801      	ldr	r0, [sp, #4]
 800129c:	3201      	adds	r2, #1
 800129e:	60e2      	str	r2, [r4, #12]
 80012a0:	62e7      	str	r7, [r4, #44]	; 0x2c
 80012a2:	b002      	add	sp, #8
 80012a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012a8:	4620      	mov	r0, r4
 80012aa:	f000 f813 	bl	80012d4 <d_template_args>
 80012ae:	e7e3      	b.n	8001278 <d_template_args_1+0x60>
 80012b0:	4620      	mov	r0, r4
 80012b2:	f000 f9d1 	bl	8001658 <d_type>
 80012b6:	e7df      	b.n	8001278 <d_template_args_1+0x60>
 80012b8:	3301      	adds	r3, #1
 80012ba:	60e3      	str	r3, [r4, #12]
 80012bc:	e7dc      	b.n	8001278 <d_template_args_1+0x60>
 80012be:	2300      	movs	r3, #0
 80012c0:	3201      	adds	r2, #1
 80012c2:	60c2      	str	r2, [r0, #12]
 80012c4:	212f      	movs	r1, #47	; 0x2f
 80012c6:	461a      	mov	r2, r3
 80012c8:	b002      	add	sp, #8
 80012ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012ce:	f7fe bf3f 	b.w	8000150 <d_make_comp>
 80012d2:	bf00      	nop

080012d4 <d_template_args>:
 80012d4:	68c2      	ldr	r2, [r0, #12]
 80012d6:	7813      	ldrb	r3, [r2, #0]
 80012d8:	3b49      	subs	r3, #73	; 0x49
 80012da:	2b01      	cmp	r3, #1
 80012dc:	d802      	bhi.n	80012e4 <d_template_args+0x10>
 80012de:	3201      	adds	r2, #1
 80012e0:	60c2      	str	r2, [r0, #12]
 80012e2:	e799      	b.n	8001218 <d_template_args_1>
 80012e4:	2000      	movs	r0, #0
 80012e6:	4770      	bx	lr

080012e8 <d_name>:
 80012e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80012ec:	68c2      	ldr	r2, [r0, #12]
 80012ee:	b085      	sub	sp, #20
 80012f0:	7813      	ldrb	r3, [r2, #0]
 80012f2:	4605      	mov	r5, r0
 80012f4:	3b4e      	subs	r3, #78	; 0x4e
 80012f6:	2b0c      	cmp	r3, #12
 80012f8:	d870      	bhi.n	80013dc <d_name+0xf4>
 80012fa:	e8df f003 	tbb	[pc, r3]
 80012fe:	6f1e      	.short	0x6f1e
 8001300:	5b6f6f6f 	.word	0x5b6f6f6f
 8001304:	6f6f176f 	.word	0x6f6f176f
 8001308:	6f6f      	.short	0x6f6f
 800130a:	07          	.byte	0x07
 800130b:	00          	.byte	0x00
 800130c:	3201      	adds	r2, #1
 800130e:	2100      	movs	r1, #0
 8001310:	60c2      	str	r2, [r0, #12]
 8001312:	f000 ffb1 	bl	8002278 <d_encoding>
 8001316:	68eb      	ldr	r3, [r5, #12]
 8001318:	4606      	mov	r6, r0
 800131a:	7819      	ldrb	r1, [r3, #0]
 800131c:	2945      	cmp	r1, #69	; 0x45
 800131e:	f000 8099 	beq.w	8001454 <d_name+0x16c>
 8001322:	2200      	movs	r2, #0
 8001324:	4610      	mov	r0, r2
 8001326:	b005      	add	sp, #20
 8001328:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800132c:	f000 fe34 	bl	8001f98 <d_unqualified_name>
 8001330:	4602      	mov	r2, r0
 8001332:	4610      	mov	r0, r2
 8001334:	b005      	add	sp, #20
 8001336:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800133a:	3201      	adds	r2, #1
 800133c:	60c2      	str	r2, [r0, #12]
 800133e:	a903      	add	r1, sp, #12
 8001340:	2201      	movs	r2, #1
 8001342:	f7fe ff51 	bl	80001e8 <d_cv_qualifiers>
 8001346:	4681      	mov	r9, r0
 8001348:	2800      	cmp	r0, #0
 800134a:	d0ea      	beq.n	8001322 <d_name+0x3a>
 800134c:	2100      	movs	r1, #0
 800134e:	4628      	mov	r0, r5
 8001350:	f7fe ffb0 	bl	80002b4 <d_ref_qualifier>
 8001354:	2700      	movs	r7, #0
 8001356:	4680      	mov	r8, r0
 8001358:	68ea      	ldr	r2, [r5, #12]
 800135a:	4ebc      	ldr	r6, [pc, #752]	; (800164c <d_name+0x364>)
 800135c:	7814      	ldrb	r4, [r2, #0]
 800135e:	2c00      	cmp	r4, #0
 8001360:	f000 80ef 	beq.w	8001542 <d_name+0x25a>
 8001364:	2c44      	cmp	r4, #68	; 0x44
 8001366:	f000 80d1 	beq.w	800150c <d_name+0x224>
 800136a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800136e:	b2db      	uxtb	r3, r3
 8001370:	2b1c      	cmp	r3, #28
 8001372:	f240 80a8 	bls.w	80014c6 <d_name+0x1de>
 8001376:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 800137a:	2b19      	cmp	r3, #25
 800137c:	f240 80a8 	bls.w	80014d0 <d_name+0x1e8>
 8001380:	2c55      	cmp	r4, #85	; 0x55
 8001382:	f000 80e5 	beq.w	8001550 <d_name+0x268>
 8001386:	2c53      	cmp	r4, #83	; 0x53
 8001388:	f000 80cc 	beq.w	8001524 <d_name+0x23c>
 800138c:	2c49      	cmp	r4, #73	; 0x49
 800138e:	f000 80e1 	beq.w	8001554 <d_name+0x26c>
 8001392:	2c54      	cmp	r4, #84	; 0x54
 8001394:	f000 811c 	beq.w	80015d0 <d_name+0x2e8>
 8001398:	2c45      	cmp	r4, #69	; 0x45
 800139a:	f000 8142 	beq.w	8001622 <d_name+0x33a>
 800139e:	2c4d      	cmp	r4, #77	; 0x4d
 80013a0:	f040 80cf 	bne.w	8001542 <d_name+0x25a>
 80013a4:	2f00      	cmp	r7, #0
 80013a6:	f000 80cc 	beq.w	8001542 <d_name+0x25a>
 80013aa:	1c53      	adds	r3, r2, #1
 80013ac:	60eb      	str	r3, [r5, #12]
 80013ae:	7854      	ldrb	r4, [r2, #1]
 80013b0:	461a      	mov	r2, r3
 80013b2:	e7d4      	b.n	800135e <d_name+0x76>
 80013b4:	7853      	ldrb	r3, [r2, #1]
 80013b6:	2b74      	cmp	r3, #116	; 0x74
 80013b8:	d031      	beq.n	800141e <d_name+0x136>
 80013ba:	2100      	movs	r1, #0
 80013bc:	f7ff f910 	bl	80005e0 <d_substitution>
 80013c0:	68eb      	ldr	r3, [r5, #12]
 80013c2:	4602      	mov	r2, r0
 80013c4:	7819      	ldrb	r1, [r3, #0]
 80013c6:	2949      	cmp	r1, #73	; 0x49
 80013c8:	d1b3      	bne.n	8001332 <d_name+0x4a>
 80013ca:	3301      	adds	r3, #1
 80013cc:	60eb      	str	r3, [r5, #12]
 80013ce:	4628      	mov	r0, r5
 80013d0:	9201      	str	r2, [sp, #4]
 80013d2:	f7ff ff21 	bl	8001218 <d_template_args_1>
 80013d6:	9a01      	ldr	r2, [sp, #4]
 80013d8:	4603      	mov	r3, r0
 80013da:	e017      	b.n	800140c <d_name+0x124>
 80013dc:	f000 fddc 	bl	8001f98 <d_unqualified_name>
 80013e0:	68eb      	ldr	r3, [r5, #12]
 80013e2:	4602      	mov	r2, r0
 80013e4:	7819      	ldrb	r1, [r3, #0]
 80013e6:	2949      	cmp	r1, #73	; 0x49
 80013e8:	d1a3      	bne.n	8001332 <d_name+0x4a>
 80013ea:	2a00      	cmp	r2, #0
 80013ec:	d099      	beq.n	8001322 <d_name+0x3a>
 80013ee:	6a29      	ldr	r1, [r5, #32]
 80013f0:	6a68      	ldr	r0, [r5, #36]	; 0x24
 80013f2:	4281      	cmp	r1, r0
 80013f4:	da95      	bge.n	8001322 <d_name+0x3a>
 80013f6:	69ec      	ldr	r4, [r5, #28]
 80013f8:	1c48      	adds	r0, r1, #1
 80013fa:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 80013fe:	6228      	str	r0, [r5, #32]
 8001400:	7819      	ldrb	r1, [r3, #0]
 8001402:	3949      	subs	r1, #73	; 0x49
 8001404:	2901      	cmp	r1, #1
 8001406:	bf88      	it	hi
 8001408:	2300      	movhi	r3, #0
 800140a:	d9de      	bls.n	80013ca <d_name+0xe2>
 800140c:	4628      	mov	r0, r5
 800140e:	2104      	movs	r1, #4
 8001410:	f7fe fe9e 	bl	8000150 <d_make_comp>
 8001414:	4602      	mov	r2, r0
 8001416:	4610      	mov	r0, r2
 8001418:	b005      	add	sp, #20
 800141a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800141e:	6943      	ldr	r3, [r0, #20]
 8001420:	6981      	ldr	r1, [r0, #24]
 8001422:	3202      	adds	r2, #2
 8001424:	428b      	cmp	r3, r1
 8001426:	60c2      	str	r2, [r0, #12]
 8001428:	f2c0 80a8 	blt.w	800157c <d_name+0x294>
 800142c:	2400      	movs	r4, #0
 800142e:	4628      	mov	r0, r5
 8001430:	f000 fdb2 	bl	8001f98 <d_unqualified_name>
 8001434:	4622      	mov	r2, r4
 8001436:	4603      	mov	r3, r0
 8001438:	2101      	movs	r1, #1
 800143a:	4628      	mov	r0, r5
 800143c:	f7fe fe88 	bl	8000150 <d_make_comp>
 8001440:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8001442:	68eb      	ldr	r3, [r5, #12]
 8001444:	3103      	adds	r1, #3
 8001446:	6329      	str	r1, [r5, #48]	; 0x30
 8001448:	7819      	ldrb	r1, [r3, #0]
 800144a:	4602      	mov	r2, r0
 800144c:	2949      	cmp	r1, #73	; 0x49
 800144e:	f47f af70 	bne.w	8001332 <d_name+0x4a>
 8001452:	e7ca      	b.n	80013ea <d_name+0x102>
 8001454:	1c5a      	adds	r2, r3, #1
 8001456:	60ea      	str	r2, [r5, #12]
 8001458:	7859      	ldrb	r1, [r3, #1]
 800145a:	2973      	cmp	r1, #115	; 0x73
 800145c:	f000 80a0 	beq.w	80015a0 <d_name+0x2b8>
 8001460:	2964      	cmp	r1, #100	; 0x64
 8001462:	f000 80b9 	beq.w	80015d8 <d_name+0x2f0>
 8001466:	4628      	mov	r0, r5
 8001468:	f7ff ff3e 	bl	80012e8 <d_name>
 800146c:	4604      	mov	r4, r0
 800146e:	2800      	cmp	r0, #0
 8001470:	d079      	beq.n	8001566 <d_name+0x27e>
 8001472:	7803      	ldrb	r3, [r0, #0]
 8001474:	2b45      	cmp	r3, #69	; 0x45
 8001476:	f000 8091 	beq.w	800159c <d_name+0x2b4>
 800147a:	2b47      	cmp	r3, #71	; 0x47
 800147c:	f000 808e 	beq.w	800159c <d_name+0x2b4>
 8001480:	68eb      	ldr	r3, [r5, #12]
 8001482:	781a      	ldrb	r2, [r3, #0]
 8001484:	2a5f      	cmp	r2, #95	; 0x5f
 8001486:	f040 8089 	bne.w	800159c <d_name+0x2b4>
 800148a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800148e:	4628      	mov	r0, r5
 8001490:	3301      	adds	r3, #1
 8001492:	f840 3f0c 	str.w	r3, [r0, #12]!
 8001496:	f7fe ffab 	bl	80003f0 <d_number.isra.0>
 800149a:	2800      	cmp	r0, #0
 800149c:	f6ff af41 	blt.w	8001322 <d_name+0x3a>
 80014a0:	1c7b      	adds	r3, r7, #1
 80014a2:	d07b      	beq.n	800159c <d_name+0x2b4>
 80014a4:	696b      	ldr	r3, [r5, #20]
 80014a6:	69aa      	ldr	r2, [r5, #24]
 80014a8:	4293      	cmp	r3, r2
 80014aa:	da5c      	bge.n	8001566 <d_name+0x27e>
 80014ac:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80014b0:	6929      	ldr	r1, [r5, #16]
 80014b2:	3301      	adds	r3, #1
 80014b4:	0092      	lsls	r2, r2, #2
 80014b6:	616b      	str	r3, [r5, #20]
 80014b8:	188b      	adds	r3, r1, r2
 80014ba:	d055      	beq.n	8001568 <d_name+0x280>
 80014bc:	2046      	movs	r0, #70	; 0x46
 80014be:	5488      	strb	r0, [r1, r2]
 80014c0:	609f      	str	r7, [r3, #8]
 80014c2:	605c      	str	r4, [r3, #4]
 80014c4:	e050      	b.n	8001568 <d_name+0x280>
 80014c6:	fa26 f303 	lsr.w	r3, r6, r3
 80014ca:	07d9      	lsls	r1, r3, #31
 80014cc:	f57f af53 	bpl.w	8001376 <d_name+0x8e>
 80014d0:	4628      	mov	r0, r5
 80014d2:	f000 fd61 	bl	8001f98 <d_unqualified_name>
 80014d6:	b37f      	cbz	r7, 8001538 <d_name+0x250>
 80014d8:	2101      	movs	r1, #1
 80014da:	4603      	mov	r3, r0
 80014dc:	463a      	mov	r2, r7
 80014de:	4628      	mov	r0, r5
 80014e0:	f7fe fe36 	bl	8000150 <d_make_comp>
 80014e4:	4607      	mov	r7, r0
 80014e6:	2c53      	cmp	r4, #83	; 0x53
 80014e8:	d023      	beq.n	8001532 <d_name+0x24a>
 80014ea:	68ea      	ldr	r2, [r5, #12]
 80014ec:	7814      	ldrb	r4, [r2, #0]
 80014ee:	2c45      	cmp	r4, #69	; 0x45
 80014f0:	f43f af3b 	beq.w	800136a <d_name+0x82>
 80014f4:	b32f      	cbz	r7, 8001542 <d_name+0x25a>
 80014f6:	6a2b      	ldr	r3, [r5, #32]
 80014f8:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80014fa:	428b      	cmp	r3, r1
 80014fc:	da21      	bge.n	8001542 <d_name+0x25a>
 80014fe:	69e9      	ldr	r1, [r5, #28]
 8001500:	1c58      	adds	r0, r3, #1
 8001502:	f841 7023 	str.w	r7, [r1, r3, lsl #2]
 8001506:	6228      	str	r0, [r5, #32]
 8001508:	7814      	ldrb	r4, [r2, #0]
 800150a:	e728      	b.n	800135e <d_name+0x76>
 800150c:	7853      	ldrb	r3, [r2, #1]
 800150e:	4628      	mov	r0, r5
 8001510:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8001514:	2b54      	cmp	r3, #84	; 0x54
 8001516:	d011      	beq.n	800153c <d_name+0x254>
 8001518:	f000 fd3e 	bl	8001f98 <d_unqualified_name>
 800151c:	2f00      	cmp	r7, #0
 800151e:	d1db      	bne.n	80014d8 <d_name+0x1f0>
 8001520:	4607      	mov	r7, r0
 8001522:	e7e2      	b.n	80014ea <d_name+0x202>
 8001524:	2101      	movs	r1, #1
 8001526:	4628      	mov	r0, r5
 8001528:	f7ff f85a 	bl	80005e0 <d_substitution>
 800152c:	2f00      	cmp	r7, #0
 800152e:	d1d3      	bne.n	80014d8 <d_name+0x1f0>
 8001530:	4607      	mov	r7, r0
 8001532:	68ea      	ldr	r2, [r5, #12]
 8001534:	7814      	ldrb	r4, [r2, #0]
 8001536:	e712      	b.n	800135e <d_name+0x76>
 8001538:	4607      	mov	r7, r0
 800153a:	e7d4      	b.n	80014e6 <d_name+0x1fe>
 800153c:	f000 f88c 	bl	8001658 <d_type>
 8001540:	e7ec      	b.n	800151c <d_name+0x234>
 8001542:	2200      	movs	r2, #0
 8001544:	4610      	mov	r0, r2
 8001546:	f8c9 2000 	str.w	r2, [r9]
 800154a:	b005      	add	sp, #20
 800154c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001550:	4628      	mov	r0, r5
 8001552:	e7e1      	b.n	8001518 <d_name+0x230>
 8001554:	2f00      	cmp	r7, #0
 8001556:	d0f4      	beq.n	8001542 <d_name+0x25a>
 8001558:	3201      	adds	r2, #1
 800155a:	60ea      	str	r2, [r5, #12]
 800155c:	4628      	mov	r0, r5
 800155e:	f7ff fe5b 	bl	8001218 <d_template_args_1>
 8001562:	2104      	movs	r1, #4
 8001564:	e7b9      	b.n	80014da <d_name+0x1f2>
 8001566:	2300      	movs	r3, #0
 8001568:	4632      	mov	r2, r6
 800156a:	4628      	mov	r0, r5
 800156c:	2102      	movs	r1, #2
 800156e:	f7fe fdef 	bl	8000150 <d_make_comp>
 8001572:	4602      	mov	r2, r0
 8001574:	4610      	mov	r0, r2
 8001576:	b005      	add	sp, #20
 8001578:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800157c:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8001580:	6901      	ldr	r1, [r0, #16]
 8001582:	0092      	lsls	r2, r2, #2
 8001584:	3301      	adds	r3, #1
 8001586:	188c      	adds	r4, r1, r2
 8001588:	6143      	str	r3, [r0, #20]
 800158a:	f43f af50 	beq.w	800142e <d_name+0x146>
 800158e:	2600      	movs	r6, #0
 8001590:	2003      	movs	r0, #3
 8001592:	4b2f      	ldr	r3, [pc, #188]	; (8001650 <d_name+0x368>)
 8001594:	548e      	strb	r6, [r1, r2]
 8001596:	60a0      	str	r0, [r4, #8]
 8001598:	6063      	str	r3, [r4, #4]
 800159a:	e748      	b.n	800142e <d_name+0x146>
 800159c:	4623      	mov	r3, r4
 800159e:	e7e3      	b.n	8001568 <d_name+0x280>
 80015a0:	1c9a      	adds	r2, r3, #2
 80015a2:	60ea      	str	r2, [r5, #12]
 80015a4:	789a      	ldrb	r2, [r3, #2]
 80015a6:	2a5f      	cmp	r2, #95	; 0x5f
 80015a8:	d032      	beq.n	8001610 <d_name+0x328>
 80015aa:	696b      	ldr	r3, [r5, #20]
 80015ac:	69aa      	ldr	r2, [r5, #24]
 80015ae:	4293      	cmp	r3, r2
 80015b0:	dad9      	bge.n	8001566 <d_name+0x27e>
 80015b2:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80015b6:	6929      	ldr	r1, [r5, #16]
 80015b8:	3301      	adds	r3, #1
 80015ba:	0092      	lsls	r2, r2, #2
 80015bc:	616b      	str	r3, [r5, #20]
 80015be:	188b      	adds	r3, r1, r2
 80015c0:	d0d2      	beq.n	8001568 <d_name+0x280>
 80015c2:	2700      	movs	r7, #0
 80015c4:	240e      	movs	r4, #14
 80015c6:	4823      	ldr	r0, [pc, #140]	; (8001654 <d_name+0x36c>)
 80015c8:	548f      	strb	r7, [r1, r2]
 80015ca:	609c      	str	r4, [r3, #8]
 80015cc:	6058      	str	r0, [r3, #4]
 80015ce:	e7cb      	b.n	8001568 <d_name+0x280>
 80015d0:	4628      	mov	r0, r5
 80015d2:	f7fe ff6b 	bl	80004ac <d_template_param>
 80015d6:	e7a1      	b.n	800151c <d_name+0x234>
 80015d8:	3302      	adds	r3, #2
 80015da:	60eb      	str	r3, [r5, #12]
 80015dc:	4628      	mov	r0, r5
 80015de:	f7fe ff49 	bl	8000474 <d_compact_number>
 80015e2:	1e07      	subs	r7, r0, #0
 80015e4:	f6ff ae9d 	blt.w	8001322 <d_name+0x3a>
 80015e8:	4628      	mov	r0, r5
 80015ea:	f7ff fe7d 	bl	80012e8 <d_name>
 80015ee:	4604      	mov	r4, r0
 80015f0:	2800      	cmp	r0, #0
 80015f2:	f43f af57 	beq.w	80014a4 <d_name+0x1bc>
 80015f6:	7803      	ldrb	r3, [r0, #0]
 80015f8:	2b45      	cmp	r3, #69	; 0x45
 80015fa:	f43f af53 	beq.w	80014a4 <d_name+0x1bc>
 80015fe:	2b47      	cmp	r3, #71	; 0x47
 8001600:	f43f af50 	beq.w	80014a4 <d_name+0x1bc>
 8001604:	68eb      	ldr	r3, [r5, #12]
 8001606:	781a      	ldrb	r2, [r3, #0]
 8001608:	2a5f      	cmp	r2, #95	; 0x5f
 800160a:	f47f af4b 	bne.w	80014a4 <d_name+0x1bc>
 800160e:	e73e      	b.n	800148e <d_name+0x1a6>
 8001610:	4628      	mov	r0, r5
 8001612:	3303      	adds	r3, #3
 8001614:	f840 3f0c 	str.w	r3, [r0, #12]!
 8001618:	f7fe feea 	bl	80003f0 <d_number.isra.0>
 800161c:	2800      	cmp	r0, #0
 800161e:	dac4      	bge.n	80015aa <d_name+0x2c2>
 8001620:	e67f      	b.n	8001322 <d_name+0x3a>
 8001622:	f8c9 7000 	str.w	r7, [r9]
 8001626:	2f00      	cmp	r7, #0
 8001628:	f43f ae7b 	beq.w	8001322 <d_name+0x3a>
 800162c:	f1b8 0f00 	cmp.w	r8, #0
 8001630:	d004      	beq.n	800163c <d_name+0x354>
 8001632:	9b03      	ldr	r3, [sp, #12]
 8001634:	f8cd 800c 	str.w	r8, [sp, #12]
 8001638:	f8c8 3004 	str.w	r3, [r8, #4]
 800163c:	7813      	ldrb	r3, [r2, #0]
 800163e:	2b45      	cmp	r3, #69	; 0x45
 8001640:	f47f ae6f 	bne.w	8001322 <d_name+0x3a>
 8001644:	3201      	adds	r2, #1
 8001646:	60ea      	str	r2, [r5, #12]
 8001648:	9a03      	ldr	r2, [sp, #12]
 800164a:	e672      	b.n	8001332 <d_name+0x4a>
 800164c:	100803ff 	.word	0x100803ff
 8001650:	08011e9c 	.word	0x08011e9c
 8001654:	08011e8c 	.word	0x08011e8c

08001658 <d_type>:
 8001658:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800165c:	68c2      	ldr	r2, [r0, #12]
 800165e:	b083      	sub	sp, #12
 8001660:	7813      	ldrb	r3, [r2, #0]
 8001662:	4604      	mov	r4, r0
 8001664:	2b72      	cmp	r3, #114	; 0x72
 8001666:	d058      	beq.n	800171a <d_type+0xc2>
 8001668:	2b56      	cmp	r3, #86	; 0x56
 800166a:	d056      	beq.n	800171a <d_type+0xc2>
 800166c:	2b4b      	cmp	r3, #75	; 0x4b
 800166e:	d054      	beq.n	800171a <d_type+0xc2>
 8001670:	2b44      	cmp	r3, #68	; 0x44
 8001672:	f000 809f 	beq.w	80017b4 <d_type+0x15c>
 8001676:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800167a:	294a      	cmp	r1, #74	; 0x4a
 800167c:	f200 808a 	bhi.w	8001794 <d_type+0x13c>
 8001680:	e8df f011 	tbh	[pc, r1, lsl #1]
 8001684:	012a012a 	.word	0x012a012a
 8001688:	012a012a 	.word	0x012a012a
 800168c:	012a012a 	.word	0x012a012a
 8001690:	012a012a 	.word	0x012a012a
 8001694:	012a012a 	.word	0x012a012a
 8001698:	00880088 	.word	0x00880088
 800169c:	00880088 	.word	0x00880088
 80016a0:	00880088 	.word	0x00880088
 80016a4:	020b0088 	.word	0x020b0088
 80016a8:	01520088 	.word	0x01520088
 80016ac:	00880088 	.word	0x00880088
 80016b0:	0160014c 	.word	0x0160014c
 80016b4:	00880088 	.word	0x00880088
 80016b8:	00880088 	.word	0x00880088
 80016bc:	016e0088 	.word	0x016e0088
 80016c0:	0186012a 	.word	0x0186012a
 80016c4:	008801c3 	.word	0x008801c3
 80016c8:	01a20194 	.word	0x01a20194
 80016cc:	01f301d1 	.word	0x01f301d1
 80016d0:	00880088 	.word	0x00880088
 80016d4:	00880088 	.word	0x00880088
 80016d8:	0088012a 	.word	0x0088012a
 80016dc:	00880088 	.word	0x00880088
 80016e0:	00880088 	.word	0x00880088
 80016e4:	010c0088 	.word	0x010c0088
 80016e8:	010c010c 	.word	0x010c010c
 80016ec:	010c010c 	.word	0x010c010c
 80016f0:	010c010c 	.word	0x010c010c
 80016f4:	010c010c 	.word	0x010c010c
 80016f8:	0088010c 	.word	0x0088010c
 80016fc:	010c010c 	.word	0x010c010c
 8001700:	010c010c 	.word	0x010c010c
 8001704:	00880088 	.word	0x00880088
 8001708:	010c0088 	.word	0x010c0088
 800170c:	013e010c 	.word	0x013e010c
 8001710:	010c010c 	.word	0x010c010c
 8001714:	010c010c 	.word	0x010c010c
 8001718:	010c      	.short	0x010c
 800171a:	2200      	movs	r2, #0
 800171c:	a901      	add	r1, sp, #4
 800171e:	4620      	mov	r0, r4
 8001720:	f7fe fd62 	bl	80001e8 <d_cv_qualifiers>
 8001724:	4605      	mov	r5, r0
 8001726:	2800      	cmp	r0, #0
 8001728:	d034      	beq.n	8001794 <d_type+0x13c>
 800172a:	68e3      	ldr	r3, [r4, #12]
 800172c:	4620      	mov	r0, r4
 800172e:	781b      	ldrb	r3, [r3, #0]
 8001730:	2b46      	cmp	r3, #70	; 0x46
 8001732:	d034      	beq.n	800179e <d_type+0x146>
 8001734:	f7ff ff90 	bl	8001658 <d_type>
 8001738:	6028      	str	r0, [r5, #0]
 800173a:	b358      	cbz	r0, 8001794 <d_type+0x13c>
 800173c:	7803      	ldrb	r3, [r0, #0]
 800173e:	3b1f      	subs	r3, #31
 8001740:	2b01      	cmp	r3, #1
 8001742:	d930      	bls.n	80017a6 <d_type+0x14e>
 8001744:	9a01      	ldr	r2, [sp, #4]
 8001746:	b32a      	cbz	r2, 8001794 <d_type+0x13c>
 8001748:	6a23      	ldr	r3, [r4, #32]
 800174a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800174c:	428b      	cmp	r3, r1
 800174e:	da21      	bge.n	8001794 <d_type+0x13c>
 8001750:	69e0      	ldr	r0, [r4, #28]
 8001752:	1c59      	adds	r1, r3, #1
 8001754:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8001758:	9d01      	ldr	r5, [sp, #4]
 800175a:	6221      	str	r1, [r4, #32]
 800175c:	4628      	mov	r0, r5
 800175e:	b003      	add	sp, #12
 8001760:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001764:	2301      	movs	r3, #1
 8001766:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8001768:	6343      	str	r3, [r0, #52]	; 0x34
 800176a:	f7ff fb5b 	bl	8000e24 <d_expression_1>
 800176e:	6365      	str	r5, [r4, #52]	; 0x34
 8001770:	4602      	mov	r2, r0
 8001772:	2300      	movs	r3, #0
 8001774:	2142      	movs	r1, #66	; 0x42
 8001776:	4620      	mov	r0, r4
 8001778:	f7fe fcea 	bl	8000150 <d_make_comp>
 800177c:	4605      	mov	r5, r0
 800177e:	9001      	str	r0, [sp, #4]
 8001780:	b140      	cbz	r0, 8001794 <d_type+0x13c>
 8001782:	68e3      	ldr	r3, [r4, #12]
 8001784:	781a      	ldrb	r2, [r3, #0]
 8001786:	b12a      	cbz	r2, 8001794 <d_type+0x13c>
 8001788:	1c5a      	adds	r2, r3, #1
 800178a:	60e2      	str	r2, [r4, #12]
 800178c:	781b      	ldrb	r3, [r3, #0]
 800178e:	2b45      	cmp	r3, #69	; 0x45
 8001790:	f000 80aa 	beq.w	80018e8 <d_type+0x290>
 8001794:	2500      	movs	r5, #0
 8001796:	4628      	mov	r0, r5
 8001798:	b003      	add	sp, #12
 800179a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800179e:	f000 fd4b 	bl	8002238 <d_function_type>
 80017a2:	6028      	str	r0, [r5, #0]
 80017a4:	e7c9      	b.n	800173a <d_type+0xe2>
 80017a6:	9a01      	ldr	r2, [sp, #4]
 80017a8:	6843      	ldr	r3, [r0, #4]
 80017aa:	6042      	str	r2, [r0, #4]
 80017ac:	682a      	ldr	r2, [r5, #0]
 80017ae:	9201      	str	r2, [sp, #4]
 80017b0:	602b      	str	r3, [r5, #0]
 80017b2:	e7c7      	b.n	8001744 <d_type+0xec>
 80017b4:	7853      	ldrb	r3, [r2, #1]
 80017b6:	2b78      	cmp	r3, #120	; 0x78
 80017b8:	d0af      	beq.n	800171a <d_type+0xc2>
 80017ba:	1c53      	adds	r3, r2, #1
 80017bc:	60c3      	str	r3, [r0, #12]
 80017be:	7853      	ldrb	r3, [r2, #1]
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d0e7      	beq.n	8001794 <d_type+0x13c>
 80017c4:	1c93      	adds	r3, r2, #2
 80017c6:	60c3      	str	r3, [r0, #12]
 80017c8:	7853      	ldrb	r3, [r2, #1]
 80017ca:	3b46      	subs	r3, #70	; 0x46
 80017cc:	2b30      	cmp	r3, #48	; 0x30
 80017ce:	d8e1      	bhi.n	8001794 <d_type+0x13c>
 80017d0:	a101      	add	r1, pc, #4	; (adr r1, 80017d8 <d_type+0x180>)
 80017d2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80017d6:	bf00      	nop
 80017d8:	08001cb1 	.word	0x08001cb1
 80017dc:	08001795 	.word	0x08001795
 80017e0:	08001795 	.word	0x08001795
 80017e4:	08001795 	.word	0x08001795
 80017e8:	08001795 	.word	0x08001795
 80017ec:	08001795 	.word	0x08001795
 80017f0:	08001795 	.word	0x08001795
 80017f4:	08001795 	.word	0x08001795
 80017f8:	08001795 	.word	0x08001795
 80017fc:	08001795 	.word	0x08001795
 8001800:	08001795 	.word	0x08001795
 8001804:	08001795 	.word	0x08001795
 8001808:	08001795 	.word	0x08001795
 800180c:	08001795 	.word	0x08001795
 8001810:	08001765 	.word	0x08001765
 8001814:	08001795 	.word	0x08001795
 8001818:	08001795 	.word	0x08001795
 800181c:	08001795 	.word	0x08001795
 8001820:	08001795 	.word	0x08001795
 8001824:	08001795 	.word	0x08001795
 8001828:	08001795 	.word	0x08001795
 800182c:	08001795 	.word	0x08001795
 8001830:	08001795 	.word	0x08001795
 8001834:	08001795 	.word	0x08001795
 8001838:	08001795 	.word	0x08001795
 800183c:	08001795 	.word	0x08001795
 8001840:	08001795 	.word	0x08001795
 8001844:	08001c87 	.word	0x08001c87
 8001848:	08001795 	.word	0x08001795
 800184c:	08001c5d 	.word	0x08001c5d
 8001850:	08001c3f 	.word	0x08001c3f
 8001854:	08001c17 	.word	0x08001c17
 8001858:	08001beb 	.word	0x08001beb
 800185c:	08001795 	.word	0x08001795
 8001860:	08001bbf 	.word	0x08001bbf
 8001864:	08001b9d 	.word	0x08001b9d
 8001868:	08001795 	.word	0x08001795
 800186c:	08001795 	.word	0x08001795
 8001870:	08001795 	.word	0x08001795
 8001874:	08001795 	.word	0x08001795
 8001878:	08001b65 	.word	0x08001b65
 800187c:	08001795 	.word	0x08001795
 8001880:	08001b4f 	.word	0x08001b4f
 8001884:	08001795 	.word	0x08001795
 8001888:	08001795 	.word	0x08001795
 800188c:	08001b23 	.word	0x08001b23
 8001890:	08001765 	.word	0x08001765
 8001894:	08001795 	.word	0x08001795
 8001898:	08001aed 	.word	0x08001aed
 800189c:	6960      	ldr	r0, [r4, #20]
 800189e:	69a5      	ldr	r5, [r4, #24]
 80018a0:	3b61      	subs	r3, #97	; 0x61
 80018a2:	49bb      	ldr	r1, [pc, #748]	; (8001b90 <d_type+0x538>)
 80018a4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80018a8:	42a8      	cmp	r0, r5
 80018aa:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80018ae:	f280 8231 	bge.w	8001d14 <d_type+0x6bc>
 80018b2:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 80018b6:	6926      	ldr	r6, [r4, #16]
 80018b8:	0089      	lsls	r1, r1, #2
 80018ba:	3001      	adds	r0, #1
 80018bc:	1875      	adds	r5, r6, r1
 80018be:	6160      	str	r0, [r4, #20]
 80018c0:	f000 8228 	beq.w	8001d14 <d_type+0x6bc>
 80018c4:	2027      	movs	r0, #39	; 0x27
 80018c6:	5470      	strb	r0, [r6, r1]
 80018c8:	606b      	str	r3, [r5, #4]
 80018ca:	6859      	ldr	r1, [r3, #4]
 80018cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018ce:	3201      	adds	r2, #1
 80018d0:	440b      	add	r3, r1
 80018d2:	60e2      	str	r2, [r4, #12]
 80018d4:	6323      	str	r3, [r4, #48]	; 0x30
 80018d6:	e75e      	b.n	8001796 <d_type+0x13e>
 80018d8:	4620      	mov	r0, r4
 80018da:	f7ff fd05 	bl	80012e8 <d_name>
 80018de:	4605      	mov	r5, r0
 80018e0:	9001      	str	r0, [sp, #4]
 80018e2:	2d00      	cmp	r5, #0
 80018e4:	f43f af56 	beq.w	8001794 <d_type+0x13c>
 80018e8:	6a23      	ldr	r3, [r4, #32]
 80018ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80018ec:	4293      	cmp	r3, r2
 80018ee:	f6bf af51 	bge.w	8001794 <d_type+0x13c>
 80018f2:	69e1      	ldr	r1, [r4, #28]
 80018f4:	1c5a      	adds	r2, r3, #1
 80018f6:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 80018fa:	9d01      	ldr	r5, [sp, #4]
 80018fc:	6222      	str	r2, [r4, #32]
 80018fe:	e74a      	b.n	8001796 <d_type+0x13e>
 8001900:	3201      	adds	r2, #1
 8001902:	60e2      	str	r2, [r4, #12]
 8001904:	4620      	mov	r0, r4
 8001906:	f7fe fdf3 	bl	80004f0 <d_source_name>
 800190a:	2300      	movs	r3, #0
 800190c:	4602      	mov	r2, r0
 800190e:	2128      	movs	r1, #40	; 0x28
 8001910:	4620      	mov	r0, r4
 8001912:	f7fe fc1d 	bl	8000150 <d_make_comp>
 8001916:	4605      	mov	r5, r0
 8001918:	9001      	str	r0, [sp, #4]
 800191a:	e7e2      	b.n	80018e2 <d_type+0x28a>
 800191c:	4620      	mov	r0, r4
 800191e:	f000 fc8b 	bl	8002238 <d_function_type>
 8001922:	4605      	mov	r5, r0
 8001924:	9001      	str	r0, [sp, #4]
 8001926:	e7dc      	b.n	80018e2 <d_type+0x28a>
 8001928:	3201      	adds	r2, #1
 800192a:	60e2      	str	r2, [r4, #12]
 800192c:	4620      	mov	r0, r4
 800192e:	f7ff fe93 	bl	8001658 <d_type>
 8001932:	2300      	movs	r3, #0
 8001934:	4602      	mov	r2, r0
 8001936:	2125      	movs	r1, #37	; 0x25
 8001938:	4620      	mov	r0, r4
 800193a:	f7fe fc09 	bl	8000150 <d_make_comp>
 800193e:	4605      	mov	r5, r0
 8001940:	9001      	str	r0, [sp, #4]
 8001942:	e7ce      	b.n	80018e2 <d_type+0x28a>
 8001944:	3201      	adds	r2, #1
 8001946:	60e2      	str	r2, [r4, #12]
 8001948:	4620      	mov	r0, r4
 800194a:	f7ff fe85 	bl	8001658 <d_type>
 800194e:	2300      	movs	r3, #0
 8001950:	4602      	mov	r2, r0
 8001952:	2126      	movs	r1, #38	; 0x26
 8001954:	4620      	mov	r0, r4
 8001956:	f7fe fbfb 	bl	8000150 <d_make_comp>
 800195a:	4605      	mov	r5, r0
 800195c:	9001      	str	r0, [sp, #4]
 800195e:	e7c0      	b.n	80018e2 <d_type+0x28a>
 8001960:	3201      	adds	r2, #1
 8001962:	60e2      	str	r2, [r4, #12]
 8001964:	4620      	mov	r0, r4
 8001966:	f7ff fe77 	bl	8001658 <d_type>
 800196a:	4605      	mov	r5, r0
 800196c:	2800      	cmp	r0, #0
 800196e:	f000 80bb 	beq.w	8001ae8 <d_type+0x490>
 8001972:	4620      	mov	r0, r4
 8001974:	f7ff fe70 	bl	8001658 <d_type>
 8001978:	2800      	cmp	r0, #0
 800197a:	f000 80b5 	beq.w	8001ae8 <d_type+0x490>
 800197e:	4603      	mov	r3, r0
 8001980:	462a      	mov	r2, r5
 8001982:	212b      	movs	r1, #43	; 0x2b
 8001984:	4620      	mov	r0, r4
 8001986:	f7fe fbe3 	bl	8000150 <d_make_comp>
 800198a:	4605      	mov	r5, r0
 800198c:	9501      	str	r5, [sp, #4]
 800198e:	e7a8      	b.n	80018e2 <d_type+0x28a>
 8001990:	3201      	adds	r2, #1
 8001992:	60e2      	str	r2, [r4, #12]
 8001994:	4620      	mov	r0, r4
 8001996:	f7ff fe5f 	bl	8001658 <d_type>
 800199a:	2300      	movs	r3, #0
 800199c:	4602      	mov	r2, r0
 800199e:	2124      	movs	r1, #36	; 0x24
 80019a0:	4620      	mov	r0, r4
 80019a2:	f7fe fbd5 	bl	8000150 <d_make_comp>
 80019a6:	4605      	mov	r5, r0
 80019a8:	9001      	str	r0, [sp, #4]
 80019aa:	e79a      	b.n	80018e2 <d_type+0x28a>
 80019ac:	3201      	adds	r2, #1
 80019ae:	60e2      	str	r2, [r4, #12]
 80019b0:	4620      	mov	r0, r4
 80019b2:	f7ff fe51 	bl	8001658 <d_type>
 80019b6:	2300      	movs	r3, #0
 80019b8:	4602      	mov	r2, r0
 80019ba:	2123      	movs	r1, #35	; 0x23
 80019bc:	4620      	mov	r0, r4
 80019be:	f7fe fbc7 	bl	8000150 <d_make_comp>
 80019c2:	4605      	mov	r5, r0
 80019c4:	9001      	str	r0, [sp, #4]
 80019c6:	e78c      	b.n	80018e2 <d_type+0x28a>
 80019c8:	7853      	ldrb	r3, [r2, #1]
 80019ca:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80019ce:	2a09      	cmp	r2, #9
 80019d0:	d905      	bls.n	80019de <d_type+0x386>
 80019d2:	2b5f      	cmp	r3, #95	; 0x5f
 80019d4:	d003      	beq.n	80019de <d_type+0x386>
 80019d6:	3b41      	subs	r3, #65	; 0x41
 80019d8:	2b19      	cmp	r3, #25
 80019da:	f200 81ba 	bhi.w	8001d52 <d_type+0x6fa>
 80019de:	2100      	movs	r1, #0
 80019e0:	4620      	mov	r0, r4
 80019e2:	f7fe fdfd 	bl	80005e0 <d_substitution>
 80019e6:	68e3      	ldr	r3, [r4, #12]
 80019e8:	9001      	str	r0, [sp, #4]
 80019ea:	781b      	ldrb	r3, [r3, #0]
 80019ec:	4605      	mov	r5, r0
 80019ee:	2b49      	cmp	r3, #73	; 0x49
 80019f0:	f47f aed1 	bne.w	8001796 <d_type+0x13e>
 80019f4:	4620      	mov	r0, r4
 80019f6:	f7ff fc6d 	bl	80012d4 <d_template_args>
 80019fa:	462a      	mov	r2, r5
 80019fc:	4603      	mov	r3, r0
 80019fe:	2104      	movs	r1, #4
 8001a00:	4620      	mov	r0, r4
 8001a02:	f7fe fba5 	bl	8000150 <d_make_comp>
 8001a06:	4605      	mov	r5, r0
 8001a08:	e7c0      	b.n	800198c <d_type+0x334>
 8001a0a:	3201      	adds	r2, #1
 8001a0c:	60e2      	str	r2, [r4, #12]
 8001a0e:	4620      	mov	r0, r4
 8001a10:	f7ff fe22 	bl	8001658 <d_type>
 8001a14:	2300      	movs	r3, #0
 8001a16:	4602      	mov	r2, r0
 8001a18:	2122      	movs	r1, #34	; 0x22
 8001a1a:	4620      	mov	r0, r4
 8001a1c:	f7fe fb98 	bl	8000150 <d_make_comp>
 8001a20:	4605      	mov	r5, r0
 8001a22:	9001      	str	r0, [sp, #4]
 8001a24:	e75d      	b.n	80018e2 <d_type+0x28a>
 8001a26:	4620      	mov	r0, r4
 8001a28:	f7fe fd40 	bl	80004ac <d_template_param>
 8001a2c:	68e6      	ldr	r6, [r4, #12]
 8001a2e:	9001      	str	r0, [sp, #4]
 8001a30:	7833      	ldrb	r3, [r6, #0]
 8001a32:	4605      	mov	r5, r0
 8001a34:	2b49      	cmp	r3, #73	; 0x49
 8001a36:	f47f af54 	bne.w	80018e2 <d_type+0x28a>
 8001a3a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	f040 81a0 	bne.w	8001d82 <d_type+0x72a>
 8001a42:	2800      	cmp	r0, #0
 8001a44:	f43f aea6 	beq.w	8001794 <d_type+0x13c>
 8001a48:	6a23      	ldr	r3, [r4, #32]
 8001a4a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001a4c:	4293      	cmp	r3, r2
 8001a4e:	f6bf aea1 	bge.w	8001794 <d_type+0x13c>
 8001a52:	69e1      	ldr	r1, [r4, #28]
 8001a54:	1c5a      	adds	r2, r3, #1
 8001a56:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8001a5a:	6222      	str	r2, [r4, #32]
 8001a5c:	4620      	mov	r0, r4
 8001a5e:	9d01      	ldr	r5, [sp, #4]
 8001a60:	f7ff fc38 	bl	80012d4 <d_template_args>
 8001a64:	462a      	mov	r2, r5
 8001a66:	4603      	mov	r3, r0
 8001a68:	e7c9      	b.n	80019fe <d_type+0x3a6>
 8001a6a:	3201      	adds	r2, #1
 8001a6c:	60e2      	str	r2, [r4, #12]
 8001a6e:	4620      	mov	r0, r4
 8001a70:	f7fe fd3e 	bl	80004f0 <d_source_name>
 8001a74:	68e3      	ldr	r3, [r4, #12]
 8001a76:	9001      	str	r0, [sp, #4]
 8001a78:	781b      	ldrb	r3, [r3, #0]
 8001a7a:	4605      	mov	r5, r0
 8001a7c:	2b49      	cmp	r3, #73	; 0x49
 8001a7e:	f000 8175 	beq.w	8001d6c <d_type+0x714>
 8001a82:	4620      	mov	r0, r4
 8001a84:	f7ff fde8 	bl	8001658 <d_type>
 8001a88:	9b01      	ldr	r3, [sp, #4]
 8001a8a:	4602      	mov	r2, r0
 8001a8c:	2121      	movs	r1, #33	; 0x21
 8001a8e:	4620      	mov	r0, r4
 8001a90:	f7fe fb5e 	bl	8000150 <d_make_comp>
 8001a94:	4605      	mov	r5, r0
 8001a96:	9001      	str	r0, [sp, #4]
 8001a98:	e723      	b.n	80018e2 <d_type+0x28a>
 8001a9a:	1c51      	adds	r1, r2, #1
 8001a9c:	60e1      	str	r1, [r4, #12]
 8001a9e:	7853      	ldrb	r3, [r2, #1]
 8001aa0:	2b5f      	cmp	r3, #95	; 0x5f
 8001aa2:	f000 813b 	beq.w	8001d1c <d_type+0x6c4>
 8001aa6:	3b30      	subs	r3, #48	; 0x30
 8001aa8:	2b09      	cmp	r3, #9
 8001aaa:	f200 8145 	bhi.w	8001d38 <d_type+0x6e0>
 8001aae:	460b      	mov	r3, r1
 8001ab0:	3301      	adds	r3, #1
 8001ab2:	60e3      	str	r3, [r4, #12]
 8001ab4:	781a      	ldrb	r2, [r3, #0]
 8001ab6:	3a30      	subs	r2, #48	; 0x30
 8001ab8:	2a09      	cmp	r2, #9
 8001aba:	d9f9      	bls.n	8001ab0 <d_type+0x458>
 8001abc:	6962      	ldr	r2, [r4, #20]
 8001abe:	69a0      	ldr	r0, [r4, #24]
 8001ac0:	4282      	cmp	r2, r0
 8001ac2:	da11      	bge.n	8001ae8 <d_type+0x490>
 8001ac4:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8001ac8:	6926      	ldr	r6, [r4, #16]
 8001aca:	0080      	lsls	r0, r0, #2
 8001acc:	3201      	adds	r2, #1
 8001ace:	1835      	adds	r5, r6, r0
 8001ad0:	6162      	str	r2, [r4, #20]
 8001ad2:	d009      	beq.n	8001ae8 <d_type+0x490>
 8001ad4:	1a5a      	subs	r2, r3, r1
 8001ad6:	d007      	beq.n	8001ae8 <d_type+0x490>
 8001ad8:	2700      	movs	r7, #0
 8001ada:	5437      	strb	r7, [r6, r0]
 8001adc:	6069      	str	r1, [r5, #4]
 8001ade:	60aa      	str	r2, [r5, #8]
 8001ae0:	781a      	ldrb	r2, [r3, #0]
 8001ae2:	2a5f      	cmp	r2, #95	; 0x5f
 8001ae4:	f000 8187 	beq.w	8001df6 <d_type+0x79e>
 8001ae8:	2500      	movs	r5, #0
 8001aea:	e74f      	b.n	800198c <d_type+0x334>
 8001aec:	7893      	ldrb	r3, [r2, #2]
 8001aee:	2b5f      	cmp	r3, #95	; 0x5f
 8001af0:	f000 8177 	beq.w	8001de2 <d_type+0x78a>
 8001af4:	f7fe fca6 	bl	8000444 <d_number_component>
 8001af8:	4605      	mov	r5, r0
 8001afa:	2d00      	cmp	r5, #0
 8001afc:	f43f af46 	beq.w	800198c <d_type+0x334>
 8001b00:	68e3      	ldr	r3, [r4, #12]
 8001b02:	781a      	ldrb	r2, [r3, #0]
 8001b04:	2a5f      	cmp	r2, #95	; 0x5f
 8001b06:	d1ef      	bne.n	8001ae8 <d_type+0x490>
 8001b08:	3301      	adds	r3, #1
 8001b0a:	60e3      	str	r3, [r4, #12]
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	f7ff fda3 	bl	8001658 <d_type>
 8001b12:	462a      	mov	r2, r5
 8001b14:	4603      	mov	r3, r0
 8001b16:	212d      	movs	r1, #45	; 0x2d
 8001b18:	4620      	mov	r0, r4
 8001b1a:	f7fe fb19 	bl	8000150 <d_make_comp>
 8001b1e:	4605      	mov	r5, r0
 8001b20:	e734      	b.n	800198c <d_type+0x334>
 8001b22:	6942      	ldr	r2, [r0, #20]
 8001b24:	6983      	ldr	r3, [r0, #24]
 8001b26:	429a      	cmp	r2, r3
 8001b28:	f280 80f4 	bge.w	8001d14 <d_type+0x6bc>
 8001b2c:	230c      	movs	r3, #12
 8001b2e:	fb03 f302 	mul.w	r3, r3, r2
 8001b32:	6901      	ldr	r1, [r0, #16]
 8001b34:	3201      	adds	r2, #1
 8001b36:	18cd      	adds	r5, r1, r3
 8001b38:	6142      	str	r2, [r0, #20]
 8001b3a:	f000 80eb 	beq.w	8001d14 <d_type+0x6bc>
 8001b3e:	2027      	movs	r0, #39	; 0x27
 8001b40:	4a14      	ldr	r2, [pc, #80]	; (8001b94 <d_type+0x53c>)
 8001b42:	54c8      	strb	r0, [r1, r3]
 8001b44:	606a      	str	r2, [r5, #4]
 8001b46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b48:	3308      	adds	r3, #8
 8001b4a:	6323      	str	r3, [r4, #48]	; 0x30
 8001b4c:	e623      	b.n	8001796 <d_type+0x13e>
 8001b4e:	f7ff fd83 	bl	8001658 <d_type>
 8001b52:	2300      	movs	r3, #0
 8001b54:	4602      	mov	r2, r0
 8001b56:	214a      	movs	r1, #74	; 0x4a
 8001b58:	4620      	mov	r0, r4
 8001b5a:	f7fe faf9 	bl	8000150 <d_make_comp>
 8001b5e:	4605      	mov	r5, r0
 8001b60:	9001      	str	r0, [sp, #4]
 8001b62:	e6be      	b.n	80018e2 <d_type+0x28a>
 8001b64:	6942      	ldr	r2, [r0, #20]
 8001b66:	6983      	ldr	r3, [r0, #24]
 8001b68:	429a      	cmp	r2, r3
 8001b6a:	f280 80d3 	bge.w	8001d14 <d_type+0x6bc>
 8001b6e:	230c      	movs	r3, #12
 8001b70:	fb03 f302 	mul.w	r3, r3, r2
 8001b74:	6901      	ldr	r1, [r0, #16]
 8001b76:	3201      	adds	r2, #1
 8001b78:	18cd      	adds	r5, r1, r3
 8001b7a:	6142      	str	r2, [r0, #20]
 8001b7c:	f000 80ca 	beq.w	8001d14 <d_type+0x6bc>
 8001b80:	2027      	movs	r0, #39	; 0x27
 8001b82:	4a05      	ldr	r2, [pc, #20]	; (8001b98 <d_type+0x540>)
 8001b84:	54c8      	strb	r0, [r1, r3]
 8001b86:	606a      	str	r2, [r5, #4]
 8001b88:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b8a:	3311      	adds	r3, #17
 8001b8c:	6323      	str	r3, [r4, #48]	; 0x30
 8001b8e:	e602      	b.n	8001796 <d_type+0x13e>
 8001b90:	080114ec 	.word	0x080114ec
 8001b94:	08011744 	.word	0x08011744
 8001b98:	0801176c 	.word	0x0801176c
 8001b9c:	6942      	ldr	r2, [r0, #20]
 8001b9e:	6983      	ldr	r3, [r0, #24]
 8001ba0:	429a      	cmp	r2, r3
 8001ba2:	f280 80b7 	bge.w	8001d14 <d_type+0x6bc>
 8001ba6:	230c      	movs	r3, #12
 8001ba8:	fb03 f302 	mul.w	r3, r3, r2
 8001bac:	6901      	ldr	r1, [r0, #16]
 8001bae:	3201      	adds	r2, #1
 8001bb0:	18cd      	adds	r5, r1, r3
 8001bb2:	6142      	str	r2, [r0, #20]
 8001bb4:	f000 80ae 	beq.w	8001d14 <d_type+0x6bc>
 8001bb8:	2027      	movs	r0, #39	; 0x27
 8001bba:	4a90      	ldr	r2, [pc, #576]	; (8001dfc <d_type+0x7a4>)
 8001bbc:	e7c1      	b.n	8001b42 <d_type+0x4ea>
 8001bbe:	6942      	ldr	r2, [r0, #20]
 8001bc0:	6983      	ldr	r3, [r0, #24]
 8001bc2:	429a      	cmp	r2, r3
 8001bc4:	f280 80a6 	bge.w	8001d14 <d_type+0x6bc>
 8001bc8:	230c      	movs	r3, #12
 8001bca:	fb03 f302 	mul.w	r3, r3, r2
 8001bce:	6901      	ldr	r1, [r0, #16]
 8001bd0:	3201      	adds	r2, #1
 8001bd2:	18cd      	adds	r5, r1, r3
 8001bd4:	6142      	str	r2, [r0, #20]
 8001bd6:	f000 809d 	beq.w	8001d14 <d_type+0x6bc>
 8001bda:	2027      	movs	r0, #39	; 0x27
 8001bdc:	4a88      	ldr	r2, [pc, #544]	; (8001e00 <d_type+0x7a8>)
 8001bde:	54c8      	strb	r0, [r1, r3]
 8001be0:	606a      	str	r2, [r5, #4]
 8001be2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001be4:	3304      	adds	r3, #4
 8001be6:	6323      	str	r3, [r4, #48]	; 0x30
 8001be8:	e5d5      	b.n	8001796 <d_type+0x13e>
 8001bea:	6942      	ldr	r2, [r0, #20]
 8001bec:	6983      	ldr	r3, [r0, #24]
 8001bee:	429a      	cmp	r2, r3
 8001bf0:	f280 8090 	bge.w	8001d14 <d_type+0x6bc>
 8001bf4:	230c      	movs	r3, #12
 8001bf6:	fb03 f302 	mul.w	r3, r3, r2
 8001bfa:	6901      	ldr	r1, [r0, #16]
 8001bfc:	3201      	adds	r2, #1
 8001bfe:	18cd      	adds	r5, r1, r3
 8001c00:	6142      	str	r2, [r0, #20]
 8001c02:	f000 8087 	beq.w	8001d14 <d_type+0x6bc>
 8001c06:	2027      	movs	r0, #39	; 0x27
 8001c08:	4a7e      	ldr	r2, [pc, #504]	; (8001e04 <d_type+0x7ac>)
 8001c0a:	54c8      	strb	r0, [r1, r3]
 8001c0c:	606a      	str	r2, [r5, #4]
 8001c0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c10:	3309      	adds	r3, #9
 8001c12:	6323      	str	r3, [r4, #48]	; 0x30
 8001c14:	e5bf      	b.n	8001796 <d_type+0x13e>
 8001c16:	6942      	ldr	r2, [r0, #20]
 8001c18:	6983      	ldr	r3, [r0, #24]
 8001c1a:	429a      	cmp	r2, r3
 8001c1c:	da7a      	bge.n	8001d14 <d_type+0x6bc>
 8001c1e:	230c      	movs	r3, #12
 8001c20:	fb03 f302 	mul.w	r3, r3, r2
 8001c24:	6901      	ldr	r1, [r0, #16]
 8001c26:	3201      	adds	r2, #1
 8001c28:	18cd      	adds	r5, r1, r3
 8001c2a:	6142      	str	r2, [r0, #20]
 8001c2c:	d072      	beq.n	8001d14 <d_type+0x6bc>
 8001c2e:	2027      	movs	r0, #39	; 0x27
 8001c30:	4a75      	ldr	r2, [pc, #468]	; (8001e08 <d_type+0x7b0>)
 8001c32:	54c8      	strb	r0, [r1, r3]
 8001c34:	606a      	str	r2, [r5, #4]
 8001c36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c38:	330a      	adds	r3, #10
 8001c3a:	6323      	str	r3, [r4, #48]	; 0x30
 8001c3c:	e5ab      	b.n	8001796 <d_type+0x13e>
 8001c3e:	6942      	ldr	r2, [r0, #20]
 8001c40:	6983      	ldr	r3, [r0, #24]
 8001c42:	429a      	cmp	r2, r3
 8001c44:	da66      	bge.n	8001d14 <d_type+0x6bc>
 8001c46:	230c      	movs	r3, #12
 8001c48:	fb03 f302 	mul.w	r3, r3, r2
 8001c4c:	6901      	ldr	r1, [r0, #16]
 8001c4e:	3201      	adds	r2, #1
 8001c50:	18cd      	adds	r5, r1, r3
 8001c52:	6142      	str	r2, [r0, #20]
 8001c54:	d05e      	beq.n	8001d14 <d_type+0x6bc>
 8001c56:	2027      	movs	r0, #39	; 0x27
 8001c58:	4a6c      	ldr	r2, [pc, #432]	; (8001e0c <d_type+0x7b4>)
 8001c5a:	e7d6      	b.n	8001c0a <d_type+0x5b2>
 8001c5c:	6942      	ldr	r2, [r0, #20]
 8001c5e:	6983      	ldr	r3, [r0, #24]
 8001c60:	429a      	cmp	r2, r3
 8001c62:	f6bf ad97 	bge.w	8001794 <d_type+0x13c>
 8001c66:	230c      	movs	r3, #12
 8001c68:	fb03 f302 	mul.w	r3, r3, r2
 8001c6c:	6901      	ldr	r1, [r0, #16]
 8001c6e:	3201      	adds	r2, #1
 8001c70:	18cd      	adds	r5, r1, r3
 8001c72:	6142      	str	r2, [r0, #20]
 8001c74:	f43f ad8f 	beq.w	8001796 <d_type+0x13e>
 8001c78:	2400      	movs	r4, #0
 8001c7a:	200e      	movs	r0, #14
 8001c7c:	4a64      	ldr	r2, [pc, #400]	; (8001e10 <d_type+0x7b8>)
 8001c7e:	54cc      	strb	r4, [r1, r3]
 8001c80:	60a8      	str	r0, [r5, #8]
 8001c82:	606a      	str	r2, [r5, #4]
 8001c84:	e587      	b.n	8001796 <d_type+0x13e>
 8001c86:	6942      	ldr	r2, [r0, #20]
 8001c88:	6983      	ldr	r3, [r0, #24]
 8001c8a:	429a      	cmp	r2, r3
 8001c8c:	f6bf ad82 	bge.w	8001794 <d_type+0x13c>
 8001c90:	230c      	movs	r3, #12
 8001c92:	fb03 f302 	mul.w	r3, r3, r2
 8001c96:	6901      	ldr	r1, [r0, #16]
 8001c98:	3201      	adds	r2, #1
 8001c9a:	18cd      	adds	r5, r1, r3
 8001c9c:	6142      	str	r2, [r0, #20]
 8001c9e:	f43f ad7a 	beq.w	8001796 <d_type+0x13e>
 8001ca2:	2400      	movs	r4, #0
 8001ca4:	2004      	movs	r0, #4
 8001ca6:	4a5b      	ldr	r2, [pc, #364]	; (8001e14 <d_type+0x7bc>)
 8001ca8:	54cc      	strb	r4, [r1, r3]
 8001caa:	60a8      	str	r0, [r5, #8]
 8001cac:	606a      	str	r2, [r5, #4]
 8001cae:	e572      	b.n	8001796 <d_type+0x13e>
 8001cb0:	6943      	ldr	r3, [r0, #20]
 8001cb2:	6981      	ldr	r1, [r0, #24]
 8001cb4:	428b      	cmp	r3, r1
 8001cb6:	da7a      	bge.n	8001dae <d_type+0x756>
 8001cb8:	262c      	movs	r6, #44	; 0x2c
 8001cba:	6900      	ldr	r0, [r0, #16]
 8001cbc:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8001cc0:	0089      	lsls	r1, r1, #2
 8001cc2:	3301      	adds	r3, #1
 8001cc4:	1845      	adds	r5, r0, r1
 8001cc6:	6163      	str	r3, [r4, #20]
 8001cc8:	9501      	str	r5, [sp, #4]
 8001cca:	5446      	strb	r6, [r0, r1]
 8001ccc:	7893      	ldrb	r3, [r2, #2]
 8001cce:	3b30      	subs	r3, #48	; 0x30
 8001cd0:	b2db      	uxtb	r3, r3
 8001cd2:	2b09      	cmp	r3, #9
 8001cd4:	bf94      	ite	ls
 8001cd6:	2301      	movls	r3, #1
 8001cd8:	2300      	movhi	r3, #0
 8001cda:	812b      	strh	r3, [r5, #8]
 8001cdc:	d97b      	bls.n	8001dd6 <d_type+0x77e>
 8001cde:	4620      	mov	r0, r4
 8001ce0:	f7ff fcba 	bl	8001658 <d_type>
 8001ce4:	9b01      	ldr	r3, [sp, #4]
 8001ce6:	6068      	str	r0, [r5, #4]
 8001ce8:	685b      	ldr	r3, [r3, #4]
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	f43f ad52 	beq.w	8001794 <d_type+0x13c>
 8001cf0:	f104 000c 	add.w	r0, r4, #12
 8001cf4:	f7fe fb7c 	bl	80003f0 <d_number.isra.0>
 8001cf8:	68e2      	ldr	r2, [r4, #12]
 8001cfa:	7813      	ldrb	r3, [r2, #0]
 8001cfc:	b113      	cbz	r3, 8001d04 <d_type+0x6ac>
 8001cfe:	1c53      	adds	r3, r2, #1
 8001d00:	60e3      	str	r3, [r4, #12]
 8001d02:	7813      	ldrb	r3, [r2, #0]
 8001d04:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
 8001d08:	fab3 f383 	clz	r3, r3
 8001d0c:	9d01      	ldr	r5, [sp, #4]
 8001d0e:	095b      	lsrs	r3, r3, #5
 8001d10:	816b      	strh	r3, [r5, #10]
 8001d12:	e540      	b.n	8001796 <d_type+0x13e>
 8001d14:	2300      	movs	r3, #0
 8001d16:	9301      	str	r3, [sp, #4]
 8001d18:	685b      	ldr	r3, [r3, #4]
 8001d1a:	deff      	udf	#255	; 0xff
 8001d1c:	2500      	movs	r5, #0
 8001d1e:	3101      	adds	r1, #1
 8001d20:	60e1      	str	r1, [r4, #12]
 8001d22:	4620      	mov	r0, r4
 8001d24:	f7ff fc98 	bl	8001658 <d_type>
 8001d28:	462a      	mov	r2, r5
 8001d2a:	4603      	mov	r3, r0
 8001d2c:	212a      	movs	r1, #42	; 0x2a
 8001d2e:	4620      	mov	r0, r4
 8001d30:	f7fe fa0e 	bl	8000150 <d_make_comp>
 8001d34:	4605      	mov	r5, r0
 8001d36:	e629      	b.n	800198c <d_type+0x334>
 8001d38:	2301      	movs	r3, #1
 8001d3a:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8001d3c:	4620      	mov	r0, r4
 8001d3e:	6363      	str	r3, [r4, #52]	; 0x34
 8001d40:	f7ff f870 	bl	8000e24 <d_expression_1>
 8001d44:	6365      	str	r5, [r4, #52]	; 0x34
 8001d46:	4605      	mov	r5, r0
 8001d48:	2800      	cmp	r0, #0
 8001d4a:	f43f aecd 	beq.w	8001ae8 <d_type+0x490>
 8001d4e:	68e3      	ldr	r3, [r4, #12]
 8001d50:	e6c6      	b.n	8001ae0 <d_type+0x488>
 8001d52:	4620      	mov	r0, r4
 8001d54:	f7ff fac8 	bl	80012e8 <d_name>
 8001d58:	4605      	mov	r5, r0
 8001d5a:	9001      	str	r0, [sp, #4]
 8001d5c:	2800      	cmp	r0, #0
 8001d5e:	f43f ad19 	beq.w	8001794 <d_type+0x13c>
 8001d62:	7803      	ldrb	r3, [r0, #0]
 8001d64:	2b18      	cmp	r3, #24
 8001d66:	f47f adbf 	bne.w	80018e8 <d_type+0x290>
 8001d6a:	e514      	b.n	8001796 <d_type+0x13e>
 8001d6c:	4620      	mov	r0, r4
 8001d6e:	f7ff fab1 	bl	80012d4 <d_template_args>
 8001d72:	462a      	mov	r2, r5
 8001d74:	4603      	mov	r3, r0
 8001d76:	2104      	movs	r1, #4
 8001d78:	4620      	mov	r0, r4
 8001d7a:	f7fe f9e9 	bl	8000150 <d_make_comp>
 8001d7e:	9001      	str	r0, [sp, #4]
 8001d80:	e67f      	b.n	8001a82 <d_type+0x42a>
 8001d82:	4620      	mov	r0, r4
 8001d84:	f8d4 9014 	ldr.w	r9, [r4, #20]
 8001d88:	f8d4 8020 	ldr.w	r8, [r4, #32]
 8001d8c:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8001d8e:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8001d90:	f7ff faa0 	bl	80012d4 <d_template_args>
 8001d94:	68e2      	ldr	r2, [r4, #12]
 8001d96:	7812      	ldrb	r2, [r2, #0]
 8001d98:	2a49      	cmp	r2, #73	; 0x49
 8001d9a:	d00b      	beq.n	8001db4 <d_type+0x75c>
 8001d9c:	6325      	str	r5, [r4, #48]	; 0x30
 8001d9e:	60e6      	str	r6, [r4, #12]
 8001da0:	f8c4 9014 	str.w	r9, [r4, #20]
 8001da4:	f8c4 8020 	str.w	r8, [r4, #32]
 8001da8:	62a7      	str	r7, [r4, #40]	; 0x28
 8001daa:	9d01      	ldr	r5, [sp, #4]
 8001dac:	e599      	b.n	80018e2 <d_type+0x28a>
 8001dae:	2300      	movs	r3, #0
 8001db0:	701b      	strb	r3, [r3, #0]
 8001db2:	deff      	udf	#255	; 0xff
 8001db4:	9b01      	ldr	r3, [sp, #4]
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	f43f acec 	beq.w	8001794 <d_type+0x13c>
 8001dbc:	6a22      	ldr	r2, [r4, #32]
 8001dbe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001dc0:	428a      	cmp	r2, r1
 8001dc2:	f6bf ace7 	bge.w	8001794 <d_type+0x13c>
 8001dc6:	69e5      	ldr	r5, [r4, #28]
 8001dc8:	1c51      	adds	r1, r2, #1
 8001dca:	f845 3022 	str.w	r3, [r5, r2, lsl #2]
 8001dce:	9a01      	ldr	r2, [sp, #4]
 8001dd0:	4603      	mov	r3, r0
 8001dd2:	6221      	str	r1, [r4, #32]
 8001dd4:	e613      	b.n	80019fe <d_type+0x3a6>
 8001dd6:	f104 000c 	add.w	r0, r4, #12
 8001dda:	f7fe fb09 	bl	80003f0 <d_number.isra.0>
 8001dde:	9d01      	ldr	r5, [sp, #4]
 8001de0:	e77d      	b.n	8001cde <d_type+0x686>
 8001de2:	2301      	movs	r3, #1
 8001de4:	3203      	adds	r2, #3
 8001de6:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8001de8:	60c2      	str	r2, [r0, #12]
 8001dea:	6343      	str	r3, [r0, #52]	; 0x34
 8001dec:	f7ff f81a 	bl	8000e24 <d_expression_1>
 8001df0:	6366      	str	r6, [r4, #52]	; 0x34
 8001df2:	4605      	mov	r5, r0
 8001df4:	e681      	b.n	8001afa <d_type+0x4a2>
 8001df6:	4619      	mov	r1, r3
 8001df8:	e791      	b.n	8001d1e <d_type+0x6c6>
 8001dfa:	bf00      	nop
 8001dfc:	08011758 	.word	0x08011758
 8001e00:	08011730 	.word	0x08011730
 8001e04:	080116f4 	.word	0x080116f4
 8001e08:	0801171c 	.word	0x0801171c
 8001e0c:	08011708 	.word	0x08011708
 8001e10:	08011ea8 	.word	0x08011ea8
 8001e14:	08011ea0 	.word	0x08011ea0

08001e18 <d_operator_name>:
 8001e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e1a:	68c3      	ldr	r3, [r0, #12]
 8001e1c:	4684      	mov	ip, r0
 8001e1e:	781f      	ldrb	r7, [r3, #0]
 8001e20:	b327      	cbz	r7, 8001e6c <d_operator_name+0x54>
 8001e22:	1c5a      	adds	r2, r3, #1
 8001e24:	60c2      	str	r2, [r0, #12]
 8001e26:	785a      	ldrb	r2, [r3, #1]
 8001e28:	781f      	ldrb	r7, [r3, #0]
 8001e2a:	2a00      	cmp	r2, #0
 8001e2c:	d058      	beq.n	8001ee0 <d_operator_name+0xc8>
 8001e2e:	1c9a      	adds	r2, r3, #2
 8001e30:	60c2      	str	r2, [r0, #12]
 8001e32:	2f76      	cmp	r7, #118	; 0x76
 8001e34:	4604      	mov	r4, r0
 8001e36:	f893 e001 	ldrb.w	lr, [r3, #1]
 8001e3a:	d043      	beq.n	8001ec4 <d_operator_name+0xac>
 8001e3c:	2f63      	cmp	r7, #99	; 0x63
 8001e3e:	d116      	bne.n	8001e6e <d_operator_name+0x56>
 8001e40:	f1be 0f76 	cmp.w	lr, #118	; 0x76
 8001e44:	d113      	bne.n	8001e6e <d_operator_name+0x56>
 8001e46:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8001e48:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8001e4a:	fab3 f383 	clz	r3, r3
 8001e4e:	095b      	lsrs	r3, r3, #5
 8001e50:	6383      	str	r3, [r0, #56]	; 0x38
 8001e52:	f7ff fc01 	bl	8001658 <d_type>
 8001e56:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001e58:	4602      	mov	r2, r0
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d052      	beq.n	8001f04 <d_operator_name+0xec>
 8001e5e:	2300      	movs	r3, #0
 8001e60:	2134      	movs	r1, #52	; 0x34
 8001e62:	4620      	mov	r0, r4
 8001e64:	f7fe f974 	bl	8000150 <d_make_comp>
 8001e68:	63a5      	str	r5, [r4, #56]	; 0x38
 8001e6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001e6c:	46be      	mov	lr, r7
 8001e6e:	2043      	movs	r0, #67	; 0x43
 8001e70:	2200      	movs	r2, #0
 8001e72:	4d27      	ldr	r5, [pc, #156]	; (8001f10 <d_operator_name+0xf8>)
 8001e74:	e004      	b.n	8001e80 <d_operator_name+0x68>
 8001e76:	bf8c      	ite	hi
 8001e78:	4618      	movhi	r0, r3
 8001e7a:	1c5a      	addls	r2, r3, #1
 8001e7c:	4282      	cmp	r2, r0
 8001e7e:	d02d      	beq.n	8001edc <d_operator_name+0xc4>
 8001e80:	1a83      	subs	r3, r0, r2
 8001e82:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8001e86:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8001e8a:	0119      	lsls	r1, r3, #4
 8001e8c:	586c      	ldr	r4, [r5, r1]
 8001e8e:	4429      	add	r1, r5
 8001e90:	7826      	ldrb	r6, [r4, #0]
 8001e92:	42be      	cmp	r6, r7
 8001e94:	d1ef      	bne.n	8001e76 <d_operator_name+0x5e>
 8001e96:	7864      	ldrb	r4, [r4, #1]
 8001e98:	4574      	cmp	r4, lr
 8001e9a:	d1ec      	bne.n	8001e76 <d_operator_name+0x5e>
 8001e9c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 8001ea0:	f8dc 2018 	ldr.w	r2, [ip, #24]
 8001ea4:	4293      	cmp	r3, r2
 8001ea6:	da19      	bge.n	8001edc <d_operator_name+0xc4>
 8001ea8:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8001eac:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8001eb0:	0092      	lsls	r2, r2, #2
 8001eb2:	3301      	adds	r3, #1
 8001eb4:	18a0      	adds	r0, r4, r2
 8001eb6:	f8cc 3014 	str.w	r3, [ip, #20]
 8001eba:	d013      	beq.n	8001ee4 <d_operator_name+0xcc>
 8001ebc:	2331      	movs	r3, #49	; 0x31
 8001ebe:	54a3      	strb	r3, [r4, r2]
 8001ec0:	6041      	str	r1, [r0, #4]
 8001ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ec4:	f1ae 0530 	sub.w	r5, lr, #48	; 0x30
 8001ec8:	b2eb      	uxtb	r3, r5
 8001eca:	2b09      	cmp	r3, #9
 8001ecc:	d8cf      	bhi.n	8001e6e <d_operator_name+0x56>
 8001ece:	f7fe fb0f 	bl	80004f0 <d_source_name>
 8001ed2:	6963      	ldr	r3, [r4, #20]
 8001ed4:	69a2      	ldr	r2, [r4, #24]
 8001ed6:	4601      	mov	r1, r0
 8001ed8:	4293      	cmp	r3, r2
 8001eda:	db04      	blt.n	8001ee6 <d_operator_name+0xce>
 8001edc:	2000      	movs	r0, #0
 8001ede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ee0:	4696      	mov	lr, r2
 8001ee2:	e7c4      	b.n	8001e6e <d_operator_name+0x56>
 8001ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ee6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8001eea:	6926      	ldr	r6, [r4, #16]
 8001eec:	0092      	lsls	r2, r2, #2
 8001eee:	3301      	adds	r3, #1
 8001ef0:	18b0      	adds	r0, r6, r2
 8001ef2:	6163      	str	r3, [r4, #20]
 8001ef4:	d0f2      	beq.n	8001edc <d_operator_name+0xc4>
 8001ef6:	2900      	cmp	r1, #0
 8001ef8:	d0f0      	beq.n	8001edc <d_operator_name+0xc4>
 8001efa:	2332      	movs	r3, #50	; 0x32
 8001efc:	54b3      	strb	r3, [r6, r2]
 8001efe:	6045      	str	r5, [r0, #4]
 8001f00:	6081      	str	r1, [r0, #8]
 8001f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f04:	2133      	movs	r1, #51	; 0x33
 8001f06:	4620      	mov	r0, r4
 8001f08:	f7fe f922 	bl	8000150 <d_make_comp>
 8001f0c:	e7ac      	b.n	8001e68 <d_operator_name+0x50>
 8001f0e:	bf00      	nop
 8001f10:	08011780 	.word	0x08011780

08001f14 <d_parmlist>:
 8001f14:	2300      	movs	r3, #0
 8001f16:	b530      	push	{r4, r5, lr}
 8001f18:	68c2      	ldr	r2, [r0, #12]
 8001f1a:	b083      	sub	sp, #12
 8001f1c:	9301      	str	r3, [sp, #4]
 8001f1e:	7813      	ldrb	r3, [r2, #0]
 8001f20:	b343      	cbz	r3, 8001f74 <d_parmlist+0x60>
 8001f22:	2b45      	cmp	r3, #69	; 0x45
 8001f24:	d026      	beq.n	8001f74 <d_parmlist+0x60>
 8001f26:	2b2e      	cmp	r3, #46	; 0x2e
 8001f28:	d024      	beq.n	8001f74 <d_parmlist+0x60>
 8001f2a:	4604      	mov	r4, r0
 8001f2c:	ad01      	add	r5, sp, #4
 8001f2e:	e016      	b.n	8001f5e <d_parmlist+0x4a>
 8001f30:	2b4f      	cmp	r3, #79	; 0x4f
 8001f32:	d016      	beq.n	8001f62 <d_parmlist+0x4e>
 8001f34:	4620      	mov	r0, r4
 8001f36:	f7ff fb8f 	bl	8001658 <d_type>
 8001f3a:	b1d8      	cbz	r0, 8001f74 <d_parmlist+0x60>
 8001f3c:	4602      	mov	r2, r0
 8001f3e:	2300      	movs	r3, #0
 8001f40:	212e      	movs	r1, #46	; 0x2e
 8001f42:	4620      	mov	r0, r4
 8001f44:	f7fe f904 	bl	8000150 <d_make_comp>
 8001f48:	6028      	str	r0, [r5, #0]
 8001f4a:	b198      	cbz	r0, 8001f74 <d_parmlist+0x60>
 8001f4c:	68e2      	ldr	r2, [r4, #12]
 8001f4e:	f100 0508 	add.w	r5, r0, #8
 8001f52:	7813      	ldrb	r3, [r2, #0]
 8001f54:	b143      	cbz	r3, 8001f68 <d_parmlist+0x54>
 8001f56:	2b45      	cmp	r3, #69	; 0x45
 8001f58:	d006      	beq.n	8001f68 <d_parmlist+0x54>
 8001f5a:	2b2e      	cmp	r3, #46	; 0x2e
 8001f5c:	d004      	beq.n	8001f68 <d_parmlist+0x54>
 8001f5e:	2b52      	cmp	r3, #82	; 0x52
 8001f60:	d1e6      	bne.n	8001f30 <d_parmlist+0x1c>
 8001f62:	7853      	ldrb	r3, [r2, #1]
 8001f64:	2b45      	cmp	r3, #69	; 0x45
 8001f66:	d1e5      	bne.n	8001f34 <d_parmlist+0x20>
 8001f68:	9801      	ldr	r0, [sp, #4]
 8001f6a:	b118      	cbz	r0, 8001f74 <d_parmlist+0x60>
 8001f6c:	6883      	ldr	r3, [r0, #8]
 8001f6e:	b123      	cbz	r3, 8001f7a <d_parmlist+0x66>
 8001f70:	b003      	add	sp, #12
 8001f72:	bd30      	pop	{r4, r5, pc}
 8001f74:	2000      	movs	r0, #0
 8001f76:	b003      	add	sp, #12
 8001f78:	bd30      	pop	{r4, r5, pc}
 8001f7a:	6842      	ldr	r2, [r0, #4]
 8001f7c:	7811      	ldrb	r1, [r2, #0]
 8001f7e:	2927      	cmp	r1, #39	; 0x27
 8001f80:	d1f6      	bne.n	8001f70 <d_parmlist+0x5c>
 8001f82:	6852      	ldr	r2, [r2, #4]
 8001f84:	7c11      	ldrb	r1, [r2, #16]
 8001f86:	2909      	cmp	r1, #9
 8001f88:	d1f2      	bne.n	8001f70 <d_parmlist+0x5c>
 8001f8a:	6851      	ldr	r1, [r2, #4]
 8001f8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001f8e:	1a52      	subs	r2, r2, r1
 8001f90:	6322      	str	r2, [r4, #48]	; 0x30
 8001f92:	6043      	str	r3, [r0, #4]
 8001f94:	e7ec      	b.n	8001f70 <d_parmlist+0x5c>
 8001f96:	bf00      	nop

08001f98 <d_unqualified_name>:
 8001f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f9a:	68c1      	ldr	r1, [r0, #12]
 8001f9c:	4604      	mov	r4, r0
 8001f9e:	780b      	ldrb	r3, [r1, #0]
 8001fa0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001fa4:	2a09      	cmp	r2, #9
 8001fa6:	d920      	bls.n	8001fea <d_unqualified_name+0x52>
 8001fa8:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8001fac:	2a19      	cmp	r2, #25
 8001fae:	d925      	bls.n	8001ffc <d_unqualified_name+0x64>
 8001fb0:	f1a3 0243 	sub.w	r2, r3, #67	; 0x43
 8001fb4:	2a01      	cmp	r2, #1
 8001fb6:	d92c      	bls.n	8002012 <d_unqualified_name+0x7a>
 8001fb8:	2b4c      	cmp	r3, #76	; 0x4c
 8001fba:	f000 8088 	beq.w	80020ce <d_unqualified_name+0x136>
 8001fbe:	2b55      	cmp	r3, #85	; 0x55
 8001fc0:	d133      	bne.n	800202a <d_unqualified_name+0x92>
 8001fc2:	784b      	ldrb	r3, [r1, #1]
 8001fc4:	2b6c      	cmp	r3, #108	; 0x6c
 8001fc6:	d033      	beq.n	8002030 <d_unqualified_name+0x98>
 8001fc8:	2b74      	cmp	r3, #116	; 0x74
 8001fca:	d12e      	bne.n	800202a <d_unqualified_name+0x92>
 8001fcc:	1c4b      	adds	r3, r1, #1
 8001fce:	60c3      	str	r3, [r0, #12]
 8001fd0:	784b      	ldrb	r3, [r1, #1]
 8001fd2:	2b74      	cmp	r3, #116	; 0x74
 8001fd4:	d05a      	beq.n	800208c <d_unqualified_name+0xf4>
 8001fd6:	2b42      	cmp	r3, #66	; 0x42
 8001fd8:	f04f 0500 	mov.w	r5, #0
 8001fdc:	d10c      	bne.n	8001ff8 <d_unqualified_name+0x60>
 8001fde:	4629      	mov	r1, r5
 8001fe0:	4620      	mov	r0, r4
 8001fe2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001fe6:	f7fe badf 	b.w	80005a8 <d_abi_tags>
 8001fea:	f7fe fa81 	bl	80004f0 <d_source_name>
 8001fee:	4605      	mov	r5, r0
 8001ff0:	68e3      	ldr	r3, [r4, #12]
 8001ff2:	781b      	ldrb	r3, [r3, #0]
 8001ff4:	2b42      	cmp	r3, #66	; 0x42
 8001ff6:	d0f2      	beq.n	8001fde <d_unqualified_name+0x46>
 8001ff8:	4628      	mov	r0, r5
 8001ffa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ffc:	f7ff ff0c 	bl	8001e18 <d_operator_name>
 8002000:	4605      	mov	r5, r0
 8002002:	b118      	cbz	r0, 800200c <d_unqualified_name+0x74>
 8002004:	7803      	ldrb	r3, [r0, #0]
 8002006:	2b31      	cmp	r3, #49	; 0x31
 8002008:	f000 80b2 	beq.w	8002170 <d_unqualified_name+0x1d8>
 800200c:	68e3      	ldr	r3, [r4, #12]
 800200e:	781b      	ldrb	r3, [r3, #0]
 8002010:	e7f0      	b.n	8001ff4 <d_unqualified_name+0x5c>
 8002012:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 8002014:	b125      	cbz	r5, 8002020 <d_unqualified_name+0x88>
 8002016:	782a      	ldrb	r2, [r5, #0]
 8002018:	2a00      	cmp	r2, #0
 800201a:	d06c      	beq.n	80020f6 <d_unqualified_name+0x15e>
 800201c:	2a18      	cmp	r2, #24
 800201e:	d06a      	beq.n	80020f6 <d_unqualified_name+0x15e>
 8002020:	2b43      	cmp	r3, #67	; 0x43
 8002022:	f000 80bf 	beq.w	80021a4 <d_unqualified_name+0x20c>
 8002026:	2b44      	cmp	r3, #68	; 0x44
 8002028:	d06f      	beq.n	800210a <d_unqualified_name+0x172>
 800202a:	2500      	movs	r5, #0
 800202c:	4628      	mov	r0, r5
 800202e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002030:	1c4b      	adds	r3, r1, #1
 8002032:	60c3      	str	r3, [r0, #12]
 8002034:	784b      	ldrb	r3, [r1, #1]
 8002036:	2b6c      	cmp	r3, #108	; 0x6c
 8002038:	d1cd      	bne.n	8001fd6 <d_unqualified_name+0x3e>
 800203a:	3102      	adds	r1, #2
 800203c:	60c1      	str	r1, [r0, #12]
 800203e:	f7ff ff69 	bl	8001f14 <d_parmlist>
 8002042:	4606      	mov	r6, r0
 8002044:	b1f0      	cbz	r0, 8002084 <d_unqualified_name+0xec>
 8002046:	68e2      	ldr	r2, [r4, #12]
 8002048:	7813      	ldrb	r3, [r2, #0]
 800204a:	2b45      	cmp	r3, #69	; 0x45
 800204c:	d1c3      	bne.n	8001fd6 <d_unqualified_name+0x3e>
 800204e:	3201      	adds	r2, #1
 8002050:	60e2      	str	r2, [r4, #12]
 8002052:	4620      	mov	r0, r4
 8002054:	f7fe fa0e 	bl	8000474 <d_compact_number>
 8002058:	2800      	cmp	r0, #0
 800205a:	db13      	blt.n	8002084 <d_unqualified_name+0xec>
 800205c:	6963      	ldr	r3, [r4, #20]
 800205e:	69a2      	ldr	r2, [r4, #24]
 8002060:	4293      	cmp	r3, r2
 8002062:	da0f      	bge.n	8002084 <d_unqualified_name+0xec>
 8002064:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8002068:	6921      	ldr	r1, [r4, #16]
 800206a:	0092      	lsls	r2, r2, #2
 800206c:	3301      	adds	r3, #1
 800206e:	188d      	adds	r5, r1, r2
 8002070:	6163      	str	r3, [r4, #20]
 8002072:	d0cb      	beq.n	800200c <d_unqualified_name+0x74>
 8002074:	2345      	movs	r3, #69	; 0x45
 8002076:	548b      	strb	r3, [r1, r2]
 8002078:	606e      	str	r6, [r5, #4]
 800207a:	60a8      	str	r0, [r5, #8]
 800207c:	6a23      	ldr	r3, [r4, #32]
 800207e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002080:	4293      	cmp	r3, r2
 8002082:	db1c      	blt.n	80020be <d_unqualified_name+0x126>
 8002084:	68e3      	ldr	r3, [r4, #12]
 8002086:	2500      	movs	r5, #0
 8002088:	781b      	ldrb	r3, [r3, #0]
 800208a:	e7b3      	b.n	8001ff4 <d_unqualified_name+0x5c>
 800208c:	3102      	adds	r1, #2
 800208e:	60c1      	str	r1, [r0, #12]
 8002090:	f7fe f9f0 	bl	8000474 <d_compact_number>
 8002094:	2800      	cmp	r0, #0
 8002096:	dbf5      	blt.n	8002084 <d_unqualified_name+0xec>
 8002098:	6963      	ldr	r3, [r4, #20]
 800209a:	69a2      	ldr	r2, [r4, #24]
 800209c:	4293      	cmp	r3, r2
 800209e:	daf1      	bge.n	8002084 <d_unqualified_name+0xec>
 80020a0:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80020a4:	6921      	ldr	r1, [r4, #16]
 80020a6:	0092      	lsls	r2, r2, #2
 80020a8:	3301      	adds	r3, #1
 80020aa:	188d      	adds	r5, r1, r2
 80020ac:	6163      	str	r3, [r4, #20]
 80020ae:	d0ad      	beq.n	800200c <d_unqualified_name+0x74>
 80020b0:	2347      	movs	r3, #71	; 0x47
 80020b2:	548b      	strb	r3, [r1, r2]
 80020b4:	6068      	str	r0, [r5, #4]
 80020b6:	6a23      	ldr	r3, [r4, #32]
 80020b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80020ba:	4293      	cmp	r3, r2
 80020bc:	dae2      	bge.n	8002084 <d_unqualified_name+0xec>
 80020be:	69e0      	ldr	r0, [r4, #28]
 80020c0:	1c59      	adds	r1, r3, #1
 80020c2:	68e2      	ldr	r2, [r4, #12]
 80020c4:	f840 5023 	str.w	r5, [r0, r3, lsl #2]
 80020c8:	6221      	str	r1, [r4, #32]
 80020ca:	7813      	ldrb	r3, [r2, #0]
 80020cc:	e792      	b.n	8001ff4 <d_unqualified_name+0x5c>
 80020ce:	3101      	adds	r1, #1
 80020d0:	60c1      	str	r1, [r0, #12]
 80020d2:	f7fe fa0d 	bl	80004f0 <d_source_name>
 80020d6:	4605      	mov	r5, r0
 80020d8:	2800      	cmp	r0, #0
 80020da:	d0a6      	beq.n	800202a <d_unqualified_name+0x92>
 80020dc:	68e2      	ldr	r2, [r4, #12]
 80020de:	7813      	ldrb	r3, [r2, #0]
 80020e0:	2b5f      	cmp	r3, #95	; 0x5f
 80020e2:	d187      	bne.n	8001ff4 <d_unqualified_name+0x5c>
 80020e4:	4620      	mov	r0, r4
 80020e6:	3201      	adds	r2, #1
 80020e8:	f840 2f0c 	str.w	r2, [r0, #12]!
 80020ec:	f7fe f980 	bl	80003f0 <d_number.isra.0>
 80020f0:	2800      	cmp	r0, #0
 80020f2:	da8b      	bge.n	800200c <d_unqualified_name+0x74>
 80020f4:	e799      	b.n	800202a <d_unqualified_name+0x92>
 80020f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80020f8:	68aa      	ldr	r2, [r5, #8]
 80020fa:	4413      	add	r3, r2
 80020fc:	6323      	str	r3, [r4, #48]	; 0x30
 80020fe:	780b      	ldrb	r3, [r1, #0]
 8002100:	2b43      	cmp	r3, #67	; 0x43
 8002102:	d04f      	beq.n	80021a4 <d_unqualified_name+0x20c>
 8002104:	2b44      	cmp	r3, #68	; 0x44
 8002106:	f47f af66 	bne.w	8001fd6 <d_unqualified_name+0x3e>
 800210a:	784b      	ldrb	r3, [r1, #1]
 800210c:	3b30      	subs	r3, #48	; 0x30
 800210e:	2b05      	cmp	r3, #5
 8002110:	d88b      	bhi.n	800202a <d_unqualified_name+0x92>
 8002112:	a201      	add	r2, pc, #4	; (adr r2, 8002118 <d_unqualified_name+0x180>)
 8002114:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002118:	0800216d 	.word	0x0800216d
 800211c:	08002131 	.word	0x08002131
 8002120:	08002169 	.word	0x08002169
 8002124:	0800202b 	.word	0x0800202b
 8002128:	08002165 	.word	0x08002165
 800212c:	08002161 	.word	0x08002161
 8002130:	2702      	movs	r7, #2
 8002132:	6963      	ldr	r3, [r4, #20]
 8002134:	69a2      	ldr	r2, [r4, #24]
 8002136:	1c88      	adds	r0, r1, #2
 8002138:	4293      	cmp	r3, r2
 800213a:	60e0      	str	r0, [r4, #12]
 800213c:	da56      	bge.n	80021ec <d_unqualified_name+0x254>
 800213e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8002142:	6920      	ldr	r0, [r4, #16]
 8002144:	0092      	lsls	r2, r2, #2
 8002146:	3301      	adds	r3, #1
 8002148:	1886      	adds	r6, r0, r2
 800214a:	6163      	str	r3, [r4, #20]
 800214c:	d005      	beq.n	800215a <d_unqualified_name+0x1c2>
 800214e:	2d00      	cmp	r5, #0
 8002150:	d04f      	beq.n	80021f2 <d_unqualified_name+0x25a>
 8002152:	2308      	movs	r3, #8
 8002154:	5483      	strb	r3, [r0, r2]
 8002156:	7137      	strb	r7, [r6, #4]
 8002158:	60b5      	str	r5, [r6, #8]
 800215a:	788b      	ldrb	r3, [r1, #2]
 800215c:	4635      	mov	r5, r6
 800215e:	e749      	b.n	8001ff4 <d_unqualified_name+0x5c>
 8002160:	2705      	movs	r7, #5
 8002162:	e7e6      	b.n	8002132 <d_unqualified_name+0x19a>
 8002164:	2704      	movs	r7, #4
 8002166:	e7e4      	b.n	8002132 <d_unqualified_name+0x19a>
 8002168:	2703      	movs	r7, #3
 800216a:	e7e2      	b.n	8002132 <d_unqualified_name+0x19a>
 800216c:	2701      	movs	r7, #1
 800216e:	e7e0      	b.n	8002132 <d_unqualified_name+0x19a>
 8002170:	6842      	ldr	r2, [r0, #4]
 8002172:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002174:	6891      	ldr	r1, [r2, #8]
 8002176:	3307      	adds	r3, #7
 8002178:	440b      	add	r3, r1
 800217a:	6810      	ldr	r0, [r2, #0]
 800217c:	491e      	ldr	r1, [pc, #120]	; (80021f8 <d_unqualified_name+0x260>)
 800217e:	6323      	str	r3, [r4, #48]	; 0x30
 8002180:	f004 fb32 	bl	80067e8 <strcmp>
 8002184:	2800      	cmp	r0, #0
 8002186:	f47f af41 	bne.w	800200c <d_unqualified_name+0x74>
 800218a:	4620      	mov	r0, r4
 800218c:	f7fe f9b0 	bl	80004f0 <d_source_name>
 8002190:	462a      	mov	r2, r5
 8002192:	4603      	mov	r3, r0
 8002194:	2136      	movs	r1, #54	; 0x36
 8002196:	4620      	mov	r0, r4
 8002198:	f7fd ffda 	bl	8000150 <d_make_comp>
 800219c:	68e3      	ldr	r3, [r4, #12]
 800219e:	4605      	mov	r5, r0
 80021a0:	781b      	ldrb	r3, [r3, #0]
 80021a2:	e727      	b.n	8001ff4 <d_unqualified_name+0x5c>
 80021a4:	784b      	ldrb	r3, [r1, #1]
 80021a6:	3b31      	subs	r3, #49	; 0x31
 80021a8:	2b04      	cmp	r3, #4
 80021aa:	f63f af3e 	bhi.w	800202a <d_unqualified_name+0x92>
 80021ae:	e8df f003 	tbb	[pc, r3]
 80021b2:	0315      	.short	0x0315
 80021b4:	191b      	.short	0x191b
 80021b6:	17          	.byte	0x17
 80021b7:	00          	.byte	0x00
 80021b8:	2702      	movs	r7, #2
 80021ba:	6963      	ldr	r3, [r4, #20]
 80021bc:	69a2      	ldr	r2, [r4, #24]
 80021be:	1c88      	adds	r0, r1, #2
 80021c0:	4293      	cmp	r3, r2
 80021c2:	60e0      	str	r0, [r4, #12]
 80021c4:	da12      	bge.n	80021ec <d_unqualified_name+0x254>
 80021c6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80021ca:	6920      	ldr	r0, [r4, #16]
 80021cc:	0092      	lsls	r2, r2, #2
 80021ce:	3301      	adds	r3, #1
 80021d0:	1886      	adds	r6, r0, r2
 80021d2:	6163      	str	r3, [r4, #20]
 80021d4:	d0c1      	beq.n	800215a <d_unqualified_name+0x1c2>
 80021d6:	b165      	cbz	r5, 80021f2 <d_unqualified_name+0x25a>
 80021d8:	2307      	movs	r3, #7
 80021da:	e7bb      	b.n	8002154 <d_unqualified_name+0x1bc>
 80021dc:	2701      	movs	r7, #1
 80021de:	e7ec      	b.n	80021ba <d_unqualified_name+0x222>
 80021e0:	2705      	movs	r7, #5
 80021e2:	e7ea      	b.n	80021ba <d_unqualified_name+0x222>
 80021e4:	2704      	movs	r7, #4
 80021e6:	e7e8      	b.n	80021ba <d_unqualified_name+0x222>
 80021e8:	2703      	movs	r7, #3
 80021ea:	e7e6      	b.n	80021ba <d_unqualified_name+0x222>
 80021ec:	788b      	ldrb	r3, [r1, #2]
 80021ee:	2500      	movs	r5, #0
 80021f0:	e700      	b.n	8001ff4 <d_unqualified_name+0x5c>
 80021f2:	788b      	ldrb	r3, [r1, #2]
 80021f4:	e6fe      	b.n	8001ff4 <d_unqualified_name+0x5c>
 80021f6:	bf00      	nop
 80021f8:	08011eb8 	.word	0x08011eb8

080021fc <d_bare_function_type>:
 80021fc:	b570      	push	{r4, r5, r6, lr}
 80021fe:	68c3      	ldr	r3, [r0, #12]
 8002200:	4604      	mov	r4, r0
 8002202:	781a      	ldrb	r2, [r3, #0]
 8002204:	2a4a      	cmp	r2, #74	; 0x4a
 8002206:	d00d      	beq.n	8002224 <d_bare_function_type+0x28>
 8002208:	b971      	cbnz	r1, 8002228 <d_bare_function_type+0x2c>
 800220a:	460d      	mov	r5, r1
 800220c:	4620      	mov	r0, r4
 800220e:	f7ff fe81 	bl	8001f14 <d_parmlist>
 8002212:	b178      	cbz	r0, 8002234 <d_bare_function_type+0x38>
 8002214:	4603      	mov	r3, r0
 8002216:	462a      	mov	r2, r5
 8002218:	4620      	mov	r0, r4
 800221a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800221e:	2129      	movs	r1, #41	; 0x29
 8002220:	f7fd bf96 	b.w	8000150 <d_make_comp>
 8002224:	3301      	adds	r3, #1
 8002226:	60c3      	str	r3, [r0, #12]
 8002228:	4620      	mov	r0, r4
 800222a:	f7ff fa15 	bl	8001658 <d_type>
 800222e:	4605      	mov	r5, r0
 8002230:	2800      	cmp	r0, #0
 8002232:	d1eb      	bne.n	800220c <d_bare_function_type+0x10>
 8002234:	2000      	movs	r0, #0
 8002236:	bd70      	pop	{r4, r5, r6, pc}

08002238 <d_function_type>:
 8002238:	68c3      	ldr	r3, [r0, #12]
 800223a:	781a      	ldrb	r2, [r3, #0]
 800223c:	2a46      	cmp	r2, #70	; 0x46
 800223e:	d001      	beq.n	8002244 <d_function_type+0xc>
 8002240:	2000      	movs	r0, #0
 8002242:	4770      	bx	lr
 8002244:	b510      	push	{r4, lr}
 8002246:	1c5a      	adds	r2, r3, #1
 8002248:	60c2      	str	r2, [r0, #12]
 800224a:	785a      	ldrb	r2, [r3, #1]
 800224c:	2101      	movs	r1, #1
 800224e:	2a59      	cmp	r2, #89	; 0x59
 8002250:	bf04      	itt	eq
 8002252:	3302      	addeq	r3, #2
 8002254:	60c3      	streq	r3, [r0, #12]
 8002256:	4604      	mov	r4, r0
 8002258:	f7ff ffd0 	bl	80021fc <d_bare_function_type>
 800225c:	4601      	mov	r1, r0
 800225e:	4620      	mov	r0, r4
 8002260:	f7fe f828 	bl	80002b4 <d_ref_qualifier>
 8002264:	68e3      	ldr	r3, [r4, #12]
 8002266:	781a      	ldrb	r2, [r3, #0]
 8002268:	2a45      	cmp	r2, #69	; 0x45
 800226a:	d001      	beq.n	8002270 <d_function_type+0x38>
 800226c:	2000      	movs	r0, #0
 800226e:	bd10      	pop	{r4, pc}
 8002270:	3301      	adds	r3, #1
 8002272:	60e3      	str	r3, [r4, #12]
 8002274:	bd10      	pop	{r4, pc}
 8002276:	bf00      	nop

08002278 <d_encoding>:
 8002278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800227c:	68c3      	ldr	r3, [r0, #12]
 800227e:	4605      	mov	r5, r0
 8002280:	781a      	ldrb	r2, [r3, #0]
 8002282:	2a47      	cmp	r2, #71	; 0x47
 8002284:	d01f      	beq.n	80022c6 <d_encoding+0x4e>
 8002286:	2a54      	cmp	r2, #84	; 0x54
 8002288:	d01d      	beq.n	80022c6 <d_encoding+0x4e>
 800228a:	460e      	mov	r6, r1
 800228c:	f7ff f82c 	bl	80012e8 <d_name>
 8002290:	4604      	mov	r4, r0
 8002292:	b310      	cbz	r0, 80022da <d_encoding+0x62>
 8002294:	b32e      	cbz	r6, 80022e2 <d_encoding+0x6a>
 8002296:	68ab      	ldr	r3, [r5, #8]
 8002298:	07db      	lsls	r3, r3, #31
 800229a:	d422      	bmi.n	80022e2 <d_encoding+0x6a>
 800229c:	7823      	ldrb	r3, [r4, #0]
 800229e:	f1a3 021c 	sub.w	r2, r3, #28
 80022a2:	2a04      	cmp	r2, #4
 80022a4:	d940      	bls.n	8002328 <d_encoding+0xb0>
 80022a6:	2b4c      	cmp	r3, #76	; 0x4c
 80022a8:	d03e      	beq.n	8002328 <d_encoding+0xb0>
 80022aa:	2b02      	cmp	r3, #2
 80022ac:	d116      	bne.n	80022dc <d_encoding+0x64>
 80022ae:	68a3      	ldr	r3, [r4, #8]
 80022b0:	781a      	ldrb	r2, [r3, #0]
 80022b2:	f1a2 011c 	sub.w	r1, r2, #28
 80022b6:	2904      	cmp	r1, #4
 80022b8:	f240 8283 	bls.w	80027c2 <d_encoding+0x54a>
 80022bc:	2a4c      	cmp	r2, #76	; 0x4c
 80022be:	f000 8280 	beq.w	80027c2 <d_encoding+0x54a>
 80022c2:	60a3      	str	r3, [r4, #8]
 80022c4:	e00a      	b.n	80022dc <d_encoding+0x64>
 80022c6:	6b29      	ldr	r1, [r5, #48]	; 0x30
 80022c8:	f101 0214 	add.w	r2, r1, #20
 80022cc:	632a      	str	r2, [r5, #48]	; 0x30
 80022ce:	781a      	ldrb	r2, [r3, #0]
 80022d0:	2a54      	cmp	r2, #84	; 0x54
 80022d2:	d02b      	beq.n	800232c <d_encoding+0xb4>
 80022d4:	2a47      	cmp	r2, #71	; 0x47
 80022d6:	f000 809f 	beq.w	8002418 <d_encoding+0x1a0>
 80022da:	2400      	movs	r4, #0
 80022dc:	4620      	mov	r0, r4
 80022de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80022e2:	68eb      	ldr	r3, [r5, #12]
 80022e4:	781b      	ldrb	r3, [r3, #0]
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d0f8      	beq.n	80022dc <d_encoding+0x64>
 80022ea:	2b45      	cmp	r3, #69	; 0x45
 80022ec:	d0f6      	beq.n	80022dc <d_encoding+0x64>
 80022ee:	4621      	mov	r1, r4
 80022f0:	780a      	ldrb	r2, [r1, #0]
 80022f2:	2a20      	cmp	r2, #32
 80022f4:	f200 8113 	bhi.w	800251e <d_encoding+0x2a6>
 80022f8:	2a1c      	cmp	r2, #28
 80022fa:	f080 8112 	bcs.w	8002522 <d_encoding+0x2aa>
 80022fe:	2a04      	cmp	r2, #4
 8002300:	f040 8101 	bne.w	8002506 <d_encoding+0x28e>
 8002304:	684a      	ldr	r2, [r1, #4]
 8002306:	b16a      	cbz	r2, 8002324 <d_encoding+0xac>
 8002308:	7813      	ldrb	r3, [r2, #0]
 800230a:	2b08      	cmp	r3, #8
 800230c:	f103 31ff 	add.w	r1, r3, #4294967295	; 0xffffffff
 8002310:	f200 80f6 	bhi.w	8002500 <d_encoding+0x288>
 8002314:	2b07      	cmp	r3, #7
 8002316:	f080 80f6 	bcs.w	8002506 <d_encoding+0x28e>
 800231a:	2901      	cmp	r1, #1
 800231c:	d802      	bhi.n	8002324 <d_encoding+0xac>
 800231e:	6892      	ldr	r2, [r2, #8]
 8002320:	2a00      	cmp	r2, #0
 8002322:	d1f1      	bne.n	8002308 <d_encoding+0x90>
 8002324:	2101      	movs	r1, #1
 8002326:	e0ef      	b.n	8002508 <d_encoding+0x290>
 8002328:	6864      	ldr	r4, [r4, #4]
 800232a:	e7b7      	b.n	800229c <d_encoding+0x24>
 800232c:	1c5a      	adds	r2, r3, #1
 800232e:	60ea      	str	r2, [r5, #12]
 8002330:	785a      	ldrb	r2, [r3, #1]
 8002332:	2a00      	cmp	r2, #0
 8002334:	d0d1      	beq.n	80022da <d_encoding+0x62>
 8002336:	1c9a      	adds	r2, r3, #2
 8002338:	60ea      	str	r2, [r5, #12]
 800233a:	785b      	ldrb	r3, [r3, #1]
 800233c:	3b43      	subs	r3, #67	; 0x43
 800233e:	2b33      	cmp	r3, #51	; 0x33
 8002340:	d8cb      	bhi.n	80022da <d_encoding+0x62>
 8002342:	a201      	add	r2, pc, #4	; (adr r2, 8002348 <d_encoding+0xd0>)
 8002344:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002348:	08002783 	.word	0x08002783
 800234c:	080022db 	.word	0x080022db
 8002350:	080022db 	.word	0x080022db
 8002354:	0800276d 	.word	0x0800276d
 8002358:	080022db 	.word	0x080022db
 800235c:	08002757 	.word	0x08002757
 8002360:	08002741 	.word	0x08002741
 8002364:	0800272b 	.word	0x0800272b
 8002368:	080022db 	.word	0x080022db
 800236c:	080022db 	.word	0x080022db
 8002370:	080022db 	.word	0x080022db
 8002374:	080022db 	.word	0x080022db
 8002378:	080022db 	.word	0x080022db
 800237c:	080022db 	.word	0x080022db
 8002380:	080022db 	.word	0x080022db
 8002384:	080022db 	.word	0x080022db
 8002388:	08002715 	.word	0x08002715
 800238c:	080026fb 	.word	0x080026fb
 8002390:	080022db 	.word	0x080022db
 8002394:	080026e1 	.word	0x080026e1
 8002398:	080026cb 	.word	0x080026cb
 800239c:	080022db 	.word	0x080022db
 80023a0:	080022db 	.word	0x080022db
 80023a4:	080022db 	.word	0x080022db
 80023a8:	080022db 	.word	0x080022db
 80023ac:	080022db 	.word	0x080022db
 80023b0:	080022db 	.word	0x080022db
 80023b4:	080022db 	.word	0x080022db
 80023b8:	080022db 	.word	0x080022db
 80023bc:	080022db 	.word	0x080022db
 80023c0:	080022db 	.word	0x080022db
 80023c4:	080022db 	.word	0x080022db
 80023c8:	08002697 	.word	0x08002697
 80023cc:	080022db 	.word	0x080022db
 80023d0:	080022db 	.word	0x080022db
 80023d4:	080022db 	.word	0x080022db
 80023d8:	080022db 	.word	0x080022db
 80023dc:	08002671 	.word	0x08002671
 80023e0:	080022db 	.word	0x080022db
 80023e4:	080022db 	.word	0x080022db
 80023e8:	080022db 	.word	0x080022db
 80023ec:	080022db 	.word	0x080022db
 80023f0:	080022db 	.word	0x080022db
 80023f4:	080022db 	.word	0x080022db
 80023f8:	080022db 	.word	0x080022db
 80023fc:	080022db 	.word	0x080022db
 8002400:	080022db 	.word	0x080022db
 8002404:	080022db 	.word	0x080022db
 8002408:	080022db 	.word	0x080022db
 800240c:	080022db 	.word	0x080022db
 8002410:	080022db 	.word	0x080022db
 8002414:	0800264b 	.word	0x0800264b
 8002418:	1c5a      	adds	r2, r3, #1
 800241a:	60ea      	str	r2, [r5, #12]
 800241c:	785a      	ldrb	r2, [r3, #1]
 800241e:	2a00      	cmp	r2, #0
 8002420:	f43f af5b 	beq.w	80022da <d_encoding+0x62>
 8002424:	1c9a      	adds	r2, r3, #2
 8002426:	60ea      	str	r2, [r5, #12]
 8002428:	785a      	ldrb	r2, [r3, #1]
 800242a:	3a41      	subs	r2, #65	; 0x41
 800242c:	2a31      	cmp	r2, #49	; 0x31
 800242e:	f63f af54 	bhi.w	80022da <d_encoding+0x62>
 8002432:	a101      	add	r1, pc, #4	; (adr r1, 8002438 <d_encoding+0x1c0>)
 8002434:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002438:	0800252d 	.word	0x0800252d
 800243c:	080022db 	.word	0x080022db
 8002440:	080022db 	.word	0x080022db
 8002444:	080022db 	.word	0x080022db
 8002448:	080022db 	.word	0x080022db
 800244c:	080022db 	.word	0x080022db
 8002450:	080022db 	.word	0x080022db
 8002454:	080022db 	.word	0x080022db
 8002458:	080022db 	.word	0x080022db
 800245c:	080022db 	.word	0x080022db
 8002460:	080022db 	.word	0x080022db
 8002464:	080022db 	.word	0x080022db
 8002468:	080022db 	.word	0x080022db
 800246c:	080022db 	.word	0x080022db
 8002470:	080022db 	.word	0x080022db
 8002474:	080022db 	.word	0x080022db
 8002478:	080022db 	.word	0x080022db
 800247c:	0800262d 	.word	0x0800262d
 8002480:	080022db 	.word	0x080022db
 8002484:	08002601 	.word	0x08002601
 8002488:	080022db 	.word	0x080022db
 800248c:	080025eb 	.word	0x080025eb
 8002490:	080022db 	.word	0x080022db
 8002494:	080022db 	.word	0x080022db
 8002498:	080022db 	.word	0x080022db
 800249c:	080022db 	.word	0x080022db
 80024a0:	080022db 	.word	0x080022db
 80024a4:	080022db 	.word	0x080022db
 80024a8:	080022db 	.word	0x080022db
 80024ac:	080022db 	.word	0x080022db
 80024b0:	080022db 	.word	0x080022db
 80024b4:	080022db 	.word	0x080022db
 80024b8:	080022db 	.word	0x080022db
 80024bc:	080022db 	.word	0x080022db
 80024c0:	080022db 	.word	0x080022db
 80024c4:	080022db 	.word	0x080022db
 80024c8:	080022db 	.word	0x080022db
 80024cc:	080022db 	.word	0x080022db
 80024d0:	080022db 	.word	0x080022db
 80024d4:	080022db 	.word	0x080022db
 80024d8:	080022db 	.word	0x080022db
 80024dc:	080022db 	.word	0x080022db
 80024e0:	080022db 	.word	0x080022db
 80024e4:	080022db 	.word	0x080022db
 80024e8:	080022db 	.word	0x080022db
 80024ec:	080022db 	.word	0x080022db
 80024f0:	080022db 	.word	0x080022db
 80024f4:	080022db 	.word	0x080022db
 80024f8:	080022db 	.word	0x080022db
 80024fc:	08002545 	.word	0x08002545
 8002500:	2b34      	cmp	r3, #52	; 0x34
 8002502:	f47f af0f 	bne.w	8002324 <d_encoding+0xac>
 8002506:	2100      	movs	r1, #0
 8002508:	4628      	mov	r0, r5
 800250a:	f7ff fe77 	bl	80021fc <d_bare_function_type>
 800250e:	4622      	mov	r2, r4
 8002510:	4603      	mov	r3, r0
 8002512:	2103      	movs	r1, #3
 8002514:	4628      	mov	r0, r5
 8002516:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800251a:	f7fd be19 	b.w	8000150 <d_make_comp>
 800251e:	2a4c      	cmp	r2, #76	; 0x4c
 8002520:	d1f1      	bne.n	8002506 <d_encoding+0x28e>
 8002522:	6849      	ldr	r1, [r1, #4]
 8002524:	2900      	cmp	r1, #0
 8002526:	f47f aee3 	bne.w	80022f0 <d_encoding+0x78>
 800252a:	e7ed      	b.n	8002508 <d_encoding+0x290>
 800252c:	2100      	movs	r1, #0
 800252e:	4628      	mov	r0, r5
 8002530:	f7ff fea2 	bl	8002278 <d_encoding>
 8002534:	2300      	movs	r3, #0
 8002536:	4602      	mov	r2, r0
 8002538:	2117      	movs	r1, #23
 800253a:	4628      	mov	r0, r5
 800253c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002540:	f7fd be06 	b.w	8000150 <d_make_comp>
 8002544:	f105 000c 	add.w	r0, r5, #12
 8002548:	f7fd ff52 	bl	80003f0 <d_number.isra.0>
 800254c:	2801      	cmp	r0, #1
 800254e:	f77f aec4 	ble.w	80022da <d_encoding+0x62>
 8002552:	68eb      	ldr	r3, [r5, #12]
 8002554:	781a      	ldrb	r2, [r3, #0]
 8002556:	2a00      	cmp	r2, #0
 8002558:	f43f aebf 	beq.w	80022da <d_encoding+0x62>
 800255c:	1c5f      	adds	r7, r3, #1
 800255e:	60ef      	str	r7, [r5, #12]
 8002560:	781b      	ldrb	r3, [r3, #0]
 8002562:	2b5f      	cmp	r3, #95	; 0x5f
 8002564:	f47f aeb9 	bne.w	80022da <d_encoding+0x62>
 8002568:	2200      	movs	r2, #0
 800256a:	f04f 0940 	mov.w	r9, #64	; 0x40
 800256e:	4690      	mov	r8, r2
 8002570:	1e46      	subs	r6, r0, #1
 8002572:	783b      	ldrb	r3, [r7, #0]
 8002574:	2b00      	cmp	r3, #0
 8002576:	f43f aeb0 	beq.w	80022da <d_encoding+0x62>
 800257a:	2b24      	cmp	r3, #36	; 0x24
 800257c:	f000 8128 	beq.w	80027d0 <d_encoding+0x558>
 8002580:	463c      	mov	r4, r7
 8002582:	2100      	movs	r1, #0
 8002584:	e004      	b.n	8002590 <d_encoding+0x318>
 8002586:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800258a:	b123      	cbz	r3, 8002596 <d_encoding+0x31e>
 800258c:	2b24      	cmp	r3, #36	; 0x24
 800258e:	d002      	beq.n	8002596 <d_encoding+0x31e>
 8002590:	3101      	adds	r1, #1
 8002592:	42b1      	cmp	r1, r6
 8002594:	dbf7      	blt.n	8002586 <d_encoding+0x30e>
 8002596:	696c      	ldr	r4, [r5, #20]
 8002598:	69a8      	ldr	r0, [r5, #24]
 800259a:	4284      	cmp	r4, r0
 800259c:	f280 8113 	bge.w	80027c6 <d_encoding+0x54e>
 80025a0:	6928      	ldr	r0, [r5, #16]
 80025a2:	1c63      	adds	r3, r4, #1
 80025a4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80025a8:	616b      	str	r3, [r5, #20]
 80025aa:	eb10 0384 	adds.w	r3, r0, r4, lsl #2
 80025ae:	f000 810a 	beq.w	80027c6 <d_encoding+0x54e>
 80025b2:	f800 8024 	strb.w	r8, [r0, r4, lsl #2]
 80025b6:	605f      	str	r7, [r3, #4]
 80025b8:	6099      	str	r1, [r3, #8]
 80025ba:	68ef      	ldr	r7, [r5, #12]
 80025bc:	1a76      	subs	r6, r6, r1
 80025be:	440f      	add	r7, r1
 80025c0:	60ef      	str	r7, [r5, #12]
 80025c2:	2a00      	cmp	r2, #0
 80025c4:	f000 8121 	beq.w	800280a <d_encoding+0x592>
 80025c8:	213f      	movs	r1, #63	; 0x3f
 80025ca:	4628      	mov	r0, r5
 80025cc:	f7fd fdc0 	bl	8000150 <d_make_comp>
 80025d0:	4602      	mov	r2, r0
 80025d2:	2800      	cmp	r0, #0
 80025d4:	f43f ae81 	beq.w	80022da <d_encoding+0x62>
 80025d8:	2e00      	cmp	r6, #0
 80025da:	dcca      	bgt.n	8002572 <d_encoding+0x2fa>
 80025dc:	4628      	mov	r0, r5
 80025de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025e2:	2300      	movs	r3, #0
 80025e4:	213e      	movs	r1, #62	; 0x3e
 80025e6:	f7fd bdb3 	b.w	8000150 <d_make_comp>
 80025ea:	4628      	mov	r0, r5
 80025ec:	f7fe fe7c 	bl	80012e8 <d_name>
 80025f0:	2300      	movs	r3, #0
 80025f2:	4602      	mov	r2, r0
 80025f4:	2113      	movs	r1, #19
 80025f6:	4628      	mov	r0, r5
 80025f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025fc:	f7fd bda8 	b.w	8000150 <d_make_comp>
 8002600:	789a      	ldrb	r2, [r3, #2]
 8002602:	2100      	movs	r1, #0
 8002604:	4628      	mov	r0, r5
 8002606:	2a00      	cmp	r2, #0
 8002608:	f000 8101 	beq.w	800280e <d_encoding+0x596>
 800260c:	1cda      	adds	r2, r3, #3
 800260e:	60ea      	str	r2, [r5, #12]
 8002610:	789b      	ldrb	r3, [r3, #2]
 8002612:	2b6e      	cmp	r3, #110	; 0x6e
 8002614:	f040 80fb 	bne.w	800280e <d_encoding+0x596>
 8002618:	f7ff fe2e 	bl	8002278 <d_encoding>
 800261c:	2300      	movs	r3, #0
 800261e:	4602      	mov	r2, r0
 8002620:	2149      	movs	r1, #73	; 0x49
 8002622:	4628      	mov	r0, r5
 8002624:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002628:	f7fd bd92 	b.w	8000150 <d_make_comp>
 800262c:	4628      	mov	r0, r5
 800262e:	f7fe fe5b 	bl	80012e8 <d_name>
 8002632:	4604      	mov	r4, r0
 8002634:	4628      	mov	r0, r5
 8002636:	f7fd ff05 	bl	8000444 <d_number_component>
 800263a:	4622      	mov	r2, r4
 800263c:	4603      	mov	r3, r0
 800263e:	2116      	movs	r1, #22
 8002640:	4628      	mov	r0, r5
 8002642:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002646:	f7fd bd83 	b.w	8000150 <d_make_comp>
 800264a:	2176      	movs	r1, #118	; 0x76
 800264c:	4628      	mov	r0, r5
 800264e:	f7fe f883 	bl	8000758 <d_call_offset>
 8002652:	2800      	cmp	r0, #0
 8002654:	f43f ae41 	beq.w	80022da <d_encoding+0x62>
 8002658:	2100      	movs	r1, #0
 800265a:	4628      	mov	r0, r5
 800265c:	f7ff fe0c 	bl	8002278 <d_encoding>
 8002660:	2300      	movs	r3, #0
 8002662:	4602      	mov	r2, r0
 8002664:	2110      	movs	r1, #16
 8002666:	4628      	mov	r0, r5
 8002668:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800266c:	f7fd bd70 	b.w	8000150 <d_make_comp>
 8002670:	2168      	movs	r1, #104	; 0x68
 8002672:	4628      	mov	r0, r5
 8002674:	f7fe f870 	bl	8000758 <d_call_offset>
 8002678:	2800      	cmp	r0, #0
 800267a:	f43f ae2e 	beq.w	80022da <d_encoding+0x62>
 800267e:	2100      	movs	r1, #0
 8002680:	4628      	mov	r0, r5
 8002682:	f7ff fdf9 	bl	8002278 <d_encoding>
 8002686:	2300      	movs	r3, #0
 8002688:	4602      	mov	r2, r0
 800268a:	210f      	movs	r1, #15
 800268c:	4628      	mov	r0, r5
 800268e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002692:	f7fd bd5d 	b.w	8000150 <d_make_comp>
 8002696:	2100      	movs	r1, #0
 8002698:	4628      	mov	r0, r5
 800269a:	f7fe f85d 	bl	8000758 <d_call_offset>
 800269e:	2800      	cmp	r0, #0
 80026a0:	f43f ae1b 	beq.w	80022da <d_encoding+0x62>
 80026a4:	2100      	movs	r1, #0
 80026a6:	4628      	mov	r0, r5
 80026a8:	f7fe f856 	bl	8000758 <d_call_offset>
 80026ac:	2800      	cmp	r0, #0
 80026ae:	f43f ae14 	beq.w	80022da <d_encoding+0x62>
 80026b2:	2100      	movs	r1, #0
 80026b4:	4628      	mov	r0, r5
 80026b6:	f7ff fddf 	bl	8002278 <d_encoding>
 80026ba:	2300      	movs	r3, #0
 80026bc:	4602      	mov	r2, r0
 80026be:	2111      	movs	r1, #17
 80026c0:	4628      	mov	r0, r5
 80026c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026c6:	f7fd bd43 	b.w	8000150 <d_make_comp>
 80026ca:	4628      	mov	r0, r5
 80026cc:	f7fe fe0c 	bl	80012e8 <d_name>
 80026d0:	2300      	movs	r3, #0
 80026d2:	4602      	mov	r2, r0
 80026d4:	2115      	movs	r1, #21
 80026d6:	4628      	mov	r0, r5
 80026d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026dc:	f7fd bd38 	b.w	8000150 <d_make_comp>
 80026e0:	310f      	adds	r1, #15
 80026e2:	6329      	str	r1, [r5, #48]	; 0x30
 80026e4:	4628      	mov	r0, r5
 80026e6:	f7fe ffb7 	bl	8001658 <d_type>
 80026ea:	2300      	movs	r3, #0
 80026ec:	4602      	mov	r2, r0
 80026ee:	2109      	movs	r1, #9
 80026f0:	4628      	mov	r0, r5
 80026f2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026f6:	f7fd bd2b 	b.w	8000150 <d_make_comp>
 80026fa:	310a      	adds	r1, #10
 80026fc:	6329      	str	r1, [r5, #48]	; 0x30
 80026fe:	4628      	mov	r0, r5
 8002700:	f7fe ffaa 	bl	8001658 <d_type>
 8002704:	2300      	movs	r3, #0
 8002706:	4602      	mov	r2, r0
 8002708:	210a      	movs	r1, #10
 800270a:	4628      	mov	r0, r5
 800270c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002710:	f7fd bd1e 	b.w	8000150 <d_make_comp>
 8002714:	4628      	mov	r0, r5
 8002716:	f7fe ff9f 	bl	8001658 <d_type>
 800271a:	2300      	movs	r3, #0
 800271c:	4602      	mov	r2, r0
 800271e:	210d      	movs	r1, #13
 8002720:	4628      	mov	r0, r5
 8002722:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002726:	f7fd bd13 	b.w	8000150 <d_make_comp>
 800272a:	4628      	mov	r0, r5
 800272c:	f7fe ff94 	bl	8001658 <d_type>
 8002730:	2300      	movs	r3, #0
 8002732:	4602      	mov	r2, r0
 8002734:	2112      	movs	r1, #18
 8002736:	4628      	mov	r0, r5
 8002738:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800273c:	f7fd bd08 	b.w	8000150 <d_make_comp>
 8002740:	4628      	mov	r0, r5
 8002742:	f7fe ff89 	bl	8001658 <d_type>
 8002746:	2300      	movs	r3, #0
 8002748:	4602      	mov	r2, r0
 800274a:	210c      	movs	r1, #12
 800274c:	4628      	mov	r0, r5
 800274e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002752:	f7fd bcfd 	b.w	8000150 <d_make_comp>
 8002756:	4628      	mov	r0, r5
 8002758:	f7fe fdc6 	bl	80012e8 <d_name>
 800275c:	2300      	movs	r3, #0
 800275e:	4602      	mov	r2, r0
 8002760:	2114      	movs	r1, #20
 8002762:	4628      	mov	r0, r5
 8002764:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002768:	f7fd bcf2 	b.w	8000150 <d_make_comp>
 800276c:	4628      	mov	r0, r5
 800276e:	f7fe ff73 	bl	8001658 <d_type>
 8002772:	2300      	movs	r3, #0
 8002774:	4602      	mov	r2, r0
 8002776:	210e      	movs	r1, #14
 8002778:	4628      	mov	r0, r5
 800277a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800277e:	f7fd bce7 	b.w	8000150 <d_make_comp>
 8002782:	4628      	mov	r0, r5
 8002784:	f7fe ff68 	bl	8001658 <d_type>
 8002788:	4604      	mov	r4, r0
 800278a:	f105 000c 	add.w	r0, r5, #12
 800278e:	f7fd fe2f 	bl	80003f0 <d_number.isra.0>
 8002792:	2800      	cmp	r0, #0
 8002794:	f6ff ada1 	blt.w	80022da <d_encoding+0x62>
 8002798:	68eb      	ldr	r3, [r5, #12]
 800279a:	781a      	ldrb	r2, [r3, #0]
 800279c:	2a5f      	cmp	r2, #95	; 0x5f
 800279e:	f47f ad9c 	bne.w	80022da <d_encoding+0x62>
 80027a2:	3301      	adds	r3, #1
 80027a4:	60eb      	str	r3, [r5, #12]
 80027a6:	4628      	mov	r0, r5
 80027a8:	f7fe ff56 	bl	8001658 <d_type>
 80027ac:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80027ae:	4602      	mov	r2, r0
 80027b0:	1d59      	adds	r1, r3, #5
 80027b2:	6329      	str	r1, [r5, #48]	; 0x30
 80027b4:	4623      	mov	r3, r4
 80027b6:	4628      	mov	r0, r5
 80027b8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027bc:	210b      	movs	r1, #11
 80027be:	f7fd bcc7 	b.w	8000150 <d_make_comp>
 80027c2:	685b      	ldr	r3, [r3, #4]
 80027c4:	e574      	b.n	80022b0 <d_encoding+0x38>
 80027c6:	68eb      	ldr	r3, [r5, #12]
 80027c8:	2400      	movs	r4, #0
 80027ca:	440b      	add	r3, r1
 80027cc:	60eb      	str	r3, [r5, #12]
 80027ce:	e585      	b.n	80022dc <d_encoding+0x64>
 80027d0:	787b      	ldrb	r3, [r7, #1]
 80027d2:	2b53      	cmp	r3, #83	; 0x53
 80027d4:	d027      	beq.n	8002826 <d_encoding+0x5ae>
 80027d6:	2b5f      	cmp	r3, #95	; 0x5f
 80027d8:	d023      	beq.n	8002822 <d_encoding+0x5aa>
 80027da:	2b24      	cmp	r3, #36	; 0x24
 80027dc:	f47f ad7d 	bne.w	80022da <d_encoding+0x62>
 80027e0:	4618      	mov	r0, r3
 80027e2:	6969      	ldr	r1, [r5, #20]
 80027e4:	69ab      	ldr	r3, [r5, #24]
 80027e6:	4299      	cmp	r1, r3
 80027e8:	da1f      	bge.n	800282a <d_encoding+0x5b2>
 80027ea:	692c      	ldr	r4, [r5, #16]
 80027ec:	1c4f      	adds	r7, r1, #1
 80027ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80027f2:	eb14 0381 	adds.w	r3, r4, r1, lsl #2
 80027f6:	616f      	str	r7, [r5, #20]
 80027f8:	d017      	beq.n	800282a <d_encoding+0x5b2>
 80027fa:	f804 9021 	strb.w	r9, [r4, r1, lsl #2]
 80027fe:	6058      	str	r0, [r3, #4]
 8002800:	68ef      	ldr	r7, [r5, #12]
 8002802:	3e02      	subs	r6, #2
 8002804:	3702      	adds	r7, #2
 8002806:	60ef      	str	r7, [r5, #12]
 8002808:	e6db      	b.n	80025c2 <d_encoding+0x34a>
 800280a:	461a      	mov	r2, r3
 800280c:	e6e4      	b.n	80025d8 <d_encoding+0x360>
 800280e:	f7ff fd33 	bl	8002278 <d_encoding>
 8002812:	2300      	movs	r3, #0
 8002814:	4602      	mov	r2, r0
 8002816:	2148      	movs	r1, #72	; 0x48
 8002818:	4628      	mov	r0, r5
 800281a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800281e:	f7fd bc97 	b.w	8000150 <d_make_comp>
 8002822:	202e      	movs	r0, #46	; 0x2e
 8002824:	e7dd      	b.n	80027e2 <d_encoding+0x56a>
 8002826:	202f      	movs	r0, #47	; 0x2f
 8002828:	e7db      	b.n	80027e2 <d_encoding+0x56a>
 800282a:	68eb      	ldr	r3, [r5, #12]
 800282c:	2400      	movs	r4, #0
 800282e:	3302      	adds	r3, #2
 8002830:	60eb      	str	r3, [r5, #12]
 8002832:	e553      	b.n	80022dc <d_encoding+0x64>

08002834 <d_expr_primary>:
 8002834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002836:	68c2      	ldr	r2, [r0, #12]
 8002838:	7813      	ldrb	r3, [r2, #0]
 800283a:	2b4c      	cmp	r3, #76	; 0x4c
 800283c:	d001      	beq.n	8002842 <d_expr_primary+0xe>
 800283e:	2000      	movs	r0, #0
 8002840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002842:	1c53      	adds	r3, r2, #1
 8002844:	60c3      	str	r3, [r0, #12]
 8002846:	7851      	ldrb	r1, [r2, #1]
 8002848:	4605      	mov	r5, r0
 800284a:	295f      	cmp	r1, #95	; 0x5f
 800284c:	d03a      	beq.n	80028c4 <d_expr_primary+0x90>
 800284e:	295a      	cmp	r1, #90	; 0x5a
 8002850:	d03f      	beq.n	80028d2 <d_expr_primary+0x9e>
 8002852:	f7fe ff01 	bl	8001658 <d_type>
 8002856:	2800      	cmp	r0, #0
 8002858:	d0f1      	beq.n	800283e <d_expr_primary+0xa>
 800285a:	7803      	ldrb	r3, [r0, #0]
 800285c:	2b27      	cmp	r3, #39	; 0x27
 800285e:	d046      	beq.n	80028ee <d_expr_primary+0xba>
 8002860:	68ee      	ldr	r6, [r5, #12]
 8002862:	7833      	ldrb	r3, [r6, #0]
 8002864:	2b6e      	cmp	r3, #110	; 0x6e
 8002866:	d04b      	beq.n	8002900 <d_expr_primary+0xcc>
 8002868:	213c      	movs	r1, #60	; 0x3c
 800286a:	2b45      	cmp	r3, #69	; 0x45
 800286c:	d04e      	beq.n	800290c <d_expr_primary+0xd8>
 800286e:	2b00      	cmp	r3, #0
 8002870:	d0e5      	beq.n	800283e <d_expr_primary+0xa>
 8002872:	4633      	mov	r3, r6
 8002874:	e001      	b.n	800287a <d_expr_primary+0x46>
 8002876:	2c00      	cmp	r4, #0
 8002878:	d0e1      	beq.n	800283e <d_expr_primary+0xa>
 800287a:	3301      	adds	r3, #1
 800287c:	60eb      	str	r3, [r5, #12]
 800287e:	781c      	ldrb	r4, [r3, #0]
 8002880:	2c45      	cmp	r4, #69	; 0x45
 8002882:	d1f8      	bne.n	8002876 <d_expr_primary+0x42>
 8002884:	1b9c      	subs	r4, r3, r6
 8002886:	696b      	ldr	r3, [r5, #20]
 8002888:	69aa      	ldr	r2, [r5, #24]
 800288a:	4293      	cmp	r3, r2
 800288c:	da2d      	bge.n	80028ea <d_expr_primary+0xb6>
 800288e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8002892:	692f      	ldr	r7, [r5, #16]
 8002894:	3301      	adds	r3, #1
 8002896:	0092      	lsls	r2, r2, #2
 8002898:	616b      	str	r3, [r5, #20]
 800289a:	18bb      	adds	r3, r7, r2
 800289c:	d025      	beq.n	80028ea <d_expr_primary+0xb6>
 800289e:	b326      	cbz	r6, 80028ea <d_expr_primary+0xb6>
 80028a0:	b31c      	cbz	r4, 80028ea <d_expr_primary+0xb6>
 80028a2:	f04f 0e00 	mov.w	lr, #0
 80028a6:	f807 e002 	strb.w	lr, [r7, r2]
 80028aa:	605e      	str	r6, [r3, #4]
 80028ac:	609c      	str	r4, [r3, #8]
 80028ae:	4602      	mov	r2, r0
 80028b0:	4628      	mov	r0, r5
 80028b2:	f7fd fc4d 	bl	8000150 <d_make_comp>
 80028b6:	68eb      	ldr	r3, [r5, #12]
 80028b8:	781a      	ldrb	r2, [r3, #0]
 80028ba:	2a45      	cmp	r2, #69	; 0x45
 80028bc:	d1bf      	bne.n	800283e <d_expr_primary+0xa>
 80028be:	3301      	adds	r3, #1
 80028c0:	60eb      	str	r3, [r5, #12]
 80028c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80028c4:	1c93      	adds	r3, r2, #2
 80028c6:	60c3      	str	r3, [r0, #12]
 80028c8:	7892      	ldrb	r2, [r2, #2]
 80028ca:	2a5a      	cmp	r2, #90	; 0x5a
 80028cc:	bf18      	it	ne
 80028ce:	2000      	movne	r0, #0
 80028d0:	d107      	bne.n	80028e2 <d_expr_primary+0xae>
 80028d2:	3301      	adds	r3, #1
 80028d4:	60eb      	str	r3, [r5, #12]
 80028d6:	2100      	movs	r1, #0
 80028d8:	4628      	mov	r0, r5
 80028da:	f7ff fccd 	bl	8002278 <d_encoding>
 80028de:	68eb      	ldr	r3, [r5, #12]
 80028e0:	781a      	ldrb	r2, [r3, #0]
 80028e2:	2a45      	cmp	r2, #69	; 0x45
 80028e4:	d0eb      	beq.n	80028be <d_expr_primary+0x8a>
 80028e6:	2000      	movs	r0, #0
 80028e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80028ea:	2300      	movs	r3, #0
 80028ec:	e7df      	b.n	80028ae <d_expr_primary+0x7a>
 80028ee:	6843      	ldr	r3, [r0, #4]
 80028f0:	7c1a      	ldrb	r2, [r3, #16]
 80028f2:	2a00      	cmp	r2, #0
 80028f4:	d0b4      	beq.n	8002860 <d_expr_primary+0x2c>
 80028f6:	685a      	ldr	r2, [r3, #4]
 80028f8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80028fa:	1a9b      	subs	r3, r3, r2
 80028fc:	632b      	str	r3, [r5, #48]	; 0x30
 80028fe:	e7af      	b.n	8002860 <d_expr_primary+0x2c>
 8002900:	1c72      	adds	r2, r6, #1
 8002902:	60ea      	str	r2, [r5, #12]
 8002904:	7873      	ldrb	r3, [r6, #1]
 8002906:	213d      	movs	r1, #61	; 0x3d
 8002908:	4616      	mov	r6, r2
 800290a:	e7ae      	b.n	800286a <d_expr_primary+0x36>
 800290c:	2400      	movs	r4, #0
 800290e:	e7ba      	b.n	8002886 <d_expr_primary+0x52>

08002910 <d_print_comp_inner>:
 8002910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002914:	4604      	mov	r4, r0
 8002916:	b095      	sub	sp, #84	; 0x54
 8002918:	2a00      	cmp	r2, #0
 800291a:	f000 80db 	beq.w	8002ad4 <d_print_comp_inner+0x1c4>
 800291e:	f8d0 7118 	ldr.w	r7, [r0, #280]	; 0x118
 8002922:	2f00      	cmp	r7, #0
 8002924:	f040 80c2 	bne.w	8002aac <d_print_comp_inner+0x19c>
 8002928:	7813      	ldrb	r3, [r2, #0]
 800292a:	4688      	mov	r8, r1
 800292c:	4615      	mov	r5, r2
 800292e:	2b4d      	cmp	r3, #77	; 0x4d
 8002930:	f201 81ea 	bhi.w	8003d08 <d_print_comp_inner+0x13f8>
 8002934:	e8df f013 	tbh	[pc, r3, lsl #1]
 8002938:	043b0459 	.word	0x043b0459
 800293c:	03a4043b 	.word	0x03a4043b
 8002940:	048804a4 	.word	0x048804a4
 8002944:	038e04e9 	.word	0x038e04e9
 8002948:	0330037c 	.word	0x0330037c
 800294c:	030a0356 	.word	0x030a0356
 8002950:	029802e4 	.word	0x029802e4
 8002954:	027202be 	.word	0x027202be
 8002958:	01f0024c 	.word	0x01f0024c
 800295c:	01ca0226 	.word	0x01ca0226
 8002960:	015801a4 	.word	0x015801a4
 8002964:	0132017e 	.word	0x0132017e
 8002968:	00f2010b 	.word	0x00f2010b
 800296c:	00f200f2 	.word	0x00f200f2
 8002970:	00d400d4 	.word	0x00d400d4
 8002974:	00d400d4 	.word	0x00d400d4
 8002978:	00d400d4 	.word	0x00d400d4
 800297c:	06d800d4 	.word	0x06d800d4
 8002980:	00d406d8 	.word	0x00d406d8
 8002984:	06ac00d4 	.word	0x06ac00d4
 8002988:	069606ff 	.word	0x069606ff
 800298c:	07040720 	.word	0x07040720
 8002990:	0704078c 	.word	0x0704078c
 8002994:	057b057b 	.word	0x057b057b
 8002998:	06080632 	.word	0x06080632
 800299c:	09e805e2 	.word	0x09e805e2
 80029a0:	069105af 	.word	0x069105af
 80029a4:	004e0656 	.word	0x004e0656
 80029a8:	09500484 	.word	0x09500484
 80029ac:	08e308e3 	.word	0x08e308e3
 80029b0:	08b208b2 	.word	0x08b208b2
 80029b4:	0548088c 	.word	0x0548088c
 80029b8:	08e8053a 	.word	0x08e8053a
 80029bc:	09c20514 	.word	0x09c20514
 80029c0:	099c0918 	.word	0x099c0918
 80029c4:	07cf09e8 	.word	0x07cf09e8
 80029c8:	07f50866 	.word	0x07f50866
 80029cc:	0412081b 	.word	0x0412081b
 80029d0:	055200d4 	.word	0x055200d4
 80029d4:	68ab      	ldr	r3, [r5, #8]
 80029d6:	781b      	ldrb	r3, [r3, #0]
 80029d8:	2b38      	cmp	r3, #56	; 0x38
 80029da:	d17b      	bne.n	8002ad4 <d_print_comp_inner+0x1c4>
 80029dc:	686a      	ldr	r2, [r5, #4]
 80029de:	6853      	ldr	r3, [r2, #4]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	7859      	ldrb	r1, [r3, #1]
 80029e4:	2963      	cmp	r1, #99	; 0x63
 80029e6:	f002 8150 	beq.w	8004c8a <d_print_comp_inner+0x237a>
 80029ea:	f105 0308 	add.w	r3, r5, #8
 80029ee:	4641      	mov	r1, r8
 80029f0:	4620      	mov	r0, r4
 80029f2:	f003 fbc9 	bl	8006188 <d_maybe_print_fold_expression.isra.15>
 80029f6:	4606      	mov	r6, r0
 80029f8:	2800      	cmp	r0, #0
 80029fa:	d157      	bne.n	8002aac <d_print_comp_inner+0x19c>
 80029fc:	686b      	ldr	r3, [r5, #4]
 80029fe:	781a      	ldrb	r2, [r3, #0]
 8002a00:	2a31      	cmp	r2, #49	; 0x31
 8002a02:	f002 8371 	beq.w	80050e8 <d_print_comp_inner+0x27d8>
 8002a06:	685b      	ldr	r3, [r3, #4]
 8002a08:	49c7      	ldr	r1, [pc, #796]	; (8002d28 <d_print_comp_inner+0x418>)
 8002a0a:	6818      	ldr	r0, [r3, #0]
 8002a0c:	f003 feec 	bl	80067e8 <strcmp>
 8002a10:	68ab      	ldr	r3, [r5, #8]
 8002a12:	b920      	cbnz	r0, 8002a1e <d_print_comp_inner+0x10e>
 8002a14:	685a      	ldr	r2, [r3, #4]
 8002a16:	7811      	ldrb	r1, [r2, #0]
 8002a18:	2903      	cmp	r1, #3
 8002a1a:	f002 83ab 	beq.w	8005174 <d_print_comp_inner+0x2864>
 8002a1e:	685a      	ldr	r2, [r3, #4]
 8002a20:	4641      	mov	r1, r8
 8002a22:	4620      	mov	r0, r4
 8002a24:	f003 fb4c 	bl	80060c0 <d_print_subexpr>
 8002a28:	686f      	ldr	r7, [r5, #4]
 8002a2a:	49c0      	ldr	r1, [pc, #768]	; (8002d2c <d_print_comp_inner+0x41c>)
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	f8d3 9000 	ldr.w	r9, [r3]
 8002a32:	4648      	mov	r0, r9
 8002a34:	f003 fed8 	bl	80067e8 <strcmp>
 8002a38:	4606      	mov	r6, r0
 8002a3a:	2800      	cmp	r0, #0
 8002a3c:	f042 8275 	bne.w	8004f2a <d_print_comp_inner+0x261a>
 8002a40:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002a44:	29ff      	cmp	r1, #255	; 0xff
 8002a46:	f002 8450 	beq.w	80052ea <d_print_comp_inner+0x29da>
 8002a4a:	235b      	movs	r3, #91	; 0x5b
 8002a4c:	1c4a      	adds	r2, r1, #1
 8002a4e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002a52:	5463      	strb	r3, [r4, r1]
 8002a54:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002a58:	68ab      	ldr	r3, [r5, #8]
 8002a5a:	4641      	mov	r1, r8
 8002a5c:	689a      	ldr	r2, [r3, #8]
 8002a5e:	4620      	mov	r0, r4
 8002a60:	f002 fd00 	bl	8005464 <d_print_comp>
 8002a64:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002a68:	29ff      	cmp	r1, #255	; 0xff
 8002a6a:	f002 842b 	beq.w	80052c4 <d_print_comp_inner+0x29b4>
 8002a6e:	235d      	movs	r3, #93	; 0x5d
 8002a70:	1c4a      	adds	r2, r1, #1
 8002a72:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002a76:	5463      	strb	r3, [r4, r1]
 8002a78:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002a7c:	686b      	ldr	r3, [r5, #4]
 8002a7e:	781a      	ldrb	r2, [r3, #0]
 8002a80:	2a31      	cmp	r2, #49	; 0x31
 8002a82:	d113      	bne.n	8002aac <d_print_comp_inner+0x19c>
 8002a84:	685b      	ldr	r3, [r3, #4]
 8002a86:	689a      	ldr	r2, [r3, #8]
 8002a88:	2a01      	cmp	r2, #1
 8002a8a:	d10f      	bne.n	8002aac <d_print_comp_inner+0x19c>
 8002a8c:	685b      	ldr	r3, [r3, #4]
 8002a8e:	781b      	ldrb	r3, [r3, #0]
 8002a90:	2b3e      	cmp	r3, #62	; 0x3e
 8002a92:	d10b      	bne.n	8002aac <d_print_comp_inner+0x19c>
 8002a94:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002a98:	29ff      	cmp	r1, #255	; 0xff
 8002a9a:	f002 8488 	beq.w	80053ae <d_print_comp_inner+0x2a9e>
 8002a9e:	2329      	movs	r3, #41	; 0x29
 8002aa0:	1c4a      	adds	r2, r1, #1
 8002aa2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002aa6:	5463      	strb	r3, [r4, r1]
 8002aa8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002aac:	b015      	add	sp, #84	; 0x54
 8002aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ab2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	f2c1 84a8 	blt.w	800440c <d_print_comp_inner+0x1afc>
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	f002 8438 	beq.w	8005332 <d_print_comp_inner+0x2a22>
 8002ac2:	6880      	ldr	r0, [r0, #8]
 8002ac4:	3b01      	subs	r3, #1
 8002ac6:	b110      	cbz	r0, 8002ace <d_print_comp_inner+0x1be>
 8002ac8:	7802      	ldrb	r2, [r0, #0]
 8002aca:	2a2f      	cmp	r2, #47	; 0x2f
 8002acc:	d0f6      	beq.n	8002abc <d_print_comp_inner+0x1ac>
 8002ace:	b10f      	cbz	r7, 8002ad4 <d_print_comp_inner+0x1c4>
 8002ad0:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 8002ad4:	2301      	movs	r3, #1
 8002ad6:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002ada:	b015      	add	sp, #84	; 0x54
 8002adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ae0:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8002ae4:	2100      	movs	r1, #0
 8002ae6:	ab14      	add	r3, sp, #80	; 0x50
 8002ae8:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
 8002aec:	f843 cd40 	str.w	ip, [r3, #-64]!
 8002af0:	9505      	str	r5, [sp, #20]
 8002af2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002af6:	9106      	str	r1, [sp, #24]
 8002af8:	9207      	str	r2, [sp, #28]
 8002afa:	686a      	ldr	r2, [r5, #4]
 8002afc:	4641      	mov	r1, r8
 8002afe:	4620      	mov	r0, r4
 8002b00:	f002 fcb0 	bl	8005464 <d_print_comp>
 8002b04:	9b06      	ldr	r3, [sp, #24]
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	f001 838d 	beq.w	8004226 <d_print_comp_inner+0x1916>
 8002b0c:	9b04      	ldr	r3, [sp, #16]
 8002b0e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002b12:	2f00      	cmp	r7, #0
 8002b14:	d0ca      	beq.n	8002aac <d_print_comp_inner+0x19c>
 8002b16:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 8002b1a:	e7c7      	b.n	8002aac <d_print_comp_inner+0x19c>
 8002b1c:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
 8002b20:	f1bc 0f00 	cmp.w	ip, #0
 8002b24:	d0de      	beq.n	8002ae4 <d_print_comp_inner+0x1d4>
 8002b26:	4662      	mov	r2, ip
 8002b28:	e005      	b.n	8002b36 <d_print_comp_inner+0x226>
 8002b2a:	428b      	cmp	r3, r1
 8002b2c:	f001 86bc 	beq.w	80048a8 <d_print_comp_inner+0x1f98>
 8002b30:	6812      	ldr	r2, [r2, #0]
 8002b32:	2a00      	cmp	r2, #0
 8002b34:	d0d6      	beq.n	8002ae4 <d_print_comp_inner+0x1d4>
 8002b36:	6890      	ldr	r0, [r2, #8]
 8002b38:	2800      	cmp	r0, #0
 8002b3a:	d1f9      	bne.n	8002b30 <d_print_comp_inner+0x220>
 8002b3c:	6851      	ldr	r1, [r2, #4]
 8002b3e:	7809      	ldrb	r1, [r1, #0]
 8002b40:	f1a1 0e19 	sub.w	lr, r1, #25
 8002b44:	f1be 0f02 	cmp.w	lr, #2
 8002b48:	d9ef      	bls.n	8002b2a <d_print_comp_inner+0x21a>
 8002b4a:	4607      	mov	r7, r0
 8002b4c:	e7ca      	b.n	8002ae4 <d_print_comp_inner+0x1d4>
 8002b4e:	68af      	ldr	r7, [r5, #8]
 8002b50:	686d      	ldr	r5, [r5, #4]
 8002b52:	2f00      	cmp	r7, #0
 8002b54:	d0aa      	beq.n	8002aac <d_print_comp_inner+0x19c>
 8002b56:	f04f 0800 	mov.w	r8, #0
 8002b5a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002b5e:	442f      	add	r7, r5
 8002b60:	e008      	b.n	8002b74 <d_print_comp_inner+0x264>
 8002b62:	460b      	mov	r3, r1
 8002b64:	3101      	adds	r1, #1
 8002b66:	42bd      	cmp	r5, r7
 8002b68:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002b6c:	54e6      	strb	r6, [r4, r3]
 8002b6e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002b72:	d09b      	beq.n	8002aac <d_print_comp_inner+0x19c>
 8002b74:	29ff      	cmp	r1, #255	; 0xff
 8002b76:	f815 6b01 	ldrb.w	r6, [r5], #1
 8002b7a:	d1f2      	bne.n	8002b62 <d_print_comp_inner+0x252>
 8002b7c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002b80:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002b84:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002b88:	4620      	mov	r0, r4
 8002b8a:	4798      	blx	r3
 8002b8c:	2101      	movs	r1, #1
 8002b8e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002b92:	2300      	movs	r3, #0
 8002b94:	440a      	add	r2, r1
 8002b96:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002b9a:	e7e4      	b.n	8002b66 <d_print_comp_inner+0x256>
 8002b9c:	4e64      	ldr	r6, [pc, #400]	; (8002d30 <d_print_comp_inner+0x420>)
 8002b9e:	f04f 0900 	mov.w	r9, #0
 8002ba2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002ba6:	f106 0a11 	add.w	sl, r6, #17
 8002baa:	e009      	b.n	8002bc0 <d_print_comp_inner+0x2b0>
 8002bac:	460b      	mov	r3, r1
 8002bae:	3101      	adds	r1, #1
 8002bb0:	4556      	cmp	r6, sl
 8002bb2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002bb6:	54e7      	strb	r7, [r4, r3]
 8002bb8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002bbc:	f001 829a 	beq.w	80040f4 <d_print_comp_inner+0x17e4>
 8002bc0:	29ff      	cmp	r1, #255	; 0xff
 8002bc2:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002bc6:	d1f1      	bne.n	8002bac <d_print_comp_inner+0x29c>
 8002bc8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002bcc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002bd0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002bd4:	4620      	mov	r0, r4
 8002bd6:	4798      	blx	r3
 8002bd8:	2101      	movs	r1, #1
 8002bda:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002bde:	2300      	movs	r3, #0
 8002be0:	440a      	add	r2, r1
 8002be2:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002be6:	e7e3      	b.n	8002bb0 <d_print_comp_inner+0x2a0>
 8002be8:	4e52      	ldr	r6, [pc, #328]	; (8002d34 <d_print_comp_inner+0x424>)
 8002bea:	f04f 0900 	mov.w	r9, #0
 8002bee:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002bf2:	f106 0a19 	add.w	sl, r6, #25
 8002bf6:	e009      	b.n	8002c0c <d_print_comp_inner+0x2fc>
 8002bf8:	460b      	mov	r3, r1
 8002bfa:	3101      	adds	r1, #1
 8002bfc:	4556      	cmp	r6, sl
 8002bfe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c02:	54e7      	strb	r7, [r4, r3]
 8002c04:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002c08:	f001 82ac 	beq.w	8004164 <d_print_comp_inner+0x1854>
 8002c0c:	29ff      	cmp	r1, #255	; 0xff
 8002c0e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002c12:	d1f1      	bne.n	8002bf8 <d_print_comp_inner+0x2e8>
 8002c14:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002c18:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002c1c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002c20:	4620      	mov	r0, r4
 8002c22:	4798      	blx	r3
 8002c24:	2101      	movs	r1, #1
 8002c26:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002c2a:	2300      	movs	r3, #0
 8002c2c:	440a      	add	r2, r1
 8002c2e:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002c32:	e7e3      	b.n	8002bfc <d_print_comp_inner+0x2ec>
 8002c34:	4e40      	ldr	r6, [pc, #256]	; (8002d38 <d_print_comp_inner+0x428>)
 8002c36:	f04f 0900 	mov.w	r9, #0
 8002c3a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002c3e:	f106 0a15 	add.w	sl, r6, #21
 8002c42:	e009      	b.n	8002c58 <d_print_comp_inner+0x348>
 8002c44:	460b      	mov	r3, r1
 8002c46:	3101      	adds	r1, #1
 8002c48:	4556      	cmp	r6, sl
 8002c4a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c4e:	54e7      	strb	r7, [r4, r3]
 8002c50:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002c54:	f001 8255 	beq.w	8004102 <d_print_comp_inner+0x17f2>
 8002c58:	29ff      	cmp	r1, #255	; 0xff
 8002c5a:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002c5e:	d1f1      	bne.n	8002c44 <d_print_comp_inner+0x334>
 8002c60:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002c64:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002c68:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002c6c:	4620      	mov	r0, r4
 8002c6e:	4798      	blx	r3
 8002c70:	2101      	movs	r1, #1
 8002c72:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002c76:	2300      	movs	r3, #0
 8002c78:	440a      	add	r2, r1
 8002c7a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002c7e:	e7e3      	b.n	8002c48 <d_print_comp_inner+0x338>
 8002c80:	4e2e      	ldr	r6, [pc, #184]	; (8002d3c <d_print_comp_inner+0x42c>)
 8002c82:	f04f 0900 	mov.w	r9, #0
 8002c86:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002c8a:	f106 0a16 	add.w	sl, r6, #22
 8002c8e:	e009      	b.n	8002ca4 <d_print_comp_inner+0x394>
 8002c90:	460b      	mov	r3, r1
 8002c92:	3101      	adds	r1, #1
 8002c94:	4556      	cmp	r6, sl
 8002c96:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c9a:	54e7      	strb	r7, [r4, r3]
 8002c9c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002ca0:	f001 8267 	beq.w	8004172 <d_print_comp_inner+0x1862>
 8002ca4:	29ff      	cmp	r1, #255	; 0xff
 8002ca6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002caa:	d1f1      	bne.n	8002c90 <d_print_comp_inner+0x380>
 8002cac:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002cb0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002cb4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002cb8:	4620      	mov	r0, r4
 8002cba:	4798      	blx	r3
 8002cbc:	2101      	movs	r1, #1
 8002cbe:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	440a      	add	r2, r1
 8002cc6:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002cca:	e7e3      	b.n	8002c94 <d_print_comp_inner+0x384>
 8002ccc:	4e1c      	ldr	r6, [pc, #112]	; (8002d40 <d_print_comp_inner+0x430>)
 8002cce:	f04f 0900 	mov.w	r9, #0
 8002cd2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002cd6:	f106 0a13 	add.w	sl, r6, #19
 8002cda:	e009      	b.n	8002cf0 <d_print_comp_inner+0x3e0>
 8002cdc:	460b      	mov	r3, r1
 8002cde:	3101      	adds	r1, #1
 8002ce0:	45b2      	cmp	sl, r6
 8002ce2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002ce6:	54e7      	strb	r7, [r4, r3]
 8002ce8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002cec:	f001 807c 	beq.w	8003de8 <d_print_comp_inner+0x14d8>
 8002cf0:	29ff      	cmp	r1, #255	; 0xff
 8002cf2:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002cf6:	d1f1      	bne.n	8002cdc <d_print_comp_inner+0x3cc>
 8002cf8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002cfc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d00:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002d04:	4620      	mov	r0, r4
 8002d06:	4798      	blx	r3
 8002d08:	2101      	movs	r1, #1
 8002d0a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002d0e:	2300      	movs	r3, #0
 8002d10:	440a      	add	r2, r1
 8002d12:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002d16:	e7e3      	b.n	8002ce0 <d_print_comp_inner+0x3d0>
 8002d18:	4e0a      	ldr	r6, [pc, #40]	; (8002d44 <d_print_comp_inner+0x434>)
 8002d1a:	f04f 0900 	mov.w	r9, #0
 8002d1e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002d22:	f106 0a1a 	add.w	sl, r6, #26
 8002d26:	e019      	b.n	8002d5c <d_print_comp_inner+0x44c>
 8002d28:	08011e7c 	.word	0x08011e7c
 8002d2c:	08012078 	.word	0x08012078
 8002d30:	08012007 	.word	0x08012007
 8002d34:	08011fd3 	.word	0x08011fd3
 8002d38:	08011fef 	.word	0x08011fef
 8002d3c:	08011fbb 	.word	0x08011fbb
 8002d40:	08011fa7 	.word	0x08011fa7
 8002d44:	08011f7b 	.word	0x08011f7b
 8002d48:	460b      	mov	r3, r1
 8002d4a:	3101      	adds	r1, #1
 8002d4c:	4556      	cmp	r6, sl
 8002d4e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002d52:	54e7      	strb	r7, [r4, r3]
 8002d54:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002d58:	f001 8054 	beq.w	8003e04 <d_print_comp_inner+0x14f4>
 8002d5c:	29ff      	cmp	r1, #255	; 0xff
 8002d5e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002d62:	d1f1      	bne.n	8002d48 <d_print_comp_inner+0x438>
 8002d64:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d68:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d6c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002d70:	4620      	mov	r0, r4
 8002d72:	4798      	blx	r3
 8002d74:	2101      	movs	r1, #1
 8002d76:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002d7a:	2300      	movs	r3, #0
 8002d7c:	440a      	add	r2, r1
 8002d7e:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002d82:	e7e3      	b.n	8002d4c <d_print_comp_inner+0x43c>
 8002d84:	4eb5      	ldr	r6, [pc, #724]	; (800305c <d_print_comp_inner+0x74c>)
 8002d86:	f04f 0900 	mov.w	r9, #0
 8002d8a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002d8e:	f106 0a0f 	add.w	sl, r6, #15
 8002d92:	e009      	b.n	8002da8 <d_print_comp_inner+0x498>
 8002d94:	460b      	mov	r3, r1
 8002d96:	3101      	adds	r1, #1
 8002d98:	4556      	cmp	r6, sl
 8002d9a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002d9e:	54e7      	strb	r7, [r4, r3]
 8002da0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002da4:	f001 8027 	beq.w	8003df6 <d_print_comp_inner+0x14e6>
 8002da8:	29ff      	cmp	r1, #255	; 0xff
 8002daa:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002dae:	d1f1      	bne.n	8002d94 <d_print_comp_inner+0x484>
 8002db0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002db4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002db8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	4798      	blx	r3
 8002dc0:	2101      	movs	r1, #1
 8002dc2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	440a      	add	r2, r1
 8002dca:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002dce:	e7e3      	b.n	8002d98 <d_print_comp_inner+0x488>
 8002dd0:	4ea3      	ldr	r6, [pc, #652]	; (8003060 <d_print_comp_inner+0x750>)
 8002dd2:	f04f 0900 	mov.w	r9, #0
 8002dd6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002dda:	f106 0a11 	add.w	sl, r6, #17
 8002dde:	e009      	b.n	8002df4 <d_print_comp_inner+0x4e4>
 8002de0:	460b      	mov	r3, r1
 8002de2:	3101      	adds	r1, #1
 8002de4:	4556      	cmp	r6, sl
 8002de6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002dea:	54e7      	strb	r7, [r4, r3]
 8002dec:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002df0:	f001 800f 	beq.w	8003e12 <d_print_comp_inner+0x1502>
 8002df4:	29ff      	cmp	r1, #255	; 0xff
 8002df6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002dfa:	d1f1      	bne.n	8002de0 <d_print_comp_inner+0x4d0>
 8002dfc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e00:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e04:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002e08:	4620      	mov	r0, r4
 8002e0a:	4798      	blx	r3
 8002e0c:	2101      	movs	r1, #1
 8002e0e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002e12:	2300      	movs	r3, #0
 8002e14:	440a      	add	r2, r1
 8002e16:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002e1a:	e7e3      	b.n	8002de4 <d_print_comp_inner+0x4d4>
 8002e1c:	4e91      	ldr	r6, [pc, #580]	; (8003064 <d_print_comp_inner+0x754>)
 8002e1e:	f04f 0900 	mov.w	r9, #0
 8002e22:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002e26:	f106 0a15 	add.w	sl, r6, #21
 8002e2a:	e009      	b.n	8002e40 <d_print_comp_inner+0x530>
 8002e2c:	460b      	mov	r3, r1
 8002e2e:	3101      	adds	r1, #1
 8002e30:	4556      	cmp	r6, sl
 8002e32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002e36:	54e7      	strb	r7, [r4, r3]
 8002e38:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002e3c:	f000 87b8 	beq.w	8003db0 <d_print_comp_inner+0x14a0>
 8002e40:	29ff      	cmp	r1, #255	; 0xff
 8002e42:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002e46:	d1f1      	bne.n	8002e2c <d_print_comp_inner+0x51c>
 8002e48:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e4c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e50:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002e54:	4620      	mov	r0, r4
 8002e56:	4798      	blx	r3
 8002e58:	2101      	movs	r1, #1
 8002e5a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002e5e:	2300      	movs	r3, #0
 8002e60:	440a      	add	r2, r1
 8002e62:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002e66:	e7e3      	b.n	8002e30 <d_print_comp_inner+0x520>
 8002e68:	4e7f      	ldr	r6, [pc, #508]	; (8003068 <d_print_comp_inner+0x758>)
 8002e6a:	f04f 0900 	mov.w	r9, #0
 8002e6e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002e72:	f106 0a12 	add.w	sl, r6, #18
 8002e76:	e009      	b.n	8002e8c <d_print_comp_inner+0x57c>
 8002e78:	460b      	mov	r3, r1
 8002e7a:	3101      	adds	r1, #1
 8002e7c:	45b2      	cmp	sl, r6
 8002e7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002e82:	54e7      	strb	r7, [r4, r3]
 8002e84:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002e88:	f000 87a0 	beq.w	8003dcc <d_print_comp_inner+0x14bc>
 8002e8c:	29ff      	cmp	r1, #255	; 0xff
 8002e8e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002e92:	d1f1      	bne.n	8002e78 <d_print_comp_inner+0x568>
 8002e94:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e98:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e9c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002ea0:	4620      	mov	r0, r4
 8002ea2:	4798      	blx	r3
 8002ea4:	2101      	movs	r1, #1
 8002ea6:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002eaa:	2300      	movs	r3, #0
 8002eac:	440a      	add	r2, r1
 8002eae:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002eb2:	e7e3      	b.n	8002e7c <d_print_comp_inner+0x56c>
 8002eb4:	4e6d      	ldr	r6, [pc, #436]	; (800306c <d_print_comp_inner+0x75c>)
 8002eb6:	f04f 0900 	mov.w	r9, #0
 8002eba:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002ebe:	f106 0a10 	add.w	sl, r6, #16
 8002ec2:	e009      	b.n	8002ed8 <d_print_comp_inner+0x5c8>
 8002ec4:	460b      	mov	r3, r1
 8002ec6:	3101      	adds	r1, #1
 8002ec8:	4556      	cmp	r6, sl
 8002eca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002ece:	54e7      	strb	r7, [r4, r3]
 8002ed0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002ed4:	f000 8773 	beq.w	8003dbe <d_print_comp_inner+0x14ae>
 8002ed8:	29ff      	cmp	r1, #255	; 0xff
 8002eda:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002ede:	d1f1      	bne.n	8002ec4 <d_print_comp_inner+0x5b4>
 8002ee0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ee4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002ee8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002eec:	4620      	mov	r0, r4
 8002eee:	4798      	blx	r3
 8002ef0:	2101      	movs	r1, #1
 8002ef2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002ef6:	2300      	movs	r3, #0
 8002ef8:	440a      	add	r2, r1
 8002efa:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002efe:	e7e3      	b.n	8002ec8 <d_print_comp_inner+0x5b8>
 8002f00:	4e5b      	ldr	r6, [pc, #364]	; (8003070 <d_print_comp_inner+0x760>)
 8002f02:	f04f 0900 	mov.w	r9, #0
 8002f06:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002f0a:	f106 0a0d 	add.w	sl, r6, #13
 8002f0e:	e009      	b.n	8002f24 <d_print_comp_inner+0x614>
 8002f10:	460b      	mov	r3, r1
 8002f12:	3101      	adds	r1, #1
 8002f14:	4556      	cmp	r6, sl
 8002f16:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f1a:	54e7      	strb	r7, [r4, r3]
 8002f1c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002f20:	f000 875b 	beq.w	8003dda <d_print_comp_inner+0x14ca>
 8002f24:	29ff      	cmp	r1, #255	; 0xff
 8002f26:	f816 7b01 	ldrb.w	r7, [r6], #1
 8002f2a:	d1f1      	bne.n	8002f10 <d_print_comp_inner+0x600>
 8002f2c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f30:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f34:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002f38:	4620      	mov	r0, r4
 8002f3a:	4798      	blx	r3
 8002f3c:	2101      	movs	r1, #1
 8002f3e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002f42:	2300      	movs	r3, #0
 8002f44:	440a      	add	r2, r1
 8002f46:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002f4a:	e7e3      	b.n	8002f14 <d_print_comp_inner+0x604>
 8002f4c:	4e49      	ldr	r6, [pc, #292]	; (8003074 <d_print_comp_inner+0x764>)
 8002f4e:	f04f 0900 	mov.w	r9, #0
 8002f52:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002f56:	f106 0a18 	add.w	sl, r6, #24
 8002f5a:	e009      	b.n	8002f70 <d_print_comp_inner+0x660>
 8002f5c:	460b      	mov	r3, r1
 8002f5e:	3101      	adds	r1, #1
 8002f60:	45b2      	cmp	sl, r6
 8002f62:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f66:	54e7      	strb	r7, [r4, r3]
 8002f68:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002f6c:	f000 86e8 	beq.w	8003d40 <d_print_comp_inner+0x1430>
 8002f70:	29ff      	cmp	r1, #255	; 0xff
 8002f72:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8002f76:	d1f1      	bne.n	8002f5c <d_print_comp_inner+0x64c>
 8002f78:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f7c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f80:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002f84:	4620      	mov	r0, r4
 8002f86:	4798      	blx	r3
 8002f88:	2101      	movs	r1, #1
 8002f8a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002f8e:	2300      	movs	r3, #0
 8002f90:	440a      	add	r2, r1
 8002f92:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002f96:	e7e3      	b.n	8002f60 <d_print_comp_inner+0x650>
 8002f98:	4e37      	ldr	r6, [pc, #220]	; (8003078 <d_print_comp_inner+0x768>)
 8002f9a:	f04f 0900 	mov.w	r9, #0
 8002f9e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002fa2:	f106 0a0b 	add.w	sl, r6, #11
 8002fa6:	e009      	b.n	8002fbc <d_print_comp_inner+0x6ac>
 8002fa8:	460b      	mov	r3, r1
 8002faa:	3101      	adds	r1, #1
 8002fac:	45b2      	cmp	sl, r6
 8002fae:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002fb2:	54e7      	strb	r7, [r4, r3]
 8002fb4:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002fb8:	f000 87cf 	beq.w	8003f5a <d_print_comp_inner+0x164a>
 8002fbc:	29ff      	cmp	r1, #255	; 0xff
 8002fbe:	f816 7b01 	ldrb.w	r7, [r6], #1
 8002fc2:	d1f1      	bne.n	8002fa8 <d_print_comp_inner+0x698>
 8002fc4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002fc8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002fcc:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002fd0:	4620      	mov	r0, r4
 8002fd2:	4798      	blx	r3
 8002fd4:	2101      	movs	r1, #1
 8002fd6:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8002fda:	2300      	movs	r3, #0
 8002fdc:	440a      	add	r2, r1
 8002fde:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8002fe2:	e7e3      	b.n	8002fac <d_print_comp_inner+0x69c>
 8002fe4:	4e25      	ldr	r6, [pc, #148]	; (800307c <d_print_comp_inner+0x76c>)
 8002fe6:	f04f 0900 	mov.w	r9, #0
 8002fea:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002fee:	f106 0a08 	add.w	sl, r6, #8
 8002ff2:	e009      	b.n	8003008 <d_print_comp_inner+0x6f8>
 8002ff4:	460b      	mov	r3, r1
 8002ff6:	3101      	adds	r1, #1
 8002ff8:	45b2      	cmp	sl, r6
 8002ffa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002ffe:	54e7      	strb	r7, [r4, r3]
 8003000:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003004:	f000 86cd 	beq.w	8003da2 <d_print_comp_inner+0x1492>
 8003008:	29ff      	cmp	r1, #255	; 0xff
 800300a:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800300e:	d1f1      	bne.n	8002ff4 <d_print_comp_inner+0x6e4>
 8003010:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003014:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003018:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800301c:	4620      	mov	r0, r4
 800301e:	4798      	blx	r3
 8003020:	2101      	movs	r1, #1
 8003022:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003026:	2300      	movs	r3, #0
 8003028:	440a      	add	r2, r1
 800302a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800302e:	e7e3      	b.n	8002ff8 <d_print_comp_inner+0x6e8>
 8003030:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003034:	29ff      	cmp	r1, #255	; 0xff
 8003036:	f001 8480 	beq.w	800493a <d_print_comp_inner+0x202a>
 800303a:	1c4a      	adds	r2, r1, #1
 800303c:	237e      	movs	r3, #126	; 0x7e
 800303e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003042:	5463      	strb	r3, [r4, r1]
 8003044:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003048:	4641      	mov	r1, r8
 800304a:	68aa      	ldr	r2, [r5, #8]
 800304c:	4620      	mov	r0, r4
 800304e:	f002 fa09 	bl	8005464 <d_print_comp>
 8003052:	e52b      	b.n	8002aac <d_print_comp_inner+0x19c>
 8003054:	68aa      	ldr	r2, [r5, #8]
 8003056:	f002 fa05 	bl	8005464 <d_print_comp>
 800305a:	e527      	b.n	8002aac <d_print_comp_inner+0x19c>
 800305c:	08011f97 	.word	0x08011f97
 8003060:	08011f67 	.word	0x08011f67
 8003064:	08011f63 	.word	0x08011f63
 8003068:	08011f3b 	.word	0x08011f3b
 800306c:	08011f4f 	.word	0x08011f4f
 8003070:	08011f2c 	.word	0x08011f2c
 8003074:	08011f07 	.word	0x08011f07
 8003078:	08011ef0 	.word	0x08011ef0
 800307c:	08011efb 	.word	0x08011efb
 8003080:	2200      	movs	r2, #0
 8003082:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8003086:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
 800308a:	686e      	ldr	r6, [r5, #4]
 800308c:	9300      	str	r3, [sp, #0]
 800308e:	2e00      	cmp	r6, #0
 8003090:	f000 8651 	beq.w	8003d36 <d_print_comp_inner+0x1426>
 8003094:	f10d 0910 	add.w	r9, sp, #16
 8003098:	4617      	mov	r7, r2
 800309a:	4696      	mov	lr, r2
 800309c:	464b      	mov	r3, r9
 800309e:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
 80030a2:	7831      	ldrb	r1, [r6, #0]
 80030a4:	601a      	str	r2, [r3, #0]
 80030a6:	f1a1 021c 	sub.w	r2, r1, #28
 80030aa:	2a04      	cmp	r2, #4
 80030ac:	605e      	str	r6, [r3, #4]
 80030ae:	f8c3 e008 	str.w	lr, [r3, #8]
 80030b2:	f8c3 c00c 	str.w	ip, [r3, #12]
 80030b6:	f107 0701 	add.w	r7, r7, #1
 80030ba:	4618      	mov	r0, r3
 80030bc:	f240 862f 	bls.w	8003d1e <d_print_comp_inner+0x140e>
 80030c0:	294c      	cmp	r1, #76	; 0x4c
 80030c2:	f000 862c 	beq.w	8003d1e <d_print_comp_inner+0x140e>
 80030c6:	2904      	cmp	r1, #4
 80030c8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80030cc:	f001 87c2 	beq.w	8005054 <d_print_comp_inner+0x2744>
 80030d0:	2902      	cmp	r1, #2
 80030d2:	d11a      	bne.n	800310a <d_print_comp_inner+0x7fa>
 80030d4:	f8d6 b008 	ldr.w	fp, [r6, #8]
 80030d8:	f89b 3000 	ldrb.w	r3, [fp]
 80030dc:	2b46      	cmp	r3, #70	; 0x46
 80030de:	f002 803c 	beq.w	800515a <d_print_comp_inner+0x284a>
 80030e2:	462b      	mov	r3, r5
 80030e4:	eb09 1e07 	add.w	lr, r9, r7, lsl #4
 80030e8:	9601      	str	r6, [sp, #4]
 80030ea:	465d      	mov	r5, fp
 80030ec:	4676      	mov	r6, lr
 80030ee:	46a2      	mov	sl, r4
 80030f0:	469b      	mov	fp, r3
 80030f2:	782b      	ldrb	r3, [r5, #0]
 80030f4:	f1a3 021c 	sub.w	r2, r3, #28
 80030f8:	2a04      	cmp	r2, #4
 80030fa:	f241 8062 	bls.w	80041c2 <d_print_comp_inner+0x18b2>
 80030fe:	2b4c      	cmp	r3, #76	; 0x4c
 8003100:	f001 805f 	beq.w	80041c2 <d_print_comp_inner+0x18b2>
 8003104:	4654      	mov	r4, sl
 8003106:	465d      	mov	r5, fp
 8003108:	9e01      	ldr	r6, [sp, #4]
 800310a:	68aa      	ldr	r2, [r5, #8]
 800310c:	4641      	mov	r1, r8
 800310e:	4620      	mov	r0, r4
 8003110:	f002 f9a8 	bl	8005464 <d_print_comp>
 8003114:	7833      	ldrb	r3, [r6, #0]
 8003116:	2b04      	cmp	r3, #4
 8003118:	f002 8027 	beq.w	800516a <d_print_comp_inner+0x285a>
 800311c:	2520      	movs	r5, #32
 800311e:	eb09 1907 	add.w	r9, r9, r7, lsl #4
 8003122:	f859 6c08 	ldr.w	r6, [r9, #-8]
 8003126:	3f01      	subs	r7, #1
 8003128:	b986      	cbnz	r6, 800314c <d_print_comp_inner+0x83c>
 800312a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800312e:	29ff      	cmp	r1, #255	; 0xff
 8003130:	f002 804a 	beq.w	80051c8 <d_print_comp_inner+0x28b8>
 8003134:	1c4b      	adds	r3, r1, #1
 8003136:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800313a:	f859 2c0c 	ldr.w	r2, [r9, #-12]
 800313e:	5465      	strb	r5, [r4, r1]
 8003140:	4620      	mov	r0, r4
 8003142:	4641      	mov	r1, r8
 8003144:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003148:	f002 f99c 	bl	8005484 <d_print_mod>
 800314c:	f1a9 0910 	sub.w	r9, r9, #16
 8003150:	2f00      	cmp	r7, #0
 8003152:	d1e6      	bne.n	8003122 <d_print_comp_inner+0x812>
 8003154:	9b00      	ldr	r3, [sp, #0]
 8003156:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 800315a:	e4a7      	b.n	8002aac <d_print_comp_inner+0x19c>
 800315c:	4ed2      	ldr	r6, [pc, #840]	; (80034a8 <d_print_comp_inner+0xb98>)
 800315e:	686a      	ldr	r2, [r5, #4]
 8003160:	f002 f980 	bl	8005464 <d_print_comp>
 8003164:	f04f 0900 	mov.w	r9, #0
 8003168:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800316c:	f106 0a05 	add.w	sl, r6, #5
 8003170:	e009      	b.n	8003186 <d_print_comp_inner+0x876>
 8003172:	460b      	mov	r3, r1
 8003174:	3101      	adds	r1, #1
 8003176:	45b2      	cmp	sl, r6
 8003178:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800317c:	54e7      	strb	r7, [r4, r3]
 800317e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003182:	f000 86d7 	beq.w	8003f34 <d_print_comp_inner+0x1624>
 8003186:	29ff      	cmp	r1, #255	; 0xff
 8003188:	f816 7b01 	ldrb.w	r7, [r6], #1
 800318c:	d1f1      	bne.n	8003172 <d_print_comp_inner+0x862>
 800318e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003192:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003196:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800319a:	4620      	mov	r0, r4
 800319c:	4798      	blx	r3
 800319e:	2101      	movs	r1, #1
 80031a0:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80031a4:	2300      	movs	r3, #0
 80031a6:	440a      	add	r2, r1
 80031a8:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80031ac:	e7e3      	b.n	8003176 <d_print_comp_inner+0x866>
 80031ae:	686a      	ldr	r2, [r5, #4]
 80031b0:	f002 f958 	bl	8005464 <d_print_comp>
 80031b4:	f018 0904 	ands.w	r9, r8, #4
 80031b8:	f001 82af 	beq.w	800471a <d_print_comp_inner+0x1e0a>
 80031bc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80031c0:	29ff      	cmp	r1, #255	; 0xff
 80031c2:	f001 85a1 	beq.w	8004d08 <d_print_comp_inner+0x23f8>
 80031c6:	1c4a      	adds	r2, r1, #1
 80031c8:	232e      	movs	r3, #46	; 0x2e
 80031ca:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80031ce:	5463      	strb	r3, [r4, r1]
 80031d0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80031d4:	68ad      	ldr	r5, [r5, #8]
 80031d6:	782b      	ldrb	r3, [r5, #0]
 80031d8:	2b46      	cmp	r3, #70	; 0x46
 80031da:	f001 83d1 	beq.w	8004980 <d_print_comp_inner+0x2070>
 80031de:	462a      	mov	r2, r5
 80031e0:	4641      	mov	r1, r8
 80031e2:	4620      	mov	r0, r4
 80031e4:	f002 f93e 	bl	8005464 <d_print_comp>
 80031e8:	e460      	b.n	8002aac <d_print_comp_inner+0x19c>
 80031ea:	f011 0804 	ands.w	r8, r1, #4
 80031ee:	f041 8090 	bne.w	8004312 <d_print_comp_inner+0x1a02>
 80031f2:	68af      	ldr	r7, [r5, #8]
 80031f4:	686d      	ldr	r5, [r5, #4]
 80031f6:	2f00      	cmp	r7, #0
 80031f8:	f43f ac58 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80031fc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003200:	442f      	add	r7, r5
 8003202:	e009      	b.n	8003218 <d_print_comp_inner+0x908>
 8003204:	460b      	mov	r3, r1
 8003206:	3101      	adds	r1, #1
 8003208:	42bd      	cmp	r5, r7
 800320a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800320e:	54e6      	strb	r6, [r4, r3]
 8003210:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003214:	f43f ac4a 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8003218:	29ff      	cmp	r1, #255	; 0xff
 800321a:	f815 6b01 	ldrb.w	r6, [r5], #1
 800321e:	d1f1      	bne.n	8003204 <d_print_comp_inner+0x8f4>
 8003220:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003224:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003228:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800322c:	4620      	mov	r0, r4
 800322e:	4798      	blx	r3
 8003230:	2101      	movs	r1, #1
 8003232:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003236:	2300      	movs	r3, #0
 8003238:	440a      	add	r2, r1
 800323a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800323e:	e7e3      	b.n	8003208 <d_print_comp_inner+0x8f8>
 8003240:	2301      	movs	r3, #1
 8003242:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8003246:	e431      	b.n	8002aac <d_print_comp_inner+0x19c>
 8003248:	f8d0 311c 	ldr.w	r3, [r0, #284]	; 0x11c
 800324c:	2b00      	cmp	r3, #0
 800324e:	f041 810a 	bne.w	8004466 <d_print_comp_inner+0x1b56>
 8003252:	1d29      	adds	r1, r5, #4
 8003254:	f7fd faaa 	bl	80007ac <d_lookup_template_argument.isra.6>
 8003258:	2800      	cmp	r0, #0
 800325a:	f43f ac3b 	beq.w	8002ad4 <d_print_comp_inner+0x1c4>
 800325e:	7803      	ldrb	r3, [r0, #0]
 8003260:	2b2f      	cmp	r3, #47	; 0x2f
 8003262:	f001 8401 	beq.w	8004a68 <d_print_comp_inner+0x2158>
 8003266:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800326a:	4602      	mov	r2, r0
 800326c:	682b      	ldr	r3, [r5, #0]
 800326e:	4641      	mov	r1, r8
 8003270:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003274:	4620      	mov	r0, r4
 8003276:	f002 f8f5 	bl	8005464 <d_print_comp>
 800327a:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 800327e:	e415      	b.n	8002aac <d_print_comp_inner+0x19c>
 8003280:	2300      	movs	r3, #0
 8003282:	f8d0 9114 	ldr.w	r9, [r0, #276]	; 0x114
 8003286:	f8d0 7144 	ldr.w	r7, [r0, #324]	; 0x144
 800328a:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
 800328e:	f8c0 5144 	str.w	r5, [r0, #324]	; 0x144
 8003292:	f011 0f04 	tst.w	r1, #4
 8003296:	686e      	ldr	r6, [r5, #4]
 8003298:	d005      	beq.n	80032a6 <d_print_comp_inner+0x996>
 800329a:	7833      	ldrb	r3, [r6, #0]
 800329c:	b91b      	cbnz	r3, 80032a6 <d_print_comp_inner+0x996>
 800329e:	68b2      	ldr	r2, [r6, #8]
 80032a0:	2a06      	cmp	r2, #6
 80032a2:	f001 8543 	beq.w	8004d2c <d_print_comp_inner+0x241c>
 80032a6:	4632      	mov	r2, r6
 80032a8:	4641      	mov	r1, r8
 80032aa:	4620      	mov	r0, r4
 80032ac:	f002 f8da 	bl	8005464 <d_print_comp>
 80032b0:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 80032b4:	2b3c      	cmp	r3, #60	; 0x3c
 80032b6:	f001 8279 	beq.w	80047ac <d_print_comp_inner+0x1e9c>
 80032ba:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80032be:	2bff      	cmp	r3, #255	; 0xff
 80032c0:	f001 8490 	beq.w	8004be4 <d_print_comp_inner+0x22d4>
 80032c4:	1c59      	adds	r1, r3, #1
 80032c6:	223c      	movs	r2, #60	; 0x3c
 80032c8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80032cc:	54e2      	strb	r2, [r4, r3]
 80032ce:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80032d2:	4641      	mov	r1, r8
 80032d4:	68aa      	ldr	r2, [r5, #8]
 80032d6:	4620      	mov	r0, r4
 80032d8:	f002 f8c4 	bl	8005464 <d_print_comp>
 80032dc:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 80032e0:	2b3e      	cmp	r3, #62	; 0x3e
 80032e2:	f001 823e 	beq.w	8004762 <d_print_comp_inner+0x1e52>
 80032e6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80032ea:	2bff      	cmp	r3, #255	; 0xff
 80032ec:	f001 8467 	beq.w	8004bbe <d_print_comp_inner+0x22ae>
 80032f0:	1c59      	adds	r1, r3, #1
 80032f2:	223e      	movs	r2, #62	; 0x3e
 80032f4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80032f8:	54e2      	strb	r2, [r4, r3]
 80032fa:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80032fe:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003302:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 8003306:	f7ff bbd1 	b.w	8002aac <d_print_comp_inner+0x19c>
 800330a:	f8d5 9004 	ldr.w	r9, [r5, #4]
 800330e:	f1b9 0f00 	cmp.w	r9, #0
 8003312:	f001 8085 	beq.w	8004420 <d_print_comp_inner+0x1b10>
 8003316:	4d65      	ldr	r5, [pc, #404]	; (80034ac <d_print_comp_inner+0xb9c>)
 8003318:	f04f 0800 	mov.w	r8, #0
 800331c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003320:	1daf      	adds	r7, r5, #6
 8003322:	e009      	b.n	8003338 <d_print_comp_inner+0xa28>
 8003324:	460b      	mov	r3, r1
 8003326:	3101      	adds	r1, #1
 8003328:	42af      	cmp	r7, r5
 800332a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800332e:	54e6      	strb	r6, [r4, r3]
 8003330:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003334:	f000 8786 	beq.w	8004244 <d_print_comp_inner+0x1934>
 8003338:	29ff      	cmp	r1, #255	; 0xff
 800333a:	f815 6b01 	ldrb.w	r6, [r5], #1
 800333e:	d1f1      	bne.n	8003324 <d_print_comp_inner+0xa14>
 8003340:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003344:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003348:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800334c:	4620      	mov	r0, r4
 800334e:	4798      	blx	r3
 8003350:	2101      	movs	r1, #1
 8003352:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003356:	2300      	movs	r3, #0
 8003358:	440a      	add	r2, r1
 800335a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800335e:	e7e3      	b.n	8003328 <d_print_comp_inner+0xa18>
 8003360:	4e53      	ldr	r6, [pc, #332]	; (80034b0 <d_print_comp_inner+0xba0>)
 8003362:	f04f 0900 	mov.w	r9, #0
 8003366:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800336a:	f106 0a0a 	add.w	sl, r6, #10
 800336e:	e009      	b.n	8003384 <d_print_comp_inner+0xa74>
 8003370:	460b      	mov	r3, r1
 8003372:	3101      	adds	r1, #1
 8003374:	4556      	cmp	r6, sl
 8003376:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800337a:	54e7      	strb	r7, [r4, r3]
 800337c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003380:	f000 8705 	beq.w	800418e <d_print_comp_inner+0x187e>
 8003384:	29ff      	cmp	r1, #255	; 0xff
 8003386:	f816 7b01 	ldrb.w	r7, [r6], #1
 800338a:	d1f1      	bne.n	8003370 <d_print_comp_inner+0xa60>
 800338c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003390:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003394:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003398:	4620      	mov	r0, r4
 800339a:	4798      	blx	r3
 800339c:	2101      	movs	r1, #1
 800339e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80033a2:	2300      	movs	r3, #0
 80033a4:	440a      	add	r2, r1
 80033a6:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80033aa:	e7e3      	b.n	8003374 <d_print_comp_inner+0xa64>
 80033ac:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80033b0:	792d      	ldrb	r5, [r5, #4]
 80033b2:	29ff      	cmp	r1, #255	; 0xff
 80033b4:	f001 82af 	beq.w	8004916 <d_print_comp_inner+0x2006>
 80033b8:	1c4b      	adds	r3, r1, #1
 80033ba:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80033be:	5465      	strb	r5, [r4, r1]
 80033c0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80033c4:	f7ff bb72 	b.w	8002aac <d_print_comp_inner+0x19c>
 80033c8:	686a      	ldr	r2, [r5, #4]
 80033ca:	f002 f84b 	bl	8005464 <d_print_comp>
 80033ce:	68aa      	ldr	r2, [r5, #8]
 80033d0:	4641      	mov	r1, r8
 80033d2:	4620      	mov	r0, r4
 80033d4:	f002 f846 	bl	8005464 <d_print_comp>
 80033d8:	f7ff bb68 	b.w	8002aac <d_print_comp_inner+0x19c>
 80033dc:	4e35      	ldr	r6, [pc, #212]	; (80034b4 <d_print_comp_inner+0xba4>)
 80033de:	686a      	ldr	r2, [r5, #4]
 80033e0:	f002 f840 	bl	8005464 <d_print_comp>
 80033e4:	f04f 0900 	mov.w	r9, #0
 80033e8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80033ec:	f106 0a08 	add.w	sl, r6, #8
 80033f0:	e009      	b.n	8003406 <d_print_comp_inner+0xaf6>
 80033f2:	460b      	mov	r3, r1
 80033f4:	3101      	adds	r1, #1
 80033f6:	4556      	cmp	r6, sl
 80033f8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80033fc:	54e7      	strb	r7, [r4, r3]
 80033fe:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003402:	f000 850d 	beq.w	8003e20 <d_print_comp_inner+0x1510>
 8003406:	29ff      	cmp	r1, #255	; 0xff
 8003408:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800340c:	d1f1      	bne.n	80033f2 <d_print_comp_inner+0xae2>
 800340e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003412:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003416:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800341a:	4620      	mov	r0, r4
 800341c:	4798      	blx	r3
 800341e:	2101      	movs	r1, #1
 8003420:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003424:	2300      	movs	r3, #0
 8003426:	440a      	add	r2, r1
 8003428:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800342c:	e7e3      	b.n	80033f6 <d_print_comp_inner+0xae6>
 800342e:	686a      	ldr	r2, [r5, #4]
 8003430:	b10a      	cbz	r2, 8003436 <d_print_comp_inner+0xb26>
 8003432:	f002 f817 	bl	8005464 <d_print_comp>
 8003436:	68ab      	ldr	r3, [r5, #8]
 8003438:	2b00      	cmp	r3, #0
 800343a:	f43f ab37 	beq.w	8002aac <d_print_comp_inner+0x19c>
 800343e:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
 8003442:	2efd      	cmp	r6, #253	; 0xfd
 8003444:	f201 81c0 	bhi.w	80047c8 <d_print_comp_inner+0x1eb8>
 8003448:	4f1b      	ldr	r7, [pc, #108]	; (80034b8 <d_print_comp_inner+0xba8>)
 800344a:	f107 0b02 	add.w	fp, r7, #2
 800344e:	e00a      	b.n	8003466 <d_print_comp_inner+0xb56>
 8003450:	46b2      	mov	sl, r6
 8003452:	3601      	adds	r6, #1
 8003454:	455f      	cmp	r7, fp
 8003456:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800345a:	f804 900a 	strb.w	r9, [r4, sl]
 800345e:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8003462:	f000 86c9 	beq.w	80041f8 <d_print_comp_inner+0x18e8>
 8003466:	2eff      	cmp	r6, #255	; 0xff
 8003468:	f817 9b01 	ldrb.w	r9, [r7], #1
 800346c:	d1f0      	bne.n	8003450 <d_print_comp_inner+0xb40>
 800346e:	f04f 0300 	mov.w	r3, #0
 8003472:	4631      	mov	r1, r6
 8003474:	2601      	movs	r6, #1
 8003476:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 800347a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800347e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003482:	4620      	mov	r0, r4
 8003484:	4798      	blx	r3
 8003486:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800348a:	f04f 0a00 	mov.w	sl, #0
 800348e:	4433      	add	r3, r6
 8003490:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003494:	e7de      	b.n	8003454 <d_print_comp_inner+0xb44>
 8003496:	4e09      	ldr	r6, [pc, #36]	; (80034bc <d_print_comp_inner+0xbac>)
 8003498:	f04f 0900 	mov.w	r9, #0
 800349c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80034a0:	f106 0a09 	add.w	sl, r6, #9
 80034a4:	e016      	b.n	80034d4 <d_print_comp_inner+0xbc4>
 80034a6:	bf00      	nop
 80034a8:	08011ebc 	.word	0x08011ebc
 80034ac:	080120cc 	.word	0x080120cc
 80034b0:	080120b4 	.word	0x080120b4
 80034b4:	08012133 	.word	0x08012133
 80034b8:	08012050 	.word	0x08012050
 80034bc:	0801205f 	.word	0x0801205f
 80034c0:	460b      	mov	r3, r1
 80034c2:	3101      	adds	r1, #1
 80034c4:	4556      	cmp	r6, sl
 80034c6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80034ca:	54e7      	strb	r7, [r4, r3]
 80034cc:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80034d0:	f000 8596 	beq.w	8004000 <d_print_comp_inner+0x16f0>
 80034d4:	29ff      	cmp	r1, #255	; 0xff
 80034d6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 80034da:	d1f1      	bne.n	80034c0 <d_print_comp_inner+0xbb0>
 80034dc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80034e0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80034e4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80034e8:	4620      	mov	r0, r4
 80034ea:	4798      	blx	r3
 80034ec:	2101      	movs	r1, #1
 80034ee:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80034f2:	2300      	movs	r3, #0
 80034f4:	440a      	add	r2, r1
 80034f6:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80034fa:	e7e3      	b.n	80034c4 <d_print_comp_inner+0xbb4>
 80034fc:	4ed2      	ldr	r6, [pc, #840]	; (8003848 <d_print_comp_inner+0xf38>)
 80034fe:	f04f 0900 	mov.w	r9, #0
 8003502:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003506:	f106 0a09 	add.w	sl, r6, #9
 800350a:	e009      	b.n	8003520 <d_print_comp_inner+0xc10>
 800350c:	460b      	mov	r3, r1
 800350e:	3101      	adds	r1, #1
 8003510:	4556      	cmp	r6, sl
 8003512:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003516:	54e7      	strb	r7, [r4, r3]
 8003518:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800351c:	f000 8599 	beq.w	8004052 <d_print_comp_inner+0x1742>
 8003520:	29ff      	cmp	r1, #255	; 0xff
 8003522:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003526:	d1f1      	bne.n	800350c <d_print_comp_inner+0xbfc>
 8003528:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800352c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003530:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003534:	4620      	mov	r0, r4
 8003536:	4798      	blx	r3
 8003538:	2101      	movs	r1, #1
 800353a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 800353e:	2300      	movs	r3, #0
 8003540:	440a      	add	r2, r1
 8003542:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003546:	e7e3      	b.n	8003510 <d_print_comp_inner+0xc00>
 8003548:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800354c:	4dbf      	ldr	r5, [pc, #764]	; (800384c <d_print_comp_inner+0xf3c>)
 800354e:	f04f 0800 	mov.w	r8, #0
 8003552:	f8da 7008 	ldr.w	r7, [sl, #8]
 8003556:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800355a:	f105 0908 	add.w	r9, r5, #8
 800355e:	e009      	b.n	8003574 <d_print_comp_inner+0xc64>
 8003560:	460b      	mov	r3, r1
 8003562:	3101      	adds	r1, #1
 8003564:	45a9      	cmp	r9, r5
 8003566:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800356a:	54e6      	strb	r6, [r4, r3]
 800356c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003570:	f000 8508 	beq.w	8003f84 <d_print_comp_inner+0x1674>
 8003574:	29ff      	cmp	r1, #255	; 0xff
 8003576:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800357a:	d1f1      	bne.n	8003560 <d_print_comp_inner+0xc50>
 800357c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003580:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003584:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003588:	4620      	mov	r0, r4
 800358a:	4798      	blx	r3
 800358c:	2101      	movs	r1, #1
 800358e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003592:	2300      	movs	r3, #0
 8003594:	440a      	add	r2, r1
 8003596:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800359a:	e7e3      	b.n	8003564 <d_print_comp_inner+0xc54>
 800359c:	686a      	ldr	r2, [r5, #4]
 800359e:	68ae      	ldr	r6, [r5, #8]
 80035a0:	b10a      	cbz	r2, 80035a6 <d_print_comp_inner+0xc96>
 80035a2:	f001 ff5f 	bl	8005464 <d_print_comp>
 80035a6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80035aa:	2bff      	cmp	r3, #255	; 0xff
 80035ac:	f001 82b5 	beq.w	8004b1a <d_print_comp_inner+0x220a>
 80035b0:	1c5a      	adds	r2, r3, #1
 80035b2:	257b      	movs	r5, #123	; 0x7b
 80035b4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80035b8:	4641      	mov	r1, r8
 80035ba:	54e5      	strb	r5, [r4, r3]
 80035bc:	4632      	mov	r2, r6
 80035be:	4620      	mov	r0, r4
 80035c0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80035c4:	f001 ff4e 	bl	8005464 <d_print_comp>
 80035c8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80035cc:	29ff      	cmp	r1, #255	; 0xff
 80035ce:	f001 81e9 	beq.w	80049a4 <d_print_comp_inner+0x2094>
 80035d2:	1c4a      	adds	r2, r1, #1
 80035d4:	237d      	movs	r3, #125	; 0x7d
 80035d6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80035da:	5463      	strb	r3, [r4, r1]
 80035dc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80035e0:	f7ff ba64 	b.w	8002aac <d_print_comp_inner+0x19c>
 80035e4:	f8d5 9004 	ldr.w	r9, [r5, #4]
 80035e8:	68ae      	ldr	r6, [r5, #8]
 80035ea:	f899 3000 	ldrb.w	r3, [r9]
 80035ee:	2b31      	cmp	r3, #49	; 0x31
 80035f0:	f000 87cc 	beq.w	800458c <d_print_comp_inner+0x1c7c>
 80035f4:	2b33      	cmp	r3, #51	; 0x33
 80035f6:	f041 86d7 	bne.w	80053a8 <d_print_comp_inner+0x2a98>
 80035fa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80035fe:	29ff      	cmp	r1, #255	; 0xff
 8003600:	f001 84c7 	beq.w	8004f92 <d_print_comp_inner+0x2682>
 8003604:	2328      	movs	r3, #40	; 0x28
 8003606:	1c4a      	adds	r2, r1, #1
 8003608:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800360c:	5463      	strb	r3, [r4, r1]
 800360e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003612:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8003616:	f8d4 5128 	ldr.w	r5, [r4, #296]	; 0x128
 800361a:	a904      	add	r1, sp, #16
 800361c:	461a      	mov	r2, r3
 800361e:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8003622:	4620      	mov	r0, r4
 8003624:	4641      	mov	r1, r8
 8003626:	9304      	str	r3, [sp, #16]
 8003628:	9505      	str	r5, [sp, #20]
 800362a:	f7ff f971 	bl	8002910 <d_print_comp_inner>
 800362e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003632:	9b05      	ldr	r3, [sp, #20]
 8003634:	29ff      	cmp	r1, #255	; 0xff
 8003636:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800363a:	f001 8499 	beq.w	8004f70 <d_print_comp_inner+0x2660>
 800363e:	2329      	movs	r3, #41	; 0x29
 8003640:	1c4a      	adds	r2, r1, #1
 8003642:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003646:	5463      	strb	r3, [r4, r1]
 8003648:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800364c:	4632      	mov	r2, r6
 800364e:	4641      	mov	r1, r8
 8003650:	4620      	mov	r0, r4
 8003652:	f002 fd35 	bl	80060c0 <d_print_subexpr>
 8003656:	f7ff ba29 	b.w	8002aac <d_print_comp_inner+0x19c>
 800365a:	686a      	ldr	r2, [r5, #4]
 800365c:	f002 fcf2 	bl	8006044 <d_print_expr_op>
 8003660:	f7ff ba24 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003664:	f011 0f20 	tst.w	r1, #32
 8003668:	f040 8753 	bne.w	8004512 <d_print_comp_inner+0x1c02>
 800366c:	686a      	ldr	r2, [r5, #4]
 800366e:	b11a      	cbz	r2, 8003678 <d_print_comp_inner+0xd68>
 8003670:	f018 0640 	ands.w	r6, r8, #64	; 0x40
 8003674:	f001 81d1 	beq.w	8004a1a <d_print_comp_inner+0x210a>
 8003678:	f028 0860 	bic.w	r8, r8, #96	; 0x60
 800367c:	f105 0208 	add.w	r2, r5, #8
 8003680:	4641      	mov	r1, r8
 8003682:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003686:	4620      	mov	r0, r4
 8003688:	f002 fbe8 	bl	8005e5c <d_print_function_type.isra.11>
 800368c:	f7ff ba0e 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003690:	f011 0804 	ands.w	r8, r1, #4
 8003694:	686b      	ldr	r3, [r5, #4]
 8003696:	f040 8613 	bne.w	80042c0 <d_print_comp_inner+0x19b0>
 800369a:	e893 00a0 	ldmia.w	r3, {r5, r7}
 800369e:	2f00      	cmp	r7, #0
 80036a0:	f43f aa04 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80036a4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80036a8:	442f      	add	r7, r5
 80036aa:	e009      	b.n	80036c0 <d_print_comp_inner+0xdb0>
 80036ac:	460b      	mov	r3, r1
 80036ae:	3101      	adds	r1, #1
 80036b0:	42bd      	cmp	r5, r7
 80036b2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80036b6:	54e6      	strb	r6, [r4, r3]
 80036b8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80036bc:	f43f a9f6 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80036c0:	29ff      	cmp	r1, #255	; 0xff
 80036c2:	f815 6b01 	ldrb.w	r6, [r5], #1
 80036c6:	d1f1      	bne.n	80036ac <d_print_comp_inner+0xd9c>
 80036c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80036cc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80036d0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80036d4:	4620      	mov	r0, r4
 80036d6:	4798      	blx	r3
 80036d8:	2101      	movs	r1, #1
 80036da:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80036de:	2300      	movs	r3, #0
 80036e0:	440a      	add	r2, r1
 80036e2:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80036e6:	e7e3      	b.n	80036b0 <d_print_comp_inner+0xda0>
 80036e8:	6869      	ldr	r1, [r5, #4]
 80036ea:	f8d0 711c 	ldr.w	r7, [r0, #284]	; 0x11c
 80036ee:	780b      	ldrb	r3, [r1, #0]
 80036f0:	2f00      	cmp	r7, #0
 80036f2:	f040 85e2 	bne.w	80042ba <d_print_comp_inner+0x19aa>
 80036f6:	2b05      	cmp	r3, #5
 80036f8:	f001 81c8 	beq.w	8004a8c <d_print_comp_inner+0x217c>
 80036fc:	2b23      	cmp	r3, #35	; 0x23
 80036fe:	f000 868a 	beq.w	8004416 <d_print_comp_inner+0x1b06>
 8003702:	782a      	ldrb	r2, [r5, #0]
 8003704:	429a      	cmp	r2, r3
 8003706:	f000 8686 	beq.w	8004416 <d_print_comp_inner+0x1b06>
 800370a:	2b24      	cmp	r3, #36	; 0x24
 800370c:	f47f a9e8 	bne.w	8002ae0 <d_print_comp_inner+0x1d0>
 8003710:	2300      	movs	r3, #0
 8003712:	684a      	ldr	r2, [r1, #4]
 8003714:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
 8003718:	a814      	add	r0, sp, #80	; 0x50
 800371a:	f840 1d40 	str.w	r1, [r0, #-64]!
 800371e:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 8003722:	9505      	str	r5, [sp, #20]
 8003724:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 8003728:	9306      	str	r3, [sp, #24]
 800372a:	9107      	str	r1, [sp, #28]
 800372c:	2a00      	cmp	r2, #0
 800372e:	f47f a9e5 	bne.w	8002afc <d_print_comp_inner+0x1ec>
 8003732:	f7ff b9e2 	b.w	8002afa <d_print_comp_inner+0x1ea>
 8003736:	686a      	ldr	r2, [r5, #4]
 8003738:	f001 fe94 	bl	8005464 <d_print_comp>
 800373c:	f7ff b9b6 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003740:	2700      	movs	r7, #0
 8003742:	f8d0 2114 	ldr.w	r2, [r0, #276]	; 0x114
 8003746:	ab14      	add	r3, sp, #80	; 0x50
 8003748:	f843 2d40 	str.w	r2, [r3, #-64]!
 800374c:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
 8003750:	f8d0 6110 	ldr.w	r6, [r0, #272]	; 0x110
 8003754:	68aa      	ldr	r2, [r5, #8]
 8003756:	9505      	str	r5, [sp, #20]
 8003758:	9706      	str	r7, [sp, #24]
 800375a:	9607      	str	r6, [sp, #28]
 800375c:	f001 fe82 	bl	8005464 <d_print_comp>
 8003760:	9b06      	ldr	r3, [sp, #24]
 8003762:	b923      	cbnz	r3, 800376e <d_print_comp_inner+0xe5e>
 8003764:	462a      	mov	r2, r5
 8003766:	4641      	mov	r1, r8
 8003768:	4620      	mov	r0, r4
 800376a:	f001 fe8b 	bl	8005484 <d_print_mod>
 800376e:	9b04      	ldr	r3, [sp, #16]
 8003770:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003774:	f7ff b99a 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003778:	f8d0 a114 	ldr.w	sl, [r0, #276]	; 0x114
 800377c:	2200      	movs	r2, #0
 800377e:	4651      	mov	r1, sl
 8003780:	f10d 0950 	add.w	r9, sp, #80	; 0x50
 8003784:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 8003788:	f849 ad40 	str.w	sl, [r9, #-64]!
 800378c:	f8cd a000 	str.w	sl, [sp]
 8003790:	f8c0 9114 	str.w	r9, [r0, #276]	; 0x114
 8003794:	9505      	str	r5, [sp, #20]
 8003796:	9206      	str	r2, [sp, #24]
 8003798:	9307      	str	r3, [sp, #28]
 800379a:	2900      	cmp	r1, #0
 800379c:	f001 83a3 	beq.w	8004ee6 <d_print_comp_inner+0x25d6>
 80037a0:	684b      	ldr	r3, [r1, #4]
 80037a2:	781b      	ldrb	r3, [r3, #0]
 80037a4:	3b19      	subs	r3, #25
 80037a6:	2b02      	cmp	r3, #2
 80037a8:	f201 839d 	bhi.w	8004ee6 <d_print_comp_inner+0x25d6>
 80037ac:	46ac      	mov	ip, r5
 80037ae:	2701      	movs	r7, #1
 80037b0:	460e      	mov	r6, r1
 80037b2:	464d      	mov	r5, r9
 80037b4:	e004      	b.n	80037c0 <d_print_comp_inner+0xeb0>
 80037b6:	6873      	ldr	r3, [r6, #4]
 80037b8:	781b      	ldrb	r3, [r3, #0]
 80037ba:	3b19      	subs	r3, #25
 80037bc:	2b02      	cmp	r3, #2
 80037be:	d81c      	bhi.n	80037fa <d_print_comp_inner+0xeea>
 80037c0:	68b3      	ldr	r3, [r6, #8]
 80037c2:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 80037c6:	b9ab      	cbnz	r3, 80037f4 <d_print_comp_inner+0xee4>
 80037c8:	2f03      	cmp	r7, #3
 80037ca:	f201 80fd 	bhi.w	80049c8 <d_print_comp_inner+0x20b8>
 80037ce:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80037d2:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
 80037d6:	eb0e 0b0a 	add.w	fp, lr, sl
 80037da:	f1ab 0e40 	sub.w	lr, fp, #64	; 0x40
 80037de:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 80037e2:	2301      	movs	r3, #1
 80037e4:	f84b 5c40 	str.w	r5, [fp, #-64]
 80037e8:	eb09 050a 	add.w	r5, r9, sl
 80037ec:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80037f0:	3701      	adds	r7, #1
 80037f2:	60b3      	str	r3, [r6, #8]
 80037f4:	6836      	ldr	r6, [r6, #0]
 80037f6:	2e00      	cmp	r6, #0
 80037f8:	d1dd      	bne.n	80037b6 <d_print_comp_inner+0xea6>
 80037fa:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80037fe:	4641      	mov	r1, r8
 8003800:	4620      	mov	r0, r4
 8003802:	4665      	mov	r5, ip
 8003804:	f001 fe2e 	bl	8005464 <d_print_comp>
 8003808:	9a00      	ldr	r2, [sp, #0]
 800380a:	9b06      	ldr	r3, [sp, #24]
 800380c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8003810:	2b00      	cmp	r3, #0
 8003812:	f47f a94b 	bne.w	8002aac <d_print_comp_inner+0x19c>
 8003816:	2f01      	cmp	r7, #1
 8003818:	d00c      	beq.n	8003834 <d_print_comp_inner+0xf24>
 800381a:	eb09 1907 	add.w	r9, r9, r7, lsl #4
 800381e:	f859 2c0c 	ldr.w	r2, [r9, #-12]
 8003822:	3f01      	subs	r7, #1
 8003824:	4641      	mov	r1, r8
 8003826:	4620      	mov	r0, r4
 8003828:	f001 fe2c 	bl	8005484 <d_print_mod>
 800382c:	2f01      	cmp	r7, #1
 800382e:	f1a9 0910 	sub.w	r9, r9, #16
 8003832:	d1f4      	bne.n	800381e <d_print_comp_inner+0xf0e>
 8003834:	1d2a      	adds	r2, r5, #4
 8003836:	4641      	mov	r1, r8
 8003838:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800383c:	4620      	mov	r0, r4
 800383e:	f002 fa31 	bl	8005ca4 <d_print_array_type.isra.10>
 8003842:	f7ff b933 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003846:	bf00      	nop
 8003848:	0801205f 	.word	0x0801205f
 800384c:	08012053 	.word	0x08012053
 8003850:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8003854:	2b00      	cmp	r3, #0
 8003856:	f040 8673 	bne.w	8004540 <d_print_comp_inner+0x1c30>
 800385a:	686a      	ldr	r2, [r5, #4]
 800385c:	4bd5      	ldr	r3, [pc, #852]	; (8003bb4 <d_print_comp_inner+0x12a4>)
 800385e:	6851      	ldr	r1, [r2, #4]
 8003860:	4299      	cmp	r1, r3
 8003862:	f000 8669 	beq.w	8004538 <d_print_comp_inner+0x1c28>
 8003866:	4641      	mov	r1, r8
 8003868:	4620      	mov	r0, r4
 800386a:	f001 fdfb 	bl	8005464 <d_print_comp>
 800386e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003872:	2bff      	cmp	r3, #255	; 0xff
 8003874:	f001 82b4 	beq.w	8004de0 <d_print_comp_inner+0x24d0>
 8003878:	1c59      	adds	r1, r3, #1
 800387a:	2220      	movs	r2, #32
 800387c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003880:	54e2      	strb	r2, [r4, r3]
 8003882:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003886:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800388a:	2b00      	cmp	r3, #0
 800388c:	f000 8595 	beq.w	80043ba <d_print_comp_inner+0x1aaa>
 8003890:	4dc9      	ldr	r5, [pc, #804]	; (8003bb8 <d_print_comp_inner+0x12a8>)
 8003892:	f04f 0800 	mov.w	r8, #0
 8003896:	1daf      	adds	r7, r5, #6
 8003898:	e009      	b.n	80038ae <d_print_comp_inner+0xf9e>
 800389a:	460b      	mov	r3, r1
 800389c:	3101      	adds	r1, #1
 800389e:	42bd      	cmp	r5, r7
 80038a0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80038a4:	54e6      	strb	r6, [r4, r3]
 80038a6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80038aa:	f43f a8ff 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80038ae:	29ff      	cmp	r1, #255	; 0xff
 80038b0:	f815 6b01 	ldrb.w	r6, [r5], #1
 80038b4:	d1f1      	bne.n	800389a <d_print_comp_inner+0xf8a>
 80038b6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80038ba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80038be:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80038c2:	4620      	mov	r0, r4
 80038c4:	4798      	blx	r3
 80038c6:	2101      	movs	r1, #1
 80038c8:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80038cc:	2300      	movs	r3, #0
 80038ce:	440a      	add	r2, r1
 80038d0:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80038d4:	e7e3      	b.n	800389e <d_print_comp_inner+0xf8e>
 80038d6:	4eb9      	ldr	r6, [pc, #740]	; (8003bbc <d_print_comp_inner+0x12ac>)
 80038d8:	f04f 0800 	mov.w	r8, #0
 80038dc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80038e0:	f106 090e 	add.w	r9, r6, #14
 80038e4:	e009      	b.n	80038fa <d_print_comp_inner+0xfea>
 80038e6:	460b      	mov	r3, r1
 80038e8:	3101      	adds	r1, #1
 80038ea:	45b1      	cmp	r9, r6
 80038ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80038f0:	54e7      	strb	r7, [r4, r3]
 80038f2:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80038f6:	f000 83b3 	beq.w	8004060 <d_print_comp_inner+0x1750>
 80038fa:	29ff      	cmp	r1, #255	; 0xff
 80038fc:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003900:	d1f1      	bne.n	80038e6 <d_print_comp_inner+0xfd6>
 8003902:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003906:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800390a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800390e:	4620      	mov	r0, r4
 8003910:	4798      	blx	r3
 8003912:	2101      	movs	r1, #1
 8003914:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003918:	2300      	movs	r3, #0
 800391a:	440a      	add	r2, r1
 800391c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003920:	e7e3      	b.n	80038ea <d_print_comp_inner+0xfda>
 8003922:	4ea7      	ldr	r6, [pc, #668]	; (8003bc0 <d_print_comp_inner+0x12b0>)
 8003924:	f04f 0900 	mov.w	r9, #0
 8003928:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800392c:	f106 0a1a 	add.w	sl, r6, #26
 8003930:	e009      	b.n	8003946 <d_print_comp_inner+0x1036>
 8003932:	460b      	mov	r3, r1
 8003934:	3101      	adds	r1, #1
 8003936:	4556      	cmp	r6, sl
 8003938:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800393c:	54e7      	strb	r7, [r4, r3]
 800393e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003942:	f000 82f0 	beq.w	8003f26 <d_print_comp_inner+0x1616>
 8003946:	29ff      	cmp	r1, #255	; 0xff
 8003948:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800394c:	d1f1      	bne.n	8003932 <d_print_comp_inner+0x1022>
 800394e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003952:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003956:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800395a:	4620      	mov	r0, r4
 800395c:	4798      	blx	r3
 800395e:	2101      	movs	r1, #1
 8003960:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003964:	2300      	movs	r3, #0
 8003966:	440a      	add	r2, r1
 8003968:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800396c:	e7e3      	b.n	8003936 <d_print_comp_inner+0x1026>
 800396e:	6869      	ldr	r1, [r5, #4]
 8003970:	f7fc ff38 	bl	80007e4 <d_find_pack>
 8003974:	f04f 0900 	mov.w	r9, #0
 8003978:	2800      	cmp	r0, #0
 800397a:	f001 835f 	beq.w	800503c <d_print_comp_inner+0x272c>
 800397e:	7803      	ldrb	r3, [r0, #0]
 8003980:	2b2f      	cmp	r3, #47	; 0x2f
 8003982:	f040 8457 	bne.w	8004234 <d_print_comp_inner+0x1924>
 8003986:	6843      	ldr	r3, [r0, #4]
 8003988:	2b00      	cmp	r3, #0
 800398a:	f000 8453 	beq.w	8004234 <d_print_comp_inner+0x1924>
 800398e:	6880      	ldr	r0, [r0, #8]
 8003990:	f109 0901 	add.w	r9, r9, #1
 8003994:	2800      	cmp	r0, #0
 8003996:	d1f2      	bne.n	800397e <d_print_comp_inner+0x106e>
 8003998:	686b      	ldr	r3, [r5, #4]
 800399a:	9300      	str	r3, [sp, #0]
 800399c:	f04f 0a00 	mov.w	sl, #0
 80039a0:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
 80039a4:	9301      	str	r3, [sp, #4]
 80039a6:	f8c4 7120 	str.w	r7, [r4, #288]	; 0x120
 80039aa:	9a00      	ldr	r2, [sp, #0]
 80039ac:	4641      	mov	r1, r8
 80039ae:	4620      	mov	r0, r4
 80039b0:	f001 fd58 	bl	8005464 <d_print_comp>
 80039b4:	9b01      	ldr	r3, [sp, #4]
 80039b6:	42bb      	cmp	r3, r7
 80039b8:	f340 81ab 	ble.w	8003d12 <d_print_comp_inner+0x1402>
 80039bc:	4d81      	ldr	r5, [pc, #516]	; (8003bc4 <d_print_comp_inner+0x12b4>)
 80039be:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80039c2:	f105 0b02 	add.w	fp, r5, #2
 80039c6:	e009      	b.n	80039dc <d_print_comp_inner+0x10cc>
 80039c8:	460b      	mov	r3, r1
 80039ca:	3101      	adds	r1, #1
 80039cc:	45ab      	cmp	fp, r5
 80039ce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80039d2:	54e6      	strb	r6, [r4, r3]
 80039d4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80039d8:	f000 819b 	beq.w	8003d12 <d_print_comp_inner+0x1402>
 80039dc:	29ff      	cmp	r1, #255	; 0xff
 80039de:	f815 6b01 	ldrb.w	r6, [r5], #1
 80039e2:	d1f1      	bne.n	80039c8 <d_print_comp_inner+0x10b8>
 80039e4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80039e8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80039ec:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 80039f0:	4620      	mov	r0, r4
 80039f2:	4798      	blx	r3
 80039f4:	2101      	movs	r1, #1
 80039f6:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80039fa:	2300      	movs	r3, #0
 80039fc:	440a      	add	r2, r1
 80039fe:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003a02:	e7e3      	b.n	80039cc <d_print_comp_inner+0x10bc>
 8003a04:	4e70      	ldr	r6, [pc, #448]	; (8003bc8 <d_print_comp_inner+0x12b8>)
 8003a06:	f04f 0900 	mov.w	r9, #0
 8003a0a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003a0e:	f106 0a16 	add.w	sl, r6, #22
 8003a12:	e009      	b.n	8003a28 <d_print_comp_inner+0x1118>
 8003a14:	460b      	mov	r3, r1
 8003a16:	3101      	adds	r1, #1
 8003a18:	45b2      	cmp	sl, r6
 8003a1a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a1e:	54e7      	strb	r7, [r4, r3]
 8003a20:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003a24:	f000 835f 	beq.w	80040e6 <d_print_comp_inner+0x17d6>
 8003a28:	29ff      	cmp	r1, #255	; 0xff
 8003a2a:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003a2e:	d1f1      	bne.n	8003a14 <d_print_comp_inner+0x1104>
 8003a30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a34:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a38:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	4798      	blx	r3
 8003a40:	2101      	movs	r1, #1
 8003a42:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003a46:	2300      	movs	r3, #0
 8003a48:	440a      	add	r2, r1
 8003a4a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003a4e:	e7e3      	b.n	8003a18 <d_print_comp_inner+0x1108>
 8003a50:	4e5e      	ldr	r6, [pc, #376]	; (8003bcc <d_print_comp_inner+0x12bc>)
 8003a52:	f04f 0900 	mov.w	r9, #0
 8003a56:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003a5a:	f106 0a0e 	add.w	sl, r6, #14
 8003a5e:	e009      	b.n	8003a74 <d_print_comp_inner+0x1164>
 8003a60:	460b      	mov	r3, r1
 8003a62:	3101      	adds	r1, #1
 8003a64:	4556      	cmp	r6, sl
 8003a66:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a6a:	54e7      	strb	r7, [r4, r3]
 8003a6c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003a70:	f000 83a0 	beq.w	80041b4 <d_print_comp_inner+0x18a4>
 8003a74:	29ff      	cmp	r1, #255	; 0xff
 8003a76:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003a7a:	d1f1      	bne.n	8003a60 <d_print_comp_inner+0x1150>
 8003a7c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a80:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a84:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003a88:	4620      	mov	r0, r4
 8003a8a:	4798      	blx	r3
 8003a8c:	2101      	movs	r1, #1
 8003a8e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003a92:	2300      	movs	r3, #0
 8003a94:	440a      	add	r2, r1
 8003a96:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003a9a:	e7e3      	b.n	8003a64 <d_print_comp_inner+0x1154>
 8003a9c:	686a      	ldr	r2, [r5, #4]
 8003a9e:	7811      	ldrb	r1, [r2, #0]
 8003aa0:	2927      	cmp	r1, #39	; 0x27
 8003aa2:	f000 8615 	beq.w	80046d0 <d_print_comp_inner+0x1dc0>
 8003aa6:	2600      	movs	r6, #0
 8003aa8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003aac:	29ff      	cmp	r1, #255	; 0xff
 8003aae:	f001 80c7 	beq.w	8004c40 <d_print_comp_inner+0x2330>
 8003ab2:	2328      	movs	r3, #40	; 0x28
 8003ab4:	1c4a      	adds	r2, r1, #1
 8003ab6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003aba:	5463      	strb	r3, [r4, r1]
 8003abc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003ac0:	686a      	ldr	r2, [r5, #4]
 8003ac2:	4641      	mov	r1, r8
 8003ac4:	4620      	mov	r0, r4
 8003ac6:	f001 fccd 	bl	8005464 <d_print_comp>
 8003aca:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003ace:	2bff      	cmp	r3, #255	; 0xff
 8003ad0:	f001 809b 	beq.w	8004c0a <d_print_comp_inner+0x22fa>
 8003ad4:	2229      	movs	r2, #41	; 0x29
 8003ad6:	1c59      	adds	r1, r3, #1
 8003ad8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003adc:	54e2      	strb	r2, [r4, r3]
 8003ade:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003ae2:	782b      	ldrb	r3, [r5, #0]
 8003ae4:	2b3d      	cmp	r3, #61	; 0x3d
 8003ae6:	f000 86e6 	beq.w	80048b6 <d_print_comp_inner+0x1fa6>
 8003aea:	2e08      	cmp	r6, #8
 8003aec:	f000 867f 	beq.w	80047ee <d_print_comp_inner+0x1ede>
 8003af0:	68aa      	ldr	r2, [r5, #8]
 8003af2:	4641      	mov	r1, r8
 8003af4:	4620      	mov	r0, r4
 8003af6:	f001 fcb5 	bl	8005464 <d_print_comp>
 8003afa:	f7fe bfd7 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003afe:	2301      	movs	r3, #1
 8003b00:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8003b04:	f7fe bfd2 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003b08:	686a      	ldr	r2, [r5, #4]
 8003b0a:	a804      	add	r0, sp, #16
 8003b0c:	4930      	ldr	r1, [pc, #192]	; (8003bd0 <d_print_comp_inner+0x12c0>)
 8003b0e:	f00a facb 	bl	800e0a8 <sprintf>
 8003b12:	a804      	add	r0, sp, #16
 8003b14:	f002 fe72 	bl	80067fc <strlen>
 8003b18:	2800      	cmp	r0, #0
 8003b1a:	f43e afc7 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8003b1e:	ad04      	add	r5, sp, #16
 8003b20:	f04f 0800 	mov.w	r8, #0
 8003b24:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003b28:	182f      	adds	r7, r5, r0
 8003b2a:	e009      	b.n	8003b40 <d_print_comp_inner+0x1230>
 8003b2c:	460b      	mov	r3, r1
 8003b2e:	3101      	adds	r1, #1
 8003b30:	42bd      	cmp	r5, r7
 8003b32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b36:	54e6      	strb	r6, [r4, r3]
 8003b38:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003b3c:	f43e afb6 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8003b40:	29ff      	cmp	r1, #255	; 0xff
 8003b42:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003b46:	d1f1      	bne.n	8003b2c <d_print_comp_inner+0x121c>
 8003b48:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003b4c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003b50:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003b54:	4620      	mov	r0, r4
 8003b56:	4798      	blx	r3
 8003b58:	2101      	movs	r1, #1
 8003b5a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003b5e:	2300      	movs	r3, #0
 8003b60:	440a      	add	r2, r1
 8003b62:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003b66:	e7e3      	b.n	8003b30 <d_print_comp_inner+0x1220>
 8003b68:	4e1a      	ldr	r6, [pc, #104]	; (8003bd4 <d_print_comp_inner+0x12c4>)
 8003b6a:	f04f 0900 	mov.w	r9, #0
 8003b6e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003b72:	f106 0a1c 	add.w	sl, r6, #28
 8003b76:	e009      	b.n	8003b8c <d_print_comp_inner+0x127c>
 8003b78:	460b      	mov	r3, r1
 8003b7a:	3101      	adds	r1, #1
 8003b7c:	4556      	cmp	r6, sl
 8003b7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b82:	54e7      	strb	r7, [r4, r3]
 8003b84:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003b88:	f000 82fa 	beq.w	8004180 <d_print_comp_inner+0x1870>
 8003b8c:	29ff      	cmp	r1, #255	; 0xff
 8003b8e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003b92:	d1f1      	bne.n	8003b78 <d_print_comp_inner+0x1268>
 8003b94:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003b98:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003b9c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003ba0:	4620      	mov	r0, r4
 8003ba2:	4798      	blx	r3
 8003ba4:	2101      	movs	r1, #1
 8003ba6:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003baa:	2300      	movs	r3, #0
 8003bac:	440a      	add	r2, r1
 8003bae:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003bb2:	e7e3      	b.n	8003b7c <d_print_comp_inner+0x126c>
 8003bb4:	0801158c 	.word	0x0801158c
 8003bb8:	08012040 	.word	0x08012040
 8003bbc:	08012123 	.word	0x08012123
 8003bc0:	0801201b 	.word	0x0801201b
 8003bc4:	08012050 	.word	0x08012050
 8003bc8:	0801201f 	.word	0x0801201f
 8003bcc:	080120a3 	.word	0x080120a3
 8003bd0:	08011e74 	.word	0x08011e74
 8003bd4:	080120f3 	.word	0x080120f3
 8003bd8:	68ab      	ldr	r3, [r5, #8]
 8003bda:	781a      	ldrb	r2, [r3, #0]
 8003bdc:	2a3a      	cmp	r2, #58	; 0x3a
 8003bde:	f47e af79 	bne.w	8002ad4 <d_print_comp_inner+0x1c4>
 8003be2:	689b      	ldr	r3, [r3, #8]
 8003be4:	781b      	ldrb	r3, [r3, #0]
 8003be6:	2b3b      	cmp	r3, #59	; 0x3b
 8003be8:	f47e af74 	bne.w	8002ad4 <d_print_comp_inner+0x1c4>
 8003bec:	f105 0308 	add.w	r3, r5, #8
 8003bf0:	686a      	ldr	r2, [r5, #4]
 8003bf2:	f002 fac9 	bl	8006188 <d_maybe_print_fold_expression.isra.15>
 8003bf6:	4606      	mov	r6, r0
 8003bf8:	2800      	cmp	r0, #0
 8003bfa:	f47e af57 	bne.w	8002aac <d_print_comp_inner+0x19c>
 8003bfe:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8003c02:	68aa      	ldr	r2, [r5, #8]
 8003c04:	f8da 1004 	ldr.w	r1, [sl, #4]
 8003c08:	6893      	ldr	r3, [r2, #8]
 8003c0a:	6808      	ldr	r0, [r1, #0]
 8003c0c:	49d6      	ldr	r1, [pc, #856]	; (8003f68 <d_print_comp_inner+0x1658>)
 8003c0e:	f8d2 9004 	ldr.w	r9, [r2, #4]
 8003c12:	685f      	ldr	r7, [r3, #4]
 8003c14:	689d      	ldr	r5, [r3, #8]
 8003c16:	f002 fde7 	bl	80067e8 <strcmp>
 8003c1a:	2800      	cmp	r0, #0
 8003c1c:	f001 82e4 	beq.w	80051e8 <d_print_comp_inner+0x28d8>
 8003c20:	2204      	movs	r2, #4
 8003c22:	49d2      	ldr	r1, [pc, #840]	; (8003f6c <d_print_comp_inner+0x165c>)
 8003c24:	4620      	mov	r0, r4
 8003c26:	f7fc fbb1 	bl	800038c <d_append_buffer>
 8003c2a:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8003c2e:	b183      	cbz	r3, 8003c52 <d_print_comp_inner+0x1342>
 8003c30:	4641      	mov	r1, r8
 8003c32:	464a      	mov	r2, r9
 8003c34:	4620      	mov	r0, r4
 8003c36:	f002 fa43 	bl	80060c0 <d_print_subexpr>
 8003c3a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003c3e:	29ff      	cmp	r1, #255	; 0xff
 8003c40:	f001 83ee 	beq.w	8005420 <d_print_comp_inner+0x2b10>
 8003c44:	2320      	movs	r3, #32
 8003c46:	1c4a      	adds	r2, r1, #1
 8003c48:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003c4c:	5463      	strb	r3, [r4, r1]
 8003c4e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003c52:	463a      	mov	r2, r7
 8003c54:	4641      	mov	r1, r8
 8003c56:	4620      	mov	r0, r4
 8003c58:	f001 fc04 	bl	8005464 <d_print_comp>
 8003c5c:	2d00      	cmp	r5, #0
 8003c5e:	f43e af25 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8003c62:	462a      	mov	r2, r5
 8003c64:	4641      	mov	r1, r8
 8003c66:	4620      	mov	r0, r4
 8003c68:	f002 fa2a 	bl	80060c0 <d_print_subexpr>
 8003c6c:	f7fe bf1e 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003c70:	4ebf      	ldr	r6, [pc, #764]	; (8003f70 <d_print_comp_inner+0x1660>)
 8003c72:	f04f 0900 	mov.w	r9, #0
 8003c76:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003c7a:	f106 0a08 	add.w	sl, r6, #8
 8003c7e:	e009      	b.n	8003c94 <d_print_comp_inner+0x1384>
 8003c80:	460b      	mov	r3, r1
 8003c82:	3101      	adds	r1, #1
 8003c84:	4556      	cmp	r6, sl
 8003c86:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c8a:	54e7      	strb	r7, [r4, r3]
 8003c8c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003c90:	f000 80d9 	beq.w	8003e46 <d_print_comp_inner+0x1536>
 8003c94:	29ff      	cmp	r1, #255	; 0xff
 8003c96:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003c9a:	d1f1      	bne.n	8003c80 <d_print_comp_inner+0x1370>
 8003c9c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003ca0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003ca4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003ca8:	4620      	mov	r0, r4
 8003caa:	4798      	blx	r3
 8003cac:	2101      	movs	r1, #1
 8003cae:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	440a      	add	r2, r1
 8003cb6:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003cba:	e7e3      	b.n	8003c84 <d_print_comp_inner+0x1374>
 8003cbc:	4ead      	ldr	r6, [pc, #692]	; (8003f74 <d_print_comp_inner+0x1664>)
 8003cbe:	f04f 0900 	mov.w	r9, #0
 8003cc2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003cc6:	f106 0a1d 	add.w	sl, r6, #29
 8003cca:	e009      	b.n	8003ce0 <d_print_comp_inner+0x13d0>
 8003ccc:	460b      	mov	r3, r1
 8003cce:	3101      	adds	r1, #1
 8003cd0:	45b2      	cmp	sl, r6
 8003cd2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003cd6:	54e7      	strb	r7, [r4, r3]
 8003cd8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003cdc:	f000 81fc 	beq.w	80040d8 <d_print_comp_inner+0x17c8>
 8003ce0:	29ff      	cmp	r1, #255	; 0xff
 8003ce2:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003ce6:	d1f1      	bne.n	8003ccc <d_print_comp_inner+0x13bc>
 8003ce8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003cec:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003cf0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003cf4:	4620      	mov	r0, r4
 8003cf6:	4798      	blx	r3
 8003cf8:	2101      	movs	r1, #1
 8003cfa:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003cfe:	2300      	movs	r3, #0
 8003d00:	440a      	add	r2, r1
 8003d02:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003d06:	e7e3      	b.n	8003cd0 <d_print_comp_inner+0x13c0>
 8003d08:	2301      	movs	r3, #1
 8003d0a:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8003d0e:	f7fe becd 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003d12:	3701      	adds	r7, #1
 8003d14:	454f      	cmp	r7, r9
 8003d16:	f47f ae46 	bne.w	80039a6 <d_print_comp_inner+0x1096>
 8003d1a:	f7fe bec7 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003d1e:	6876      	ldr	r6, [r6, #4]
 8003d20:	2e00      	cmp	r6, #0
 8003d22:	f001 8070 	beq.w	8004e06 <d_print_comp_inner+0x24f6>
 8003d26:	2f04      	cmp	r7, #4
 8003d28:	f103 0310 	add.w	r3, r3, #16
 8003d2c:	4602      	mov	r2, r0
 8003d2e:	f47f a9b8 	bne.w	80030a2 <d_print_comp_inner+0x792>
 8003d32:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 8003d36:	2301      	movs	r3, #1
 8003d38:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003d3c:	f7fe beb6 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003d40:	4e8d      	ldr	r6, [pc, #564]	; (8003f78 <d_print_comp_inner+0x1668>)
 8003d42:	4641      	mov	r1, r8
 8003d44:	686a      	ldr	r2, [r5, #4]
 8003d46:	4620      	mov	r0, r4
 8003d48:	f001 fb8c 	bl	8005464 <d_print_comp>
 8003d4c:	f04f 0900 	mov.w	r9, #0
 8003d50:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003d54:	f106 0a04 	add.w	sl, r6, #4
 8003d58:	e008      	b.n	8003d6c <d_print_comp_inner+0x145c>
 8003d5a:	460b      	mov	r3, r1
 8003d5c:	3101      	adds	r1, #1
 8003d5e:	45b2      	cmp	sl, r6
 8003d60:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003d64:	54e7      	strb	r7, [r4, r3]
 8003d66:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003d6a:	d013      	beq.n	8003d94 <d_print_comp_inner+0x1484>
 8003d6c:	29ff      	cmp	r1, #255	; 0xff
 8003d6e:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003d72:	d1f2      	bne.n	8003d5a <d_print_comp_inner+0x144a>
 8003d74:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d78:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d7c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d80:	4620      	mov	r0, r4
 8003d82:	4798      	blx	r3
 8003d84:	2101      	movs	r1, #1
 8003d86:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003d8a:	2300      	movs	r3, #0
 8003d8c:	440a      	add	r2, r1
 8003d8e:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003d92:	e7e4      	b.n	8003d5e <d_print_comp_inner+0x144e>
 8003d94:	68aa      	ldr	r2, [r5, #8]
 8003d96:	4641      	mov	r1, r8
 8003d98:	4620      	mov	r0, r4
 8003d9a:	f001 fb63 	bl	8005464 <d_print_comp>
 8003d9e:	f7fe be85 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003da2:	686a      	ldr	r2, [r5, #4]
 8003da4:	4641      	mov	r1, r8
 8003da6:	4620      	mov	r0, r4
 8003da8:	f001 fb5c 	bl	8005464 <d_print_comp>
 8003dac:	f7fe be7e 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003db0:	686a      	ldr	r2, [r5, #4]
 8003db2:	4641      	mov	r1, r8
 8003db4:	4620      	mov	r0, r4
 8003db6:	f001 fb55 	bl	8005464 <d_print_comp>
 8003dba:	f7fe be77 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003dbe:	686a      	ldr	r2, [r5, #4]
 8003dc0:	4641      	mov	r1, r8
 8003dc2:	4620      	mov	r0, r4
 8003dc4:	f001 fb4e 	bl	8005464 <d_print_comp>
 8003dc8:	f7fe be70 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003dcc:	686a      	ldr	r2, [r5, #4]
 8003dce:	4641      	mov	r1, r8
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	f001 fb47 	bl	8005464 <d_print_comp>
 8003dd6:	f7fe be69 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003dda:	686a      	ldr	r2, [r5, #4]
 8003ddc:	4641      	mov	r1, r8
 8003dde:	4620      	mov	r0, r4
 8003de0:	f001 fb40 	bl	8005464 <d_print_comp>
 8003de4:	f7fe be62 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003de8:	686a      	ldr	r2, [r5, #4]
 8003dea:	4641      	mov	r1, r8
 8003dec:	4620      	mov	r0, r4
 8003dee:	f001 fb39 	bl	8005464 <d_print_comp>
 8003df2:	f7fe be5b 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003df6:	686a      	ldr	r2, [r5, #4]
 8003df8:	4641      	mov	r1, r8
 8003dfa:	4620      	mov	r0, r4
 8003dfc:	f001 fb32 	bl	8005464 <d_print_comp>
 8003e00:	f7fe be54 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003e04:	686a      	ldr	r2, [r5, #4]
 8003e06:	4641      	mov	r1, r8
 8003e08:	4620      	mov	r0, r4
 8003e0a:	f001 fb2b 	bl	8005464 <d_print_comp>
 8003e0e:	f7fe be4d 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003e12:	686a      	ldr	r2, [r5, #4]
 8003e14:	4641      	mov	r1, r8
 8003e16:	4620      	mov	r0, r4
 8003e18:	f001 fb24 	bl	8005464 <d_print_comp>
 8003e1c:	f7fe be46 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003e20:	4641      	mov	r1, r8
 8003e22:	68aa      	ldr	r2, [r5, #8]
 8003e24:	4620      	mov	r0, r4
 8003e26:	f001 fb1d 	bl	8005464 <d_print_comp>
 8003e2a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e2e:	29ff      	cmp	r1, #255	; 0xff
 8003e30:	f000 855f 	beq.w	80048f2 <d_print_comp_inner+0x1fe2>
 8003e34:	1c4a      	adds	r2, r1, #1
 8003e36:	235d      	movs	r3, #93	; 0x5d
 8003e38:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003e3c:	5463      	strb	r3, [r4, r1]
 8003e3e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003e42:	f7fe be33 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003e46:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8003e4a:	4641      	mov	r1, r8
 8003e4c:	3301      	adds	r3, #1
 8003e4e:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 8003e52:	686a      	ldr	r2, [r5, #4]
 8003e54:	4620      	mov	r0, r4
 8003e56:	f001 fb05 	bl	8005464 <d_print_comp>
 8003e5a:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8003e5e:	4e47      	ldr	r6, [pc, #284]	; (8003f7c <d_print_comp_inner+0x166c>)
 8003e60:	3b01      	subs	r3, #1
 8003e62:	f04f 0900 	mov.w	r9, #0
 8003e66:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e6a:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 8003e6e:	f106 0802 	add.w	r8, r6, #2
 8003e72:	e008      	b.n	8003e86 <d_print_comp_inner+0x1576>
 8003e74:	460b      	mov	r3, r1
 8003e76:	3101      	adds	r1, #1
 8003e78:	4546      	cmp	r6, r8
 8003e7a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003e7e:	54e7      	strb	r7, [r4, r3]
 8003e80:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003e84:	d013      	beq.n	8003eae <d_print_comp_inner+0x159e>
 8003e86:	29ff      	cmp	r1, #255	; 0xff
 8003e88:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003e8c:	d1f2      	bne.n	8003e74 <d_print_comp_inner+0x1564>
 8003e8e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e92:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e96:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003e9a:	4620      	mov	r0, r4
 8003e9c:	4798      	blx	r3
 8003e9e:	2101      	movs	r1, #1
 8003ea0:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003ea4:	2300      	movs	r3, #0
 8003ea6:	440a      	add	r2, r1
 8003ea8:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003eac:	e7e4      	b.n	8003e78 <d_print_comp_inner+0x1568>
 8003eae:	68aa      	ldr	r2, [r5, #8]
 8003eb0:	a804      	add	r0, sp, #16
 8003eb2:	3201      	adds	r2, #1
 8003eb4:	4932      	ldr	r1, [pc, #200]	; (8003f80 <d_print_comp_inner+0x1670>)
 8003eb6:	f00a f8f7 	bl	800e0a8 <sprintf>
 8003eba:	a804      	add	r0, sp, #16
 8003ebc:	f002 fc9e 	bl	80067fc <strlen>
 8003ec0:	b318      	cbz	r0, 8003f0a <d_print_comp_inner+0x15fa>
 8003ec2:	ad04      	add	r5, sp, #16
 8003ec4:	f04f 0800 	mov.w	r8, #0
 8003ec8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003ecc:	182f      	adds	r7, r5, r0
 8003ece:	e008      	b.n	8003ee2 <d_print_comp_inner+0x15d2>
 8003ed0:	460b      	mov	r3, r1
 8003ed2:	3101      	adds	r1, #1
 8003ed4:	42af      	cmp	r7, r5
 8003ed6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003eda:	54e6      	strb	r6, [r4, r3]
 8003edc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003ee0:	d015      	beq.n	8003f0e <d_print_comp_inner+0x15fe>
 8003ee2:	29ff      	cmp	r1, #255	; 0xff
 8003ee4:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003ee8:	d1f2      	bne.n	8003ed0 <d_print_comp_inner+0x15c0>
 8003eea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003eee:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003ef2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003ef6:	4620      	mov	r0, r4
 8003ef8:	4798      	blx	r3
 8003efa:	2101      	movs	r1, #1
 8003efc:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003f00:	2300      	movs	r3, #0
 8003f02:	440a      	add	r2, r1
 8003f04:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003f08:	e7e4      	b.n	8003ed4 <d_print_comp_inner+0x15c4>
 8003f0a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f0e:	29ff      	cmp	r1, #255	; 0xff
 8003f10:	f000 855f 	beq.w	80049d2 <d_print_comp_inner+0x20c2>
 8003f14:	1c4a      	adds	r2, r1, #1
 8003f16:	237d      	movs	r3, #125	; 0x7d
 8003f18:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003f1c:	5463      	strb	r3, [r4, r1]
 8003f1e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003f22:	f7fe bdc3 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003f26:	686a      	ldr	r2, [r5, #4]
 8003f28:	4641      	mov	r1, r8
 8003f2a:	4620      	mov	r0, r4
 8003f2c:	f001 fa9a 	bl	8005464 <d_print_comp>
 8003f30:	f7fe bdbc 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003f34:	4641      	mov	r1, r8
 8003f36:	68aa      	ldr	r2, [r5, #8]
 8003f38:	4620      	mov	r0, r4
 8003f3a:	f001 fa93 	bl	8005464 <d_print_comp>
 8003f3e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f42:	29ff      	cmp	r1, #255	; 0xff
 8003f44:	f000 850a 	beq.w	800495c <d_print_comp_inner+0x204c>
 8003f48:	1c4a      	adds	r2, r1, #1
 8003f4a:	235d      	movs	r3, #93	; 0x5d
 8003f4c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003f50:	5463      	strb	r3, [r4, r1]
 8003f52:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003f56:	f7fe bda9 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003f5a:	686a      	ldr	r2, [r5, #4]
 8003f5c:	4641      	mov	r1, r8
 8003f5e:	4620      	mov	r0, r4
 8003f60:	f001 fa80 	bl	8005464 <d_print_comp>
 8003f64:	f7fe bda2 	b.w	8002aac <d_print_comp_inner+0x19c>
 8003f68:	08011e88 	.word	0x08011e88
 8003f6c:	08012080 	.word	0x08012080
 8003f70:	08012113 	.word	0x08012113
 8003f74:	080120d3 	.word	0x080120d3
 8003f78:	08011f24 	.word	0x08011f24
 8003f7c:	08012120 	.word	0x08012120
 8003f80:	08011e74 	.word	0x08011e74
 8003f84:	f8da 5004 	ldr.w	r5, [sl, #4]
 8003f88:	782b      	ldrb	r3, [r5, #0]
 8003f8a:	3b61      	subs	r3, #97	; 0x61
 8003f8c:	2b19      	cmp	r3, #25
 8003f8e:	d809      	bhi.n	8003fa4 <d_print_comp_inner+0x1694>
 8003f90:	29ff      	cmp	r1, #255	; 0xff
 8003f92:	f000 8795 	beq.w	8004ec0 <d_print_comp_inner+0x25b0>
 8003f96:	2320      	movs	r3, #32
 8003f98:	1c4a      	adds	r2, r1, #1
 8003f9a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003f9e:	5463      	strb	r3, [r4, r1]
 8003fa0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003fa4:	19eb      	adds	r3, r5, r7
 8003fa6:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8003faa:	2b20      	cmp	r3, #32
 8003fac:	bf08      	it	eq
 8003fae:	f107 37ff 	addeq.w	r7, r7, #4294967295	; 0xffffffff
 8003fb2:	2f00      	cmp	r7, #0
 8003fb4:	f43e ad7a 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8003fb8:	f04f 0800 	mov.w	r8, #0
 8003fbc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003fc0:	442f      	add	r7, r5
 8003fc2:	e009      	b.n	8003fd8 <d_print_comp_inner+0x16c8>
 8003fc4:	460b      	mov	r3, r1
 8003fc6:	3101      	adds	r1, #1
 8003fc8:	42af      	cmp	r7, r5
 8003fca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003fce:	54e6      	strb	r6, [r4, r3]
 8003fd0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003fd4:	f43e ad6a 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8003fd8:	29ff      	cmp	r1, #255	; 0xff
 8003fda:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003fde:	d1f1      	bne.n	8003fc4 <d_print_comp_inner+0x16b4>
 8003fe0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003fe4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003fe8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003fec:	4620      	mov	r0, r4
 8003fee:	4798      	blx	r3
 8003ff0:	2101      	movs	r1, #1
 8003ff2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8003ff6:	2300      	movs	r3, #0
 8003ff8:	440a      	add	r2, r1
 8003ffa:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003ffe:	e7e3      	b.n	8003fc8 <d_print_comp_inner+0x16b8>
 8004000:	f8d4 2144 	ldr.w	r2, [r4, #324]	; 0x144
 8004004:	b13a      	cbz	r2, 8004016 <d_print_comp_inner+0x1706>
 8004006:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 800400a:	ab14      	add	r3, sp, #80	; 0x50
 800400c:	f843 1d48 	str.w	r1, [r3, #-72]!
 8004010:	9203      	str	r2, [sp, #12]
 8004012:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004016:	686b      	ldr	r3, [r5, #4]
 8004018:	781a      	ldrb	r2, [r3, #0]
 800401a:	2a04      	cmp	r2, #4
 800401c:	f000 830d 	beq.w	800463a <d_print_comp_inner+0x1d2a>
 8004020:	f8d4 5128 	ldr.w	r5, [r4, #296]	; 0x128
 8004024:	a804      	add	r0, sp, #16
 8004026:	461a      	mov	r2, r3
 8004028:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
 800402c:	4641      	mov	r1, r8
 800402e:	4620      	mov	r0, r4
 8004030:	9304      	str	r3, [sp, #16]
 8004032:	9505      	str	r5, [sp, #20]
 8004034:	f7fe fc6c 	bl	8002910 <d_print_comp_inner>
 8004038:	9a05      	ldr	r2, [sp, #20]
 800403a:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800403e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004042:	2b00      	cmp	r3, #0
 8004044:	f43e ad32 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8004048:	9b02      	ldr	r3, [sp, #8]
 800404a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800404e:	f7fe bd2d 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004052:	68aa      	ldr	r2, [r5, #8]
 8004054:	4641      	mov	r1, r8
 8004056:	4620      	mov	r0, r4
 8004058:	f001 fa04 	bl	8005464 <d_print_comp>
 800405c:	f7fe bd26 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004060:	686a      	ldr	r2, [r5, #4]
 8004062:	a804      	add	r0, sp, #16
 8004064:	3201      	adds	r2, #1
 8004066:	49d7      	ldr	r1, [pc, #860]	; (80043c4 <d_print_comp_inner+0x1ab4>)
 8004068:	f00a f81e 	bl	800e0a8 <sprintf>
 800406c:	a804      	add	r0, sp, #16
 800406e:	f002 fbc5 	bl	80067fc <strlen>
 8004072:	b318      	cbz	r0, 80040bc <d_print_comp_inner+0x17ac>
 8004074:	ad04      	add	r5, sp, #16
 8004076:	f04f 0800 	mov.w	r8, #0
 800407a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800407e:	182f      	adds	r7, r5, r0
 8004080:	e008      	b.n	8004094 <d_print_comp_inner+0x1784>
 8004082:	460b      	mov	r3, r1
 8004084:	3101      	adds	r1, #1
 8004086:	42bd      	cmp	r5, r7
 8004088:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800408c:	54e6      	strb	r6, [r4, r3]
 800408e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004092:	d015      	beq.n	80040c0 <d_print_comp_inner+0x17b0>
 8004094:	29ff      	cmp	r1, #255	; 0xff
 8004096:	f815 6b01 	ldrb.w	r6, [r5], #1
 800409a:	d1f2      	bne.n	8004082 <d_print_comp_inner+0x1772>
 800409c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80040a0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80040a4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80040a8:	4620      	mov	r0, r4
 80040aa:	4798      	blx	r3
 80040ac:	2101      	movs	r1, #1
 80040ae:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80040b2:	2300      	movs	r3, #0
 80040b4:	440a      	add	r2, r1
 80040b6:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80040ba:	e7e4      	b.n	8004086 <d_print_comp_inner+0x1776>
 80040bc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80040c0:	29ff      	cmp	r1, #255	; 0xff
 80040c2:	f000 8404 	beq.w	80048ce <d_print_comp_inner+0x1fbe>
 80040c6:	1c4a      	adds	r2, r1, #1
 80040c8:	237d      	movs	r3, #125	; 0x7d
 80040ca:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80040ce:	5463      	strb	r3, [r4, r1]
 80040d0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80040d4:	f7fe bcea 	b.w	8002aac <d_print_comp_inner+0x19c>
 80040d8:	686a      	ldr	r2, [r5, #4]
 80040da:	4641      	mov	r1, r8
 80040dc:	4620      	mov	r0, r4
 80040de:	f001 f9c1 	bl	8005464 <d_print_comp>
 80040e2:	f7fe bce3 	b.w	8002aac <d_print_comp_inner+0x19c>
 80040e6:	686a      	ldr	r2, [r5, #4]
 80040e8:	4641      	mov	r1, r8
 80040ea:	4620      	mov	r0, r4
 80040ec:	f001 f9ba 	bl	8005464 <d_print_comp>
 80040f0:	f7fe bcdc 	b.w	8002aac <d_print_comp_inner+0x19c>
 80040f4:	686a      	ldr	r2, [r5, #4]
 80040f6:	4641      	mov	r1, r8
 80040f8:	4620      	mov	r0, r4
 80040fa:	f001 f9b3 	bl	8005464 <d_print_comp>
 80040fe:	f7fe bcd5 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004102:	4eb1      	ldr	r6, [pc, #708]	; (80043c8 <d_print_comp_inner+0x1ab8>)
 8004104:	4641      	mov	r1, r8
 8004106:	68aa      	ldr	r2, [r5, #8]
 8004108:	4620      	mov	r0, r4
 800410a:	f001 f9ab 	bl	8005464 <d_print_comp>
 800410e:	f04f 0900 	mov.w	r9, #0
 8004112:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004116:	f106 0a05 	add.w	sl, r6, #5
 800411a:	e008      	b.n	800412e <d_print_comp_inner+0x181e>
 800411c:	460b      	mov	r3, r1
 800411e:	3101      	adds	r1, #1
 8004120:	4556      	cmp	r6, sl
 8004122:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004126:	54e7      	strb	r7, [r4, r3]
 8004128:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800412c:	d013      	beq.n	8004156 <d_print_comp_inner+0x1846>
 800412e:	29ff      	cmp	r1, #255	; 0xff
 8004130:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004134:	d1f2      	bne.n	800411c <d_print_comp_inner+0x180c>
 8004136:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800413a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800413e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004142:	4620      	mov	r0, r4
 8004144:	4798      	blx	r3
 8004146:	2101      	movs	r1, #1
 8004148:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 800414c:	2300      	movs	r3, #0
 800414e:	440a      	add	r2, r1
 8004150:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004154:	e7e4      	b.n	8004120 <d_print_comp_inner+0x1810>
 8004156:	686a      	ldr	r2, [r5, #4]
 8004158:	4641      	mov	r1, r8
 800415a:	4620      	mov	r0, r4
 800415c:	f001 f982 	bl	8005464 <d_print_comp>
 8004160:	f7fe bca4 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004164:	686a      	ldr	r2, [r5, #4]
 8004166:	4641      	mov	r1, r8
 8004168:	4620      	mov	r0, r4
 800416a:	f001 f97b 	bl	8005464 <d_print_comp>
 800416e:	f7fe bc9d 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004172:	686a      	ldr	r2, [r5, #4]
 8004174:	4641      	mov	r1, r8
 8004176:	4620      	mov	r0, r4
 8004178:	f001 f974 	bl	8005464 <d_print_comp>
 800417c:	f7fe bc96 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004180:	686a      	ldr	r2, [r5, #4]
 8004182:	4641      	mov	r1, r8
 8004184:	4620      	mov	r0, r4
 8004186:	f001 f96d 	bl	8005464 <d_print_comp>
 800418a:	f7fe bc8f 	b.w	8002aac <d_print_comp_inner+0x19c>
 800418e:	4641      	mov	r1, r8
 8004190:	686a      	ldr	r2, [r5, #4]
 8004192:	4620      	mov	r0, r4
 8004194:	f001 f966 	bl	8005464 <d_print_comp>
 8004198:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800419c:	29ff      	cmp	r1, #255	; 0xff
 800419e:	f000 842a 	beq.w	80049f6 <d_print_comp_inner+0x20e6>
 80041a2:	1c4a      	adds	r2, r1, #1
 80041a4:	2329      	movs	r3, #41	; 0x29
 80041a6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80041aa:	5463      	strb	r3, [r4, r1]
 80041ac:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80041b0:	f7fe bc7c 	b.w	8002aac <d_print_comp_inner+0x19c>
 80041b4:	686a      	ldr	r2, [r5, #4]
 80041b6:	4641      	mov	r1, r8
 80041b8:	4620      	mov	r0, r4
 80041ba:	f001 f953 	bl	8005464 <d_print_comp>
 80041be:	f7fe bc75 	b.w	8002aac <d_print_comp_inner+0x19c>
 80041c2:	2f04      	cmp	r7, #4
 80041c4:	f106 0e10 	add.w	lr, r6, #16
 80041c8:	f1a6 0410 	sub.w	r4, r6, #16
 80041cc:	f000 8724 	beq.w	8005018 <d_print_comp_inner+0x2708>
 80041d0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80041d4:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80041d8:	2300      	movs	r3, #0
 80041da:	f8ca 6114 	str.w	r6, [sl, #276]	; 0x114
 80041de:	f84e 4c10 	str.w	r4, [lr, #-16]
 80041e2:	f84e 5c1c 	str.w	r5, [lr, #-28]
 80041e6:	f84e 3c18 	str.w	r3, [lr, #-24]
 80041ea:	f84e cc14 	str.w	ip, [lr, #-20]
 80041ee:	4676      	mov	r6, lr
 80041f0:	686d      	ldr	r5, [r5, #4]
 80041f2:	3701      	adds	r7, #1
 80041f4:	f7fe bf7d 	b.w	80030f2 <d_print_comp_inner+0x7e2>
 80041f8:	68aa      	ldr	r2, [r5, #8]
 80041fa:	4641      	mov	r1, r8
 80041fc:	4620      	mov	r0, r4
 80041fe:	f8d4 5124 	ldr.w	r5, [r4, #292]	; 0x124
 8004202:	f001 f92f 	bl	8005464 <d_print_comp>
 8004206:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800420a:	429d      	cmp	r5, r3
 800420c:	f47e ac4e 	bne.w	8002aac <d_print_comp_inner+0x19c>
 8004210:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004214:	42b3      	cmp	r3, r6
 8004216:	f47e ac49 	bne.w	8002aac <d_print_comp_inner+0x19c>
 800421a:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 800421e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004222:	f7fe bc43 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004226:	462a      	mov	r2, r5
 8004228:	4641      	mov	r1, r8
 800422a:	4620      	mov	r0, r4
 800422c:	f001 f92a 	bl	8005484 <d_print_mod>
 8004230:	f7fe bc6c 	b.w	8002b0c <d_print_comp_inner+0x1fc>
 8004234:	686b      	ldr	r3, [r5, #4]
 8004236:	9300      	str	r3, [sp, #0]
 8004238:	f1b9 0f00 	cmp.w	r9, #0
 800423c:	f47f abae 	bne.w	800399c <d_print_comp_inner+0x108c>
 8004240:	f7fe bc34 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004244:	464a      	mov	r2, r9
 8004246:	a804      	add	r0, sp, #16
 8004248:	495e      	ldr	r1, [pc, #376]	; (80043c4 <d_print_comp_inner+0x1ab4>)
 800424a:	f009 ff2d 	bl	800e0a8 <sprintf>
 800424e:	a804      	add	r0, sp, #16
 8004250:	f002 fad4 	bl	80067fc <strlen>
 8004254:	b318      	cbz	r0, 800429e <d_print_comp_inner+0x198e>
 8004256:	ad04      	add	r5, sp, #16
 8004258:	f04f 0800 	mov.w	r8, #0
 800425c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004260:	182f      	adds	r7, r5, r0
 8004262:	e008      	b.n	8004276 <d_print_comp_inner+0x1966>
 8004264:	460b      	mov	r3, r1
 8004266:	3101      	adds	r1, #1
 8004268:	42af      	cmp	r7, r5
 800426a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800426e:	54e6      	strb	r6, [r4, r3]
 8004270:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004274:	d015      	beq.n	80042a2 <d_print_comp_inner+0x1992>
 8004276:	29ff      	cmp	r1, #255	; 0xff
 8004278:	f815 6b01 	ldrb.w	r6, [r5], #1
 800427c:	d1f2      	bne.n	8004264 <d_print_comp_inner+0x1954>
 800427e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004282:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004286:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800428a:	4620      	mov	r0, r4
 800428c:	4798      	blx	r3
 800428e:	2101      	movs	r1, #1
 8004290:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004294:	2300      	movs	r3, #0
 8004296:	440a      	add	r2, r1
 8004298:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800429c:	e7e4      	b.n	8004268 <d_print_comp_inner+0x1958>
 800429e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80042a2:	29ff      	cmp	r1, #255	; 0xff
 80042a4:	f000 84df 	beq.w	8004c66 <d_print_comp_inner+0x2356>
 80042a8:	1c4a      	adds	r2, r1, #1
 80042aa:	237d      	movs	r3, #125	; 0x7d
 80042ac:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80042b0:	5463      	strb	r3, [r4, r1]
 80042b2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80042b6:	f7fe bbf9 	b.w	8002aac <d_print_comp_inner+0x19c>
 80042ba:	2700      	movs	r7, #0
 80042bc:	f7ff ba1e 	b.w	80036fc <d_print_comp_inner+0xdec>
 80042c0:	68df      	ldr	r7, [r3, #12]
 80042c2:	689d      	ldr	r5, [r3, #8]
 80042c4:	2f00      	cmp	r7, #0
 80042c6:	f43e abf1 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80042ca:	f04f 0800 	mov.w	r8, #0
 80042ce:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80042d2:	442f      	add	r7, r5
 80042d4:	e009      	b.n	80042ea <d_print_comp_inner+0x19da>
 80042d6:	460b      	mov	r3, r1
 80042d8:	3101      	adds	r1, #1
 80042da:	42bd      	cmp	r5, r7
 80042dc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80042e0:	54e6      	strb	r6, [r4, r3]
 80042e2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80042e6:	f43e abe1 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80042ea:	29ff      	cmp	r1, #255	; 0xff
 80042ec:	f815 6b01 	ldrb.w	r6, [r5], #1
 80042f0:	d1f1      	bne.n	80042d6 <d_print_comp_inner+0x19c6>
 80042f2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80042f6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80042fa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80042fe:	4620      	mov	r0, r4
 8004300:	4798      	blx	r3
 8004302:	2101      	movs	r1, #1
 8004304:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004308:	2300      	movs	r3, #0
 800430a:	440a      	add	r2, r1
 800430c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004310:	e7e3      	b.n	80042da <d_print_comp_inner+0x19ca>
 8004312:	686e      	ldr	r6, [r5, #4]
 8004314:	68af      	ldr	r7, [r5, #8]
 8004316:	4437      	add	r7, r6
 8004318:	42be      	cmp	r6, r7
 800431a:	f4be abc7 	bcs.w	8002aac <d_print_comp_inner+0x19c>
 800431e:	f04f 0800 	mov.w	r8, #0
 8004322:	e00d      	b.n	8004340 <d_print_comp_inner+0x1a30>
 8004324:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004328:	29ff      	cmp	r1, #255	; 0xff
 800432a:	d036      	beq.n	800439a <d_print_comp_inner+0x1a8a>
 800432c:	1c4b      	adds	r3, r1, #1
 800432e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004332:	5465      	strb	r5, [r4, r1]
 8004334:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004338:	3601      	adds	r6, #1
 800433a:	42b7      	cmp	r7, r6
 800433c:	f67e abb6 	bls.w	8002aac <d_print_comp_inner+0x19c>
 8004340:	1bbb      	subs	r3, r7, r6
 8004342:	2b03      	cmp	r3, #3
 8004344:	7835      	ldrb	r5, [r6, #0]
 8004346:	dded      	ble.n	8004324 <d_print_comp_inner+0x1a14>
 8004348:	2d5f      	cmp	r5, #95	; 0x5f
 800434a:	d1eb      	bne.n	8004324 <d_print_comp_inner+0x1a14>
 800434c:	7873      	ldrb	r3, [r6, #1]
 800434e:	2b5f      	cmp	r3, #95	; 0x5f
 8004350:	d1e8      	bne.n	8004324 <d_print_comp_inner+0x1a14>
 8004352:	78b3      	ldrb	r3, [r6, #2]
 8004354:	2b55      	cmp	r3, #85	; 0x55
 8004356:	d1e5      	bne.n	8004324 <d_print_comp_inner+0x1a14>
 8004358:	1cf3      	adds	r3, r6, #3
 800435a:	429f      	cmp	r7, r3
 800435c:	d9e2      	bls.n	8004324 <d_print_comp_inner+0x1a14>
 800435e:	2000      	movs	r0, #0
 8004360:	e006      	b.n	8004370 <d_print_comp_inner+0x1a60>
 8004362:	f1a5 0237 	sub.w	r2, r5, #55	; 0x37
 8004366:	429f      	cmp	r7, r3
 8004368:	eb02 1000 	add.w	r0, r2, r0, lsl #4
 800436c:	f000 85c9 	beq.w	8004f02 <d_print_comp_inner+0x25f2>
 8004370:	4699      	mov	r9, r3
 8004372:	f813 5b01 	ldrb.w	r5, [r3], #1
 8004376:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
 800437a:	b2d1      	uxtb	r1, r2
 800437c:	2909      	cmp	r1, #9
 800437e:	f1a5 0e41 	sub.w	lr, r5, #65	; 0x41
 8004382:	d9f0      	bls.n	8004366 <d_print_comp_inner+0x1a56>
 8004384:	f1be 0f05 	cmp.w	lr, #5
 8004388:	f1a5 0261 	sub.w	r2, r5, #97	; 0x61
 800438c:	d9e9      	bls.n	8004362 <d_print_comp_inner+0x1a52>
 800438e:	2a05      	cmp	r2, #5
 8004390:	f200 8745 	bhi.w	800521e <d_print_comp_inner+0x290e>
 8004394:	f1a5 0257 	sub.w	r2, r5, #87	; 0x57
 8004398:	e7e5      	b.n	8004366 <d_print_comp_inner+0x1a56>
 800439a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800439e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80043a2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80043a6:	4620      	mov	r0, r4
 80043a8:	4798      	blx	r3
 80043aa:	2301      	movs	r3, #1
 80043ac:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80043b0:	2100      	movs	r1, #0
 80043b2:	441a      	add	r2, r3
 80043b4:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80043b8:	e7b9      	b.n	800432e <d_print_comp_inner+0x1a1e>
 80043ba:	4d04      	ldr	r5, [pc, #16]	; (80043cc <d_print_comp_inner+0x1abc>)
 80043bc:	4698      	mov	r8, r3
 80043be:	1daf      	adds	r7, r5, #6
 80043c0:	e010      	b.n	80043e4 <d_print_comp_inner+0x1ad4>
 80043c2:	bf00      	nop
 80043c4:	08011e74 	.word	0x08011e74
 80043c8:	08011fe8 	.word	0x08011fe8
 80043cc:	08012048 	.word	0x08012048
 80043d0:	460b      	mov	r3, r1
 80043d2:	3101      	adds	r1, #1
 80043d4:	42bd      	cmp	r5, r7
 80043d6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80043da:	54e6      	strb	r6, [r4, r3]
 80043dc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80043e0:	f43e ab64 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80043e4:	29ff      	cmp	r1, #255	; 0xff
 80043e6:	f815 6b01 	ldrb.w	r6, [r5], #1
 80043ea:	d1f1      	bne.n	80043d0 <d_print_comp_inner+0x1ac0>
 80043ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80043f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80043f4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80043f8:	4620      	mov	r0, r4
 80043fa:	4798      	blx	r3
 80043fc:	2101      	movs	r1, #1
 80043fe:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004402:	2300      	movs	r3, #0
 8004404:	440a      	add	r2, r1
 8004406:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800440a:	e7e3      	b.n	80043d4 <d_print_comp_inner+0x1ac4>
 800440c:	782b      	ldrb	r3, [r5, #0]
 800440e:	2b2f      	cmp	r3, #47	; 0x2f
 8004410:	f47e ab66 	bne.w	8002ae0 <d_print_comp_inner+0x1d0>
 8004414:	4601      	mov	r1, r0
 8004416:	460d      	mov	r5, r1
 8004418:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 800441c:	f7fe bb62 	b.w	8002ae4 <d_print_comp_inner+0x1d4>
 8004420:	4dd7      	ldr	r5, [pc, #860]	; (8004780 <d_print_comp_inner+0x1e70>)
 8004422:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004426:	1d2f      	adds	r7, r5, #4
 8004428:	e009      	b.n	800443e <d_print_comp_inner+0x1b2e>
 800442a:	460b      	mov	r3, r1
 800442c:	3101      	adds	r1, #1
 800442e:	42af      	cmp	r7, r5
 8004430:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004434:	54e6      	strb	r6, [r4, r3]
 8004436:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800443a:	f43e ab37 	beq.w	8002aac <d_print_comp_inner+0x19c>
 800443e:	29ff      	cmp	r1, #255	; 0xff
 8004440:	f815 6b01 	ldrb.w	r6, [r5], #1
 8004444:	d1f1      	bne.n	800442a <d_print_comp_inner+0x1b1a>
 8004446:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800444a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800444e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004452:	4620      	mov	r0, r4
 8004454:	4798      	blx	r3
 8004456:	2101      	movs	r1, #1
 8004458:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 800445c:	2300      	movs	r3, #0
 800445e:	440a      	add	r2, r1
 8004460:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004464:	e7e3      	b.n	800442e <d_print_comp_inner+0x1b1e>
 8004466:	4ec7      	ldr	r6, [pc, #796]	; (8004784 <d_print_comp_inner+0x1e74>)
 8004468:	f04f 0800 	mov.w	r8, #0
 800446c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004470:	f106 0905 	add.w	r9, r6, #5
 8004474:	e008      	b.n	8004488 <d_print_comp_inner+0x1b78>
 8004476:	460b      	mov	r3, r1
 8004478:	3101      	adds	r1, #1
 800447a:	45b1      	cmp	r9, r6
 800447c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004480:	54e7      	strb	r7, [r4, r3]
 8004482:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004486:	d013      	beq.n	80044b0 <d_print_comp_inner+0x1ba0>
 8004488:	29ff      	cmp	r1, #255	; 0xff
 800448a:	f816 7b01 	ldrb.w	r7, [r6], #1
 800448e:	d1f2      	bne.n	8004476 <d_print_comp_inner+0x1b66>
 8004490:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004494:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004498:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800449c:	4620      	mov	r0, r4
 800449e:	4798      	blx	r3
 80044a0:	2101      	movs	r1, #1
 80044a2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80044a6:	2300      	movs	r3, #0
 80044a8:	440a      	add	r2, r1
 80044aa:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80044ae:	e7e4      	b.n	800447a <d_print_comp_inner+0x1b6a>
 80044b0:	686a      	ldr	r2, [r5, #4]
 80044b2:	a804      	add	r0, sp, #16
 80044b4:	3201      	adds	r2, #1
 80044b6:	49b4      	ldr	r1, [pc, #720]	; (8004788 <d_print_comp_inner+0x1e78>)
 80044b8:	f009 fdf6 	bl	800e0a8 <sprintf>
 80044bc:	a804      	add	r0, sp, #16
 80044be:	f002 f99d 	bl	80067fc <strlen>
 80044c2:	2800      	cmp	r0, #0
 80044c4:	f43e aaf2 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80044c8:	ad04      	add	r5, sp, #16
 80044ca:	f04f 0800 	mov.w	r8, #0
 80044ce:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80044d2:	182f      	adds	r7, r5, r0
 80044d4:	e009      	b.n	80044ea <d_print_comp_inner+0x1bda>
 80044d6:	460b      	mov	r3, r1
 80044d8:	3101      	adds	r1, #1
 80044da:	42af      	cmp	r7, r5
 80044dc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80044e0:	54e6      	strb	r6, [r4, r3]
 80044e2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80044e6:	f43e aae1 	beq.w	8002aac <d_print_comp_inner+0x19c>
 80044ea:	29ff      	cmp	r1, #255	; 0xff
 80044ec:	f815 6b01 	ldrb.w	r6, [r5], #1
 80044f0:	d1f1      	bne.n	80044d6 <d_print_comp_inner+0x1bc6>
 80044f2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80044f6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80044fa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80044fe:	4620      	mov	r0, r4
 8004500:	4798      	blx	r3
 8004502:	2101      	movs	r1, #1
 8004504:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004508:	2300      	movs	r3, #0
 800450a:	440a      	add	r2, r1
 800450c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004510:	e7e3      	b.n	80044da <d_print_comp_inner+0x1bca>
 8004512:	f021 0860 	bic.w	r8, r1, #96	; 0x60
 8004516:	f105 0208 	add.w	r2, r5, #8
 800451a:	4641      	mov	r1, r8
 800451c:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8004520:	f001 fc9c 	bl	8005e5c <d_print_function_type.isra.11>
 8004524:	686a      	ldr	r2, [r5, #4]
 8004526:	2a00      	cmp	r2, #0
 8004528:	f43e aac0 	beq.w	8002aac <d_print_comp_inner+0x19c>
 800452c:	4641      	mov	r1, r8
 800452e:	4620      	mov	r0, r4
 8004530:	f000 ff98 	bl	8005464 <d_print_comp>
 8004534:	f7fe baba 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004538:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800453c:	f7ff b9a3 	b.w	8003886 <d_print_comp_inner+0xf76>
 8004540:	4e92      	ldr	r6, [pc, #584]	; (800478c <d_print_comp_inner+0x1e7c>)
 8004542:	f04f 0900 	mov.w	r9, #0
 8004546:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800454a:	f106 0a05 	add.w	sl, r6, #5
 800454e:	e009      	b.n	8004564 <d_print_comp_inner+0x1c54>
 8004550:	460b      	mov	r3, r1
 8004552:	3101      	adds	r1, #1
 8004554:	45b2      	cmp	sl, r6
 8004556:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800455a:	54e7      	strb	r7, [r4, r3]
 800455c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004560:	f43f a97b 	beq.w	800385a <d_print_comp_inner+0xf4a>
 8004564:	29ff      	cmp	r1, #255	; 0xff
 8004566:	f816 7b01 	ldrb.w	r7, [r6], #1
 800456a:	d1f1      	bne.n	8004550 <d_print_comp_inner+0x1c40>
 800456c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004570:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004574:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004578:	4620      	mov	r0, r4
 800457a:	4798      	blx	r3
 800457c:	2101      	movs	r1, #1
 800457e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004582:	2300      	movs	r3, #0
 8004584:	440a      	add	r2, r1
 8004586:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800458a:	e7e3      	b.n	8004554 <d_print_comp_inner+0x1c44>
 800458c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8004590:	497f      	ldr	r1, [pc, #508]	; (8004790 <d_print_comp_inner+0x1e80>)
 8004592:	681f      	ldr	r7, [r3, #0]
 8004594:	4638      	mov	r0, r7
 8004596:	f002 f927 	bl	80067e8 <strcmp>
 800459a:	f896 a000 	ldrb.w	sl, [r6]
 800459e:	b918      	cbnz	r0, 80045a8 <d_print_comp_inner+0x1c98>
 80045a0:	f1ba 0f03 	cmp.w	sl, #3
 80045a4:	f000 851e 	beq.w	8004fe4 <d_print_comp_inner+0x26d4>
 80045a8:	f1ba 0f38 	cmp.w	sl, #56	; 0x38
 80045ac:	f000 8600 	beq.w	80051b0 <d_print_comp_inner+0x28a0>
 80045b0:	4978      	ldr	r1, [pc, #480]	; (8004794 <d_print_comp_inner+0x1e84>)
 80045b2:	4638      	mov	r0, r7
 80045b4:	f002 f918 	bl	80067e8 <strcmp>
 80045b8:	4605      	mov	r5, r0
 80045ba:	2800      	cmp	r0, #0
 80045bc:	f000 8136 	beq.w	800482c <d_print_comp_inner+0x1f1c>
 80045c0:	4975      	ldr	r1, [pc, #468]	; (8004798 <d_print_comp_inner+0x1e88>)
 80045c2:	4638      	mov	r0, r7
 80045c4:	f002 f910 	bl	80067e8 <strcmp>
 80045c8:	2800      	cmp	r0, #0
 80045ca:	f000 82b9 	beq.w	8004b40 <d_print_comp_inner+0x2230>
 80045ce:	464a      	mov	r2, r9
 80045d0:	4641      	mov	r1, r8
 80045d2:	4620      	mov	r0, r4
 80045d4:	f001 fd36 	bl	8006044 <d_print_expr_op>
 80045d8:	2f00      	cmp	r7, #0
 80045da:	f43f a837 	beq.w	800364c <d_print_comp_inner+0xd3c>
 80045de:	496f      	ldr	r1, [pc, #444]	; (800479c <d_print_comp_inner+0x1e8c>)
 80045e0:	4638      	mov	r0, r7
 80045e2:	f002 f901 	bl	80067e8 <strcmp>
 80045e6:	2800      	cmp	r0, #0
 80045e8:	f000 8387 	beq.w	8004cfa <d_print_comp_inner+0x23ea>
 80045ec:	4638      	mov	r0, r7
 80045ee:	496c      	ldr	r1, [pc, #432]	; (80047a0 <d_print_comp_inner+0x1e90>)
 80045f0:	f002 f8fa 	bl	80067e8 <strcmp>
 80045f4:	4605      	mov	r5, r0
 80045f6:	2800      	cmp	r0, #0
 80045f8:	f47f a828 	bne.w	800364c <d_print_comp_inner+0xd3c>
 80045fc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004600:	2bff      	cmp	r3, #255	; 0xff
 8004602:	f000 84de 	beq.w	8004fc2 <d_print_comp_inner+0x26b2>
 8004606:	2528      	movs	r5, #40	; 0x28
 8004608:	1c58      	adds	r0, r3, #1
 800460a:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 800460e:	4641      	mov	r1, r8
 8004610:	54e5      	strb	r5, [r4, r3]
 8004612:	4632      	mov	r2, r6
 8004614:	4620      	mov	r0, r4
 8004616:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 800461a:	f000 ff23 	bl	8005464 <d_print_comp>
 800461e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004622:	29ff      	cmp	r1, #255	; 0xff
 8004624:	f000 8470 	beq.w	8004f08 <d_print_comp_inner+0x25f8>
 8004628:	2329      	movs	r3, #41	; 0x29
 800462a:	1c4a      	adds	r2, r1, #1
 800462c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004630:	5463      	strb	r3, [r4, r1]
 8004632:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004636:	f7fe ba39 	b.w	8002aac <d_print_comp_inner+0x19c>
 800463a:	6858      	ldr	r0, [r3, #4]
 800463c:	f10d 0910 	add.w	r9, sp, #16
 8004640:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004644:	4602      	mov	r2, r0
 8004646:	9004      	str	r0, [sp, #16]
 8004648:	f8c4 9128 	str.w	r9, [r4, #296]	; 0x128
 800464c:	4641      	mov	r1, r8
 800464e:	4620      	mov	r0, r4
 8004650:	9305      	str	r3, [sp, #20]
 8004652:	f7fe f95d 	bl	8002910 <d_print_comp_inner>
 8004656:	9a05      	ldr	r2, [sp, #20]
 8004658:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800465c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004660:	b113      	cbz	r3, 8004668 <d_print_comp_inner+0x1d58>
 8004662:	9b02      	ldr	r3, [sp, #8]
 8004664:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004668:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 800466c:	2b3c      	cmp	r3, #60	; 0x3c
 800466e:	f000 83db 	beq.w	8004e28 <d_print_comp_inner+0x2518>
 8004672:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004676:	29ff      	cmp	r1, #255	; 0xff
 8004678:	f000 8469 	beq.w	8004f4e <d_print_comp_inner+0x263e>
 800467c:	233c      	movs	r3, #60	; 0x3c
 800467e:	1c4a      	adds	r2, r1, #1
 8004680:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004684:	5463      	strb	r3, [r4, r1]
 8004686:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800468a:	686b      	ldr	r3, [r5, #4]
 800468c:	f8d4 5128 	ldr.w	r5, [r4, #296]	; 0x128
 8004690:	689b      	ldr	r3, [r3, #8]
 8004692:	4641      	mov	r1, r8
 8004694:	461a      	mov	r2, r3
 8004696:	f8c4 9128 	str.w	r9, [r4, #296]	; 0x128
 800469a:	4620      	mov	r0, r4
 800469c:	9304      	str	r3, [sp, #16]
 800469e:	9505      	str	r5, [sp, #20]
 80046a0:	f7fe f936 	bl	8002910 <d_print_comp_inner>
 80046a4:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 80046a8:	9a05      	ldr	r2, [sp, #20]
 80046aa:	2b3e      	cmp	r3, #62	; 0x3e
 80046ac:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80046b0:	f000 83ad 	beq.w	8004e0e <d_print_comp_inner+0x24fe>
 80046b4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80046b8:	29ff      	cmp	r1, #255	; 0xff
 80046ba:	f000 849c 	beq.w	8004ff6 <d_print_comp_inner+0x26e6>
 80046be:	233e      	movs	r3, #62	; 0x3e
 80046c0:	1c4a      	adds	r2, r1, #1
 80046c2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80046c6:	5463      	strb	r3, [r4, r1]
 80046c8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80046cc:	f7fe b9ee 	b.w	8002aac <d_print_comp_inner+0x19c>
 80046d0:	6852      	ldr	r2, [r2, #4]
 80046d2:	7c16      	ldrb	r6, [r2, #16]
 80046d4:	2e00      	cmp	r6, #0
 80046d6:	f43f a9e7 	beq.w	8003aa8 <d_print_comp_inner+0x1198>
 80046da:	2e06      	cmp	r6, #6
 80046dc:	f240 8339 	bls.w	8004d52 <d_print_comp_inner+0x2442>
 80046e0:	2e07      	cmp	r6, #7
 80046e2:	f47f a9e1 	bne.w	8003aa8 <d_print_comp_inner+0x1198>
 80046e6:	68aa      	ldr	r2, [r5, #8]
 80046e8:	7811      	ldrb	r1, [r2, #0]
 80046ea:	2900      	cmp	r1, #0
 80046ec:	f47f a9dc 	bne.w	8003aa8 <d_print_comp_inner+0x1198>
 80046f0:	6891      	ldr	r1, [r2, #8]
 80046f2:	2901      	cmp	r1, #1
 80046f4:	f47f a9d8 	bne.w	8003aa8 <d_print_comp_inner+0x1198>
 80046f8:	2b3c      	cmp	r3, #60	; 0x3c
 80046fa:	f47f a9d5 	bne.w	8003aa8 <d_print_comp_inner+0x1198>
 80046fe:	6853      	ldr	r3, [r2, #4]
 8004700:	781b      	ldrb	r3, [r3, #0]
 8004702:	2b30      	cmp	r3, #48	; 0x30
 8004704:	f000 8628 	beq.w	8005358 <d_print_comp_inner+0x2a48>
 8004708:	2b31      	cmp	r3, #49	; 0x31
 800470a:	f47f a9cd 	bne.w	8003aa8 <d_print_comp_inner+0x1198>
 800470e:	2204      	movs	r2, #4
 8004710:	4924      	ldr	r1, [pc, #144]	; (80047a4 <d_print_comp_inner+0x1e94>)
 8004712:	f7fb fe3b 	bl	800038c <d_append_buffer>
 8004716:	f7fe b9c9 	b.w	8002aac <d_print_comp_inner+0x19c>
 800471a:	4e23      	ldr	r6, [pc, #140]	; (80047a8 <d_print_comp_inner+0x1e98>)
 800471c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004720:	f106 0a02 	add.w	sl, r6, #2
 8004724:	e009      	b.n	800473a <d_print_comp_inner+0x1e2a>
 8004726:	460b      	mov	r3, r1
 8004728:	3101      	adds	r1, #1
 800472a:	45b2      	cmp	sl, r6
 800472c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004730:	54e7      	strb	r7, [r4, r3]
 8004732:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004736:	f43e ad4d 	beq.w	80031d4 <d_print_comp_inner+0x8c4>
 800473a:	29ff      	cmp	r1, #255	; 0xff
 800473c:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004740:	d1f1      	bne.n	8004726 <d_print_comp_inner+0x1e16>
 8004742:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004746:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800474a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800474e:	4620      	mov	r0, r4
 8004750:	4798      	blx	r3
 8004752:	2101      	movs	r1, #1
 8004754:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004758:	2300      	movs	r3, #0
 800475a:	440a      	add	r2, r1
 800475c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004760:	e7e3      	b.n	800472a <d_print_comp_inner+0x1e1a>
 8004762:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004766:	29ff      	cmp	r1, #255	; 0xff
 8004768:	f000 84e6 	beq.w	8005138 <d_print_comp_inner+0x2828>
 800476c:	2220      	movs	r2, #32
 800476e:	1c4b      	adds	r3, r1, #1
 8004770:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004774:	5462      	strb	r2, [r4, r1]
 8004776:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800477a:	f7fe bdb6 	b.w	80032ea <d_print_comp_inner+0x9da>
 800477e:	bf00      	nop
 8004780:	080120c4 	.word	0x080120c4
 8004784:	08011ee8 	.word	0x08011ee8
 8004788:	08011e74 	.word	0x08011e74
 800478c:	08012038 	.word	0x08012038
 8004790:	0801206c 	.word	0x0801206c
 8004794:	08012140 	.word	0x08012140
 8004798:	08011e78 	.word	0x08011e78
 800479c:	08012070 	.word	0x08012070
 80047a0:	08012380 	.word	0x08012380
 80047a4:	0801209c 	.word	0x0801209c
 80047a8:	08011ec4 	.word	0x08011ec4
 80047ac:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80047b0:	29ff      	cmp	r1, #255	; 0xff
 80047b2:	f000 8467 	beq.w	8005084 <d_print_comp_inner+0x2774>
 80047b6:	2220      	movs	r2, #32
 80047b8:	1c4b      	adds	r3, r1, #1
 80047ba:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80047be:	5462      	strb	r2, [r4, r1]
 80047c0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80047c4:	f7fe bd7b 	b.w	80032be <d_print_comp_inner+0x9ae>
 80047c8:	2700      	movs	r7, #0
 80047ca:	55a7      	strb	r7, [r4, r6]
 80047cc:	4631      	mov	r1, r6
 80047ce:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80047d2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80047d6:	4620      	mov	r0, r4
 80047d8:	4798      	blx	r3
 80047da:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80047de:	463e      	mov	r6, r7
 80047e0:	3301      	adds	r3, #1
 80047e2:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80047e6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80047ea:	f7fe be2d 	b.w	8003448 <d_print_comp_inner+0xb38>
 80047ee:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80047f2:	29ff      	cmp	r1, #255	; 0xff
 80047f4:	f000 8467 	beq.w	80050c6 <d_print_comp_inner+0x27b6>
 80047f8:	235b      	movs	r3, #91	; 0x5b
 80047fa:	1c4a      	adds	r2, r1, #1
 80047fc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004800:	5463      	strb	r3, [r4, r1]
 8004802:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004806:	4641      	mov	r1, r8
 8004808:	68aa      	ldr	r2, [r5, #8]
 800480a:	4620      	mov	r0, r4
 800480c:	f000 fe2a 	bl	8005464 <d_print_comp>
 8004810:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004814:	29ff      	cmp	r1, #255	; 0xff
 8004816:	f000 8314 	beq.w	8004e42 <d_print_comp_inner+0x2532>
 800481a:	235d      	movs	r3, #93	; 0x5d
 800481c:	1c4a      	adds	r2, r1, #1
 800481e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004822:	5463      	strb	r3, [r4, r1]
 8004824:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004828:	f7fe b940 	b.w	8002aac <d_print_comp_inner+0x19c>
 800482c:	4631      	mov	r1, r6
 800482e:	4620      	mov	r0, r4
 8004830:	f7fb ffd8 	bl	80007e4 <d_find_pack>
 8004834:	b928      	cbnz	r0, 8004842 <d_print_comp_inner+0x1f32>
 8004836:	e007      	b.n	8004848 <d_print_comp_inner+0x1f38>
 8004838:	6843      	ldr	r3, [r0, #4]
 800483a:	b12b      	cbz	r3, 8004848 <d_print_comp_inner+0x1f38>
 800483c:	6880      	ldr	r0, [r0, #8]
 800483e:	3501      	adds	r5, #1
 8004840:	b110      	cbz	r0, 8004848 <d_print_comp_inner+0x1f38>
 8004842:	7803      	ldrb	r3, [r0, #0]
 8004844:	2b2f      	cmp	r3, #47	; 0x2f
 8004846:	d0f7      	beq.n	8004838 <d_print_comp_inner+0x1f28>
 8004848:	462a      	mov	r2, r5
 800484a:	a804      	add	r0, sp, #16
 800484c:	49d5      	ldr	r1, [pc, #852]	; (8004ba4 <d_print_comp_inner+0x2294>)
 800484e:	f009 fc2b 	bl	800e0a8 <sprintf>
 8004852:	a804      	add	r0, sp, #16
 8004854:	f001 ffd2 	bl	80067fc <strlen>
 8004858:	2800      	cmp	r0, #0
 800485a:	f43e a927 	beq.w	8002aac <d_print_comp_inner+0x19c>
 800485e:	ad04      	add	r5, sp, #16
 8004860:	f04f 0800 	mov.w	r8, #0
 8004864:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004868:	182f      	adds	r7, r5, r0
 800486a:	e009      	b.n	8004880 <d_print_comp_inner+0x1f70>
 800486c:	460b      	mov	r3, r1
 800486e:	3101      	adds	r1, #1
 8004870:	42bd      	cmp	r5, r7
 8004872:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004876:	54e6      	strb	r6, [r4, r3]
 8004878:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800487c:	f43e a916 	beq.w	8002aac <d_print_comp_inner+0x19c>
 8004880:	29ff      	cmp	r1, #255	; 0xff
 8004882:	f815 6b01 	ldrb.w	r6, [r5], #1
 8004886:	d1f1      	bne.n	800486c <d_print_comp_inner+0x1f5c>
 8004888:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800488c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004890:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004894:	4620      	mov	r0, r4
 8004896:	4798      	blx	r3
 8004898:	2101      	movs	r1, #1
 800489a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 800489e:	2300      	movs	r3, #0
 80048a0:	440a      	add	r2, r1
 80048a2:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80048a6:	e7e3      	b.n	8004870 <d_print_comp_inner+0x1f60>
 80048a8:	686a      	ldr	r2, [r5, #4]
 80048aa:	4641      	mov	r1, r8
 80048ac:	4620      	mov	r0, r4
 80048ae:	f000 fdd9 	bl	8005464 <d_print_comp>
 80048b2:	f7fe b8fb 	b.w	8002aac <d_print_comp_inner+0x19c>
 80048b6:	29ff      	cmp	r1, #255	; 0xff
 80048b8:	f000 83d4 	beq.w	8005064 <d_print_comp_inner+0x2754>
 80048bc:	232d      	movs	r3, #45	; 0x2d
 80048be:	1c4a      	adds	r2, r1, #1
 80048c0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80048c4:	5463      	strb	r3, [r4, r1]
 80048c6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80048ca:	f7ff b90e 	b.w	8003aea <d_print_comp_inner+0x11da>
 80048ce:	2500      	movs	r5, #0
 80048d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80048d4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80048d8:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80048dc:	4620      	mov	r0, r4
 80048de:	4798      	blx	r3
 80048e0:	2201      	movs	r2, #1
 80048e2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80048e6:	4629      	mov	r1, r5
 80048e8:	4413      	add	r3, r2
 80048ea:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80048ee:	f7ff bbeb 	b.w	80040c8 <d_print_comp_inner+0x17b8>
 80048f2:	2500      	movs	r5, #0
 80048f4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80048f8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80048fc:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004900:	4620      	mov	r0, r4
 8004902:	4798      	blx	r3
 8004904:	2201      	movs	r2, #1
 8004906:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800490a:	4629      	mov	r1, r5
 800490c:	4413      	add	r3, r2
 800490e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004912:	f7ff ba90 	b.w	8003e36 <d_print_comp_inner+0x1526>
 8004916:	2600      	movs	r6, #0
 8004918:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 800491c:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8004920:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8004924:	4798      	blx	r3
 8004926:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800492a:	4631      	mov	r1, r6
 800492c:	3301      	adds	r3, #1
 800492e:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004932:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004936:	f7fe bd3f 	b.w	80033b8 <d_print_comp_inner+0xaa8>
 800493a:	2600      	movs	r6, #0
 800493c:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8004940:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8004944:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8004948:	4798      	blx	r3
 800494a:	2201      	movs	r2, #1
 800494c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004950:	4631      	mov	r1, r6
 8004952:	4413      	add	r3, r2
 8004954:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004958:	f7fe bb70 	b.w	800303c <d_print_comp_inner+0x72c>
 800495c:	2500      	movs	r5, #0
 800495e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004962:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004966:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800496a:	4620      	mov	r0, r4
 800496c:	4798      	blx	r3
 800496e:	2201      	movs	r2, #1
 8004970:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004974:	4629      	mov	r1, r5
 8004976:	4413      	add	r3, r2
 8004978:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800497c:	f7ff bae5 	b.w	8003f4a <d_print_comp_inner+0x163a>
 8004980:	220d      	movs	r2, #13
 8004982:	4989      	ldr	r1, [pc, #548]	; (8004ba8 <d_print_comp_inner+0x2298>)
 8004984:	4620      	mov	r0, r4
 8004986:	f7fb fd01 	bl	800038c <d_append_buffer>
 800498a:	68a9      	ldr	r1, [r5, #8]
 800498c:	4620      	mov	r0, r4
 800498e:	3101      	adds	r1, #1
 8004990:	f7fb ffac 	bl	80008ec <d_append_num>
 8004994:	2203      	movs	r2, #3
 8004996:	4985      	ldr	r1, [pc, #532]	; (8004bac <d_print_comp_inner+0x229c>)
 8004998:	4620      	mov	r0, r4
 800499a:	f7fb fcf7 	bl	800038c <d_append_buffer>
 800499e:	686d      	ldr	r5, [r5, #4]
 80049a0:	f7fe bc1d 	b.w	80031de <d_print_comp_inner+0x8ce>
 80049a4:	2500      	movs	r5, #0
 80049a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80049aa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80049ae:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80049b2:	4620      	mov	r0, r4
 80049b4:	4798      	blx	r3
 80049b6:	2201      	movs	r2, #1
 80049b8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80049bc:	4629      	mov	r1, r5
 80049be:	4413      	add	r3, r2
 80049c0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80049c4:	f7fe be06 	b.w	80035d4 <d_print_comp_inner+0xcc4>
 80049c8:	2301      	movs	r3, #1
 80049ca:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80049ce:	f7fe b86d 	b.w	8002aac <d_print_comp_inner+0x19c>
 80049d2:	2500      	movs	r5, #0
 80049d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80049d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80049dc:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80049e0:	4620      	mov	r0, r4
 80049e2:	4798      	blx	r3
 80049e4:	2201      	movs	r2, #1
 80049e6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80049ea:	4629      	mov	r1, r5
 80049ec:	4413      	add	r3, r2
 80049ee:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80049f2:	f7ff ba90 	b.w	8003f16 <d_print_comp_inner+0x1606>
 80049f6:	2500      	movs	r5, #0
 80049f8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80049fc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004a00:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004a04:	4620      	mov	r0, r4
 8004a06:	4798      	blx	r3
 8004a08:	2201      	movs	r2, #1
 8004a0a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004a0e:	4629      	mov	r1, r5
 8004a10:	4413      	add	r3, r2
 8004a12:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004a16:	f7ff bbc5 	b.w	80041a4 <d_print_comp_inner+0x1894>
 8004a1a:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8004a1e:	a914      	add	r1, sp, #80	; 0x50
 8004a20:	f841 3d40 	str.w	r3, [r1, #-64]!
 8004a24:	f028 0860 	bic.w	r8, r8, #96	; 0x60
 8004a28:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8004a2c:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 8004a30:	4620      	mov	r0, r4
 8004a32:	4641      	mov	r1, r8
 8004a34:	9606      	str	r6, [sp, #24]
 8004a36:	9307      	str	r3, [sp, #28]
 8004a38:	9505      	str	r5, [sp, #20]
 8004a3a:	f000 fd13 	bl	8005464 <d_print_comp>
 8004a3e:	9b04      	ldr	r3, [sp, #16]
 8004a40:	9e06      	ldr	r6, [sp, #24]
 8004a42:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8004a46:	2e00      	cmp	r6, #0
 8004a48:	f47e a830 	bne.w	8002aac <d_print_comp_inner+0x19c>
 8004a4c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004a50:	29ff      	cmp	r1, #255	; 0xff
 8004a52:	f000 840b 	beq.w	800526c <d_print_comp_inner+0x295c>
 8004a56:	2320      	movs	r3, #32
 8004a58:	1c4a      	adds	r2, r1, #1
 8004a5a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004a5e:	5463      	strb	r3, [r4, r1]
 8004a60:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004a64:	f7fe be0a 	b.w	800367c <d_print_comp_inner+0xd6c>
 8004a68:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	f6fe abfa 	blt.w	8003266 <d_print_comp_inner+0x956>
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	f000 829f 	beq.w	8004fb6 <d_print_comp_inner+0x26a6>
 8004a78:	6880      	ldr	r0, [r0, #8]
 8004a7a:	3b01      	subs	r3, #1
 8004a7c:	2800      	cmp	r0, #0
 8004a7e:	f43e a829 	beq.w	8002ad4 <d_print_comp_inner+0x1c4>
 8004a82:	7802      	ldrb	r2, [r0, #0]
 8004a84:	2a2f      	cmp	r2, #47	; 0x2f
 8004a86:	d0f4      	beq.n	8004a72 <d_print_comp_inner+0x2162>
 8004a88:	f7fe b824 	b.w	8002ad4 <d_print_comp_inner+0x1c4>
 8004a8c:	f8d0 e130 	ldr.w	lr, [r0, #304]	; 0x130
 8004a90:	f8d0 212c 	ldr.w	r2, [r0, #300]	; 0x12c
 8004a94:	f1be 0f00 	cmp.w	lr, #0
 8004a98:	dd14      	ble.n	8004ac4 <d_print_comp_inner+0x21b4>
 8004a9a:	6813      	ldr	r3, [r2, #0]
 8004a9c:	4299      	cmp	r1, r3
 8004a9e:	f000 83f7 	beq.w	8005290 <d_print_comp_inner+0x2980>
 8004aa2:	463b      	mov	r3, r7
 8004aa4:	f102 0008 	add.w	r0, r2, #8
 8004aa8:	46a4      	mov	ip, r4
 8004aaa:	e007      	b.n	8004abc <d_print_comp_inner+0x21ac>
 8004aac:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8004ab0:	4681      	mov	r9, r0
 8004ab2:	42a1      	cmp	r1, r4
 8004ab4:	f100 0008 	add.w	r0, r0, #8
 8004ab8:	f000 81d3 	beq.w	8004e62 <d_print_comp_inner+0x2552>
 8004abc:	3301      	adds	r3, #1
 8004abe:	459e      	cmp	lr, r3
 8004ac0:	d1f4      	bne.n	8004aac <d_print_comp_inner+0x219c>
 8004ac2:	4664      	mov	r4, ip
 8004ac4:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8004ac8:	459e      	cmp	lr, r3
 8004aca:	f280 84bb 	bge.w	8005444 <d_print_comp_inner+0x2b34>
 8004ace:	f10e 0301 	add.w	r3, lr, #1
 8004ad2:	eb02 09ce 	add.w	r9, r2, lr, lsl #3
 8004ad6:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
 8004ada:	f842 103e 	str.w	r1, [r2, lr, lsl #3]
 8004ade:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
 8004ae2:	f109 0904 	add.w	r9, r9, #4
 8004ae6:	4672      	mov	r2, lr
 8004ae8:	2a00      	cmp	r2, #0
 8004aea:	f000 848e 	beq.w	800540a <d_print_comp_inner+0x2afa>
 8004aee:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8004af2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8004af6:	f100 0e01 	add.w	lr, r0, #1
 8004afa:	4298      	cmp	r0, r3
 8004afc:	f280 84a2 	bge.w	8005444 <d_print_comp_inner+0x2b34>
 8004b00:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8004b04:	f8c4 e13c 	str.w	lr, [r4, #316]	; 0x13c
 8004b08:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 8004b0c:	6850      	ldr	r0, [r2, #4]
 8004b0e:	6058      	str	r0, [r3, #4]
 8004b10:	f8c9 3000 	str.w	r3, [r9]
 8004b14:	6812      	ldr	r2, [r2, #0]
 8004b16:	4699      	mov	r9, r3
 8004b18:	e7e6      	b.n	8004ae8 <d_print_comp_inner+0x21d8>
 8004b1a:	2500      	movs	r5, #0
 8004b1c:	4619      	mov	r1, r3
 8004b1e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004b22:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004b26:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004b2a:	4620      	mov	r0, r4
 8004b2c:	4798      	blx	r3
 8004b2e:	2201      	movs	r2, #1
 8004b30:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8004b34:	462b      	mov	r3, r5
 8004b36:	4411      	add	r1, r2
 8004b38:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8004b3c:	f7fe bd39 	b.w	80035b2 <d_print_comp_inner+0xca2>
 8004b40:	2e00      	cmp	r6, #0
 8004b42:	f000 844d 	beq.w	80053e0 <d_print_comp_inner+0x2ad0>
 8004b46:	f1ba 0f2f 	cmp.w	sl, #47	; 0x2f
 8004b4a:	f040 8488 	bne.w	800545e <d_print_comp_inner+0x2b4e>
 8004b4e:	6873      	ldr	r3, [r6, #4]
 8004b50:	b373      	cbz	r3, 8004bb0 <d_print_comp_inner+0x22a0>
 8004b52:	4607      	mov	r7, r0
 8004b54:	e007      	b.n	8004b66 <d_print_comp_inner+0x2256>
 8004b56:	3701      	adds	r7, #1
 8004b58:	68b6      	ldr	r6, [r6, #8]
 8004b5a:	b356      	cbz	r6, 8004bb2 <d_print_comp_inner+0x22a2>
 8004b5c:	7833      	ldrb	r3, [r6, #0]
 8004b5e:	2b2f      	cmp	r3, #47	; 0x2f
 8004b60:	d127      	bne.n	8004bb2 <d_print_comp_inner+0x22a2>
 8004b62:	6873      	ldr	r3, [r6, #4]
 8004b64:	b32b      	cbz	r3, 8004bb2 <d_print_comp_inner+0x22a2>
 8004b66:	781a      	ldrb	r2, [r3, #0]
 8004b68:	2a4a      	cmp	r2, #74	; 0x4a
 8004b6a:	d1f4      	bne.n	8004b56 <d_print_comp_inner+0x2246>
 8004b6c:	6859      	ldr	r1, [r3, #4]
 8004b6e:	4620      	mov	r0, r4
 8004b70:	f7fb fe38 	bl	80007e4 <d_find_pack>
 8004b74:	b198      	cbz	r0, 8004b9e <d_print_comp_inner+0x228e>
 8004b76:	7803      	ldrb	r3, [r0, #0]
 8004b78:	2b2f      	cmp	r3, #47	; 0x2f
 8004b7a:	f040 846c 	bne.w	8005456 <d_print_comp_inner+0x2b46>
 8004b7e:	6843      	ldr	r3, [r0, #4]
 8004b80:	2b00      	cmp	r3, #0
 8004b82:	f000 8464 	beq.w	800544e <d_print_comp_inner+0x2b3e>
 8004b86:	4603      	mov	r3, r0
 8004b88:	2000      	movs	r0, #0
 8004b8a:	e004      	b.n	8004b96 <d_print_comp_inner+0x2286>
 8004b8c:	781a      	ldrb	r2, [r3, #0]
 8004b8e:	2a2f      	cmp	r2, #47	; 0x2f
 8004b90:	d105      	bne.n	8004b9e <d_print_comp_inner+0x228e>
 8004b92:	685a      	ldr	r2, [r3, #4]
 8004b94:	b11a      	cbz	r2, 8004b9e <d_print_comp_inner+0x228e>
 8004b96:	689b      	ldr	r3, [r3, #8]
 8004b98:	3001      	adds	r0, #1
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d1f6      	bne.n	8004b8c <d_print_comp_inner+0x227c>
 8004b9e:	4407      	add	r7, r0
 8004ba0:	e7da      	b.n	8004b58 <d_print_comp_inner+0x2248>
 8004ba2:	bf00      	nop
 8004ba4:	08011e74 	.word	0x08011e74
 8004ba8:	08011ec8 	.word	0x08011ec8
 8004bac:	08011ed8 	.word	0x08011ed8
 8004bb0:	461f      	mov	r7, r3
 8004bb2:	4639      	mov	r1, r7
 8004bb4:	4620      	mov	r0, r4
 8004bb6:	f7fb fe99 	bl	80008ec <d_append_num>
 8004bba:	f7fd bf77 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004bbe:	2500      	movs	r5, #0
 8004bc0:	4619      	mov	r1, r3
 8004bc2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004bc6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004bca:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004bce:	4620      	mov	r0, r4
 8004bd0:	4798      	blx	r3
 8004bd2:	2101      	movs	r1, #1
 8004bd4:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004bd8:	462b      	mov	r3, r5
 8004bda:	440a      	add	r2, r1
 8004bdc:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004be0:	f7fe bb87 	b.w	80032f2 <d_print_comp_inner+0x9e2>
 8004be4:	2600      	movs	r6, #0
 8004be6:	4619      	mov	r1, r3
 8004be8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004bec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004bf0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	4798      	blx	r3
 8004bf8:	2101      	movs	r1, #1
 8004bfa:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004bfe:	4633      	mov	r3, r6
 8004c00:	440a      	add	r2, r1
 8004c02:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004c06:	f7fe bb5e 	b.w	80032c6 <d_print_comp_inner+0x9b6>
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	4619      	mov	r1, r3
 8004c0e:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8004c12:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c16:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c1a:	4620      	mov	r0, r4
 8004c1c:	4798      	blx	r3
 8004c1e:	2329      	movs	r3, #41	; 0x29
 8004c20:	2101      	movs	r1, #1
 8004c22:	7023      	strb	r3, [r4, #0]
 8004c24:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004c28:	782a      	ldrb	r2, [r5, #0]
 8004c2a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004c2e:	2a3d      	cmp	r2, #61	; 0x3d
 8004c30:	440b      	add	r3, r1
 8004c32:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004c36:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004c3a:	f47e af56 	bne.w	8003aea <d_print_comp_inner+0x11da>
 8004c3e:	e63d      	b.n	80048bc <d_print_comp_inner+0x1fac>
 8004c40:	2700      	movs	r7, #0
 8004c42:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c46:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004c4a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c4e:	4620      	mov	r0, r4
 8004c50:	4798      	blx	r3
 8004c52:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004c56:	4639      	mov	r1, r7
 8004c58:	3301      	adds	r3, #1
 8004c5a:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004c5e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004c62:	f7fe bf26 	b.w	8003ab2 <d_print_comp_inner+0x11a2>
 8004c66:	2500      	movs	r5, #0
 8004c68:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c6c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c70:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004c74:	4620      	mov	r0, r4
 8004c76:	4798      	blx	r3
 8004c78:	2201      	movs	r2, #1
 8004c7a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004c7e:	4629      	mov	r1, r5
 8004c80:	4413      	add	r3, r2
 8004c82:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004c86:	f7ff bb10 	b.w	80042aa <d_print_comp_inner+0x199a>
 8004c8a:	781b      	ldrb	r3, [r3, #0]
 8004c8c:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
 8004c90:	2901      	cmp	r1, #1
 8004c92:	d903      	bls.n	8004c9c <d_print_comp_inner+0x238c>
 8004c94:	3b72      	subs	r3, #114	; 0x72
 8004c96:	2b01      	cmp	r3, #1
 8004c98:	f63d aea7 	bhi.w	80029ea <d_print_comp_inner+0xda>
 8004c9c:	4641      	mov	r1, r8
 8004c9e:	4620      	mov	r0, r4
 8004ca0:	f001 f9d0 	bl	8006044 <d_print_expr_op>
 8004ca4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004ca8:	29ff      	cmp	r1, #255	; 0xff
 8004caa:	f000 8271 	beq.w	8005190 <d_print_comp_inner+0x2880>
 8004cae:	233c      	movs	r3, #60	; 0x3c
 8004cb0:	1c4a      	adds	r2, r1, #1
 8004cb2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004cb6:	5463      	strb	r3, [r4, r1]
 8004cb8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004cbc:	68ab      	ldr	r3, [r5, #8]
 8004cbe:	4641      	mov	r1, r8
 8004cc0:	685a      	ldr	r2, [r3, #4]
 8004cc2:	4620      	mov	r0, r4
 8004cc4:	f000 fbce 	bl	8005464 <d_print_comp>
 8004cc8:	2202      	movs	r2, #2
 8004cca:	49d5      	ldr	r1, [pc, #852]	; (8005020 <d_print_comp_inner+0x2710>)
 8004ccc:	4620      	mov	r0, r4
 8004cce:	f7fb fb5d 	bl	800038c <d_append_buffer>
 8004cd2:	68ab      	ldr	r3, [r5, #8]
 8004cd4:	4641      	mov	r1, r8
 8004cd6:	689a      	ldr	r2, [r3, #8]
 8004cd8:	4620      	mov	r0, r4
 8004cda:	f000 fbc3 	bl	8005464 <d_print_comp>
 8004cde:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004ce2:	29ff      	cmp	r1, #255	; 0xff
 8004ce4:	f000 81df 	beq.w	80050a6 <d_print_comp_inner+0x2796>
 8004ce8:	2329      	movs	r3, #41	; 0x29
 8004cea:	1c4a      	adds	r2, r1, #1
 8004cec:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004cf0:	5463      	strb	r3, [r4, r1]
 8004cf2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004cf6:	f7fd bed9 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004cfa:	4632      	mov	r2, r6
 8004cfc:	4641      	mov	r1, r8
 8004cfe:	4620      	mov	r0, r4
 8004d00:	f000 fbb0 	bl	8005464 <d_print_comp>
 8004d04:	f7fd bed2 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004d08:	2600      	movs	r6, #0
 8004d0a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004d0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004d12:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004d16:	4620      	mov	r0, r4
 8004d18:	4798      	blx	r3
 8004d1a:	2201      	movs	r2, #1
 8004d1c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004d20:	4631      	mov	r1, r6
 8004d22:	4413      	add	r3, r2
 8004d24:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004d28:	f7fe ba4e 	b.w	80031c8 <d_print_comp_inner+0x8b8>
 8004d2c:	49bd      	ldr	r1, [pc, #756]	; (8005024 <d_print_comp_inner+0x2714>)
 8004d2e:	6870      	ldr	r0, [r6, #4]
 8004d30:	f009 fc12 	bl	800e558 <strncmp>
 8004d34:	2800      	cmp	r0, #0
 8004d36:	f47e aab6 	bne.w	80032a6 <d_print_comp_inner+0x996>
 8004d3a:	68aa      	ldr	r2, [r5, #8]
 8004d3c:	4641      	mov	r1, r8
 8004d3e:	4620      	mov	r0, r4
 8004d40:	f000 fb90 	bl	8005464 <d_print_comp>
 8004d44:	2202      	movs	r2, #2
 8004d46:	49b8      	ldr	r1, [pc, #736]	; (8005028 <d_print_comp_inner+0x2718>)
 8004d48:	4620      	mov	r0, r4
 8004d4a:	f7fb fb1f 	bl	800038c <d_append_buffer>
 8004d4e:	f7fe bad6 	b.w	80032fe <d_print_comp_inner+0x9ee>
 8004d52:	68aa      	ldr	r2, [r5, #8]
 8004d54:	7817      	ldrb	r7, [r2, #0]
 8004d56:	2f00      	cmp	r7, #0
 8004d58:	f47e aea6 	bne.w	8003aa8 <d_print_comp_inner+0x1198>
 8004d5c:	2b3d      	cmp	r3, #61	; 0x3d
 8004d5e:	f000 82ef 	beq.w	8005340 <d_print_comp_inner+0x2a30>
 8004d62:	68aa      	ldr	r2, [r5, #8]
 8004d64:	4641      	mov	r1, r8
 8004d66:	4620      	mov	r0, r4
 8004d68:	3e02      	subs	r6, #2
 8004d6a:	f000 fb7b 	bl	8005464 <d_print_comp>
 8004d6e:	2e04      	cmp	r6, #4
 8004d70:	f63d ae9c 	bhi.w	8002aac <d_print_comp_inner+0x19c>
 8004d74:	e8df f006 	tbb	[pc, r6]
 8004d78:	0a111826 	.word	0x0a111826
 8004d7c:	03          	.byte	0x03
 8004d7d:	00          	.byte	0x00
 8004d7e:	4620      	mov	r0, r4
 8004d80:	2203      	movs	r2, #3
 8004d82:	49aa      	ldr	r1, [pc, #680]	; (800502c <d_print_comp_inner+0x271c>)
 8004d84:	f7fb fb02 	bl	800038c <d_append_buffer>
 8004d88:	f7fd be90 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004d8c:	4620      	mov	r0, r4
 8004d8e:	2202      	movs	r2, #2
 8004d90:	49a7      	ldr	r1, [pc, #668]	; (8005030 <d_print_comp_inner+0x2720>)
 8004d92:	f7fb fafb 	bl	800038c <d_append_buffer>
 8004d96:	f7fd be89 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004d9a:	4620      	mov	r0, r4
 8004d9c:	2202      	movs	r2, #2
 8004d9e:	49a5      	ldr	r1, [pc, #660]	; (8005034 <d_print_comp_inner+0x2724>)
 8004da0:	f7fb faf4 	bl	800038c <d_append_buffer>
 8004da4:	f7fd be82 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004da8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004dac:	29ff      	cmp	r1, #255	; 0xff
 8004dae:	f000 831a 	beq.w	80053e6 <d_print_comp_inner+0x2ad6>
 8004db2:	236c      	movs	r3, #108	; 0x6c
 8004db4:	1c4a      	adds	r2, r1, #1
 8004db6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004dba:	5463      	strb	r3, [r4, r1]
 8004dbc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004dc0:	f7fd be74 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004dc4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004dc8:	29ff      	cmp	r1, #255	; 0xff
 8004dca:	f000 82db 	beq.w	8005384 <d_print_comp_inner+0x2a74>
 8004dce:	2375      	movs	r3, #117	; 0x75
 8004dd0:	1c4a      	adds	r2, r1, #1
 8004dd2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004dd6:	5463      	strb	r3, [r4, r1]
 8004dd8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004ddc:	f7fd be66 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004de0:	2600      	movs	r6, #0
 8004de2:	4619      	mov	r1, r3
 8004de4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004de8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004dec:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004df0:	4620      	mov	r0, r4
 8004df2:	4798      	blx	r3
 8004df4:	2101      	movs	r1, #1
 8004df6:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004dfa:	4633      	mov	r3, r6
 8004dfc:	440a      	add	r2, r1
 8004dfe:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004e02:	f7fe bd3a 	b.w	800387a <d_print_comp_inner+0xf6a>
 8004e06:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8004e0a:	f7fe bf94 	b.w	8003d36 <d_print_comp_inner+0x1426>
 8004e0e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004e12:	29ff      	cmp	r1, #255	; 0xff
 8004e14:	f000 8244 	beq.w	80052a0 <d_print_comp_inner+0x2990>
 8004e18:	2320      	movs	r3, #32
 8004e1a:	1c4a      	adds	r2, r1, #1
 8004e1c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004e20:	5463      	strb	r3, [r4, r1]
 8004e22:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004e26:	e445      	b.n	80046b4 <d_print_comp_inner+0x1da4>
 8004e28:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004e2c:	29ff      	cmp	r1, #255	; 0xff
 8004e2e:	f000 826e 	beq.w	800530e <d_print_comp_inner+0x29fe>
 8004e32:	2320      	movs	r3, #32
 8004e34:	1c4a      	adds	r2, r1, #1
 8004e36:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004e3a:	5463      	strb	r3, [r4, r1]
 8004e3c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004e40:	e417      	b.n	8004672 <d_print_comp_inner+0x1d62>
 8004e42:	2500      	movs	r5, #0
 8004e44:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e48:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004e4c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e50:	4620      	mov	r0, r4
 8004e52:	4798      	blx	r3
 8004e54:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004e58:	4629      	mov	r1, r5
 8004e5a:	3301      	adds	r3, #1
 8004e5c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004e60:	e4db      	b.n	800481a <d_print_comp_inner+0x1f0a>
 8004e62:	4664      	mov	r4, ip
 8004e64:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 8004e68:	b1d8      	cbz	r0, 8004ea2 <d_print_comp_inner+0x2592>
 8004e6a:	6802      	ldr	r2, [r0, #0]
 8004e6c:	4291      	cmp	r1, r2
 8004e6e:	d00a      	beq.n	8004e86 <d_print_comp_inner+0x2576>
 8004e70:	4603      	mov	r3, r0
 8004e72:	e004      	b.n	8004e7e <d_print_comp_inner+0x256e>
 8004e74:	685b      	ldr	r3, [r3, #4]
 8004e76:	b1a3      	cbz	r3, 8004ea2 <d_print_comp_inner+0x2592>
 8004e78:	681a      	ldr	r2, [r3, #0]
 8004e7a:	4291      	cmp	r1, r2
 8004e7c:	d003      	beq.n	8004e86 <d_print_comp_inner+0x2576>
 8004e7e:	4295      	cmp	r5, r2
 8004e80:	d1f8      	bne.n	8004e74 <d_print_comp_inner+0x2564>
 8004e82:	4298      	cmp	r0, r3
 8004e84:	d0f6      	beq.n	8004e74 <d_print_comp_inner+0x2564>
 8004e86:	3104      	adds	r1, #4
 8004e88:	4620      	mov	r0, r4
 8004e8a:	f7fb fc8f 	bl	80007ac <d_lookup_template_argument.isra.6>
 8004e8e:	2800      	cmp	r0, #0
 8004e90:	f43d ae20 	beq.w	8002ad4 <d_print_comp_inner+0x1c4>
 8004e94:	7803      	ldrb	r3, [r0, #0]
 8004e96:	2b2f      	cmp	r3, #47	; 0x2f
 8004e98:	f43d ae0b 	beq.w	8002ab2 <d_print_comp_inner+0x1a2>
 8004e9c:	4601      	mov	r1, r0
 8004e9e:	f7fe bc2d 	b.w	80036fc <d_print_comp_inner+0xdec>
 8004ea2:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8004ea6:	f8d4 6110 	ldr.w	r6, [r4, #272]	; 0x110
 8004eaa:	3104      	adds	r1, #4
 8004eac:	4620      	mov	r0, r4
 8004eae:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004eb2:	f7fb fc7b 	bl	80007ac <d_lookup_template_argument.isra.6>
 8004eb6:	2800      	cmp	r0, #0
 8004eb8:	f43d ae0a 	beq.w	8002ad0 <d_print_comp_inner+0x1c0>
 8004ebc:	2701      	movs	r7, #1
 8004ebe:	e7e9      	b.n	8004e94 <d_print_comp_inner+0x2584>
 8004ec0:	2500      	movs	r5, #0
 8004ec2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004ec6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004eca:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ece:	4620      	mov	r0, r4
 8004ed0:	4798      	blx	r3
 8004ed2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004ed6:	4629      	mov	r1, r5
 8004ed8:	3301      	adds	r3, #1
 8004eda:	f8da 5004 	ldr.w	r5, [sl, #4]
 8004ede:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004ee2:	f7ff b858 	b.w	8003f96 <d_print_comp_inner+0x1686>
 8004ee6:	68aa      	ldr	r2, [r5, #8]
 8004ee8:	4641      	mov	r1, r8
 8004eea:	4620      	mov	r0, r4
 8004eec:	f000 faba 	bl	8005464 <d_print_comp>
 8004ef0:	9a00      	ldr	r2, [sp, #0]
 8004ef2:	9b06      	ldr	r3, [sp, #24]
 8004ef4:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	f43e ac9b 	beq.w	8003834 <d_print_comp_inner+0xf24>
 8004efe:	f7fd bdd5 	b.w	8002aac <d_print_comp_inner+0x19c>
 8004f02:	255f      	movs	r5, #95	; 0x5f
 8004f04:	f7ff ba0e 	b.w	8004324 <d_print_comp_inner+0x1a14>
 8004f08:	2500      	movs	r5, #0
 8004f0a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f0e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004f12:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f16:	4620      	mov	r0, r4
 8004f18:	4798      	blx	r3
 8004f1a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f1e:	4629      	mov	r1, r5
 8004f20:	3301      	adds	r3, #1
 8004f22:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f26:	f7ff bb7f 	b.w	8004628 <d_print_comp_inner+0x1d18>
 8004f2a:	4648      	mov	r0, r9
 8004f2c:	4942      	ldr	r1, [pc, #264]	; (8005038 <d_print_comp_inner+0x2728>)
 8004f2e:	f001 fc5b 	bl	80067e8 <strcmp>
 8004f32:	b120      	cbz	r0, 8004f3e <d_print_comp_inner+0x262e>
 8004f34:	463a      	mov	r2, r7
 8004f36:	4641      	mov	r1, r8
 8004f38:	4620      	mov	r0, r4
 8004f3a:	f001 f883 	bl	8006044 <d_print_expr_op>
 8004f3e:	68ab      	ldr	r3, [r5, #8]
 8004f40:	4641      	mov	r1, r8
 8004f42:	689a      	ldr	r2, [r3, #8]
 8004f44:	4620      	mov	r0, r4
 8004f46:	f001 f8bb 	bl	80060c0 <d_print_subexpr>
 8004f4a:	f7fd bd97 	b.w	8002a7c <d_print_comp_inner+0x16c>
 8004f4e:	2600      	movs	r6, #0
 8004f50:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f54:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004f58:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f5c:	4620      	mov	r0, r4
 8004f5e:	4798      	blx	r3
 8004f60:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f64:	4631      	mov	r1, r6
 8004f66:	3301      	adds	r3, #1
 8004f68:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f6c:	f7ff bb86 	b.w	800467c <d_print_comp_inner+0x1d6c>
 8004f70:	2500      	movs	r5, #0
 8004f72:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f76:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004f7a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f7e:	4620      	mov	r0, r4
 8004f80:	4798      	blx	r3
 8004f82:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f86:	4629      	mov	r1, r5
 8004f88:	3301      	adds	r3, #1
 8004f8a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f8e:	f7fe bb56 	b.w	800363e <d_print_comp_inner+0xd2e>
 8004f92:	2500      	movs	r5, #0
 8004f94:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8004f98:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8004f9c:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8004fa0:	4798      	blx	r3
 8004fa2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004fa6:	4629      	mov	r1, r5
 8004fa8:	3301      	adds	r3, #1
 8004faa:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8004fae:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004fb2:	f7fe bb27 	b.w	8003604 <d_print_comp_inner+0xcf4>
 8004fb6:	6840      	ldr	r0, [r0, #4]
 8004fb8:	2800      	cmp	r0, #0
 8004fba:	f43d ad8b 	beq.w	8002ad4 <d_print_comp_inner+0x1c4>
 8004fbe:	f7fe b952 	b.w	8003266 <d_print_comp_inner+0x956>
 8004fc2:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8004fc6:	4619      	mov	r1, r3
 8004fc8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004fcc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	4798      	blx	r3
 8004fd4:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8004fd8:	462b      	mov	r3, r5
 8004fda:	3201      	adds	r2, #1
 8004fdc:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8004fe0:	f7ff bb11 	b.w	8004606 <d_print_comp_inner+0x1cf6>
 8004fe4:	6873      	ldr	r3, [r6, #4]
 8004fe6:	781a      	ldrb	r2, [r3, #0]
 8004fe8:	2a01      	cmp	r2, #1
 8004fea:	f000 8153 	beq.w	8005294 <d_print_comp_inner+0x2984>
 8004fee:	f896 a000 	ldrb.w	sl, [r6]
 8004ff2:	f7ff badd 	b.w	80045b0 <d_print_comp_inner+0x1ca0>
 8004ff6:	2500      	movs	r5, #0
 8004ff8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004ffc:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005000:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005004:	4620      	mov	r0, r4
 8005006:	4798      	blx	r3
 8005008:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800500c:	4629      	mov	r1, r5
 800500e:	3301      	adds	r3, #1
 8005010:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005014:	f7ff bb53 	b.w	80046be <d_print_comp_inner+0x1dae>
 8005018:	4654      	mov	r4, sl
 800501a:	f7fe be8c 	b.w	8003d36 <d_print_comp_inner+0x1426>
 800501e:	bf00      	nop
 8005020:	08012074 	.word	0x08012074
 8005024:	08011edc 	.word	0x08011edc
 8005028:	08011ee4 	.word	0x08011ee4
 800502c:	08012090 	.word	0x08012090
 8005030:	0801208c 	.word	0x0801208c
 8005034:	08012088 	.word	0x08012088
 8005038:	08011e7c 	.word	0x08011e7c
 800503c:	686a      	ldr	r2, [r5, #4]
 800503e:	4641      	mov	r1, r8
 8005040:	4620      	mov	r0, r4
 8005042:	f001 f83d 	bl	80060c0 <d_print_subexpr>
 8005046:	4620      	mov	r0, r4
 8005048:	2203      	movs	r2, #3
 800504a:	49e2      	ldr	r1, [pc, #904]	; (80053d4 <d_print_comp_inner+0x2ac4>)
 800504c:	f7fb f99e 	bl	800038c <d_append_buffer>
 8005050:	f7fd bd2c 	b.w	8002aac <d_print_comp_inner+0x19c>
 8005054:	ab14      	add	r3, sp, #80	; 0x50
 8005056:	f843 cd48 	str.w	ip, [r3, #-72]!
 800505a:	9603      	str	r6, [sp, #12]
 800505c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8005060:	f7fe b853 	b.w	800310a <d_print_comp_inner+0x7fa>
 8005064:	2700      	movs	r7, #0
 8005066:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800506a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800506e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005072:	4620      	mov	r0, r4
 8005074:	4798      	blx	r3
 8005076:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800507a:	4639      	mov	r1, r7
 800507c:	3301      	adds	r3, #1
 800507e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005082:	e41b      	b.n	80048bc <d_print_comp_inner+0x1fac>
 8005084:	2600      	movs	r6, #0
 8005086:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800508a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800508e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005092:	4620      	mov	r0, r4
 8005094:	4798      	blx	r3
 8005096:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800509a:	4631      	mov	r1, r6
 800509c:	3301      	adds	r3, #1
 800509e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80050a2:	f7ff bb88 	b.w	80047b6 <d_print_comp_inner+0x1ea6>
 80050a6:	2500      	movs	r5, #0
 80050a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80050ac:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80050b0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80050b4:	4620      	mov	r0, r4
 80050b6:	4798      	blx	r3
 80050b8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80050bc:	4629      	mov	r1, r5
 80050be:	3301      	adds	r3, #1
 80050c0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80050c4:	e610      	b.n	8004ce8 <d_print_comp_inner+0x23d8>
 80050c6:	2600      	movs	r6, #0
 80050c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80050cc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80050d0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80050d4:	4620      	mov	r0, r4
 80050d6:	4798      	blx	r3
 80050d8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80050dc:	4631      	mov	r1, r6
 80050de:	3301      	adds	r3, #1
 80050e0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80050e4:	f7ff bb88 	b.w	80047f8 <d_print_comp_inner+0x1ee8>
 80050e8:	685a      	ldr	r2, [r3, #4]
 80050ea:	6891      	ldr	r1, [r2, #8]
 80050ec:	2901      	cmp	r1, #1
 80050ee:	f47d ac8a 	bne.w	8002a06 <d_print_comp_inner+0xf6>
 80050f2:	6852      	ldr	r2, [r2, #4]
 80050f4:	7812      	ldrb	r2, [r2, #0]
 80050f6:	2a3e      	cmp	r2, #62	; 0x3e
 80050f8:	f47d ac85 	bne.w	8002a06 <d_print_comp_inner+0xf6>
 80050fc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005100:	29ff      	cmp	r1, #255	; 0xff
 8005102:	d10f      	bne.n	8005124 <d_print_comp_inner+0x2814>
 8005104:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005108:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800510c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005110:	4620      	mov	r0, r4
 8005112:	4798      	blx	r3
 8005114:	4631      	mov	r1, r6
 8005116:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800511a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800511e:	3301      	adds	r3, #1
 8005120:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005124:	2328      	movs	r3, #40	; 0x28
 8005126:	1c4a      	adds	r2, r1, #1
 8005128:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800512c:	5463      	strb	r3, [r4, r1]
 800512e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005132:	686b      	ldr	r3, [r5, #4]
 8005134:	f7fd bc67 	b.w	8002a06 <d_print_comp_inner+0xf6>
 8005138:	2500      	movs	r5, #0
 800513a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800513e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005142:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005146:	4620      	mov	r0, r4
 8005148:	4798      	blx	r3
 800514a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800514e:	4629      	mov	r1, r5
 8005150:	3301      	adds	r3, #1
 8005152:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005156:	f7ff bb09 	b.w	800476c <d_print_comp_inner+0x1e5c>
 800515a:	f8db b004 	ldr.w	fp, [fp, #4]
 800515e:	f1bb 0f00 	cmp.w	fp, #0
 8005162:	f43e ade8 	beq.w	8003d36 <d_print_comp_inner+0x1426>
 8005166:	f7fd bfbc 	b.w	80030e2 <d_print_comp_inner+0x7d2>
 800516a:	9b02      	ldr	r3, [sp, #8]
 800516c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8005170:	f7fd bfd4 	b.w	800311c <d_print_comp_inner+0x80c>
 8005174:	6893      	ldr	r3, [r2, #8]
 8005176:	4641      	mov	r1, r8
 8005178:	781b      	ldrb	r3, [r3, #0]
 800517a:	4620      	mov	r0, r4
 800517c:	2b29      	cmp	r3, #41	; 0x29
 800517e:	bf1c      	itt	ne
 8005180:	2301      	movne	r3, #1
 8005182:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 8005186:	6852      	ldr	r2, [r2, #4]
 8005188:	f000 ff9a 	bl	80060c0 <d_print_subexpr>
 800518c:	f7fd bc4c 	b.w	8002a28 <d_print_comp_inner+0x118>
 8005190:	2600      	movs	r6, #0
 8005192:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005196:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800519a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800519e:	4620      	mov	r0, r4
 80051a0:	4798      	blx	r3
 80051a2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80051a6:	4631      	mov	r1, r6
 80051a8:	3301      	adds	r3, #1
 80051aa:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80051ae:	e57e      	b.n	8004cae <d_print_comp_inner+0x239e>
 80051b0:	6872      	ldr	r2, [r6, #4]
 80051b2:	4641      	mov	r1, r8
 80051b4:	4620      	mov	r0, r4
 80051b6:	f000 ff83 	bl	80060c0 <d_print_subexpr>
 80051ba:	464a      	mov	r2, r9
 80051bc:	4641      	mov	r1, r8
 80051be:	4620      	mov	r0, r4
 80051c0:	f000 ff40 	bl	8006044 <d_print_expr_op>
 80051c4:	f7fd bc72 	b.w	8002aac <d_print_comp_inner+0x19c>
 80051c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80051cc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80051d0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80051d4:	4620      	mov	r0, r4
 80051d6:	4798      	blx	r3
 80051d8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80051dc:	4631      	mov	r1, r6
 80051de:	3301      	adds	r3, #1
 80051e0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80051e4:	f7fd bfa6 	b.w	8003134 <d_print_comp_inner+0x824>
 80051e8:	464a      	mov	r2, r9
 80051ea:	4641      	mov	r1, r8
 80051ec:	4620      	mov	r0, r4
 80051ee:	f000 ff67 	bl	80060c0 <d_print_subexpr>
 80051f2:	4652      	mov	r2, sl
 80051f4:	4641      	mov	r1, r8
 80051f6:	4620      	mov	r0, r4
 80051f8:	f000 ff24 	bl	8006044 <d_print_expr_op>
 80051fc:	463a      	mov	r2, r7
 80051fe:	4641      	mov	r1, r8
 8005200:	4620      	mov	r0, r4
 8005202:	f000 ff5d 	bl	80060c0 <d_print_subexpr>
 8005206:	4620      	mov	r0, r4
 8005208:	2203      	movs	r2, #3
 800520a:	4973      	ldr	r1, [pc, #460]	; (80053d8 <d_print_comp_inner+0x2ac8>)
 800520c:	f7fb f8be 	bl	800038c <d_append_buffer>
 8005210:	462a      	mov	r2, r5
 8005212:	4641      	mov	r1, r8
 8005214:	4620      	mov	r0, r4
 8005216:	f000 ff53 	bl	80060c0 <d_print_subexpr>
 800521a:	f7fd bc47 	b.w	8002aac <d_print_comp_inner+0x19c>
 800521e:	454f      	cmp	r7, r9
 8005220:	f67f ae6f 	bls.w	8004f02 <d_print_comp_inner+0x25f2>
 8005224:	2d5f      	cmp	r5, #95	; 0x5f
 8005226:	f47f ae6c 	bne.w	8004f02 <d_print_comp_inner+0x25f2>
 800522a:	28ff      	cmp	r0, #255	; 0xff
 800522c:	f63f a87a 	bhi.w	8004324 <d_print_comp_inner+0x1a14>
 8005230:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005234:	b2c5      	uxtb	r5, r0
 8005236:	29ff      	cmp	r1, #255	; 0xff
 8005238:	d10f      	bne.n	800525a <d_print_comp_inner+0x294a>
 800523a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800523e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005242:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005246:	4620      	mov	r0, r4
 8005248:	4798      	blx	r3
 800524a:	2100      	movs	r1, #0
 800524c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005250:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005254:	3301      	adds	r3, #1
 8005256:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800525a:	1c4b      	adds	r3, r1, #1
 800525c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005260:	464e      	mov	r6, r9
 8005262:	5465      	strb	r5, [r4, r1]
 8005264:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005268:	f7ff b866 	b.w	8004338 <d_print_comp_inner+0x1a28>
 800526c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005270:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005274:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005278:	4620      	mov	r0, r4
 800527a:	4798      	blx	r3
 800527c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005280:	4631      	mov	r1, r6
 8005282:	3301      	adds	r3, #1
 8005284:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005288:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800528c:	f7ff bbe3 	b.w	8004a56 <d_print_comp_inner+0x2146>
 8005290:	4691      	mov	r9, r2
 8005292:	e5e7      	b.n	8004e64 <d_print_comp_inner+0x2554>
 8005294:	68b2      	ldr	r2, [r6, #8]
 8005296:	7812      	ldrb	r2, [r2, #0]
 8005298:	2a29      	cmp	r2, #41	; 0x29
 800529a:	bf08      	it	eq
 800529c:	461e      	moveq	r6, r3
 800529e:	e6a6      	b.n	8004fee <d_print_comp_inner+0x26de>
 80052a0:	2500      	movs	r5, #0
 80052a2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80052a6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80052aa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80052ae:	4620      	mov	r0, r4
 80052b0:	4798      	blx	r3
 80052b2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80052b6:	4629      	mov	r1, r5
 80052b8:	3301      	adds	r3, #1
 80052ba:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 80052be:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80052c2:	e5a9      	b.n	8004e18 <d_print_comp_inner+0x2508>
 80052c4:	2600      	movs	r6, #0
 80052c6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80052ca:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80052ce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80052d2:	4620      	mov	r0, r4
 80052d4:	4798      	blx	r3
 80052d6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80052da:	4631      	mov	r1, r6
 80052dc:	3301      	adds	r3, #1
 80052de:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80052e2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80052e6:	f7fd bbc2 	b.w	8002a6e <d_print_comp_inner+0x15e>
 80052ea:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 80052ee:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80052f2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80052f6:	4620      	mov	r0, r4
 80052f8:	4798      	blx	r3
 80052fa:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80052fe:	4631      	mov	r1, r6
 8005300:	3301      	adds	r3, #1
 8005302:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005306:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800530a:	f7fd bb9e 	b.w	8002a4a <d_print_comp_inner+0x13a>
 800530e:	2600      	movs	r6, #0
 8005310:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005314:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005318:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800531c:	4620      	mov	r0, r4
 800531e:	4798      	blx	r3
 8005320:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005324:	4631      	mov	r1, r6
 8005326:	3301      	adds	r3, #1
 8005328:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800532c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005330:	e57f      	b.n	8004e32 <d_print_comp_inner+0x2522>
 8005332:	6841      	ldr	r1, [r0, #4]
 8005334:	2900      	cmp	r1, #0
 8005336:	f43d abca 	beq.w	8002ace <d_print_comp_inner+0x1be>
 800533a:	780b      	ldrb	r3, [r1, #0]
 800533c:	f7fe b9de 	b.w	80036fc <d_print_comp_inner+0xdec>
 8005340:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005344:	29ff      	cmp	r1, #255	; 0xff
 8005346:	d00d      	beq.n	8005364 <d_print_comp_inner+0x2a54>
 8005348:	232d      	movs	r3, #45	; 0x2d
 800534a:	1c4a      	adds	r2, r1, #1
 800534c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005350:	5463      	strb	r3, [r4, r1]
 8005352:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005356:	e504      	b.n	8004d62 <d_print_comp_inner+0x2452>
 8005358:	2205      	movs	r2, #5
 800535a:	4920      	ldr	r1, [pc, #128]	; (80053dc <d_print_comp_inner+0x2acc>)
 800535c:	f7fb f816 	bl	800038c <d_append_buffer>
 8005360:	f7fd bba4 	b.w	8002aac <d_print_comp_inner+0x19c>
 8005364:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005368:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 800536c:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005370:	4798      	blx	r3
 8005372:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005376:	4639      	mov	r1, r7
 8005378:	3301      	adds	r3, #1
 800537a:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 800537e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005382:	e7e1      	b.n	8005348 <d_print_comp_inner+0x2a38>
 8005384:	2500      	movs	r5, #0
 8005386:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800538a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800538e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005392:	4620      	mov	r0, r4
 8005394:	4798      	blx	r3
 8005396:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800539a:	4629      	mov	r1, r5
 800539c:	3301      	adds	r3, #1
 800539e:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 80053a2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80053a6:	e512      	b.n	8004dce <d_print_comp_inner+0x24be>
 80053a8:	2700      	movs	r7, #0
 80053aa:	f7ff b910 	b.w	80045ce <d_print_comp_inner+0x1cbe>
 80053ae:	2500      	movs	r5, #0
 80053b0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80053b4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80053b8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80053bc:	4620      	mov	r0, r4
 80053be:	4798      	blx	r3
 80053c0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80053c4:	4629      	mov	r1, r5
 80053c6:	3301      	adds	r3, #1
 80053c8:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 80053cc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80053d0:	f7fd bb65 	b.w	8002a9e <d_print_comp_inner+0x18e>
 80053d4:	080120c0 	.word	0x080120c0
 80053d8:	0801207c 	.word	0x0801207c
 80053dc:	08012094 	.word	0x08012094
 80053e0:	4637      	mov	r7, r6
 80053e2:	f7ff bbe6 	b.w	8004bb2 <d_print_comp_inner+0x22a2>
 80053e6:	2500      	movs	r5, #0
 80053e8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80053ec:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80053f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80053f4:	4620      	mov	r0, r4
 80053f6:	4798      	blx	r3
 80053f8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80053fc:	4629      	mov	r1, r5
 80053fe:	3301      	adds	r3, #1
 8005400:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005404:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005408:	e4d3      	b.n	8004db2 <d_print_comp_inner+0x24a2>
 800540a:	f8c9 2000 	str.w	r2, [r9]
 800540e:	3104      	adds	r1, #4
 8005410:	4620      	mov	r0, r4
 8005412:	f7fb f9cb 	bl	80007ac <d_lookup_template_argument.isra.6>
 8005416:	2800      	cmp	r0, #0
 8005418:	f47f ad3c 	bne.w	8004e94 <d_print_comp_inner+0x2584>
 800541c:	f7fd bb5a 	b.w	8002ad4 <d_print_comp_inner+0x1c4>
 8005420:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005424:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005428:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800542c:	4620      	mov	r0, r4
 800542e:	4798      	blx	r3
 8005430:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005434:	4631      	mov	r1, r6
 8005436:	3301      	adds	r3, #1
 8005438:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800543c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005440:	f7fe bc00 	b.w	8003c44 <d_print_comp_inner+0x1334>
 8005444:	2301      	movs	r3, #1
 8005446:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800544a:	f7fd bb2f 	b.w	8002aac <d_print_comp_inner+0x19c>
 800544e:	4618      	mov	r0, r3
 8005450:	4407      	add	r7, r0
 8005452:	f7ff bb81 	b.w	8004b58 <d_print_comp_inner+0x2248>
 8005456:	2000      	movs	r0, #0
 8005458:	4407      	add	r7, r0
 800545a:	f7ff bb7d 	b.w	8004b58 <d_print_comp_inner+0x2248>
 800545e:	4607      	mov	r7, r0
 8005460:	f7ff bba7 	b.w	8004bb2 <d_print_comp_inner+0x22a2>

08005464 <d_print_comp>:
 8005464:	b510      	push	{r4, lr}
 8005466:	f8d0 3128 	ldr.w	r3, [r0, #296]	; 0x128
 800546a:	b082      	sub	sp, #8
 800546c:	f8c0 d128 	str.w	sp, [r0, #296]	; 0x128
 8005470:	4604      	mov	r4, r0
 8005472:	e88d 000c 	stmia.w	sp, {r2, r3}
 8005476:	f7fd fa4b 	bl	8002910 <d_print_comp_inner>
 800547a:	9b01      	ldr	r3, [sp, #4]
 800547c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005480:	b002      	add	sp, #8
 8005482:	bd10      	pop	{r4, pc}

08005484 <d_print_mod>:
 8005484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005488:	7813      	ldrb	r3, [r2, #0]
 800548a:	b082      	sub	sp, #8
 800548c:	3b03      	subs	r3, #3
 800548e:	4615      	mov	r5, r2
 8005490:	4604      	mov	r4, r0
 8005492:	4688      	mov	r8, r1
 8005494:	2b49      	cmp	r3, #73	; 0x49
 8005496:	f200 8229 	bhi.w	80058ec <d_print_mod+0x468>
 800549a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800549e:	01e9      	.short	0x01e9
 80054a0:	02270227 	.word	0x02270227
 80054a4:	02270227 	.word	0x02270227
 80054a8:	02270227 	.word	0x02270227
 80054ac:	02270227 	.word	0x02270227
 80054b0:	02270227 	.word	0x02270227
 80054b4:	02270227 	.word	0x02270227
 80054b8:	02270227 	.word	0x02270227
 80054bc:	02270227 	.word	0x02270227
 80054c0:	02270227 	.word	0x02270227
 80054c4:	02270227 	.word	0x02270227
 80054c8:	01ee0227 	.word	0x01ee0227
 80054cc:	01aa0184 	.word	0x01aa0184
 80054d0:	018401ee 	.word	0x018401ee
 80054d4:	01cf01aa 	.word	0x01cf01aa
 80054d8:	006f01dc 	.word	0x006f01dc
 80054dc:	009d008d 	.word	0x009d008d
 80054e0:	00d000ac 	.word	0x00d000ac
 80054e4:	022700f5 	.word	0x022700f5
 80054e8:	02270227 	.word	0x02270227
 80054ec:	011a0227 	.word	0x011a0227
 80054f0:	015e0227 	.word	0x015e0227
 80054f4:	02270227 	.word	0x02270227
 80054f8:	02270227 	.word	0x02270227
 80054fc:	02270227 	.word	0x02270227
 8005500:	02270227 	.word	0x02270227
 8005504:	02270227 	.word	0x02270227
 8005508:	02270227 	.word	0x02270227
 800550c:	02270227 	.word	0x02270227
 8005510:	02270227 	.word	0x02270227
 8005514:	02270227 	.word	0x02270227
 8005518:	02270227 	.word	0x02270227
 800551c:	02270227 	.word	0x02270227
 8005520:	02270227 	.word	0x02270227
 8005524:	02270227 	.word	0x02270227
 8005528:	02270227 	.word	0x02270227
 800552c:	02270227 	.word	0x02270227
 8005530:	004a      	.short	0x004a
 8005532:	4dd6      	ldr	r5, [pc, #856]	; (800588c <d_print_mod+0x408>)
 8005534:	f04f 0800 	mov.w	r8, #0
 8005538:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800553c:	f105 0711 	add.w	r7, r5, #17
 8005540:	e008      	b.n	8005554 <d_print_mod+0xd0>
 8005542:	460b      	mov	r3, r1
 8005544:	3101      	adds	r1, #1
 8005546:	42bd      	cmp	r5, r7
 8005548:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800554c:	54e6      	strb	r6, [r4, r3]
 800554e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8005552:	d02e      	beq.n	80055b2 <d_print_mod+0x12e>
 8005554:	29ff      	cmp	r1, #255	; 0xff
 8005556:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800555a:	d1f2      	bne.n	8005542 <d_print_mod+0xbe>
 800555c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005560:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005564:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005568:	4620      	mov	r0, r4
 800556a:	4798      	blx	r3
 800556c:	2101      	movs	r1, #1
 800556e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005572:	2300      	movs	r3, #0
 8005574:	440a      	add	r2, r1
 8005576:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800557a:	e7e4      	b.n	8005546 <d_print_mod+0xc2>
 800557c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005580:	29ff      	cmp	r1, #255	; 0xff
 8005582:	f000 81fe 	beq.w	8005982 <d_print_mod+0x4fe>
 8005586:	1c4a      	adds	r2, r1, #1
 8005588:	2320      	movs	r3, #32
 800558a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800558e:	5463      	strb	r3, [r4, r1]
 8005590:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005594:	68ab      	ldr	r3, [r5, #8]
 8005596:	4641      	mov	r1, r8
 8005598:	461a      	mov	r2, r3
 800559a:	f8d4 5128 	ldr.w	r5, [r4, #296]	; 0x128
 800559e:	f8c4 d128 	str.w	sp, [r4, #296]	; 0x128
 80055a2:	4620      	mov	r0, r4
 80055a4:	e88d 0028 	stmia.w	sp, {r3, r5}
 80055a8:	f7fd f9b2 	bl	8002910 <d_print_comp_inner>
 80055ac:	9b01      	ldr	r3, [sp, #4]
 80055ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80055b2:	b002      	add	sp, #8
 80055b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80055b8:	f011 0504 	ands.w	r5, r1, #4
 80055bc:	d1f9      	bne.n	80055b2 <d_print_mod+0x12e>
 80055be:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80055c2:	2bff      	cmp	r3, #255	; 0xff
 80055c4:	f000 8222 	beq.w	8005a0c <d_print_mod+0x588>
 80055c8:	222a      	movs	r2, #42	; 0x2a
 80055ca:	1c59      	adds	r1, r3, #1
 80055cc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80055d0:	54e2      	strb	r2, [r4, r3]
 80055d2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80055d6:	e7ec      	b.n	80055b2 <d_print_mod+0x12e>
 80055d8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80055dc:	29ff      	cmp	r1, #255	; 0xff
 80055de:	f000 81bf 	beq.w	8005960 <d_print_mod+0x4dc>
 80055e2:	1c4a      	adds	r2, r1, #1
 80055e4:	2326      	movs	r3, #38	; 0x26
 80055e6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80055ea:	5463      	strb	r3, [r4, r1]
 80055ec:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80055f0:	b002      	add	sp, #8
 80055f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80055f6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80055fa:	4da5      	ldr	r5, [pc, #660]	; (8005890 <d_print_mod+0x40c>)
 80055fc:	f04f 0800 	mov.w	r8, #0
 8005600:	1caf      	adds	r7, r5, #2
 8005602:	e008      	b.n	8005616 <d_print_mod+0x192>
 8005604:	460b      	mov	r3, r1
 8005606:	3101      	adds	r1, #1
 8005608:	42bd      	cmp	r5, r7
 800560a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800560e:	54e6      	strb	r6, [r4, r3]
 8005610:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8005614:	d0cd      	beq.n	80055b2 <d_print_mod+0x12e>
 8005616:	29ff      	cmp	r1, #255	; 0xff
 8005618:	f815 6b01 	ldrb.w	r6, [r5], #1
 800561c:	d1f2      	bne.n	8005604 <d_print_mod+0x180>
 800561e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005622:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005626:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800562a:	4620      	mov	r0, r4
 800562c:	4798      	blx	r3
 800562e:	2101      	movs	r1, #1
 8005630:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005634:	2300      	movs	r3, #0
 8005636:	440a      	add	r2, r1
 8005638:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800563c:	e7e4      	b.n	8005608 <d_print_mod+0x184>
 800563e:	4d95      	ldr	r5, [pc, #596]	; (8005894 <d_print_mod+0x410>)
 8005640:	f04f 0800 	mov.w	r8, #0
 8005644:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005648:	f105 0708 	add.w	r7, r5, #8
 800564c:	e008      	b.n	8005660 <d_print_mod+0x1dc>
 800564e:	460b      	mov	r3, r1
 8005650:	3101      	adds	r1, #1
 8005652:	42bd      	cmp	r5, r7
 8005654:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005658:	54e6      	strb	r6, [r4, r3]
 800565a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800565e:	d0a8      	beq.n	80055b2 <d_print_mod+0x12e>
 8005660:	29ff      	cmp	r1, #255	; 0xff
 8005662:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8005666:	d1f2      	bne.n	800564e <d_print_mod+0x1ca>
 8005668:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800566c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005670:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005674:	4620      	mov	r0, r4
 8005676:	4798      	blx	r3
 8005678:	2101      	movs	r1, #1
 800567a:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 800567e:	2300      	movs	r3, #0
 8005680:	440a      	add	r2, r1
 8005682:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005686:	e7e4      	b.n	8005652 <d_print_mod+0x1ce>
 8005688:	4d83      	ldr	r5, [pc, #524]	; (8005898 <d_print_mod+0x414>)
 800568a:	f04f 0800 	mov.w	r8, #0
 800568e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005692:	f105 070a 	add.w	r7, r5, #10
 8005696:	e008      	b.n	80056aa <d_print_mod+0x226>
 8005698:	460b      	mov	r3, r1
 800569a:	3101      	adds	r1, #1
 800569c:	42bd      	cmp	r5, r7
 800569e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80056a2:	54e6      	strb	r6, [r4, r3]
 80056a4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80056a8:	d083      	beq.n	80055b2 <d_print_mod+0x12e>
 80056aa:	29ff      	cmp	r1, #255	; 0xff
 80056ac:	f815 6b01 	ldrb.w	r6, [r5], #1
 80056b0:	d1f2      	bne.n	8005698 <d_print_mod+0x214>
 80056b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80056b6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80056ba:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80056be:	4620      	mov	r0, r4
 80056c0:	4798      	blx	r3
 80056c2:	2101      	movs	r1, #1
 80056c4:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80056c8:	2300      	movs	r3, #0
 80056ca:	440a      	add	r2, r1
 80056cc:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80056d0:	e7e4      	b.n	800569c <d_print_mod+0x218>
 80056d2:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 80056d6:	2b28      	cmp	r3, #40	; 0x28
 80056d8:	d00b      	beq.n	80056f2 <d_print_mod+0x26e>
 80056da:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80056de:	2bff      	cmp	r3, #255	; 0xff
 80056e0:	f000 812c 	beq.w	800593c <d_print_mod+0x4b8>
 80056e4:	2220      	movs	r2, #32
 80056e6:	1c59      	adds	r1, r3, #1
 80056e8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80056ec:	54e2      	strb	r2, [r4, r3]
 80056ee:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80056f2:	686b      	ldr	r3, [r5, #4]
 80056f4:	f8d4 5128 	ldr.w	r5, [r4, #296]	; 0x128
 80056f8:	4641      	mov	r1, r8
 80056fa:	461a      	mov	r2, r3
 80056fc:	f8c4 d128 	str.w	sp, [r4, #296]	; 0x128
 8005700:	4620      	mov	r0, r4
 8005702:	e88d 0028 	stmia.w	sp, {r3, r5}
 8005706:	f7fd f903 	bl	8002910 <d_print_comp_inner>
 800570a:	4d64      	ldr	r5, [pc, #400]	; (800589c <d_print_mod+0x418>)
 800570c:	9b01      	ldr	r3, [sp, #4]
 800570e:	2700      	movs	r7, #0
 8005710:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005714:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005718:	f105 0803 	add.w	r8, r5, #3
 800571c:	e009      	b.n	8005732 <d_print_mod+0x2ae>
 800571e:	460b      	mov	r3, r1
 8005720:	3101      	adds	r1, #1
 8005722:	4545      	cmp	r5, r8
 8005724:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005728:	54e6      	strb	r6, [r4, r3]
 800572a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800572e:	f43f af40 	beq.w	80055b2 <d_print_mod+0x12e>
 8005732:	29ff      	cmp	r1, #255	; 0xff
 8005734:	f815 6b01 	ldrb.w	r6, [r5], #1
 8005738:	d1f1      	bne.n	800571e <d_print_mod+0x29a>
 800573a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800573e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005742:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005746:	4620      	mov	r0, r4
 8005748:	4798      	blx	r3
 800574a:	2101      	movs	r1, #1
 800574c:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005750:	2300      	movs	r3, #0
 8005752:	440a      	add	r2, r1
 8005754:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005758:	e7e3      	b.n	8005722 <d_print_mod+0x29e>
 800575a:	4e51      	ldr	r6, [pc, #324]	; (80058a0 <d_print_mod+0x41c>)
 800575c:	f04f 0900 	mov.w	r9, #0
 8005760:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005764:	f106 0a0a 	add.w	sl, r6, #10
 8005768:	e009      	b.n	800577e <d_print_mod+0x2fa>
 800576a:	460b      	mov	r3, r1
 800576c:	3101      	adds	r1, #1
 800576e:	4556      	cmp	r6, sl
 8005770:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005774:	54e7      	strb	r7, [r4, r3]
 8005776:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800577a:	f000 80c4 	beq.w	8005906 <d_print_mod+0x482>
 800577e:	29ff      	cmp	r1, #255	; 0xff
 8005780:	f816 7b01 	ldrb.w	r7, [r6], #1
 8005784:	d1f1      	bne.n	800576a <d_print_mod+0x2e6>
 8005786:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800578a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800578e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005792:	4620      	mov	r0, r4
 8005794:	4798      	blx	r3
 8005796:	2101      	movs	r1, #1
 8005798:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 800579c:	2300      	movs	r3, #0
 800579e:	440a      	add	r2, r1
 80057a0:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80057a4:	e7e3      	b.n	800576e <d_print_mod+0x2ea>
 80057a6:	4d3f      	ldr	r5, [pc, #252]	; (80058a4 <d_print_mod+0x420>)
 80057a8:	f04f 0800 	mov.w	r8, #0
 80057ac:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80057b0:	f105 0709 	add.w	r7, r5, #9
 80057b4:	e009      	b.n	80057ca <d_print_mod+0x346>
 80057b6:	460b      	mov	r3, r1
 80057b8:	3101      	adds	r1, #1
 80057ba:	42bd      	cmp	r5, r7
 80057bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80057c0:	54e6      	strb	r6, [r4, r3]
 80057c2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80057c6:	f43f aef4 	beq.w	80055b2 <d_print_mod+0x12e>
 80057ca:	29ff      	cmp	r1, #255	; 0xff
 80057cc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80057d0:	d1f1      	bne.n	80057b6 <d_print_mod+0x332>
 80057d2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80057d6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80057da:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80057de:	4620      	mov	r0, r4
 80057e0:	4798      	blx	r3
 80057e2:	2101      	movs	r1, #1
 80057e4:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80057e8:	2300      	movs	r3, #0
 80057ea:	440a      	add	r2, r1
 80057ec:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80057f0:	e7e3      	b.n	80057ba <d_print_mod+0x336>
 80057f2:	4d2d      	ldr	r5, [pc, #180]	; (80058a8 <d_print_mod+0x424>)
 80057f4:	f04f 0800 	mov.w	r8, #0
 80057f8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80057fc:	1daf      	adds	r7, r5, #6
 80057fe:	e009      	b.n	8005814 <d_print_mod+0x390>
 8005800:	460b      	mov	r3, r1
 8005802:	3101      	adds	r1, #1
 8005804:	42bd      	cmp	r5, r7
 8005806:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800580a:	54e6      	strb	r6, [r4, r3]
 800580c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8005810:	f43f aecf 	beq.w	80055b2 <d_print_mod+0x12e>
 8005814:	29ff      	cmp	r1, #255	; 0xff
 8005816:	f815 6b01 	ldrb.w	r6, [r5], #1
 800581a:	d1f1      	bne.n	8005800 <d_print_mod+0x37c>
 800581c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005820:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005824:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005828:	4620      	mov	r0, r4
 800582a:	4798      	blx	r3
 800582c:	2101      	movs	r1, #1
 800582e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005832:	2300      	movs	r3, #0
 8005834:	440a      	add	r2, r1
 8005836:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800583a:	e7e3      	b.n	8005804 <d_print_mod+0x380>
 800583c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005840:	2bff      	cmp	r3, #255	; 0xff
 8005842:	f000 80d1 	beq.w	80059e8 <d_print_mod+0x564>
 8005846:	2220      	movs	r2, #32
 8005848:	1c59      	adds	r1, r3, #1
 800584a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800584e:	54e2      	strb	r2, [r4, r3]
 8005850:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005854:	e6c2      	b.n	80055dc <d_print_mod+0x158>
 8005856:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800585a:	2bff      	cmp	r3, #255	; 0xff
 800585c:	f000 80b2 	beq.w	80059c4 <d_print_mod+0x540>
 8005860:	2220      	movs	r2, #32
 8005862:	1c59      	adds	r1, r3, #1
 8005864:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005868:	54e2      	strb	r2, [r4, r3]
 800586a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800586e:	e6c4      	b.n	80055fa <d_print_mod+0x176>
 8005870:	686b      	ldr	r3, [r5, #4]
 8005872:	f8d0 5128 	ldr.w	r5, [r0, #296]	; 0x128
 8005876:	461a      	mov	r2, r3
 8005878:	e691      	b.n	800559e <d_print_mod+0x11a>
 800587a:	4d0c      	ldr	r5, [pc, #48]	; (80058ac <d_print_mod+0x428>)
 800587c:	f04f 0800 	mov.w	r8, #0
 8005880:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005884:	f105 0709 	add.w	r7, r5, #9
 8005888:	e01c      	b.n	80058c4 <d_print_mod+0x440>
 800588a:	bf00      	nop
 800588c:	08012163 	.word	0x08012163
 8005890:	08012178 	.word	0x08012178
 8005894:	0801217b 	.word	0x0801217b
 8005898:	08012188 	.word	0x08012188
 800589c:	08012194 	.word	0x08012194
 80058a0:	08012198 	.word	0x08012198
 80058a4:	0801214f 	.word	0x0801214f
 80058a8:	0801215c 	.word	0x0801215c
 80058ac:	08012143 	.word	0x08012143
 80058b0:	460b      	mov	r3, r1
 80058b2:	3101      	adds	r1, #1
 80058b4:	42af      	cmp	r7, r5
 80058b6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80058ba:	54e6      	strb	r6, [r4, r3]
 80058bc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80058c0:	f43f ae77 	beq.w	80055b2 <d_print_mod+0x12e>
 80058c4:	29ff      	cmp	r1, #255	; 0xff
 80058c6:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80058ca:	d1f1      	bne.n	80058b0 <d_print_mod+0x42c>
 80058cc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80058d0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80058d4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80058d8:	4620      	mov	r0, r4
 80058da:	4798      	blx	r3
 80058dc:	2101      	movs	r1, #1
 80058de:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80058e2:	2300      	movs	r3, #0
 80058e4:	440a      	add	r2, r1
 80058e6:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80058ea:	e7e3      	b.n	80058b4 <d_print_mod+0x430>
 80058ec:	f8d0 3128 	ldr.w	r3, [r0, #296]	; 0x128
 80058f0:	462a      	mov	r2, r5
 80058f2:	f8c0 d128 	str.w	sp, [r0, #296]	; 0x128
 80058f6:	9301      	str	r3, [sp, #4]
 80058f8:	9500      	str	r5, [sp, #0]
 80058fa:	f7fd f809 	bl	8002910 <d_print_comp_inner>
 80058fe:	9b01      	ldr	r3, [sp, #4]
 8005900:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005904:	e655      	b.n	80055b2 <d_print_mod+0x12e>
 8005906:	686b      	ldr	r3, [r5, #4]
 8005908:	f8d4 5128 	ldr.w	r5, [r4, #296]	; 0x128
 800590c:	461a      	mov	r2, r3
 800590e:	4641      	mov	r1, r8
 8005910:	f8c4 d128 	str.w	sp, [r4, #296]	; 0x128
 8005914:	4620      	mov	r0, r4
 8005916:	e88d 0028 	stmia.w	sp, {r3, r5}
 800591a:	f7fc fff9 	bl	8002910 <d_print_comp_inner>
 800591e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005922:	9b01      	ldr	r3, [sp, #4]
 8005924:	29ff      	cmp	r1, #255	; 0xff
 8005926:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800592a:	d03a      	beq.n	80059a2 <d_print_mod+0x51e>
 800592c:	1c4a      	adds	r2, r1, #1
 800592e:	2329      	movs	r3, #41	; 0x29
 8005930:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005934:	5463      	strb	r3, [r4, r1]
 8005936:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800593a:	e63a      	b.n	80055b2 <d_print_mod+0x12e>
 800593c:	2600      	movs	r6, #0
 800593e:	4619      	mov	r1, r3
 8005940:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005944:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005948:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 800594c:	4798      	blx	r3
 800594e:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005952:	4633      	mov	r3, r6
 8005954:	3201      	adds	r2, #1
 8005956:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800595a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800595e:	e6c1      	b.n	80056e4 <d_print_mod+0x260>
 8005960:	2500      	movs	r5, #0
 8005962:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005966:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800596a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800596e:	4620      	mov	r0, r4
 8005970:	4798      	blx	r3
 8005972:	2201      	movs	r2, #1
 8005974:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005978:	4629      	mov	r1, r5
 800597a:	4413      	add	r3, r2
 800597c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005980:	e630      	b.n	80055e4 <d_print_mod+0x160>
 8005982:	2600      	movs	r6, #0
 8005984:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005988:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 800598c:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8005990:	4798      	blx	r3
 8005992:	2201      	movs	r2, #1
 8005994:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005998:	4631      	mov	r1, r6
 800599a:	4413      	add	r3, r2
 800599c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80059a0:	e5f2      	b.n	8005588 <d_print_mod+0x104>
 80059a2:	2500      	movs	r5, #0
 80059a4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80059a8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80059ac:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80059b0:	4620      	mov	r0, r4
 80059b2:	4798      	blx	r3
 80059b4:	2201      	movs	r2, #1
 80059b6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80059ba:	4629      	mov	r1, r5
 80059bc:	4413      	add	r3, r2
 80059be:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80059c2:	e7b4      	b.n	800592e <d_print_mod+0x4aa>
 80059c4:	2500      	movs	r5, #0
 80059c6:	4619      	mov	r1, r3
 80059c8:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80059cc:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80059d0:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 80059d4:	4798      	blx	r3
 80059d6:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80059da:	462b      	mov	r3, r5
 80059dc:	3201      	adds	r2, #1
 80059de:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 80059e2:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80059e6:	e73b      	b.n	8005860 <d_print_mod+0x3dc>
 80059e8:	2500      	movs	r5, #0
 80059ea:	4619      	mov	r1, r3
 80059ec:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80059f0:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80059f4:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 80059f8:	4798      	blx	r3
 80059fa:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80059fe:	462b      	mov	r3, r5
 8005a00:	3201      	adds	r2, #1
 8005a02:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005a06:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005a0a:	e71c      	b.n	8005846 <d_print_mod+0x3c2>
 8005a0c:	4619      	mov	r1, r3
 8005a0e:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005a12:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005a16:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005a1a:	4798      	blx	r3
 8005a1c:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005a20:	462b      	mov	r3, r5
 8005a22:	3201      	adds	r2, #1
 8005a24:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005a28:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005a2c:	e5cc      	b.n	80055c8 <d_print_mod+0x144>
 8005a2e:	bf00      	nop

08005a30 <d_print_mod_list>:
 8005a30:	2a00      	cmp	r2, #0
 8005a32:	f000 80a1 	beq.w	8005b78 <d_print_mod_list+0x148>
 8005a36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a3a:	461e      	mov	r6, r3
 8005a3c:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8005a40:	b089      	sub	sp, #36	; 0x24
 8005a42:	4605      	mov	r5, r0
 8005a44:	bb43      	cbnz	r3, 8005a98 <d_print_mod_list+0x68>
 8005a46:	460f      	mov	r7, r1
 8005a48:	4614      	mov	r4, r2
 8005a4a:	f04f 0801 	mov.w	r8, #1
 8005a4e:	e002      	b.n	8005a56 <d_print_mod_list+0x26>
 8005a50:	f8d5 3118 	ldr.w	r3, [r5, #280]	; 0x118
 8005a54:	bb03      	cbnz	r3, 8005a98 <d_print_mod_list+0x68>
 8005a56:	68a3      	ldr	r3, [r4, #8]
 8005a58:	b9db      	cbnz	r3, 8005a92 <d_print_mod_list+0x62>
 8005a5a:	6862      	ldr	r2, [r4, #4]
 8005a5c:	7813      	ldrb	r3, [r2, #0]
 8005a5e:	b92e      	cbnz	r6, 8005a6c <d_print_mod_list+0x3c>
 8005a60:	f1a3 011c 	sub.w	r1, r3, #28
 8005a64:	2904      	cmp	r1, #4
 8005a66:	d914      	bls.n	8005a92 <d_print_mod_list+0x62>
 8005a68:	2b4c      	cmp	r3, #76	; 0x4c
 8005a6a:	d012      	beq.n	8005a92 <d_print_mod_list+0x62>
 8005a6c:	68e1      	ldr	r1, [r4, #12]
 8005a6e:	2b29      	cmp	r3, #41	; 0x29
 8005a70:	f8c4 8008 	str.w	r8, [r4, #8]
 8005a74:	f8d5 9110 	ldr.w	r9, [r5, #272]	; 0x110
 8005a78:	f8c5 1110 	str.w	r1, [r5, #272]	; 0x110
 8005a7c:	d00f      	beq.n	8005a9e <d_print_mod_list+0x6e>
 8005a7e:	2b2a      	cmp	r3, #42	; 0x2a
 8005a80:	d018      	beq.n	8005ab4 <d_print_mod_list+0x84>
 8005a82:	2b02      	cmp	r3, #2
 8005a84:	d021      	beq.n	8005aca <d_print_mod_list+0x9a>
 8005a86:	4639      	mov	r1, r7
 8005a88:	4628      	mov	r0, r5
 8005a8a:	f7ff fcfb 	bl	8005484 <d_print_mod>
 8005a8e:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8005a92:	6824      	ldr	r4, [r4, #0]
 8005a94:	2c00      	cmp	r4, #0
 8005a96:	d1db      	bne.n	8005a50 <d_print_mod_list+0x20>
 8005a98:	b009      	add	sp, #36	; 0x24
 8005a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a9e:	6823      	ldr	r3, [r4, #0]
 8005aa0:	3208      	adds	r2, #8
 8005aa2:	4639      	mov	r1, r7
 8005aa4:	4628      	mov	r0, r5
 8005aa6:	f000 f9d9 	bl	8005e5c <d_print_function_type.isra.11>
 8005aaa:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8005aae:	b009      	add	sp, #36	; 0x24
 8005ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ab4:	6823      	ldr	r3, [r4, #0]
 8005ab6:	3204      	adds	r2, #4
 8005ab8:	4639      	mov	r1, r7
 8005aba:	4628      	mov	r0, r5
 8005abc:	f000 f8f2 	bl	8005ca4 <d_print_array_type.isra.10>
 8005ac0:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8005ac4:	b009      	add	sp, #36	; 0x24
 8005ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005aca:	2600      	movs	r6, #0
 8005acc:	f8d5 8114 	ldr.w	r8, [r5, #276]	; 0x114
 8005ad0:	f8c5 6114 	str.w	r6, [r5, #276]	; 0x114
 8005ad4:	6852      	ldr	r2, [r2, #4]
 8005ad6:	4639      	mov	r1, r7
 8005ad8:	4628      	mov	r0, r5
 8005ada:	f7ff fcc3 	bl	8005464 <d_print_comp>
 8005ade:	f017 0a04 	ands.w	sl, r7, #4
 8005ae2:	f8c5 8114 	str.w	r8, [r5, #276]	; 0x114
 8005ae6:	d023      	beq.n	8005b30 <d_print_mod_list+0x100>
 8005ae8:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005aec:	29ff      	cmp	r1, #255	; 0xff
 8005aee:	f000 80c1 	beq.w	8005c74 <d_print_mod_list+0x244>
 8005af2:	1c4a      	adds	r2, r1, #1
 8005af4:	232e      	movs	r3, #46	; 0x2e
 8005af6:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
 8005afa:	546b      	strb	r3, [r5, r1]
 8005afc:	f885 3104 	strb.w	r3, [r5, #260]	; 0x104
 8005b00:	6863      	ldr	r3, [r4, #4]
 8005b02:	689c      	ldr	r4, [r3, #8]
 8005b04:	7823      	ldrb	r3, [r4, #0]
 8005b06:	2b46      	cmp	r3, #70	; 0x46
 8005b08:	d037      	beq.n	8005b7a <d_print_mod_list+0x14a>
 8005b0a:	f1a3 021c 	sub.w	r2, r3, #28
 8005b0e:	2a04      	cmp	r2, #4
 8005b10:	d90b      	bls.n	8005b2a <d_print_mod_list+0xfa>
 8005b12:	2b4c      	cmp	r3, #76	; 0x4c
 8005b14:	d009      	beq.n	8005b2a <d_print_mod_list+0xfa>
 8005b16:	4622      	mov	r2, r4
 8005b18:	4639      	mov	r1, r7
 8005b1a:	4628      	mov	r0, r5
 8005b1c:	f7ff fca2 	bl	8005464 <d_print_comp>
 8005b20:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8005b24:	b009      	add	sp, #36	; 0x24
 8005b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b2a:	6864      	ldr	r4, [r4, #4]
 8005b2c:	7823      	ldrb	r3, [r4, #0]
 8005b2e:	e7ec      	b.n	8005b0a <d_print_mod_list+0xda>
 8005b30:	4e58      	ldr	r6, [pc, #352]	; (8005c94 <d_print_mod_list+0x264>)
 8005b32:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005b36:	f106 0b02 	add.w	fp, r6, #2
 8005b3a:	e009      	b.n	8005b50 <d_print_mod_list+0x120>
 8005b3c:	460b      	mov	r3, r1
 8005b3e:	3101      	adds	r1, #1
 8005b40:	455e      	cmp	r6, fp
 8005b42:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005b46:	f805 8003 	strb.w	r8, [r5, r3]
 8005b4a:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 8005b4e:	d0d7      	beq.n	8005b00 <d_print_mod_list+0xd0>
 8005b50:	29ff      	cmp	r1, #255	; 0xff
 8005b52:	f816 8b01 	ldrb.w	r8, [r6], #1
 8005b56:	d1f1      	bne.n	8005b3c <d_print_mod_list+0x10c>
 8005b58:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8005b5c:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8005b60:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 8005b64:	4628      	mov	r0, r5
 8005b66:	4798      	blx	r3
 8005b68:	2101      	movs	r1, #1
 8005b6a:	f8d5 2124 	ldr.w	r2, [r5, #292]	; 0x124
 8005b6e:	2300      	movs	r3, #0
 8005b70:	440a      	add	r2, r1
 8005b72:	f8c5 2124 	str.w	r2, [r5, #292]	; 0x124
 8005b76:	e7e3      	b.n	8005b40 <d_print_mod_list+0x110>
 8005b78:	4770      	bx	lr
 8005b7a:	4e47      	ldr	r6, [pc, #284]	; (8005c98 <d_print_mod_list+0x268>)
 8005b7c:	f04f 0b00 	mov.w	fp, #0
 8005b80:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005b84:	f106 0a0d 	add.w	sl, r6, #13
 8005b88:	e009      	b.n	8005b9e <d_print_mod_list+0x16e>
 8005b8a:	460b      	mov	r3, r1
 8005b8c:	3101      	adds	r1, #1
 8005b8e:	45b2      	cmp	sl, r6
 8005b90:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005b94:	f805 8003 	strb.w	r8, [r5, r3]
 8005b98:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 8005b9c:	d013      	beq.n	8005bc6 <d_print_mod_list+0x196>
 8005b9e:	29ff      	cmp	r1, #255	; 0xff
 8005ba0:	f816 8b01 	ldrb.w	r8, [r6], #1
 8005ba4:	d1f1      	bne.n	8005b8a <d_print_mod_list+0x15a>
 8005ba6:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8005baa:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8005bae:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 8005bb2:	4628      	mov	r0, r5
 8005bb4:	4798      	blx	r3
 8005bb6:	2101      	movs	r1, #1
 8005bb8:	f8d5 2124 	ldr.w	r2, [r5, #292]	; 0x124
 8005bbc:	2300      	movs	r3, #0
 8005bbe:	440a      	add	r2, r1
 8005bc0:	f8c5 2124 	str.w	r2, [r5, #292]	; 0x124
 8005bc4:	e7e3      	b.n	8005b8e <d_print_mod_list+0x15e>
 8005bc6:	68a2      	ldr	r2, [r4, #8]
 8005bc8:	a801      	add	r0, sp, #4
 8005bca:	3201      	adds	r2, #1
 8005bcc:	4933      	ldr	r1, [pc, #204]	; (8005c9c <d_print_mod_list+0x26c>)
 8005bce:	f008 fa6b 	bl	800e0a8 <sprintf>
 8005bd2:	a801      	add	r0, sp, #4
 8005bd4:	f000 fe12 	bl	80067fc <strlen>
 8005bd8:	b328      	cbz	r0, 8005c26 <d_print_mod_list+0x1f6>
 8005bda:	ae01      	add	r6, sp, #4
 8005bdc:	f04f 0b00 	mov.w	fp, #0
 8005be0:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005be4:	eb06 0a00 	add.w	sl, r6, r0
 8005be8:	e009      	b.n	8005bfe <d_print_mod_list+0x1ce>
 8005bea:	460b      	mov	r3, r1
 8005bec:	3101      	adds	r1, #1
 8005bee:	45b2      	cmp	sl, r6
 8005bf0:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005bf4:	f805 8003 	strb.w	r8, [r5, r3]
 8005bf8:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 8005bfc:	d015      	beq.n	8005c2a <d_print_mod_list+0x1fa>
 8005bfe:	29ff      	cmp	r1, #255	; 0xff
 8005c00:	f816 8b01 	ldrb.w	r8, [r6], #1
 8005c04:	d1f1      	bne.n	8005bea <d_print_mod_list+0x1ba>
 8005c06:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8005c0a:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8005c0e:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 8005c12:	4628      	mov	r0, r5
 8005c14:	4798      	blx	r3
 8005c16:	2101      	movs	r1, #1
 8005c18:	f8d5 2124 	ldr.w	r2, [r5, #292]	; 0x124
 8005c1c:	2300      	movs	r3, #0
 8005c1e:	440a      	add	r2, r1
 8005c20:	f8c5 2124 	str.w	r2, [r5, #292]	; 0x124
 8005c24:	e7e3      	b.n	8005bee <d_print_mod_list+0x1be>
 8005c26:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005c2a:	4e1d      	ldr	r6, [pc, #116]	; (8005ca0 <d_print_mod_list+0x270>)
 8005c2c:	f04f 0b00 	mov.w	fp, #0
 8005c30:	f106 0a03 	add.w	sl, r6, #3
 8005c34:	e00a      	b.n	8005c4c <d_print_mod_list+0x21c>
 8005c36:	460b      	mov	r3, r1
 8005c38:	3101      	adds	r1, #1
 8005c3a:	45b2      	cmp	sl, r6
 8005c3c:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005c40:	f805 8003 	strb.w	r8, [r5, r3]
 8005c44:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 8005c48:	f43f af6f 	beq.w	8005b2a <d_print_mod_list+0xfa>
 8005c4c:	29ff      	cmp	r1, #255	; 0xff
 8005c4e:	f816 8b01 	ldrb.w	r8, [r6], #1
 8005c52:	d1f0      	bne.n	8005c36 <d_print_mod_list+0x206>
 8005c54:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8005c58:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8005c5c:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 8005c60:	4628      	mov	r0, r5
 8005c62:	4798      	blx	r3
 8005c64:	2101      	movs	r1, #1
 8005c66:	f8d5 2124 	ldr.w	r2, [r5, #292]	; 0x124
 8005c6a:	2300      	movs	r3, #0
 8005c6c:	440a      	add	r2, r1
 8005c6e:	f8c5 2124 	str.w	r2, [r5, #292]	; 0x124
 8005c72:	e7e2      	b.n	8005c3a <d_print_mod_list+0x20a>
 8005c74:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8005c78:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8005c7c:	f885 60ff 	strb.w	r6, [r5, #255]	; 0xff
 8005c80:	4628      	mov	r0, r5
 8005c82:	4798      	blx	r3
 8005c84:	2201      	movs	r2, #1
 8005c86:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 8005c8a:	4631      	mov	r1, r6
 8005c8c:	4413      	add	r3, r2
 8005c8e:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8005c92:	e72f      	b.n	8005af4 <d_print_mod_list+0xc4>
 8005c94:	08011ec4 	.word	0x08011ec4
 8005c98:	08011ec8 	.word	0x08011ec8
 8005c9c:	08011e74 	.word	0x08011e74
 8005ca0:	08011ed8 	.word	0x08011ed8

08005ca4 <d_print_array_type.isra.10>:
 8005ca4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ca8:	4604      	mov	r4, r0
 8005caa:	460f      	mov	r7, r1
 8005cac:	4690      	mov	r8, r2
 8005cae:	b163      	cbz	r3, 8005cca <d_print_array_type.isra.10+0x26>
 8005cb0:	461e      	mov	r6, r3
 8005cb2:	461a      	mov	r2, r3
 8005cb4:	6893      	ldr	r3, [r2, #8]
 8005cb6:	b393      	cbz	r3, 8005d1e <d_print_array_type.isra.10+0x7a>
 8005cb8:	6812      	ldr	r2, [r2, #0]
 8005cba:	2a00      	cmp	r2, #0
 8005cbc:	d1fa      	bne.n	8005cb4 <d_print_array_type.isra.10+0x10>
 8005cbe:	4613      	mov	r3, r2
 8005cc0:	4639      	mov	r1, r7
 8005cc2:	4632      	mov	r2, r6
 8005cc4:	4620      	mov	r0, r4
 8005cc6:	f7ff feb3 	bl	8005a30 <d_print_mod_list>
 8005cca:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005cce:	29ff      	cmp	r1, #255	; 0xff
 8005cd0:	f000 808d 	beq.w	8005dee <d_print_array_type.isra.10+0x14a>
 8005cd4:	1c4b      	adds	r3, r1, #1
 8005cd6:	2220      	movs	r2, #32
 8005cd8:	2bff      	cmp	r3, #255	; 0xff
 8005cda:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005cde:	5462      	strb	r2, [r4, r1]
 8005ce0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005ce4:	d068      	beq.n	8005db8 <d_print_array_type.isra.10+0x114>
 8005ce6:	225b      	movs	r2, #91	; 0x5b
 8005ce8:	1c59      	adds	r1, r3, #1
 8005cea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005cee:	54e2      	strb	r2, [r4, r3]
 8005cf0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005cf4:	f8d8 2000 	ldr.w	r2, [r8]
 8005cf8:	b12a      	cbz	r2, 8005d06 <d_print_array_type.isra.10+0x62>
 8005cfa:	4639      	mov	r1, r7
 8005cfc:	4620      	mov	r0, r4
 8005cfe:	f7ff fbb1 	bl	8005464 <d_print_comp>
 8005d02:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005d06:	29ff      	cmp	r1, #255	; 0xff
 8005d08:	f000 8082 	beq.w	8005e10 <d_print_array_type.isra.10+0x16c>
 8005d0c:	1c4a      	adds	r2, r1, #1
 8005d0e:	235d      	movs	r3, #93	; 0x5d
 8005d10:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005d14:	5463      	strb	r3, [r4, r1]
 8005d16:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005d1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d1e:	6852      	ldr	r2, [r2, #4]
 8005d20:	7812      	ldrb	r2, [r2, #0]
 8005d22:	2a2a      	cmp	r2, #42	; 0x2a
 8005d24:	d03f      	beq.n	8005da6 <d_print_array_type.isra.10+0x102>
 8005d26:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8005e58 <d_print_array_type.isra.10+0x1b4>
 8005d2a:	461d      	mov	r5, r3
 8005d2c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005d30:	f109 0b02 	add.w	fp, r9, #2
 8005d34:	e00a      	b.n	8005d4c <d_print_array_type.isra.10+0xa8>
 8005d36:	460b      	mov	r3, r1
 8005d38:	45cb      	cmp	fp, r9
 8005d3a:	f101 0101 	add.w	r1, r1, #1
 8005d3e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d42:	f804 a003 	strb.w	sl, [r4, r3]
 8005d46:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005d4a:	d01a      	beq.n	8005d82 <d_print_array_type.isra.10+0xde>
 8005d4c:	29ff      	cmp	r1, #255	; 0xff
 8005d4e:	f819 ab01 	ldrb.w	sl, [r9], #1
 8005d52:	d1f0      	bne.n	8005d36 <d_print_array_type.isra.10+0x92>
 8005d54:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005d58:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005d5c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005d60:	4620      	mov	r0, r4
 8005d62:	4798      	blx	r3
 8005d64:	2101      	movs	r1, #1
 8005d66:	2300      	movs	r3, #0
 8005d68:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005d6c:	45cb      	cmp	fp, r9
 8005d6e:	440a      	add	r2, r1
 8005d70:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005d74:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d78:	f804 a003 	strb.w	sl, [r4, r3]
 8005d7c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005d80:	d1e4      	bne.n	8005d4c <d_print_array_type.isra.10+0xa8>
 8005d82:	2300      	movs	r3, #0
 8005d84:	4632      	mov	r2, r6
 8005d86:	4639      	mov	r1, r7
 8005d88:	4620      	mov	r0, r4
 8005d8a:	f7ff fe51 	bl	8005a30 <d_print_mod_list>
 8005d8e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005d92:	2bff      	cmp	r3, #255	; 0xff
 8005d94:	d04d      	beq.n	8005e32 <d_print_array_type.isra.10+0x18e>
 8005d96:	1c59      	adds	r1, r3, #1
 8005d98:	2229      	movs	r2, #41	; 0x29
 8005d9a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d9e:	54e2      	strb	r2, [r4, r3]
 8005da0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005da4:	e793      	b.n	8005cce <d_print_array_type.isra.10+0x2a>
 8005da6:	4632      	mov	r2, r6
 8005da8:	4639      	mov	r1, r7
 8005daa:	4620      	mov	r0, r4
 8005dac:	f7ff fe40 	bl	8005a30 <d_print_mod_list>
 8005db0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005db4:	2bff      	cmp	r3, #255	; 0xff
 8005db6:	d196      	bne.n	8005ce6 <d_print_array_type.isra.10+0x42>
 8005db8:	2200      	movs	r2, #0
 8005dba:	4619      	mov	r1, r3
 8005dbc:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8005dc0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005dc4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005dc8:	4620      	mov	r0, r4
 8005dca:	4798      	blx	r3
 8005dcc:	235b      	movs	r3, #91	; 0x5b
 8005dce:	2101      	movs	r1, #1
 8005dd0:	7023      	strb	r3, [r4, #0]
 8005dd2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005dd6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005dda:	f8d8 2000 	ldr.w	r2, [r8]
 8005dde:	440b      	add	r3, r1
 8005de0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005de4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005de8:	2a00      	cmp	r2, #0
 8005dea:	d186      	bne.n	8005cfa <d_print_array_type.isra.10+0x56>
 8005dec:	e78e      	b.n	8005d0c <d_print_array_type.isra.10+0x68>
 8005dee:	2500      	movs	r5, #0
 8005df0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005df4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005df8:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005dfc:	4620      	mov	r0, r4
 8005dfe:	4798      	blx	r3
 8005e00:	2301      	movs	r3, #1
 8005e02:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005e06:	4629      	mov	r1, r5
 8005e08:	441a      	add	r2, r3
 8005e0a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005e0e:	e762      	b.n	8005cd6 <d_print_array_type.isra.10+0x32>
 8005e10:	2500      	movs	r5, #0
 8005e12:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e16:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e1a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005e1e:	4620      	mov	r0, r4
 8005e20:	4798      	blx	r3
 8005e22:	2201      	movs	r2, #1
 8005e24:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005e28:	4629      	mov	r1, r5
 8005e2a:	4413      	add	r3, r2
 8005e2c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005e30:	e76d      	b.n	8005d0e <d_print_array_type.isra.10+0x6a>
 8005e32:	2500      	movs	r5, #0
 8005e34:	4619      	mov	r1, r3
 8005e36:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e3a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e3e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005e42:	4620      	mov	r0, r4
 8005e44:	4798      	blx	r3
 8005e46:	2101      	movs	r1, #1
 8005e48:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005e4c:	462b      	mov	r3, r5
 8005e4e:	440a      	add	r2, r1
 8005e50:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005e54:	e7a0      	b.n	8005d98 <d_print_array_type.isra.10+0xf4>
 8005e56:	bf00      	nop
 8005e58:	080120bc 	.word	0x080120bc

08005e5c <d_print_function_type.isra.11>:
 8005e5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005e60:	4604      	mov	r4, r0
 8005e62:	b083      	sub	sp, #12
 8005e64:	460e      	mov	r6, r1
 8005e66:	4617      	mov	r7, r2
 8005e68:	461d      	mov	r5, r3
 8005e6a:	b34b      	cbz	r3, 8005ec0 <d_print_function_type.isra.11+0x64>
 8005e6c:	689b      	ldr	r3, [r3, #8]
 8005e6e:	bb3b      	cbnz	r3, 8005ec0 <d_print_function_type.isra.11+0x64>
 8005e70:	462a      	mov	r2, r5
 8005e72:	2001      	movs	r0, #1
 8005e74:	f8df e1c8 	ldr.w	lr, [pc, #456]	; 8006040 <d_print_function_type.isra.11+0x1e4>
 8005e78:	e006      	b.n	8005e88 <d_print_function_type.isra.11+0x2c>
 8005e7a:	f411 6f60 	tst.w	r1, #3584	; 0xe00
 8005e7e:	d15b      	bne.n	8005f38 <d_print_function_type.isra.11+0xdc>
 8005e80:	6812      	ldr	r2, [r2, #0]
 8005e82:	b1ea      	cbz	r2, 8005ec0 <d_print_function_type.isra.11+0x64>
 8005e84:	6893      	ldr	r3, [r2, #8]
 8005e86:	b9db      	cbnz	r3, 8005ec0 <d_print_function_type.isra.11+0x64>
 8005e88:	6853      	ldr	r3, [r2, #4]
 8005e8a:	781b      	ldrb	r3, [r3, #0]
 8005e8c:	3b19      	subs	r3, #25
 8005e8e:	b2db      	uxtb	r3, r3
 8005e90:	2b12      	cmp	r3, #18
 8005e92:	fa00 f103 	lsl.w	r1, r0, r3
 8005e96:	d8f3      	bhi.n	8005e80 <d_print_function_type.isra.11+0x24>
 8005e98:	ea11 0f0e 	tst.w	r1, lr
 8005e9c:	d0ed      	beq.n	8005e7a <d_print_function_type.isra.11+0x1e>
 8005e9e:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8005ea2:	2b20      	cmp	r3, #32
 8005ea4:	d04e      	beq.n	8005f44 <d_print_function_type.isra.11+0xe8>
 8005ea6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005eaa:	2bff      	cmp	r3, #255	; 0xff
 8005eac:	f000 80b5 	beq.w	800601a <d_print_function_type.isra.11+0x1be>
 8005eb0:	1c59      	adds	r1, r3, #1
 8005eb2:	2220      	movs	r2, #32
 8005eb4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005eb8:	54e2      	strb	r2, [r4, r3]
 8005eba:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005ebe:	e043      	b.n	8005f48 <d_print_function_type.isra.11+0xec>
 8005ec0:	2200      	movs	r2, #0
 8005ec2:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8005ec6:	4613      	mov	r3, r2
 8005ec8:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8005ecc:	4631      	mov	r1, r6
 8005ece:	462a      	mov	r2, r5
 8005ed0:	4620      	mov	r0, r4
 8005ed2:	f7ff fdad 	bl	8005a30 <d_print_mod_list>
 8005ed6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005eda:	29ff      	cmp	r1, #255	; 0xff
 8005edc:	d056      	beq.n	8005f8c <d_print_function_type.isra.11+0x130>
 8005ede:	1c4b      	adds	r3, r1, #1
 8005ee0:	2228      	movs	r2, #40	; 0x28
 8005ee2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005ee6:	5462      	strb	r2, [r4, r1]
 8005ee8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005eec:	6838      	ldr	r0, [r7, #0]
 8005eee:	b178      	cbz	r0, 8005f10 <d_print_function_type.isra.11+0xb4>
 8005ef0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005ef4:	4602      	mov	r2, r0
 8005ef6:	9000      	str	r0, [sp, #0]
 8005ef8:	f8c4 d128 	str.w	sp, [r4, #296]	; 0x128
 8005efc:	4631      	mov	r1, r6
 8005efe:	4620      	mov	r0, r4
 8005f00:	9301      	str	r3, [sp, #4]
 8005f02:	f7fc fd05 	bl	8002910 <d_print_comp_inner>
 8005f06:	9a01      	ldr	r2, [sp, #4]
 8005f08:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005f0c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005f10:	2bff      	cmp	r3, #255	; 0xff
 8005f12:	d04d      	beq.n	8005fb0 <d_print_function_type.isra.11+0x154>
 8005f14:	1c5a      	adds	r2, r3, #1
 8005f16:	2029      	movs	r0, #41	; 0x29
 8005f18:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005f1c:	4631      	mov	r1, r6
 8005f1e:	54e0      	strb	r0, [r4, r3]
 8005f20:	462a      	mov	r2, r5
 8005f22:	f884 0104 	strb.w	r0, [r4, #260]	; 0x104
 8005f26:	2301      	movs	r3, #1
 8005f28:	4620      	mov	r0, r4
 8005f2a:	f7ff fd81 	bl	8005a30 <d_print_mod_list>
 8005f2e:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8005f32:	b003      	add	sp, #12
 8005f34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005f38:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8005f3c:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 8005f40:	2a28      	cmp	r2, #40	; 0x28
 8005f42:	d1ae      	bne.n	8005ea2 <d_print_function_type.isra.11+0x46>
 8005f44:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005f48:	29ff      	cmp	r1, #255	; 0xff
 8005f4a:	d054      	beq.n	8005ff6 <d_print_function_type.isra.11+0x19a>
 8005f4c:	1c4a      	adds	r2, r1, #1
 8005f4e:	2328      	movs	r3, #40	; 0x28
 8005f50:	f04f 0900 	mov.w	r9, #0
 8005f54:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005f58:	5463      	strb	r3, [r4, r1]
 8005f5a:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8005f5e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005f62:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8005f66:	464b      	mov	r3, r9
 8005f68:	462a      	mov	r2, r5
 8005f6a:	4631      	mov	r1, r6
 8005f6c:	4620      	mov	r0, r4
 8005f6e:	f7ff fd5f 	bl	8005a30 <d_print_mod_list>
 8005f72:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005f76:	2bff      	cmp	r3, #255	; 0xff
 8005f78:	d02c      	beq.n	8005fd4 <d_print_function_type.isra.11+0x178>
 8005f7a:	1c59      	adds	r1, r3, #1
 8005f7c:	2229      	movs	r2, #41	; 0x29
 8005f7e:	29ff      	cmp	r1, #255	; 0xff
 8005f80:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005f84:	54e2      	strb	r2, [r4, r3]
 8005f86:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005f8a:	d1a8      	bne.n	8005ede <d_print_function_type.isra.11+0x82>
 8005f8c:	f04f 0900 	mov.w	r9, #0
 8005f90:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005f94:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005f98:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005f9c:	4620      	mov	r0, r4
 8005f9e:	4798      	blx	r3
 8005fa0:	2301      	movs	r3, #1
 8005fa2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005fa6:	4649      	mov	r1, r9
 8005fa8:	441a      	add	r2, r3
 8005faa:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005fae:	e797      	b.n	8005ee0 <d_print_function_type.isra.11+0x84>
 8005fb0:	2700      	movs	r7, #0
 8005fb2:	4619      	mov	r1, r3
 8005fb4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005fb8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005fbc:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005fc0:	4620      	mov	r0, r4
 8005fc2:	4798      	blx	r3
 8005fc4:	2201      	movs	r2, #1
 8005fc6:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8005fca:	463b      	mov	r3, r7
 8005fcc:	4411      	add	r1, r2
 8005fce:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8005fd2:	e7a0      	b.n	8005f16 <d_print_function_type.isra.11+0xba>
 8005fd4:	4619      	mov	r1, r3
 8005fd6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005fda:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005fde:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005fe2:	4620      	mov	r0, r4
 8005fe4:	4798      	blx	r3
 8005fe6:	2101      	movs	r1, #1
 8005fe8:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8005fec:	464b      	mov	r3, r9
 8005fee:	440a      	add	r2, r1
 8005ff0:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005ff4:	e7c2      	b.n	8005f7c <d_print_function_type.isra.11+0x120>
 8005ff6:	f04f 0800 	mov.w	r8, #0
 8005ffa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005ffe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006002:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006006:	4620      	mov	r0, r4
 8006008:	4798      	blx	r3
 800600a:	2201      	movs	r2, #1
 800600c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006010:	4641      	mov	r1, r8
 8006012:	4413      	add	r3, r2
 8006014:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006018:	e799      	b.n	8005f4e <d_print_function_type.isra.11+0xf2>
 800601a:	f04f 0800 	mov.w	r8, #0
 800601e:	4619      	mov	r1, r3
 8006020:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006024:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006028:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800602c:	4620      	mov	r0, r4
 800602e:	4798      	blx	r3
 8006030:	2101      	movs	r1, #1
 8006032:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8006036:	4643      	mov	r3, r8
 8006038:	440a      	add	r2, r1
 800603a:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800603e:	e738      	b.n	8005eb2 <d_print_function_type.isra.11+0x56>
 8006040:	00043107 	.word	0x00043107

08006044 <d_print_expr_op>:
 8006044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006048:	7815      	ldrb	r5, [r2, #0]
 800604a:	b082      	sub	sp, #8
 800604c:	2d31      	cmp	r5, #49	; 0x31
 800604e:	4613      	mov	r3, r2
 8006050:	4604      	mov	r4, r0
 8006052:	d00d      	beq.n	8006070 <d_print_expr_op+0x2c>
 8006054:	f8d0 5128 	ldr.w	r5, [r0, #296]	; 0x128
 8006058:	f8c0 d128 	str.w	sp, [r0, #296]	; 0x128
 800605c:	e88d 0028 	stmia.w	sp, {r3, r5}
 8006060:	f7fc fc56 	bl	8002910 <d_print_comp_inner>
 8006064:	9b01      	ldr	r3, [sp, #4]
 8006066:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800606a:	b002      	add	sp, #8
 800606c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006070:	6853      	ldr	r3, [r2, #4]
 8006072:	689f      	ldr	r7, [r3, #8]
 8006074:	685d      	ldr	r5, [r3, #4]
 8006076:	2f00      	cmp	r7, #0
 8006078:	d0f7      	beq.n	800606a <d_print_expr_op+0x26>
 800607a:	f04f 0800 	mov.w	r8, #0
 800607e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8006082:	442f      	add	r7, r5
 8006084:	e008      	b.n	8006098 <d_print_expr_op+0x54>
 8006086:	460b      	mov	r3, r1
 8006088:	3101      	adds	r1, #1
 800608a:	42bd      	cmp	r5, r7
 800608c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006090:	54e6      	strb	r6, [r4, r3]
 8006092:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8006096:	d0e8      	beq.n	800606a <d_print_expr_op+0x26>
 8006098:	29ff      	cmp	r1, #255	; 0xff
 800609a:	f815 6b01 	ldrb.w	r6, [r5], #1
 800609e:	d1f2      	bne.n	8006086 <d_print_expr_op+0x42>
 80060a0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80060a4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80060a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80060ac:	4620      	mov	r0, r4
 80060ae:	4798      	blx	r3
 80060b0:	2101      	movs	r1, #1
 80060b2:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80060b6:	2300      	movs	r3, #0
 80060b8:	440a      	add	r2, r1
 80060ba:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80060be:	e7e4      	b.n	800608a <d_print_expr_op+0x46>

080060c0 <d_print_subexpr>:
 80060c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80060c2:	7813      	ldrb	r3, [r2, #0]
 80060c4:	b083      	sub	sp, #12
 80060c6:	2b01      	cmp	r3, #1
 80060c8:	4615      	mov	r5, r2
 80060ca:	460e      	mov	r6, r1
 80060cc:	4604      	mov	r4, r0
 80060ce:	d929      	bls.n	8006124 <d_print_subexpr+0x64>
 80060d0:	2b30      	cmp	r3, #48	; 0x30
 80060d2:	d027      	beq.n	8006124 <d_print_subexpr+0x64>
 80060d4:	2b06      	cmp	r3, #6
 80060d6:	d025      	beq.n	8006124 <d_print_subexpr+0x64>
 80060d8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80060dc:	29ff      	cmp	r1, #255	; 0xff
 80060de:	d031      	beq.n	8006144 <d_print_subexpr+0x84>
 80060e0:	1c4a      	adds	r2, r1, #1
 80060e2:	2328      	movs	r3, #40	; 0x28
 80060e4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80060e8:	5463      	strb	r3, [r4, r1]
 80060ea:	f8d4 7128 	ldr.w	r7, [r4, #296]	; 0x128
 80060ee:	4631      	mov	r1, r6
 80060f0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80060f4:	462a      	mov	r2, r5
 80060f6:	f8c4 d128 	str.w	sp, [r4, #296]	; 0x128
 80060fa:	4620      	mov	r0, r4
 80060fc:	e88d 00a0 	stmia.w	sp, {r5, r7}
 8006100:	f7fc fc06 	bl	8002910 <d_print_comp_inner>
 8006104:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006108:	9b01      	ldr	r3, [sp, #4]
 800610a:	29ff      	cmp	r1, #255	; 0xff
 800610c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006110:	d028      	beq.n	8006164 <d_print_subexpr+0xa4>
 8006112:	1c4a      	adds	r2, r1, #1
 8006114:	2329      	movs	r3, #41	; 0x29
 8006116:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800611a:	5463      	strb	r3, [r4, r1]
 800611c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006120:	b003      	add	sp, #12
 8006122:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006124:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006128:	4631      	mov	r1, r6
 800612a:	462a      	mov	r2, r5
 800612c:	f8c4 d128 	str.w	sp, [r4, #296]	; 0x128
 8006130:	4620      	mov	r0, r4
 8006132:	9301      	str	r3, [sp, #4]
 8006134:	9500      	str	r5, [sp, #0]
 8006136:	f7fc fbeb 	bl	8002910 <d_print_comp_inner>
 800613a:	9b01      	ldr	r3, [sp, #4]
 800613c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006140:	b003      	add	sp, #12
 8006142:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006144:	2700      	movs	r7, #0
 8006146:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800614a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800614e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8006152:	4798      	blx	r3
 8006154:	2201      	movs	r2, #1
 8006156:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800615a:	4639      	mov	r1, r7
 800615c:	4413      	add	r3, r2
 800615e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006162:	e7be      	b.n	80060e2 <d_print_subexpr+0x22>
 8006164:	2500      	movs	r5, #0
 8006166:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800616a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800616e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006172:	4620      	mov	r0, r4
 8006174:	4798      	blx	r3
 8006176:	2201      	movs	r2, #1
 8006178:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800617c:	4629      	mov	r1, r5
 800617e:	4413      	add	r3, r2
 8006180:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006184:	e7c6      	b.n	8006114 <d_print_subexpr+0x54>
 8006186:	bf00      	nop

08006188 <d_maybe_print_fold_expression.isra.15>:
 8006188:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800618c:	6852      	ldr	r2, [r2, #4]
 800618e:	6812      	ldr	r2, [r2, #0]
 8006190:	7815      	ldrb	r5, [r2, #0]
 8006192:	2d66      	cmp	r5, #102	; 0x66
 8006194:	d002      	beq.n	800619c <d_maybe_print_fold_expression.isra.15+0x14>
 8006196:	2000      	movs	r0, #0
 8006198:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800619c:	681b      	ldr	r3, [r3, #0]
 800619e:	f8d0 7120 	ldr.w	r7, [r0, #288]	; 0x120
 80061a2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80061a6:	f8d3 8004 	ldr.w	r8, [r3, #4]
 80061aa:	f899 3000 	ldrb.w	r3, [r9]
 80061ae:	460e      	mov	r6, r1
 80061b0:	2b3b      	cmp	r3, #59	; 0x3b
 80061b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80061b6:	bf04      	itt	eq
 80061b8:	f8d9 5008 	ldreq.w	r5, [r9, #8]
 80061bc:	f8d9 9004 	ldreq.w	r9, [r9, #4]
 80061c0:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
 80061c4:	7853      	ldrb	r3, [r2, #1]
 80061c6:	bf18      	it	ne
 80061c8:	2500      	movne	r5, #0
 80061ca:	3b4c      	subs	r3, #76	; 0x4c
 80061cc:	4604      	mov	r4, r0
 80061ce:	2b26      	cmp	r3, #38	; 0x26
 80061d0:	d82b      	bhi.n	800622a <d_maybe_print_fold_expression.isra.15+0xa2>
 80061d2:	e8df f003 	tbb	[pc, r3]
 80061d6:	2a90      	.short	0x2a90
 80061d8:	2a2a2a2a 	.word	0x2a2a2a2a
 80061dc:	2a2a2a90 	.word	0x2a2a2a90
 80061e0:	2a2a2a2a 	.word	0x2a2a2a2a
 80061e4:	2a2a2a2a 	.word	0x2a2a2a2a
 80061e8:	2a2a2a2a 	.word	0x2a2a2a2a
 80061ec:	2a2a2a2a 	.word	0x2a2a2a2a
 80061f0:	2a2a2a2a 	.word	0x2a2a2a2a
 80061f4:	2a6a2a2a 	.word	0x2a6a2a2a
 80061f8:	2a2a2a2a 	.word	0x2a2a2a2a
 80061fc:	2f          	.byte	0x2f
 80061fd:	00          	.byte	0x00
 80061fe:	4642      	mov	r2, r8
 8006200:	4631      	mov	r1, r6
 8006202:	4620      	mov	r0, r4
 8006204:	f7ff ff1e 	bl	8006044 <d_print_expr_op>
 8006208:	464a      	mov	r2, r9
 800620a:	4631      	mov	r1, r6
 800620c:	4620      	mov	r0, r4
 800620e:	f7ff ff57 	bl	80060c0 <d_print_subexpr>
 8006212:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006216:	29ff      	cmp	r1, #255	; 0xff
 8006218:	f000 80b0 	beq.w	800637c <d_maybe_print_fold_expression.isra.15+0x1f4>
 800621c:	1c4a      	adds	r2, r1, #1
 800621e:	2329      	movs	r3, #41	; 0x29
 8006220:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8006224:	5463      	strb	r3, [r4, r1]
 8006226:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800622a:	f8c4 7120 	str.w	r7, [r4, #288]	; 0x120
 800622e:	2001      	movs	r0, #1
 8006230:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006234:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8006238:	29ff      	cmp	r1, #255	; 0xff
 800623a:	f000 80c2 	beq.w	80063c2 <d_maybe_print_fold_expression.isra.15+0x23a>
 800623e:	1c4a      	adds	r2, r1, #1
 8006240:	2328      	movs	r3, #40	; 0x28
 8006242:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8006246:	4620      	mov	r0, r4
 8006248:	5463      	strb	r3, [r4, r1]
 800624a:	464a      	mov	r2, r9
 800624c:	4631      	mov	r1, r6
 800624e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006252:	4d64      	ldr	r5, [pc, #400]	; (80063e4 <d_maybe_print_fold_expression.isra.15+0x25c>)
 8006254:	f7ff ff34 	bl	80060c0 <d_print_subexpr>
 8006258:	4642      	mov	r2, r8
 800625a:	4631      	mov	r1, r6
 800625c:	4620      	mov	r0, r4
 800625e:	f7ff fef1 	bl	8006044 <d_print_expr_op>
 8006262:	f04f 0a00 	mov.w	sl, #0
 8006266:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800626a:	f105 0804 	add.w	r8, r5, #4
 800626e:	e008      	b.n	8006282 <d_maybe_print_fold_expression.isra.15+0xfa>
 8006270:	460b      	mov	r3, r1
 8006272:	3101      	adds	r1, #1
 8006274:	45a8      	cmp	r8, r5
 8006276:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800627a:	54e6      	strb	r6, [r4, r3]
 800627c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8006280:	d0d3      	beq.n	800622a <d_maybe_print_fold_expression.isra.15+0xa2>
 8006282:	29ff      	cmp	r1, #255	; 0xff
 8006284:	f815 6b01 	ldrb.w	r6, [r5], #1
 8006288:	d1f2      	bne.n	8006270 <d_maybe_print_fold_expression.isra.15+0xe8>
 800628a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800628e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006292:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8006296:	4620      	mov	r0, r4
 8006298:	4798      	blx	r3
 800629a:	2101      	movs	r1, #1
 800629c:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80062a0:	2300      	movs	r3, #0
 80062a2:	440a      	add	r2, r1
 80062a4:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80062a8:	e7e4      	b.n	8006274 <d_maybe_print_fold_expression.isra.15+0xec>
 80062aa:	4d4f      	ldr	r5, [pc, #316]	; (80063e8 <d_maybe_print_fold_expression.isra.15+0x260>)
 80062ac:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80062b0:	f105 0b04 	add.w	fp, r5, #4
 80062b4:	e009      	b.n	80062ca <d_maybe_print_fold_expression.isra.15+0x142>
 80062b6:	460b      	mov	r3, r1
 80062b8:	3101      	adds	r1, #1
 80062ba:	455d      	cmp	r5, fp
 80062bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80062c0:	f804 a003 	strb.w	sl, [r4, r3]
 80062c4:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80062c8:	d099      	beq.n	80061fe <d_maybe_print_fold_expression.isra.15+0x76>
 80062ca:	29ff      	cmp	r1, #255	; 0xff
 80062cc:	f815 ab01 	ldrb.w	sl, [r5], #1
 80062d0:	d1f1      	bne.n	80062b6 <d_maybe_print_fold_expression.isra.15+0x12e>
 80062d2:	f04f 0300 	mov.w	r3, #0
 80062d6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80062da:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80062de:	4620      	mov	r0, r4
 80062e0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80062e4:	4798      	blx	r3
 80062e6:	2101      	movs	r1, #1
 80062e8:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80062ec:	2300      	movs	r3, #0
 80062ee:	440a      	add	r2, r1
 80062f0:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 80062f4:	e7e1      	b.n	80062ba <d_maybe_print_fold_expression.isra.15+0x132>
 80062f6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80062fa:	29ff      	cmp	r1, #255	; 0xff
 80062fc:	d04f      	beq.n	800639e <d_maybe_print_fold_expression.isra.15+0x216>
 80062fe:	2328      	movs	r3, #40	; 0x28
 8006300:	1c48      	adds	r0, r1, #1
 8006302:	464a      	mov	r2, r9
 8006304:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8006308:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80063ec <d_maybe_print_fold_expression.isra.15+0x264>
 800630c:	5463      	strb	r3, [r4, r1]
 800630e:	4620      	mov	r0, r4
 8006310:	4631      	mov	r1, r6
 8006312:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006316:	f7ff fed3 	bl	80060c0 <d_print_subexpr>
 800631a:	4631      	mov	r1, r6
 800631c:	4642      	mov	r2, r8
 800631e:	4620      	mov	r0, r4
 8006320:	f7ff fe90 	bl	8006044 <d_print_expr_op>
 8006324:	f109 0b03 	add.w	fp, r9, #3
 8006328:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800632c:	e009      	b.n	8006342 <d_maybe_print_fold_expression.isra.15+0x1ba>
 800632e:	460b      	mov	r3, r1
 8006330:	3101      	adds	r1, #1
 8006332:	45cb      	cmp	fp, r9
 8006334:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006338:	f804 a003 	strb.w	sl, [r4, r3]
 800633c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8006340:	d015      	beq.n	800636e <d_maybe_print_fold_expression.isra.15+0x1e6>
 8006342:	29ff      	cmp	r1, #255	; 0xff
 8006344:	f819 ab01 	ldrb.w	sl, [r9], #1
 8006348:	d1f1      	bne.n	800632e <d_maybe_print_fold_expression.isra.15+0x1a6>
 800634a:	f04f 0300 	mov.w	r3, #0
 800634e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006352:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8006356:	4620      	mov	r0, r4
 8006358:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800635c:	4798      	blx	r3
 800635e:	2101      	movs	r1, #1
 8006360:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 8006364:	2300      	movs	r3, #0
 8006366:	440a      	add	r2, r1
 8006368:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 800636c:	e7e1      	b.n	8006332 <d_maybe_print_fold_expression.isra.15+0x1aa>
 800636e:	4642      	mov	r2, r8
 8006370:	4631      	mov	r1, r6
 8006372:	4620      	mov	r0, r4
 8006374:	f7ff fe66 	bl	8006044 <d_print_expr_op>
 8006378:	462a      	mov	r2, r5
 800637a:	e746      	b.n	800620a <d_maybe_print_fold_expression.isra.15+0x82>
 800637c:	2500      	movs	r5, #0
 800637e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006382:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006386:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800638a:	4620      	mov	r0, r4
 800638c:	4798      	blx	r3
 800638e:	2201      	movs	r2, #1
 8006390:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006394:	4629      	mov	r1, r5
 8006396:	4413      	add	r3, r2
 8006398:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800639c:	e73f      	b.n	800621e <d_maybe_print_fold_expression.isra.15+0x96>
 800639e:	f04f 0a00 	mov.w	sl, #0
 80063a2:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80063a6:	f880 a0ff 	strb.w	sl, [r0, #255]	; 0xff
 80063aa:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80063ae:	4798      	blx	r3
 80063b0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80063b4:	4651      	mov	r1, sl
 80063b6:	3301      	adds	r3, #1
 80063b8:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 80063bc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80063c0:	e79d      	b.n	80062fe <d_maybe_print_fold_expression.isra.15+0x176>
 80063c2:	2500      	movs	r5, #0
 80063c4:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80063c8:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80063cc:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 80063d0:	4798      	blx	r3
 80063d2:	2201      	movs	r2, #1
 80063d4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80063d8:	4629      	mov	r1, r5
 80063da:	4413      	add	r3, r2
 80063dc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80063e0:	e72e      	b.n	8006240 <d_maybe_print_fold_expression.isra.15+0xb8>
 80063e2:	bf00      	nop
 80063e4:	080121ac 	.word	0x080121ac
 80063e8:	080121a4 	.word	0x080121a4
 80063ec:	080120c0 	.word	0x080120c0

080063f0 <d_demangle_callback.constprop.17>:
 80063f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063f4:	b0e7      	sub	sp, #412	; 0x19c
 80063f6:	f890 9000 	ldrb.w	r9, [r0]
 80063fa:	af00      	add	r7, sp, #0
 80063fc:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 8006400:	4605      	mov	r5, r0
 8006402:	6079      	str	r1, [r7, #4]
 8006404:	4616      	mov	r6, r2
 8006406:	f000 80f3 	beq.w	80065f0 <d_demangle_callback.constprop.17+0x200>
 800640a:	2208      	movs	r2, #8
 800640c:	49be      	ldr	r1, [pc, #760]	; (8006708 <d_demangle_callback.constprop.17+0x318>)
 800640e:	4628      	mov	r0, r5
 8006410:	f008 f8a2 	bl	800e558 <strncmp>
 8006414:	b948      	cbnz	r0, 800642a <d_demangle_callback.constprop.17+0x3a>
 8006416:	7a2b      	ldrb	r3, [r5, #8]
 8006418:	2b2e      	cmp	r3, #46	; 0x2e
 800641a:	f000 80d8 	beq.w	80065ce <d_demangle_callback.constprop.17+0x1de>
 800641e:	2b5f      	cmp	r3, #95	; 0x5f
 8006420:	f000 80d5 	beq.w	80065ce <d_demangle_callback.constprop.17+0x1de>
 8006424:	2b24      	cmp	r3, #36	; 0x24
 8006426:	f000 80d2 	beq.w	80065ce <d_demangle_callback.constprop.17+0x1de>
 800642a:	f04f 0800 	mov.w	r8, #0
 800642e:	4628      	mov	r0, r5
 8006430:	f000 f9e4 	bl	80067fc <strlen>
 8006434:	ea4f 0a40 	mov.w	sl, r0, lsl #1
 8006438:	0083      	lsls	r3, r0, #2
 800643a:	eb03 020a 	add.w	r2, r3, sl
 800643e:	0092      	lsls	r2, r2, #2
 8006440:	3208      	adds	r2, #8
 8006442:	ebad 0d02 	sub.w	sp, sp, r2
 8006446:	2400      	movs	r4, #0
 8006448:	46eb      	mov	fp, sp
 800644a:	2211      	movs	r2, #17
 800644c:	330a      	adds	r3, #10
 800644e:	f023 0307 	bic.w	r3, r3, #7
 8006452:	ebad 0d03 	sub.w	sp, sp, r3
 8006456:	63b8      	str	r0, [r7, #56]	; 0x38
 8006458:	f1b8 0f01 	cmp.w	r8, #1
 800645c:	4428      	add	r0, r5
 800645e:	f8c7 b024 	str.w	fp, [r7, #36]	; 0x24
 8006462:	f8c7 d030 	str.w	sp, [r7, #48]	; 0x30
 8006466:	f8c7 a02c 	str.w	sl, [r7, #44]	; 0x2c
 800646a:	617d      	str	r5, [r7, #20]
 800646c:	623d      	str	r5, [r7, #32]
 800646e:	61b8      	str	r0, [r7, #24]
 8006470:	61fa      	str	r2, [r7, #28]
 8006472:	62bc      	str	r4, [r7, #40]	; 0x28
 8006474:	637c      	str	r4, [r7, #52]	; 0x34
 8006476:	63fc      	str	r4, [r7, #60]	; 0x3c
 8006478:	643c      	str	r4, [r7, #64]	; 0x40
 800647a:	647c      	str	r4, [r7, #68]	; 0x44
 800647c:	64bc      	str	r4, [r7, #72]	; 0x48
 800647e:	64fc      	str	r4, [r7, #76]	; 0x4c
 8006480:	f000 80bd 	beq.w	80065fe <d_demangle_callback.constprop.17+0x20e>
 8006484:	f0c0 80d1 	bcc.w	800662a <d_demangle_callback.constprop.17+0x23a>
 8006488:	7aea      	ldrb	r2, [r5, #11]
 800648a:	f1b8 0f02 	cmp.w	r8, #2
 800648e:	f105 030b 	add.w	r3, r5, #11
 8006492:	bf14      	ite	ne
 8006494:	f04f 0944 	movne.w	r9, #68	; 0x44
 8006498:	f04f 0943 	moveq.w	r9, #67	; 0x43
 800649c:	2a5f      	cmp	r2, #95	; 0x5f
 800649e:	623b      	str	r3, [r7, #32]
 80064a0:	f000 80b6 	beq.w	8006610 <d_demangle_callback.constprop.17+0x220>
 80064a4:	4618      	mov	r0, r3
 80064a6:	603b      	str	r3, [r7, #0]
 80064a8:	f000 f9a8 	bl	80067fc <strlen>
 80064ac:	f1ba 0f00 	cmp.w	sl, #0
 80064b0:	683b      	ldr	r3, [r7, #0]
 80064b2:	f340 80c3 	ble.w	800663c <d_demangle_callback.constprop.17+0x24c>
 80064b6:	2201      	movs	r2, #1
 80064b8:	62ba      	str	r2, [r7, #40]	; 0x28
 80064ba:	2800      	cmp	r0, #0
 80064bc:	f000 80be 	beq.w	800663c <d_demangle_callback.constprop.17+0x24c>
 80064c0:	2200      	movs	r2, #0
 80064c2:	f88b 2000 	strb.w	r2, [fp]
 80064c6:	465a      	mov	r2, fp
 80064c8:	f8cb 3004 	str.w	r3, [fp, #4]
 80064cc:	f8cb 0008 	str.w	r0, [fp, #8]
 80064d0:	4649      	mov	r1, r9
 80064d2:	2300      	movs	r3, #0
 80064d4:	f107 0014 	add.w	r0, r7, #20
 80064d8:	f7f9 fe3a 	bl	8000150 <d_make_comp>
 80064dc:	6a3c      	ldr	r4, [r7, #32]
 80064de:	4605      	mov	r5, r0
 80064e0:	4620      	mov	r0, r4
 80064e2:	f000 f98b 	bl	80067fc <strlen>
 80064e6:	1823      	adds	r3, r4, r0
 80064e8:	623b      	str	r3, [r7, #32]
 80064ea:	f814 9000 	ldrb.w	r9, [r4, r0]
 80064ee:	f1b9 0f00 	cmp.w	r9, #0
 80064f2:	f040 8087 	bne.w	8006604 <d_demangle_callback.constprop.17+0x214>
 80064f6:	2d00      	cmp	r5, #0
 80064f8:	f000 8084 	beq.w	8006604 <d_demangle_callback.constprop.17+0x214>
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	f107 0450 	add.w	r4, r7, #80	; 0x50
 8006502:	462a      	mov	r2, r5
 8006504:	f507 71c2 	add.w	r1, r7, #388	; 0x184
 8006508:	f507 70c8 	add.w	r0, r7, #400	; 0x190
 800650c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8006510:	f8c4 610c 	str.w	r6, [r4, #268]	; 0x10c
 8006514:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8006518:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800651c:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
 8006520:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8006524:	f8c4 9120 	str.w	r9, [r4, #288]	; 0x120
 8006528:	f8c4 9124 	str.w	r9, [r4, #292]	; 0x124
 800652c:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
 8006530:	f8c4 911c 	str.w	r9, [r4, #284]	; 0x11c
 8006534:	f8c4 9128 	str.w	r9, [r4, #296]	; 0x128
 8006538:	f8c4 912c 	str.w	r9, [r4, #300]	; 0x12c
 800653c:	f8c4 9130 	str.w	r9, [r4, #304]	; 0x130
 8006540:	f8c4 9134 	str.w	r9, [r4, #308]	; 0x134
 8006544:	f8c4 9138 	str.w	r9, [r4, #312]	; 0x138
 8006548:	f8c4 913c 	str.w	r9, [r4, #316]	; 0x13c
 800654c:	f8c4 9140 	str.w	r9, [r4, #320]	; 0x140
 8006550:	f7f9 feca 	bl	80002e8 <d_count_templates_scopes>
 8006554:	f8d4 2134 	ldr.w	r2, [r4, #308]	; 0x134
 8006558:	46e8      	mov	r8, sp
 800655a:	00d3      	lsls	r3, r2, #3
 800655c:	3308      	adds	r3, #8
 800655e:	ebad 0d03 	sub.w	sp, sp, r3
 8006562:	4668      	mov	r0, sp
 8006564:	f8d4 1140 	ldr.w	r1, [r4, #320]	; 0x140
 8006568:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800656c:	fb01 f102 	mul.w	r1, r1, r2
 8006570:	00ca      	lsls	r2, r1, #3
 8006572:	3208      	adds	r2, #8
 8006574:	ebad 0d02 	sub.w	sp, sp, r2
 8006578:	f107 060c 	add.w	r6, r7, #12
 800657c:	462a      	mov	r2, r5
 800657e:	f8c4 012c 	str.w	r0, [r4, #300]	; 0x12c
 8006582:	f8c4 1140 	str.w	r1, [r4, #320]	; 0x140
 8006586:	4620      	mov	r0, r4
 8006588:	2111      	movs	r1, #17
 800658a:	f8c4 d138 	str.w	sp, [r4, #312]	; 0x138
 800658e:	613b      	str	r3, [r7, #16]
 8006590:	60fd      	str	r5, [r7, #12]
 8006592:	f8c4 9144 	str.w	r9, [r4, #324]	; 0x144
 8006596:	f8c4 6128 	str.w	r6, [r4, #296]	; 0x128
 800659a:	f7fc f9b9 	bl	8002910 <d_print_comp_inner>
 800659e:	693b      	ldr	r3, [r7, #16]
 80065a0:	4620      	mov	r0, r4
 80065a2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80065a6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80065aa:	46c5      	mov	sp, r8
 80065ac:	f804 9001 	strb.w	r9, [r4, r1]
 80065b0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80065b4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80065b8:	4798      	blx	r3
 80065ba:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 80065be:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
 80065c2:	fab0 f080 	clz	r0, r0
 80065c6:	0940      	lsrs	r0, r0, #5
 80065c8:	46bd      	mov	sp, r7
 80065ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065ce:	7a6b      	ldrb	r3, [r5, #9]
 80065d0:	2b44      	cmp	r3, #68	; 0x44
 80065d2:	d002      	beq.n	80065da <d_demangle_callback.constprop.17+0x1ea>
 80065d4:	2b49      	cmp	r3, #73	; 0x49
 80065d6:	f47f af28 	bne.w	800642a <d_demangle_callback.constprop.17+0x3a>
 80065da:	7aaa      	ldrb	r2, [r5, #10]
 80065dc:	2a5f      	cmp	r2, #95	; 0x5f
 80065de:	f47f af24 	bne.w	800642a <d_demangle_callback.constprop.17+0x3a>
 80065e2:	2b49      	cmp	r3, #73	; 0x49
 80065e4:	bf14      	ite	ne
 80065e6:	f04f 0803 	movne.w	r8, #3
 80065ea:	f04f 0802 	moveq.w	r8, #2
 80065ee:	e71e      	b.n	800642e <d_demangle_callback.constprop.17+0x3e>
 80065f0:	7843      	ldrb	r3, [r0, #1]
 80065f2:	2b5a      	cmp	r3, #90	; 0x5a
 80065f4:	f47f af09 	bne.w	800640a <d_demangle_callback.constprop.17+0x1a>
 80065f8:	f04f 0801 	mov.w	r8, #1
 80065fc:	e717      	b.n	800642e <d_demangle_callback.constprop.17+0x3e>
 80065fe:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 8006602:	d01d      	beq.n	8006640 <d_demangle_callback.constprop.17+0x250>
 8006604:	2000      	movs	r0, #0
 8006606:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
 800660a:	46bd      	mov	sp, r7
 800660c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006610:	7b2a      	ldrb	r2, [r5, #12]
 8006612:	2a5a      	cmp	r2, #90	; 0x5a
 8006614:	f47f af46 	bne.w	80064a4 <d_demangle_callback.constprop.17+0xb4>
 8006618:	350d      	adds	r5, #13
 800661a:	4621      	mov	r1, r4
 800661c:	f107 0014 	add.w	r0, r7, #20
 8006620:	623d      	str	r5, [r7, #32]
 8006622:	f7fb fe29 	bl	8002278 <d_encoding>
 8006626:	4602      	mov	r2, r0
 8006628:	e752      	b.n	80064d0 <d_demangle_callback.constprop.17+0xe0>
 800662a:	f107 0014 	add.w	r0, r7, #20
 800662e:	f7fb f813 	bl	8001658 <d_type>
 8006632:	6a3b      	ldr	r3, [r7, #32]
 8006634:	4605      	mov	r5, r0
 8006636:	f893 9000 	ldrb.w	r9, [r3]
 800663a:	e758      	b.n	80064ee <d_demangle_callback.constprop.17+0xfe>
 800663c:	2200      	movs	r2, #0
 800663e:	e747      	b.n	80064d0 <d_demangle_callback.constprop.17+0xe0>
 8006640:	786b      	ldrb	r3, [r5, #1]
 8006642:	2b5a      	cmp	r3, #90	; 0x5a
 8006644:	d1de      	bne.n	8006604 <d_demangle_callback.constprop.17+0x214>
 8006646:	3502      	adds	r5, #2
 8006648:	4641      	mov	r1, r8
 800664a:	f107 0014 	add.w	r0, r7, #20
 800664e:	623d      	str	r5, [r7, #32]
 8006650:	f7fb fe12 	bl	8002278 <d_encoding>
 8006654:	69fb      	ldr	r3, [r7, #28]
 8006656:	4605      	mov	r5, r0
 8006658:	07db      	lsls	r3, r3, #31
 800665a:	d550      	bpl.n	80066fe <d_demangle_callback.constprop.17+0x30e>
 800665c:	6a38      	ldr	r0, [r7, #32]
 800665e:	f890 9000 	ldrb.w	r9, [r0]
 8006662:	f1b9 0f2e 	cmp.w	r9, #46	; 0x2e
 8006666:	f47f af42 	bne.w	80064ee <d_demangle_callback.constprop.17+0xfe>
 800666a:	7843      	ldrb	r3, [r0, #1]
 800666c:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8006670:	2a19      	cmp	r2, #25
 8006672:	d938      	bls.n	80066e6 <d_demangle_callback.constprop.17+0x2f6>
 8006674:	2b5f      	cmp	r3, #95	; 0x5f
 8006676:	d036      	beq.n	80066e6 <d_demangle_callback.constprop.17+0x2f6>
 8006678:	3b30      	subs	r3, #48	; 0x30
 800667a:	2b09      	cmp	r3, #9
 800667c:	d83f      	bhi.n	80066fe <d_demangle_callback.constprop.17+0x30e>
 800667e:	4602      	mov	r2, r0
 8006680:	7803      	ldrb	r3, [r0, #0]
 8006682:	2b2e      	cmp	r3, #46	; 0x2e
 8006684:	d111      	bne.n	80066aa <d_demangle_callback.constprop.17+0x2ba>
 8006686:	7853      	ldrb	r3, [r2, #1]
 8006688:	3b30      	subs	r3, #48	; 0x30
 800668a:	2b09      	cmp	r3, #9
 800668c:	d80d      	bhi.n	80066aa <d_demangle_callback.constprop.17+0x2ba>
 800668e:	7893      	ldrb	r3, [r2, #2]
 8006690:	3202      	adds	r2, #2
 8006692:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006696:	2909      	cmp	r1, #9
 8006698:	d8f3      	bhi.n	8006682 <d_demangle_callback.constprop.17+0x292>
 800669a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800669e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80066a2:	2909      	cmp	r1, #9
 80066a4:	d9f9      	bls.n	800669a <d_demangle_callback.constprop.17+0x2aa>
 80066a6:	2b2e      	cmp	r3, #46	; 0x2e
 80066a8:	d0ed      	beq.n	8006686 <d_demangle_callback.constprop.17+0x296>
 80066aa:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80066ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80066ae:	623a      	str	r2, [r7, #32]
 80066b0:	4299      	cmp	r1, r3
 80066b2:	da16      	bge.n	80066e2 <d_demangle_callback.constprop.17+0x2f2>
 80066b4:	f8d7 e024 	ldr.w	lr, [r7, #36]	; 0x24
 80066b8:	1c4b      	adds	r3, r1, #1
 80066ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80066be:	62bb      	str	r3, [r7, #40]	; 0x28
 80066c0:	eb1e 0381 	adds.w	r3, lr, r1, lsl #2
 80066c4:	d00d      	beq.n	80066e2 <d_demangle_callback.constprop.17+0x2f2>
 80066c6:	1a12      	subs	r2, r2, r0
 80066c8:	d00b      	beq.n	80066e2 <d_demangle_callback.constprop.17+0x2f2>
 80066ca:	f80e 4021 	strb.w	r4, [lr, r1, lsl #2]
 80066ce:	6058      	str	r0, [r3, #4]
 80066d0:	609a      	str	r2, [r3, #8]
 80066d2:	462a      	mov	r2, r5
 80066d4:	214d      	movs	r1, #77	; 0x4d
 80066d6:	f107 0014 	add.w	r0, r7, #20
 80066da:	f7f9 fd39 	bl	8000150 <d_make_comp>
 80066de:	4605      	mov	r5, r0
 80066e0:	e7bc      	b.n	800665c <d_demangle_callback.constprop.17+0x26c>
 80066e2:	2300      	movs	r3, #0
 80066e4:	e7f5      	b.n	80066d2 <d_demangle_callback.constprop.17+0x2e2>
 80066e6:	1c81      	adds	r1, r0, #2
 80066e8:	460a      	mov	r2, r1
 80066ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80066ee:	f1a3 0e61 	sub.w	lr, r3, #97	; 0x61
 80066f2:	f1be 0f19 	cmp.w	lr, #25
 80066f6:	d9f7      	bls.n	80066e8 <d_demangle_callback.constprop.17+0x2f8>
 80066f8:	2b5f      	cmp	r3, #95	; 0x5f
 80066fa:	d0f5      	beq.n	80066e8 <d_demangle_callback.constprop.17+0x2f8>
 80066fc:	e7c1      	b.n	8006682 <d_demangle_callback.constprop.17+0x292>
 80066fe:	6a3b      	ldr	r3, [r7, #32]
 8006700:	f893 9000 	ldrb.w	r9, [r3]
 8006704:	e6f3      	b.n	80064ee <d_demangle_callback.constprop.17+0xfe>
 8006706:	bf00      	nop
 8006708:	08011e50 	.word	0x08011e50

0800670c <__cxa_demangle>:
 800670c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006710:	b084      	sub	sp, #16
 8006712:	b378      	cbz	r0, 8006774 <__cxa_demangle+0x68>
 8006714:	b101      	cbz	r1, 8006718 <__cxa_demangle+0xc>
 8006716:	b36a      	cbz	r2, 8006774 <__cxa_demangle+0x68>
 8006718:	2400      	movs	r4, #0
 800671a:	4616      	mov	r6, r2
 800671c:	460d      	mov	r5, r1
 800671e:	466a      	mov	r2, sp
 8006720:	4927      	ldr	r1, [pc, #156]	; (80067c0 <__cxa_demangle+0xb4>)
 8006722:	461f      	mov	r7, r3
 8006724:	9400      	str	r4, [sp, #0]
 8006726:	9401      	str	r4, [sp, #4]
 8006728:	9402      	str	r4, [sp, #8]
 800672a:	9403      	str	r4, [sp, #12]
 800672c:	f7ff fe60 	bl	80063f0 <d_demangle_callback.constprop.17>
 8006730:	2800      	cmp	r0, #0
 8006732:	d03e      	beq.n	80067b2 <__cxa_demangle+0xa6>
 8006734:	9b03      	ldr	r3, [sp, #12]
 8006736:	b1d3      	cbz	r3, 800676e <__cxa_demangle+0x62>
 8006738:	f04f 0801 	mov.w	r8, #1
 800673c:	9c00      	ldr	r4, [sp, #0]
 800673e:	b35c      	cbz	r4, 8006798 <__cxa_demangle+0x8c>
 8006740:	b33d      	cbz	r5, 8006792 <__cxa_demangle+0x86>
 8006742:	4620      	mov	r0, r4
 8006744:	f000 f85a 	bl	80067fc <strlen>
 8006748:	6833      	ldr	r3, [r6, #0]
 800674a:	4298      	cmp	r0, r3
 800674c:	d21b      	bcs.n	8006786 <__cxa_demangle+0x7a>
 800674e:	1c42      	adds	r2, r0, #1
 8006750:	4621      	mov	r1, r4
 8006752:	4628      	mov	r0, r5
 8006754:	f007 fa49 	bl	800dbea <memcpy>
 8006758:	4620      	mov	r0, r4
 800675a:	f007 f803 	bl	800d764 <free>
 800675e:	462c      	mov	r4, r5
 8006760:	b10f      	cbz	r7, 8006766 <__cxa_demangle+0x5a>
 8006762:	2300      	movs	r3, #0
 8006764:	603b      	str	r3, [r7, #0]
 8006766:	4620      	mov	r0, r4
 8006768:	b004      	add	sp, #16
 800676a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800676e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8006772:	e7e3      	b.n	800673c <__cxa_demangle+0x30>
 8006774:	b313      	cbz	r3, 80067bc <__cxa_demangle+0xb0>
 8006776:	2400      	movs	r4, #0
 8006778:	f06f 0202 	mvn.w	r2, #2
 800677c:	4620      	mov	r0, r4
 800677e:	601a      	str	r2, [r3, #0]
 8006780:	b004      	add	sp, #16
 8006782:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006786:	4628      	mov	r0, r5
 8006788:	f006 ffec 	bl	800d764 <free>
 800678c:	f8c6 8000 	str.w	r8, [r6]
 8006790:	e7e6      	b.n	8006760 <__cxa_demangle+0x54>
 8006792:	2e00      	cmp	r6, #0
 8006794:	d1fa      	bne.n	800678c <__cxa_demangle+0x80>
 8006796:	e7e3      	b.n	8006760 <__cxa_demangle+0x54>
 8006798:	b187      	cbz	r7, 80067bc <__cxa_demangle+0xb0>
 800679a:	f1b8 0f01 	cmp.w	r8, #1
 800679e:	d004      	beq.n	80067aa <__cxa_demangle+0x9e>
 80067a0:	f06f 0301 	mvn.w	r3, #1
 80067a4:	2400      	movs	r4, #0
 80067a6:	603b      	str	r3, [r7, #0]
 80067a8:	e7dd      	b.n	8006766 <__cxa_demangle+0x5a>
 80067aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80067ae:	603b      	str	r3, [r7, #0]
 80067b0:	e7d9      	b.n	8006766 <__cxa_demangle+0x5a>
 80067b2:	9800      	ldr	r0, [sp, #0]
 80067b4:	f006 ffd6 	bl	800d764 <free>
 80067b8:	2f00      	cmp	r7, #0
 80067ba:	d1f1      	bne.n	80067a0 <__cxa_demangle+0x94>
 80067bc:	2400      	movs	r4, #0
 80067be:	e7d2      	b.n	8006766 <__cxa_demangle+0x5a>
 80067c0:	08000871 	.word	0x08000871

080067c4 <__gcclibcxx_demangle_callback>:
 80067c4:	b160      	cbz	r0, 80067e0 <__gcclibcxx_demangle_callback+0x1c>
 80067c6:	b508      	push	{r3, lr}
 80067c8:	b139      	cbz	r1, 80067da <__gcclibcxx_demangle_callback+0x16>
 80067ca:	f7ff fe11 	bl	80063f0 <d_demangle_callback.constprop.17>
 80067ce:	2800      	cmp	r0, #0
 80067d0:	bf0c      	ite	eq
 80067d2:	f06f 0001 	mvneq.w	r0, #1
 80067d6:	2000      	movne	r0, #0
 80067d8:	bd08      	pop	{r3, pc}
 80067da:	f06f 0002 	mvn.w	r0, #2
 80067de:	bd08      	pop	{r3, pc}
 80067e0:	f06f 0002 	mvn.w	r0, #2
 80067e4:	4770      	bx	lr
 80067e6:	bf00      	nop

080067e8 <strcmp>:
 80067e8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80067ec:	f811 3b01 	ldrb.w	r3, [r1], #1
 80067f0:	2a01      	cmp	r2, #1
 80067f2:	bf28      	it	cs
 80067f4:	429a      	cmpcs	r2, r3
 80067f6:	d0f7      	beq.n	80067e8 <strcmp>
 80067f8:	1ad0      	subs	r0, r2, r3
 80067fa:	4770      	bx	lr

080067fc <strlen>:
 80067fc:	4603      	mov	r3, r0
 80067fe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006802:	2a00      	cmp	r2, #0
 8006804:	d1fb      	bne.n	80067fe <strlen+0x2>
 8006806:	1a18      	subs	r0, r3, r0
 8006808:	3801      	subs	r0, #1
 800680a:	4770      	bx	lr

0800680c <__aeabi_drsub>:
 800680c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006810:	e002      	b.n	8006818 <__adddf3>
 8006812:	bf00      	nop

08006814 <__aeabi_dsub>:
 8006814:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006818 <__adddf3>:
 8006818:	b530      	push	{r4, r5, lr}
 800681a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800681e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8006822:	ea94 0f05 	teq	r4, r5
 8006826:	bf08      	it	eq
 8006828:	ea90 0f02 	teqeq	r0, r2
 800682c:	bf1f      	itttt	ne
 800682e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8006832:	ea55 0c02 	orrsne.w	ip, r5, r2
 8006836:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800683a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800683e:	f000 80e2 	beq.w	8006a06 <__adddf3+0x1ee>
 8006842:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8006846:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800684a:	bfb8      	it	lt
 800684c:	426d      	neglt	r5, r5
 800684e:	dd0c      	ble.n	800686a <__adddf3+0x52>
 8006850:	442c      	add	r4, r5
 8006852:	ea80 0202 	eor.w	r2, r0, r2
 8006856:	ea81 0303 	eor.w	r3, r1, r3
 800685a:	ea82 0000 	eor.w	r0, r2, r0
 800685e:	ea83 0101 	eor.w	r1, r3, r1
 8006862:	ea80 0202 	eor.w	r2, r0, r2
 8006866:	ea81 0303 	eor.w	r3, r1, r3
 800686a:	2d36      	cmp	r5, #54	; 0x36
 800686c:	bf88      	it	hi
 800686e:	bd30      	pophi	{r4, r5, pc}
 8006870:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8006874:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006878:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800687c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8006880:	d002      	beq.n	8006888 <__adddf3+0x70>
 8006882:	4240      	negs	r0, r0
 8006884:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006888:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800688c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006890:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8006894:	d002      	beq.n	800689c <__adddf3+0x84>
 8006896:	4252      	negs	r2, r2
 8006898:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800689c:	ea94 0f05 	teq	r4, r5
 80068a0:	f000 80a7 	beq.w	80069f2 <__adddf3+0x1da>
 80068a4:	f1a4 0401 	sub.w	r4, r4, #1
 80068a8:	f1d5 0e20 	rsbs	lr, r5, #32
 80068ac:	db0d      	blt.n	80068ca <__adddf3+0xb2>
 80068ae:	fa02 fc0e 	lsl.w	ip, r2, lr
 80068b2:	fa22 f205 	lsr.w	r2, r2, r5
 80068b6:	1880      	adds	r0, r0, r2
 80068b8:	f141 0100 	adc.w	r1, r1, #0
 80068bc:	fa03 f20e 	lsl.w	r2, r3, lr
 80068c0:	1880      	adds	r0, r0, r2
 80068c2:	fa43 f305 	asr.w	r3, r3, r5
 80068c6:	4159      	adcs	r1, r3
 80068c8:	e00e      	b.n	80068e8 <__adddf3+0xd0>
 80068ca:	f1a5 0520 	sub.w	r5, r5, #32
 80068ce:	f10e 0e20 	add.w	lr, lr, #32
 80068d2:	2a01      	cmp	r2, #1
 80068d4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80068d8:	bf28      	it	cs
 80068da:	f04c 0c02 	orrcs.w	ip, ip, #2
 80068de:	fa43 f305 	asr.w	r3, r3, r5
 80068e2:	18c0      	adds	r0, r0, r3
 80068e4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80068e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80068ec:	d507      	bpl.n	80068fe <__adddf3+0xe6>
 80068ee:	f04f 0e00 	mov.w	lr, #0
 80068f2:	f1dc 0c00 	rsbs	ip, ip, #0
 80068f6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80068fa:	eb6e 0101 	sbc.w	r1, lr, r1
 80068fe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8006902:	d31b      	bcc.n	800693c <__adddf3+0x124>
 8006904:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8006908:	d30c      	bcc.n	8006924 <__adddf3+0x10c>
 800690a:	0849      	lsrs	r1, r1, #1
 800690c:	ea5f 0030 	movs.w	r0, r0, rrx
 8006910:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8006914:	f104 0401 	add.w	r4, r4, #1
 8006918:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800691c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8006920:	f080 809a 	bcs.w	8006a58 <__adddf3+0x240>
 8006924:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8006928:	bf08      	it	eq
 800692a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800692e:	f150 0000 	adcs.w	r0, r0, #0
 8006932:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006936:	ea41 0105 	orr.w	r1, r1, r5
 800693a:	bd30      	pop	{r4, r5, pc}
 800693c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8006940:	4140      	adcs	r0, r0
 8006942:	eb41 0101 	adc.w	r1, r1, r1
 8006946:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800694a:	f1a4 0401 	sub.w	r4, r4, #1
 800694e:	d1e9      	bne.n	8006924 <__adddf3+0x10c>
 8006950:	f091 0f00 	teq	r1, #0
 8006954:	bf04      	itt	eq
 8006956:	4601      	moveq	r1, r0
 8006958:	2000      	moveq	r0, #0
 800695a:	fab1 f381 	clz	r3, r1
 800695e:	bf08      	it	eq
 8006960:	3320      	addeq	r3, #32
 8006962:	f1a3 030b 	sub.w	r3, r3, #11
 8006966:	f1b3 0220 	subs.w	r2, r3, #32
 800696a:	da0c      	bge.n	8006986 <__adddf3+0x16e>
 800696c:	320c      	adds	r2, #12
 800696e:	dd08      	ble.n	8006982 <__adddf3+0x16a>
 8006970:	f102 0c14 	add.w	ip, r2, #20
 8006974:	f1c2 020c 	rsb	r2, r2, #12
 8006978:	fa01 f00c 	lsl.w	r0, r1, ip
 800697c:	fa21 f102 	lsr.w	r1, r1, r2
 8006980:	e00c      	b.n	800699c <__adddf3+0x184>
 8006982:	f102 0214 	add.w	r2, r2, #20
 8006986:	bfd8      	it	le
 8006988:	f1c2 0c20 	rsble	ip, r2, #32
 800698c:	fa01 f102 	lsl.w	r1, r1, r2
 8006990:	fa20 fc0c 	lsr.w	ip, r0, ip
 8006994:	bfdc      	itt	le
 8006996:	ea41 010c 	orrle.w	r1, r1, ip
 800699a:	4090      	lslle	r0, r2
 800699c:	1ae4      	subs	r4, r4, r3
 800699e:	bfa2      	ittt	ge
 80069a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80069a4:	4329      	orrge	r1, r5
 80069a6:	bd30      	popge	{r4, r5, pc}
 80069a8:	ea6f 0404 	mvn.w	r4, r4
 80069ac:	3c1f      	subs	r4, #31
 80069ae:	da1c      	bge.n	80069ea <__adddf3+0x1d2>
 80069b0:	340c      	adds	r4, #12
 80069b2:	dc0e      	bgt.n	80069d2 <__adddf3+0x1ba>
 80069b4:	f104 0414 	add.w	r4, r4, #20
 80069b8:	f1c4 0220 	rsb	r2, r4, #32
 80069bc:	fa20 f004 	lsr.w	r0, r0, r4
 80069c0:	fa01 f302 	lsl.w	r3, r1, r2
 80069c4:	ea40 0003 	orr.w	r0, r0, r3
 80069c8:	fa21 f304 	lsr.w	r3, r1, r4
 80069cc:	ea45 0103 	orr.w	r1, r5, r3
 80069d0:	bd30      	pop	{r4, r5, pc}
 80069d2:	f1c4 040c 	rsb	r4, r4, #12
 80069d6:	f1c4 0220 	rsb	r2, r4, #32
 80069da:	fa20 f002 	lsr.w	r0, r0, r2
 80069de:	fa01 f304 	lsl.w	r3, r1, r4
 80069e2:	ea40 0003 	orr.w	r0, r0, r3
 80069e6:	4629      	mov	r1, r5
 80069e8:	bd30      	pop	{r4, r5, pc}
 80069ea:	fa21 f004 	lsr.w	r0, r1, r4
 80069ee:	4629      	mov	r1, r5
 80069f0:	bd30      	pop	{r4, r5, pc}
 80069f2:	f094 0f00 	teq	r4, #0
 80069f6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80069fa:	bf06      	itte	eq
 80069fc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8006a00:	3401      	addeq	r4, #1
 8006a02:	3d01      	subne	r5, #1
 8006a04:	e74e      	b.n	80068a4 <__adddf3+0x8c>
 8006a06:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8006a0a:	bf18      	it	ne
 8006a0c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006a10:	d029      	beq.n	8006a66 <__adddf3+0x24e>
 8006a12:	ea94 0f05 	teq	r4, r5
 8006a16:	bf08      	it	eq
 8006a18:	ea90 0f02 	teqeq	r0, r2
 8006a1c:	d005      	beq.n	8006a2a <__adddf3+0x212>
 8006a1e:	ea54 0c00 	orrs.w	ip, r4, r0
 8006a22:	bf04      	itt	eq
 8006a24:	4619      	moveq	r1, r3
 8006a26:	4610      	moveq	r0, r2
 8006a28:	bd30      	pop	{r4, r5, pc}
 8006a2a:	ea91 0f03 	teq	r1, r3
 8006a2e:	bf1e      	ittt	ne
 8006a30:	2100      	movne	r1, #0
 8006a32:	2000      	movne	r0, #0
 8006a34:	bd30      	popne	{r4, r5, pc}
 8006a36:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8006a3a:	d105      	bne.n	8006a48 <__adddf3+0x230>
 8006a3c:	0040      	lsls	r0, r0, #1
 8006a3e:	4149      	adcs	r1, r1
 8006a40:	bf28      	it	cs
 8006a42:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8006a46:	bd30      	pop	{r4, r5, pc}
 8006a48:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006a4c:	bf3c      	itt	cc
 8006a4e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8006a52:	bd30      	popcc	{r4, r5, pc}
 8006a54:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006a58:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8006a5c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006a60:	f04f 0000 	mov.w	r0, #0
 8006a64:	bd30      	pop	{r4, r5, pc}
 8006a66:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8006a6a:	bf1a      	itte	ne
 8006a6c:	4619      	movne	r1, r3
 8006a6e:	4610      	movne	r0, r2
 8006a70:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8006a74:	bf1c      	itt	ne
 8006a76:	460b      	movne	r3, r1
 8006a78:	4602      	movne	r2, r0
 8006a7a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006a7e:	bf06      	itte	eq
 8006a80:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8006a84:	ea91 0f03 	teqeq	r1, r3
 8006a88:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8006a8c:	bd30      	pop	{r4, r5, pc}
 8006a8e:	bf00      	nop

08006a90 <__aeabi_ui2d>:
 8006a90:	f090 0f00 	teq	r0, #0
 8006a94:	bf04      	itt	eq
 8006a96:	2100      	moveq	r1, #0
 8006a98:	4770      	bxeq	lr
 8006a9a:	b530      	push	{r4, r5, lr}
 8006a9c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006aa0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8006aa4:	f04f 0500 	mov.w	r5, #0
 8006aa8:	f04f 0100 	mov.w	r1, #0
 8006aac:	e750      	b.n	8006950 <__adddf3+0x138>
 8006aae:	bf00      	nop

08006ab0 <__aeabi_i2d>:
 8006ab0:	f090 0f00 	teq	r0, #0
 8006ab4:	bf04      	itt	eq
 8006ab6:	2100      	moveq	r1, #0
 8006ab8:	4770      	bxeq	lr
 8006aba:	b530      	push	{r4, r5, lr}
 8006abc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006ac0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8006ac4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8006ac8:	bf48      	it	mi
 8006aca:	4240      	negmi	r0, r0
 8006acc:	f04f 0100 	mov.w	r1, #0
 8006ad0:	e73e      	b.n	8006950 <__adddf3+0x138>
 8006ad2:	bf00      	nop

08006ad4 <__aeabi_f2d>:
 8006ad4:	0042      	lsls	r2, r0, #1
 8006ad6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8006ada:	ea4f 0131 	mov.w	r1, r1, rrx
 8006ade:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8006ae2:	bf1f      	itttt	ne
 8006ae4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8006ae8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8006aec:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8006af0:	4770      	bxne	lr
 8006af2:	f092 0f00 	teq	r2, #0
 8006af6:	bf14      	ite	ne
 8006af8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8006afc:	4770      	bxeq	lr
 8006afe:	b530      	push	{r4, r5, lr}
 8006b00:	f44f 7460 	mov.w	r4, #896	; 0x380
 8006b04:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006b08:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006b0c:	e720      	b.n	8006950 <__adddf3+0x138>
 8006b0e:	bf00      	nop

08006b10 <__aeabi_ul2d>:
 8006b10:	ea50 0201 	orrs.w	r2, r0, r1
 8006b14:	bf08      	it	eq
 8006b16:	4770      	bxeq	lr
 8006b18:	b530      	push	{r4, r5, lr}
 8006b1a:	f04f 0500 	mov.w	r5, #0
 8006b1e:	e00a      	b.n	8006b36 <__aeabi_l2d+0x16>

08006b20 <__aeabi_l2d>:
 8006b20:	ea50 0201 	orrs.w	r2, r0, r1
 8006b24:	bf08      	it	eq
 8006b26:	4770      	bxeq	lr
 8006b28:	b530      	push	{r4, r5, lr}
 8006b2a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8006b2e:	d502      	bpl.n	8006b36 <__aeabi_l2d+0x16>
 8006b30:	4240      	negs	r0, r0
 8006b32:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006b36:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006b3a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8006b3e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8006b42:	f43f aedc 	beq.w	80068fe <__adddf3+0xe6>
 8006b46:	f04f 0203 	mov.w	r2, #3
 8006b4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8006b4e:	bf18      	it	ne
 8006b50:	3203      	addne	r2, #3
 8006b52:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8006b56:	bf18      	it	ne
 8006b58:	3203      	addne	r2, #3
 8006b5a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8006b5e:	f1c2 0320 	rsb	r3, r2, #32
 8006b62:	fa00 fc03 	lsl.w	ip, r0, r3
 8006b66:	fa20 f002 	lsr.w	r0, r0, r2
 8006b6a:	fa01 fe03 	lsl.w	lr, r1, r3
 8006b6e:	ea40 000e 	orr.w	r0, r0, lr
 8006b72:	fa21 f102 	lsr.w	r1, r1, r2
 8006b76:	4414      	add	r4, r2
 8006b78:	e6c1      	b.n	80068fe <__adddf3+0xe6>
 8006b7a:	bf00      	nop

08006b7c <__aeabi_dmul>:
 8006b7c:	b570      	push	{r4, r5, r6, lr}
 8006b7e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8006b82:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8006b86:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8006b8a:	bf1d      	ittte	ne
 8006b8c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8006b90:	ea94 0f0c 	teqne	r4, ip
 8006b94:	ea95 0f0c 	teqne	r5, ip
 8006b98:	f000 f8de 	bleq	8006d58 <__aeabi_dmul+0x1dc>
 8006b9c:	442c      	add	r4, r5
 8006b9e:	ea81 0603 	eor.w	r6, r1, r3
 8006ba2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8006ba6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8006baa:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8006bae:	bf18      	it	ne
 8006bb0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8006bb4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006bb8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006bbc:	d038      	beq.n	8006c30 <__aeabi_dmul+0xb4>
 8006bbe:	fba0 ce02 	umull	ip, lr, r0, r2
 8006bc2:	f04f 0500 	mov.w	r5, #0
 8006bc6:	fbe1 e502 	umlal	lr, r5, r1, r2
 8006bca:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8006bce:	fbe0 e503 	umlal	lr, r5, r0, r3
 8006bd2:	f04f 0600 	mov.w	r6, #0
 8006bd6:	fbe1 5603 	umlal	r5, r6, r1, r3
 8006bda:	f09c 0f00 	teq	ip, #0
 8006bde:	bf18      	it	ne
 8006be0:	f04e 0e01 	orrne.w	lr, lr, #1
 8006be4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8006be8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8006bec:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8006bf0:	d204      	bcs.n	8006bfc <__aeabi_dmul+0x80>
 8006bf2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8006bf6:	416d      	adcs	r5, r5
 8006bf8:	eb46 0606 	adc.w	r6, r6, r6
 8006bfc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8006c00:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8006c04:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8006c08:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8006c0c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8006c10:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8006c14:	bf88      	it	hi
 8006c16:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8006c1a:	d81e      	bhi.n	8006c5a <__aeabi_dmul+0xde>
 8006c1c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8006c20:	bf08      	it	eq
 8006c22:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8006c26:	f150 0000 	adcs.w	r0, r0, #0
 8006c2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006c2e:	bd70      	pop	{r4, r5, r6, pc}
 8006c30:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8006c34:	ea46 0101 	orr.w	r1, r6, r1
 8006c38:	ea40 0002 	orr.w	r0, r0, r2
 8006c3c:	ea81 0103 	eor.w	r1, r1, r3
 8006c40:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8006c44:	bfc2      	ittt	gt
 8006c46:	ebd4 050c 	rsbsgt	r5, r4, ip
 8006c4a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006c4e:	bd70      	popgt	{r4, r5, r6, pc}
 8006c50:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006c54:	f04f 0e00 	mov.w	lr, #0
 8006c58:	3c01      	subs	r4, #1
 8006c5a:	f300 80ab 	bgt.w	8006db4 <__aeabi_dmul+0x238>
 8006c5e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8006c62:	bfde      	ittt	le
 8006c64:	2000      	movle	r0, #0
 8006c66:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8006c6a:	bd70      	pople	{r4, r5, r6, pc}
 8006c6c:	f1c4 0400 	rsb	r4, r4, #0
 8006c70:	3c20      	subs	r4, #32
 8006c72:	da35      	bge.n	8006ce0 <__aeabi_dmul+0x164>
 8006c74:	340c      	adds	r4, #12
 8006c76:	dc1b      	bgt.n	8006cb0 <__aeabi_dmul+0x134>
 8006c78:	f104 0414 	add.w	r4, r4, #20
 8006c7c:	f1c4 0520 	rsb	r5, r4, #32
 8006c80:	fa00 f305 	lsl.w	r3, r0, r5
 8006c84:	fa20 f004 	lsr.w	r0, r0, r4
 8006c88:	fa01 f205 	lsl.w	r2, r1, r5
 8006c8c:	ea40 0002 	orr.w	r0, r0, r2
 8006c90:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8006c94:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006c98:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8006c9c:	fa21 f604 	lsr.w	r6, r1, r4
 8006ca0:	eb42 0106 	adc.w	r1, r2, r6
 8006ca4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006ca8:	bf08      	it	eq
 8006caa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006cae:	bd70      	pop	{r4, r5, r6, pc}
 8006cb0:	f1c4 040c 	rsb	r4, r4, #12
 8006cb4:	f1c4 0520 	rsb	r5, r4, #32
 8006cb8:	fa00 f304 	lsl.w	r3, r0, r4
 8006cbc:	fa20 f005 	lsr.w	r0, r0, r5
 8006cc0:	fa01 f204 	lsl.w	r2, r1, r4
 8006cc4:	ea40 0002 	orr.w	r0, r0, r2
 8006cc8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006ccc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8006cd0:	f141 0100 	adc.w	r1, r1, #0
 8006cd4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006cd8:	bf08      	it	eq
 8006cda:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006cde:	bd70      	pop	{r4, r5, r6, pc}
 8006ce0:	f1c4 0520 	rsb	r5, r4, #32
 8006ce4:	fa00 f205 	lsl.w	r2, r0, r5
 8006ce8:	ea4e 0e02 	orr.w	lr, lr, r2
 8006cec:	fa20 f304 	lsr.w	r3, r0, r4
 8006cf0:	fa01 f205 	lsl.w	r2, r1, r5
 8006cf4:	ea43 0302 	orr.w	r3, r3, r2
 8006cf8:	fa21 f004 	lsr.w	r0, r1, r4
 8006cfc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006d00:	fa21 f204 	lsr.w	r2, r1, r4
 8006d04:	ea20 0002 	bic.w	r0, r0, r2
 8006d08:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8006d0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006d10:	bf08      	it	eq
 8006d12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006d16:	bd70      	pop	{r4, r5, r6, pc}
 8006d18:	f094 0f00 	teq	r4, #0
 8006d1c:	d10f      	bne.n	8006d3e <__aeabi_dmul+0x1c2>
 8006d1e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8006d22:	0040      	lsls	r0, r0, #1
 8006d24:	eb41 0101 	adc.w	r1, r1, r1
 8006d28:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006d2c:	bf08      	it	eq
 8006d2e:	3c01      	subeq	r4, #1
 8006d30:	d0f7      	beq.n	8006d22 <__aeabi_dmul+0x1a6>
 8006d32:	ea41 0106 	orr.w	r1, r1, r6
 8006d36:	f095 0f00 	teq	r5, #0
 8006d3a:	bf18      	it	ne
 8006d3c:	4770      	bxne	lr
 8006d3e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8006d42:	0052      	lsls	r2, r2, #1
 8006d44:	eb43 0303 	adc.w	r3, r3, r3
 8006d48:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8006d4c:	bf08      	it	eq
 8006d4e:	3d01      	subeq	r5, #1
 8006d50:	d0f7      	beq.n	8006d42 <__aeabi_dmul+0x1c6>
 8006d52:	ea43 0306 	orr.w	r3, r3, r6
 8006d56:	4770      	bx	lr
 8006d58:	ea94 0f0c 	teq	r4, ip
 8006d5c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8006d60:	bf18      	it	ne
 8006d62:	ea95 0f0c 	teqne	r5, ip
 8006d66:	d00c      	beq.n	8006d82 <__aeabi_dmul+0x206>
 8006d68:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006d6c:	bf18      	it	ne
 8006d6e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006d72:	d1d1      	bne.n	8006d18 <__aeabi_dmul+0x19c>
 8006d74:	ea81 0103 	eor.w	r1, r1, r3
 8006d78:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006d7c:	f04f 0000 	mov.w	r0, #0
 8006d80:	bd70      	pop	{r4, r5, r6, pc}
 8006d82:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006d86:	bf06      	itte	eq
 8006d88:	4610      	moveq	r0, r2
 8006d8a:	4619      	moveq	r1, r3
 8006d8c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006d90:	d019      	beq.n	8006dc6 <__aeabi_dmul+0x24a>
 8006d92:	ea94 0f0c 	teq	r4, ip
 8006d96:	d102      	bne.n	8006d9e <__aeabi_dmul+0x222>
 8006d98:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8006d9c:	d113      	bne.n	8006dc6 <__aeabi_dmul+0x24a>
 8006d9e:	ea95 0f0c 	teq	r5, ip
 8006da2:	d105      	bne.n	8006db0 <__aeabi_dmul+0x234>
 8006da4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8006da8:	bf1c      	itt	ne
 8006daa:	4610      	movne	r0, r2
 8006dac:	4619      	movne	r1, r3
 8006dae:	d10a      	bne.n	8006dc6 <__aeabi_dmul+0x24a>
 8006db0:	ea81 0103 	eor.w	r1, r1, r3
 8006db4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006db8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8006dbc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006dc0:	f04f 0000 	mov.w	r0, #0
 8006dc4:	bd70      	pop	{r4, r5, r6, pc}
 8006dc6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8006dca:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8006dce:	bd70      	pop	{r4, r5, r6, pc}

08006dd0 <__aeabi_ddiv>:
 8006dd0:	b570      	push	{r4, r5, r6, lr}
 8006dd2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8006dd6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8006dda:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8006dde:	bf1d      	ittte	ne
 8006de0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8006de4:	ea94 0f0c 	teqne	r4, ip
 8006de8:	ea95 0f0c 	teqne	r5, ip
 8006dec:	f000 f8a7 	bleq	8006f3e <__aeabi_ddiv+0x16e>
 8006df0:	eba4 0405 	sub.w	r4, r4, r5
 8006df4:	ea81 0e03 	eor.w	lr, r1, r3
 8006df8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8006dfc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006e00:	f000 8088 	beq.w	8006f14 <__aeabi_ddiv+0x144>
 8006e04:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006e08:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8006e0c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8006e10:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8006e14:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8006e18:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8006e1c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8006e20:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8006e24:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8006e28:	429d      	cmp	r5, r3
 8006e2a:	bf08      	it	eq
 8006e2c:	4296      	cmpeq	r6, r2
 8006e2e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8006e32:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8006e36:	d202      	bcs.n	8006e3e <__aeabi_ddiv+0x6e>
 8006e38:	085b      	lsrs	r3, r3, #1
 8006e3a:	ea4f 0232 	mov.w	r2, r2, rrx
 8006e3e:	1ab6      	subs	r6, r6, r2
 8006e40:	eb65 0503 	sbc.w	r5, r5, r3
 8006e44:	085b      	lsrs	r3, r3, #1
 8006e46:	ea4f 0232 	mov.w	r2, r2, rrx
 8006e4a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8006e4e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8006e52:	ebb6 0e02 	subs.w	lr, r6, r2
 8006e56:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006e5a:	bf22      	ittt	cs
 8006e5c:	1ab6      	subcs	r6, r6, r2
 8006e5e:	4675      	movcs	r5, lr
 8006e60:	ea40 000c 	orrcs.w	r0, r0, ip
 8006e64:	085b      	lsrs	r3, r3, #1
 8006e66:	ea4f 0232 	mov.w	r2, r2, rrx
 8006e6a:	ebb6 0e02 	subs.w	lr, r6, r2
 8006e6e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006e72:	bf22      	ittt	cs
 8006e74:	1ab6      	subcs	r6, r6, r2
 8006e76:	4675      	movcs	r5, lr
 8006e78:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8006e7c:	085b      	lsrs	r3, r3, #1
 8006e7e:	ea4f 0232 	mov.w	r2, r2, rrx
 8006e82:	ebb6 0e02 	subs.w	lr, r6, r2
 8006e86:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006e8a:	bf22      	ittt	cs
 8006e8c:	1ab6      	subcs	r6, r6, r2
 8006e8e:	4675      	movcs	r5, lr
 8006e90:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8006e94:	085b      	lsrs	r3, r3, #1
 8006e96:	ea4f 0232 	mov.w	r2, r2, rrx
 8006e9a:	ebb6 0e02 	subs.w	lr, r6, r2
 8006e9e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006ea2:	bf22      	ittt	cs
 8006ea4:	1ab6      	subcs	r6, r6, r2
 8006ea6:	4675      	movcs	r5, lr
 8006ea8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8006eac:	ea55 0e06 	orrs.w	lr, r5, r6
 8006eb0:	d018      	beq.n	8006ee4 <__aeabi_ddiv+0x114>
 8006eb2:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8006eb6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8006eba:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8006ebe:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8006ec2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8006ec6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8006eca:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8006ece:	d1c0      	bne.n	8006e52 <__aeabi_ddiv+0x82>
 8006ed0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006ed4:	d10b      	bne.n	8006eee <__aeabi_ddiv+0x11e>
 8006ed6:	ea41 0100 	orr.w	r1, r1, r0
 8006eda:	f04f 0000 	mov.w	r0, #0
 8006ede:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8006ee2:	e7b6      	b.n	8006e52 <__aeabi_ddiv+0x82>
 8006ee4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006ee8:	bf04      	itt	eq
 8006eea:	4301      	orreq	r1, r0
 8006eec:	2000      	moveq	r0, #0
 8006eee:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8006ef2:	bf88      	it	hi
 8006ef4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8006ef8:	f63f aeaf 	bhi.w	8006c5a <__aeabi_dmul+0xde>
 8006efc:	ebb5 0c03 	subs.w	ip, r5, r3
 8006f00:	bf04      	itt	eq
 8006f02:	ebb6 0c02 	subseq.w	ip, r6, r2
 8006f06:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8006f0a:	f150 0000 	adcs.w	r0, r0, #0
 8006f0e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006f12:	bd70      	pop	{r4, r5, r6, pc}
 8006f14:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8006f18:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8006f1c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8006f20:	bfc2      	ittt	gt
 8006f22:	ebd4 050c 	rsbsgt	r5, r4, ip
 8006f26:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006f2a:	bd70      	popgt	{r4, r5, r6, pc}
 8006f2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006f30:	f04f 0e00 	mov.w	lr, #0
 8006f34:	3c01      	subs	r4, #1
 8006f36:	e690      	b.n	8006c5a <__aeabi_dmul+0xde>
 8006f38:	ea45 0e06 	orr.w	lr, r5, r6
 8006f3c:	e68d      	b.n	8006c5a <__aeabi_dmul+0xde>
 8006f3e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8006f42:	ea94 0f0c 	teq	r4, ip
 8006f46:	bf08      	it	eq
 8006f48:	ea95 0f0c 	teqeq	r5, ip
 8006f4c:	f43f af3b 	beq.w	8006dc6 <__aeabi_dmul+0x24a>
 8006f50:	ea94 0f0c 	teq	r4, ip
 8006f54:	d10a      	bne.n	8006f6c <__aeabi_ddiv+0x19c>
 8006f56:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006f5a:	f47f af34 	bne.w	8006dc6 <__aeabi_dmul+0x24a>
 8006f5e:	ea95 0f0c 	teq	r5, ip
 8006f62:	f47f af25 	bne.w	8006db0 <__aeabi_dmul+0x234>
 8006f66:	4610      	mov	r0, r2
 8006f68:	4619      	mov	r1, r3
 8006f6a:	e72c      	b.n	8006dc6 <__aeabi_dmul+0x24a>
 8006f6c:	ea95 0f0c 	teq	r5, ip
 8006f70:	d106      	bne.n	8006f80 <__aeabi_ddiv+0x1b0>
 8006f72:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8006f76:	f43f aefd 	beq.w	8006d74 <__aeabi_dmul+0x1f8>
 8006f7a:	4610      	mov	r0, r2
 8006f7c:	4619      	mov	r1, r3
 8006f7e:	e722      	b.n	8006dc6 <__aeabi_dmul+0x24a>
 8006f80:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006f84:	bf18      	it	ne
 8006f86:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006f8a:	f47f aec5 	bne.w	8006d18 <__aeabi_dmul+0x19c>
 8006f8e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8006f92:	f47f af0d 	bne.w	8006db0 <__aeabi_dmul+0x234>
 8006f96:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8006f9a:	f47f aeeb 	bne.w	8006d74 <__aeabi_dmul+0x1f8>
 8006f9e:	e712      	b.n	8006dc6 <__aeabi_dmul+0x24a>

08006fa0 <__gedf2>:
 8006fa0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8006fa4:	e006      	b.n	8006fb4 <__cmpdf2+0x4>
 8006fa6:	bf00      	nop

08006fa8 <__ledf2>:
 8006fa8:	f04f 0c01 	mov.w	ip, #1
 8006fac:	e002      	b.n	8006fb4 <__cmpdf2+0x4>
 8006fae:	bf00      	nop

08006fb0 <__cmpdf2>:
 8006fb0:	f04f 0c01 	mov.w	ip, #1
 8006fb4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8006fb8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8006fbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8006fc0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8006fc4:	bf18      	it	ne
 8006fc6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8006fca:	d01b      	beq.n	8007004 <__cmpdf2+0x54>
 8006fcc:	b001      	add	sp, #4
 8006fce:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8006fd2:	bf0c      	ite	eq
 8006fd4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8006fd8:	ea91 0f03 	teqne	r1, r3
 8006fdc:	bf02      	ittt	eq
 8006fde:	ea90 0f02 	teqeq	r0, r2
 8006fe2:	2000      	moveq	r0, #0
 8006fe4:	4770      	bxeq	lr
 8006fe6:	f110 0f00 	cmn.w	r0, #0
 8006fea:	ea91 0f03 	teq	r1, r3
 8006fee:	bf58      	it	pl
 8006ff0:	4299      	cmppl	r1, r3
 8006ff2:	bf08      	it	eq
 8006ff4:	4290      	cmpeq	r0, r2
 8006ff6:	bf2c      	ite	cs
 8006ff8:	17d8      	asrcs	r0, r3, #31
 8006ffa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8006ffe:	f040 0001 	orr.w	r0, r0, #1
 8007002:	4770      	bx	lr
 8007004:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8007008:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800700c:	d102      	bne.n	8007014 <__cmpdf2+0x64>
 800700e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8007012:	d107      	bne.n	8007024 <__cmpdf2+0x74>
 8007014:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007018:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800701c:	d1d6      	bne.n	8006fcc <__cmpdf2+0x1c>
 800701e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8007022:	d0d3      	beq.n	8006fcc <__cmpdf2+0x1c>
 8007024:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007028:	4770      	bx	lr
 800702a:	bf00      	nop

0800702c <__aeabi_cdrcmple>:
 800702c:	4684      	mov	ip, r0
 800702e:	4610      	mov	r0, r2
 8007030:	4662      	mov	r2, ip
 8007032:	468c      	mov	ip, r1
 8007034:	4619      	mov	r1, r3
 8007036:	4663      	mov	r3, ip
 8007038:	e000      	b.n	800703c <__aeabi_cdcmpeq>
 800703a:	bf00      	nop

0800703c <__aeabi_cdcmpeq>:
 800703c:	b501      	push	{r0, lr}
 800703e:	f7ff ffb7 	bl	8006fb0 <__cmpdf2>
 8007042:	2800      	cmp	r0, #0
 8007044:	bf48      	it	mi
 8007046:	f110 0f00 	cmnmi.w	r0, #0
 800704a:	bd01      	pop	{r0, pc}

0800704c <__aeabi_dcmpeq>:
 800704c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007050:	f7ff fff4 	bl	800703c <__aeabi_cdcmpeq>
 8007054:	bf0c      	ite	eq
 8007056:	2001      	moveq	r0, #1
 8007058:	2000      	movne	r0, #0
 800705a:	f85d fb08 	ldr.w	pc, [sp], #8
 800705e:	bf00      	nop

08007060 <__aeabi_dcmplt>:
 8007060:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007064:	f7ff ffea 	bl	800703c <__aeabi_cdcmpeq>
 8007068:	bf34      	ite	cc
 800706a:	2001      	movcc	r0, #1
 800706c:	2000      	movcs	r0, #0
 800706e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007072:	bf00      	nop

08007074 <__aeabi_dcmple>:
 8007074:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007078:	f7ff ffe0 	bl	800703c <__aeabi_cdcmpeq>
 800707c:	bf94      	ite	ls
 800707e:	2001      	movls	r0, #1
 8007080:	2000      	movhi	r0, #0
 8007082:	f85d fb08 	ldr.w	pc, [sp], #8
 8007086:	bf00      	nop

08007088 <__aeabi_dcmpge>:
 8007088:	f84d ed08 	str.w	lr, [sp, #-8]!
 800708c:	f7ff ffce 	bl	800702c <__aeabi_cdrcmple>
 8007090:	bf94      	ite	ls
 8007092:	2001      	movls	r0, #1
 8007094:	2000      	movhi	r0, #0
 8007096:	f85d fb08 	ldr.w	pc, [sp], #8
 800709a:	bf00      	nop

0800709c <__aeabi_dcmpgt>:
 800709c:	f84d ed08 	str.w	lr, [sp, #-8]!
 80070a0:	f7ff ffc4 	bl	800702c <__aeabi_cdrcmple>
 80070a4:	bf34      	ite	cc
 80070a6:	2001      	movcc	r0, #1
 80070a8:	2000      	movcs	r0, #0
 80070aa:	f85d fb08 	ldr.w	pc, [sp], #8
 80070ae:	bf00      	nop

080070b0 <__aeabi_dcmpun>:
 80070b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80070b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80070b8:	d102      	bne.n	80070c0 <__aeabi_dcmpun+0x10>
 80070ba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80070be:	d10a      	bne.n	80070d6 <__aeabi_dcmpun+0x26>
 80070c0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80070c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80070c8:	d102      	bne.n	80070d0 <__aeabi_dcmpun+0x20>
 80070ca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80070ce:	d102      	bne.n	80070d6 <__aeabi_dcmpun+0x26>
 80070d0:	f04f 0000 	mov.w	r0, #0
 80070d4:	4770      	bx	lr
 80070d6:	f04f 0001 	mov.w	r0, #1
 80070da:	4770      	bx	lr

080070dc <__aeabi_d2iz>:
 80070dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80070e0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80070e4:	d215      	bcs.n	8007112 <__aeabi_d2iz+0x36>
 80070e6:	d511      	bpl.n	800710c <__aeabi_d2iz+0x30>
 80070e8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80070ec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80070f0:	d912      	bls.n	8007118 <__aeabi_d2iz+0x3c>
 80070f2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80070f6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80070fa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80070fe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007102:	fa23 f002 	lsr.w	r0, r3, r2
 8007106:	bf18      	it	ne
 8007108:	4240      	negne	r0, r0
 800710a:	4770      	bx	lr
 800710c:	f04f 0000 	mov.w	r0, #0
 8007110:	4770      	bx	lr
 8007112:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8007116:	d105      	bne.n	8007124 <__aeabi_d2iz+0x48>
 8007118:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800711c:	bf08      	it	eq
 800711e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007122:	4770      	bx	lr
 8007124:	f04f 0000 	mov.w	r0, #0
 8007128:	4770      	bx	lr
 800712a:	bf00      	nop

0800712c <__aeabi_d2uiz>:
 800712c:	004a      	lsls	r2, r1, #1
 800712e:	d211      	bcs.n	8007154 <__aeabi_d2uiz+0x28>
 8007130:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8007134:	d211      	bcs.n	800715a <__aeabi_d2uiz+0x2e>
 8007136:	d50d      	bpl.n	8007154 <__aeabi_d2uiz+0x28>
 8007138:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800713c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8007140:	d40e      	bmi.n	8007160 <__aeabi_d2uiz+0x34>
 8007142:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007146:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800714a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800714e:	fa23 f002 	lsr.w	r0, r3, r2
 8007152:	4770      	bx	lr
 8007154:	f04f 0000 	mov.w	r0, #0
 8007158:	4770      	bx	lr
 800715a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 800715e:	d102      	bne.n	8007166 <__aeabi_d2uiz+0x3a>
 8007160:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007164:	4770      	bx	lr
 8007166:	f04f 0000 	mov.w	r0, #0
 800716a:	4770      	bx	lr

0800716c <__aeabi_uldivmod>:
 800716c:	b953      	cbnz	r3, 8007184 <__aeabi_uldivmod+0x18>
 800716e:	b94a      	cbnz	r2, 8007184 <__aeabi_uldivmod+0x18>
 8007170:	2900      	cmp	r1, #0
 8007172:	bf08      	it	eq
 8007174:	2800      	cmpeq	r0, #0
 8007176:	bf1c      	itt	ne
 8007178:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 800717c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007180:	f001 b900 	b.w	8008384 <__aeabi_idiv0>
 8007184:	f1ad 0c08 	sub.w	ip, sp, #8
 8007188:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800718c:	f000 f806 	bl	800719c <__udivmoddi4>
 8007190:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007194:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007198:	b004      	add	sp, #16
 800719a:	4770      	bx	lr

0800719c <__udivmoddi4>:
 800719c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80071a0:	468c      	mov	ip, r1
 80071a2:	460e      	mov	r6, r1
 80071a4:	4604      	mov	r4, r0
 80071a6:	9d08      	ldr	r5, [sp, #32]
 80071a8:	2b00      	cmp	r3, #0
 80071aa:	d150      	bne.n	800724e <__udivmoddi4+0xb2>
 80071ac:	428a      	cmp	r2, r1
 80071ae:	4617      	mov	r7, r2
 80071b0:	d96c      	bls.n	800728c <__udivmoddi4+0xf0>
 80071b2:	fab2 fe82 	clz	lr, r2
 80071b6:	f1be 0f00 	cmp.w	lr, #0
 80071ba:	d00b      	beq.n	80071d4 <__udivmoddi4+0x38>
 80071bc:	f1ce 0c20 	rsb	ip, lr, #32
 80071c0:	fa01 f60e 	lsl.w	r6, r1, lr
 80071c4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80071c8:	fa02 f70e 	lsl.w	r7, r2, lr
 80071cc:	ea4c 0c06 	orr.w	ip, ip, r6
 80071d0:	fa00 f40e 	lsl.w	r4, r0, lr
 80071d4:	0c3a      	lsrs	r2, r7, #16
 80071d6:	fbbc f9f2 	udiv	r9, ip, r2
 80071da:	b2bb      	uxth	r3, r7
 80071dc:	fb02 cc19 	mls	ip, r2, r9, ip
 80071e0:	fb09 fa03 	mul.w	sl, r9, r3
 80071e4:	ea4f 4814 	mov.w	r8, r4, lsr #16
 80071e8:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
 80071ec:	45b2      	cmp	sl, r6
 80071ee:	d90a      	bls.n	8007206 <__udivmoddi4+0x6a>
 80071f0:	19f6      	adds	r6, r6, r7
 80071f2:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
 80071f6:	f080 8125 	bcs.w	8007444 <__udivmoddi4+0x2a8>
 80071fa:	45b2      	cmp	sl, r6
 80071fc:	f240 8122 	bls.w	8007444 <__udivmoddi4+0x2a8>
 8007200:	f1a9 0902 	sub.w	r9, r9, #2
 8007204:	443e      	add	r6, r7
 8007206:	eba6 060a 	sub.w	r6, r6, sl
 800720a:	fbb6 f0f2 	udiv	r0, r6, r2
 800720e:	fb02 6610 	mls	r6, r2, r0, r6
 8007212:	fb00 f303 	mul.w	r3, r0, r3
 8007216:	b2a4      	uxth	r4, r4
 8007218:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800721c:	42a3      	cmp	r3, r4
 800721e:	d909      	bls.n	8007234 <__udivmoddi4+0x98>
 8007220:	19e4      	adds	r4, r4, r7
 8007222:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8007226:	f080 810b 	bcs.w	8007440 <__udivmoddi4+0x2a4>
 800722a:	42a3      	cmp	r3, r4
 800722c:	f240 8108 	bls.w	8007440 <__udivmoddi4+0x2a4>
 8007230:	3802      	subs	r0, #2
 8007232:	443c      	add	r4, r7
 8007234:	2100      	movs	r1, #0
 8007236:	1ae4      	subs	r4, r4, r3
 8007238:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800723c:	2d00      	cmp	r5, #0
 800723e:	d062      	beq.n	8007306 <__udivmoddi4+0x16a>
 8007240:	2300      	movs	r3, #0
 8007242:	fa24 f40e 	lsr.w	r4, r4, lr
 8007246:	602c      	str	r4, [r5, #0]
 8007248:	606b      	str	r3, [r5, #4]
 800724a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800724e:	428b      	cmp	r3, r1
 8007250:	d907      	bls.n	8007262 <__udivmoddi4+0xc6>
 8007252:	2d00      	cmp	r5, #0
 8007254:	d055      	beq.n	8007302 <__udivmoddi4+0x166>
 8007256:	2100      	movs	r1, #0
 8007258:	e885 0041 	stmia.w	r5, {r0, r6}
 800725c:	4608      	mov	r0, r1
 800725e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007262:	fab3 f183 	clz	r1, r3
 8007266:	2900      	cmp	r1, #0
 8007268:	f040 808f 	bne.w	800738a <__udivmoddi4+0x1ee>
 800726c:	42b3      	cmp	r3, r6
 800726e:	d302      	bcc.n	8007276 <__udivmoddi4+0xda>
 8007270:	4282      	cmp	r2, r0
 8007272:	f200 80fc 	bhi.w	800746e <__udivmoddi4+0x2d2>
 8007276:	1a84      	subs	r4, r0, r2
 8007278:	eb66 0603 	sbc.w	r6, r6, r3
 800727c:	2001      	movs	r0, #1
 800727e:	46b4      	mov	ip, r6
 8007280:	2d00      	cmp	r5, #0
 8007282:	d040      	beq.n	8007306 <__udivmoddi4+0x16a>
 8007284:	e885 1010 	stmia.w	r5, {r4, ip}
 8007288:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800728c:	b912      	cbnz	r2, 8007294 <__udivmoddi4+0xf8>
 800728e:	2701      	movs	r7, #1
 8007290:	fbb7 f7f2 	udiv	r7, r7, r2
 8007294:	fab7 fe87 	clz	lr, r7
 8007298:	f1be 0f00 	cmp.w	lr, #0
 800729c:	d135      	bne.n	800730a <__udivmoddi4+0x16e>
 800729e:	2101      	movs	r1, #1
 80072a0:	1bf6      	subs	r6, r6, r7
 80072a2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80072a6:	fa1f f887 	uxth.w	r8, r7
 80072aa:	fbb6 f2fc 	udiv	r2, r6, ip
 80072ae:	fb0c 6612 	mls	r6, ip, r2, r6
 80072b2:	fb08 f002 	mul.w	r0, r8, r2
 80072b6:	0c23      	lsrs	r3, r4, #16
 80072b8:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
 80072bc:	42b0      	cmp	r0, r6
 80072be:	d907      	bls.n	80072d0 <__udivmoddi4+0x134>
 80072c0:	19f6      	adds	r6, r6, r7
 80072c2:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 80072c6:	d202      	bcs.n	80072ce <__udivmoddi4+0x132>
 80072c8:	42b0      	cmp	r0, r6
 80072ca:	f200 80d2 	bhi.w	8007472 <__udivmoddi4+0x2d6>
 80072ce:	461a      	mov	r2, r3
 80072d0:	1a36      	subs	r6, r6, r0
 80072d2:	fbb6 f0fc 	udiv	r0, r6, ip
 80072d6:	fb0c 6610 	mls	r6, ip, r0, r6
 80072da:	fb08 f800 	mul.w	r8, r8, r0
 80072de:	b2a3      	uxth	r3, r4
 80072e0:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
 80072e4:	45a0      	cmp	r8, r4
 80072e6:	d907      	bls.n	80072f8 <__udivmoddi4+0x15c>
 80072e8:	19e4      	adds	r4, r4, r7
 80072ea:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80072ee:	d202      	bcs.n	80072f6 <__udivmoddi4+0x15a>
 80072f0:	45a0      	cmp	r8, r4
 80072f2:	f200 80b9 	bhi.w	8007468 <__udivmoddi4+0x2cc>
 80072f6:	4618      	mov	r0, r3
 80072f8:	eba4 0408 	sub.w	r4, r4, r8
 80072fc:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8007300:	e79c      	b.n	800723c <__udivmoddi4+0xa0>
 8007302:	4629      	mov	r1, r5
 8007304:	4628      	mov	r0, r5
 8007306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800730a:	fa07 f70e 	lsl.w	r7, r7, lr
 800730e:	f1ce 0320 	rsb	r3, lr, #32
 8007312:	fa26 f203 	lsr.w	r2, r6, r3
 8007316:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800731a:	fbb2 f1fc 	udiv	r1, r2, ip
 800731e:	fa1f f887 	uxth.w	r8, r7
 8007322:	fb0c 2211 	mls	r2, ip, r1, r2
 8007326:	fa06 f60e 	lsl.w	r6, r6, lr
 800732a:	fa20 f303 	lsr.w	r3, r0, r3
 800732e:	fb01 f908 	mul.w	r9, r1, r8
 8007332:	4333      	orrs	r3, r6
 8007334:	0c1e      	lsrs	r6, r3, #16
 8007336:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 800733a:	45b1      	cmp	r9, r6
 800733c:	fa00 f40e 	lsl.w	r4, r0, lr
 8007340:	d909      	bls.n	8007356 <__udivmoddi4+0x1ba>
 8007342:	19f6      	adds	r6, r6, r7
 8007344:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
 8007348:	f080 808c 	bcs.w	8007464 <__udivmoddi4+0x2c8>
 800734c:	45b1      	cmp	r9, r6
 800734e:	f240 8089 	bls.w	8007464 <__udivmoddi4+0x2c8>
 8007352:	3902      	subs	r1, #2
 8007354:	443e      	add	r6, r7
 8007356:	eba6 0609 	sub.w	r6, r6, r9
 800735a:	fbb6 f0fc 	udiv	r0, r6, ip
 800735e:	fb0c 6210 	mls	r2, ip, r0, r6
 8007362:	fb00 f908 	mul.w	r9, r0, r8
 8007366:	b29e      	uxth	r6, r3
 8007368:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 800736c:	45b1      	cmp	r9, r6
 800736e:	d907      	bls.n	8007380 <__udivmoddi4+0x1e4>
 8007370:	19f6      	adds	r6, r6, r7
 8007372:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007376:	d271      	bcs.n	800745c <__udivmoddi4+0x2c0>
 8007378:	45b1      	cmp	r9, r6
 800737a:	d96f      	bls.n	800745c <__udivmoddi4+0x2c0>
 800737c:	3802      	subs	r0, #2
 800737e:	443e      	add	r6, r7
 8007380:	eba6 0609 	sub.w	r6, r6, r9
 8007384:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8007388:	e78f      	b.n	80072aa <__udivmoddi4+0x10e>
 800738a:	f1c1 0720 	rsb	r7, r1, #32
 800738e:	fa22 f807 	lsr.w	r8, r2, r7
 8007392:	408b      	lsls	r3, r1
 8007394:	ea48 0303 	orr.w	r3, r8, r3
 8007398:	fa26 f407 	lsr.w	r4, r6, r7
 800739c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80073a0:	fbb4 f9fe 	udiv	r9, r4, lr
 80073a4:	fa1f fc83 	uxth.w	ip, r3
 80073a8:	fb0e 4419 	mls	r4, lr, r9, r4
 80073ac:	408e      	lsls	r6, r1
 80073ae:	fa20 f807 	lsr.w	r8, r0, r7
 80073b2:	fb09 fa0c 	mul.w	sl, r9, ip
 80073b6:	ea48 0806 	orr.w	r8, r8, r6
 80073ba:	ea4f 4618 	mov.w	r6, r8, lsr #16
 80073be:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
 80073c2:	45a2      	cmp	sl, r4
 80073c4:	fa02 f201 	lsl.w	r2, r2, r1
 80073c8:	fa00 f601 	lsl.w	r6, r0, r1
 80073cc:	d908      	bls.n	80073e0 <__udivmoddi4+0x244>
 80073ce:	18e4      	adds	r4, r4, r3
 80073d0:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 80073d4:	d244      	bcs.n	8007460 <__udivmoddi4+0x2c4>
 80073d6:	45a2      	cmp	sl, r4
 80073d8:	d942      	bls.n	8007460 <__udivmoddi4+0x2c4>
 80073da:	f1a9 0902 	sub.w	r9, r9, #2
 80073de:	441c      	add	r4, r3
 80073e0:	eba4 040a 	sub.w	r4, r4, sl
 80073e4:	fbb4 f0fe 	udiv	r0, r4, lr
 80073e8:	fb0e 4410 	mls	r4, lr, r0, r4
 80073ec:	fb00 fc0c 	mul.w	ip, r0, ip
 80073f0:	fa1f f888 	uxth.w	r8, r8
 80073f4:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 80073f8:	45a4      	cmp	ip, r4
 80073fa:	d907      	bls.n	800740c <__udivmoddi4+0x270>
 80073fc:	18e4      	adds	r4, r4, r3
 80073fe:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
 8007402:	d229      	bcs.n	8007458 <__udivmoddi4+0x2bc>
 8007404:	45a4      	cmp	ip, r4
 8007406:	d927      	bls.n	8007458 <__udivmoddi4+0x2bc>
 8007408:	3802      	subs	r0, #2
 800740a:	441c      	add	r4, r3
 800740c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8007410:	fba0 8902 	umull	r8, r9, r0, r2
 8007414:	eba4 0c0c 	sub.w	ip, r4, ip
 8007418:	45cc      	cmp	ip, r9
 800741a:	46c2      	mov	sl, r8
 800741c:	46ce      	mov	lr, r9
 800741e:	d315      	bcc.n	800744c <__udivmoddi4+0x2b0>
 8007420:	d012      	beq.n	8007448 <__udivmoddi4+0x2ac>
 8007422:	b155      	cbz	r5, 800743a <__udivmoddi4+0x29e>
 8007424:	ebb6 030a 	subs.w	r3, r6, sl
 8007428:	eb6c 060e 	sbc.w	r6, ip, lr
 800742c:	fa06 f707 	lsl.w	r7, r6, r7
 8007430:	40cb      	lsrs	r3, r1
 8007432:	431f      	orrs	r7, r3
 8007434:	40ce      	lsrs	r6, r1
 8007436:	602f      	str	r7, [r5, #0]
 8007438:	606e      	str	r6, [r5, #4]
 800743a:	2100      	movs	r1, #0
 800743c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007440:	4610      	mov	r0, r2
 8007442:	e6f7      	b.n	8007234 <__udivmoddi4+0x98>
 8007444:	4689      	mov	r9, r1
 8007446:	e6de      	b.n	8007206 <__udivmoddi4+0x6a>
 8007448:	4546      	cmp	r6, r8
 800744a:	d2ea      	bcs.n	8007422 <__udivmoddi4+0x286>
 800744c:	ebb8 0a02 	subs.w	sl, r8, r2
 8007450:	eb69 0e03 	sbc.w	lr, r9, r3
 8007454:	3801      	subs	r0, #1
 8007456:	e7e4      	b.n	8007422 <__udivmoddi4+0x286>
 8007458:	4670      	mov	r0, lr
 800745a:	e7d7      	b.n	800740c <__udivmoddi4+0x270>
 800745c:	4618      	mov	r0, r3
 800745e:	e78f      	b.n	8007380 <__udivmoddi4+0x1e4>
 8007460:	4681      	mov	r9, r0
 8007462:	e7bd      	b.n	80073e0 <__udivmoddi4+0x244>
 8007464:	4611      	mov	r1, r2
 8007466:	e776      	b.n	8007356 <__udivmoddi4+0x1ba>
 8007468:	3802      	subs	r0, #2
 800746a:	443c      	add	r4, r7
 800746c:	e744      	b.n	80072f8 <__udivmoddi4+0x15c>
 800746e:	4608      	mov	r0, r1
 8007470:	e706      	b.n	8007280 <__udivmoddi4+0xe4>
 8007472:	3a02      	subs	r2, #2
 8007474:	443e      	add	r6, r7
 8007476:	e72b      	b.n	80072d0 <__udivmoddi4+0x134>

08007478 <selfrel_offset31>:
 8007478:	6803      	ldr	r3, [r0, #0]
 800747a:	005a      	lsls	r2, r3, #1
 800747c:	bf4c      	ite	mi
 800747e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8007482:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8007486:	4418      	add	r0, r3
 8007488:	4770      	bx	lr
 800748a:	bf00      	nop

0800748c <search_EIT_table>:
 800748c:	b361      	cbz	r1, 80074e8 <search_EIT_table+0x5c>
 800748e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007492:	f101 3aff 	add.w	sl, r1, #4294967295	; 0xffffffff
 8007496:	4690      	mov	r8, r2
 8007498:	4606      	mov	r6, r0
 800749a:	46d1      	mov	r9, sl
 800749c:	2700      	movs	r7, #0
 800749e:	eb07 0409 	add.w	r4, r7, r9
 80074a2:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 80074a6:	1064      	asrs	r4, r4, #1
 80074a8:	00e5      	lsls	r5, r4, #3
 80074aa:	1971      	adds	r1, r6, r5
 80074ac:	4608      	mov	r0, r1
 80074ae:	f7ff ffe3 	bl	8007478 <selfrel_offset31>
 80074b2:	45a2      	cmp	sl, r4
 80074b4:	4683      	mov	fp, r0
 80074b6:	f105 0008 	add.w	r0, r5, #8
 80074ba:	4430      	add	r0, r6
 80074bc:	d009      	beq.n	80074d2 <search_EIT_table+0x46>
 80074be:	f7ff ffdb 	bl	8007478 <selfrel_offset31>
 80074c2:	45c3      	cmp	fp, r8
 80074c4:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 80074c8:	d805      	bhi.n	80074d6 <search_EIT_table+0x4a>
 80074ca:	4540      	cmp	r0, r8
 80074cc:	d209      	bcs.n	80074e2 <search_EIT_table+0x56>
 80074ce:	1c67      	adds	r7, r4, #1
 80074d0:	e7e5      	b.n	800749e <search_EIT_table+0x12>
 80074d2:	45c3      	cmp	fp, r8
 80074d4:	d905      	bls.n	80074e2 <search_EIT_table+0x56>
 80074d6:	42a7      	cmp	r7, r4
 80074d8:	d002      	beq.n	80074e0 <search_EIT_table+0x54>
 80074da:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
 80074de:	e7de      	b.n	800749e <search_EIT_table+0x12>
 80074e0:	2100      	movs	r1, #0
 80074e2:	4608      	mov	r0, r1
 80074e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074e8:	4608      	mov	r0, r1
 80074ea:	4770      	bx	lr

080074ec <__gnu_unwind_get_pr_addr>:
 80074ec:	2801      	cmp	r0, #1
 80074ee:	d007      	beq.n	8007500 <__gnu_unwind_get_pr_addr+0x14>
 80074f0:	2802      	cmp	r0, #2
 80074f2:	d007      	beq.n	8007504 <__gnu_unwind_get_pr_addr+0x18>
 80074f4:	4b04      	ldr	r3, [pc, #16]	; (8007508 <__gnu_unwind_get_pr_addr+0x1c>)
 80074f6:	2800      	cmp	r0, #0
 80074f8:	bf0c      	ite	eq
 80074fa:	4618      	moveq	r0, r3
 80074fc:	2000      	movne	r0, #0
 80074fe:	4770      	bx	lr
 8007500:	4802      	ldr	r0, [pc, #8]	; (800750c <__gnu_unwind_get_pr_addr+0x20>)
 8007502:	4770      	bx	lr
 8007504:	4802      	ldr	r0, [pc, #8]	; (8007510 <__gnu_unwind_get_pr_addr+0x24>)
 8007506:	4770      	bx	lr
 8007508:	08007bfd 	.word	0x08007bfd
 800750c:	08007c01 	.word	0x08007c01
 8007510:	08007c05 	.word	0x08007c05

08007514 <get_eit_entry>:
 8007514:	b530      	push	{r4, r5, lr}
 8007516:	4b25      	ldr	r3, [pc, #148]	; (80075ac <get_eit_entry+0x98>)
 8007518:	b083      	sub	sp, #12
 800751a:	4604      	mov	r4, r0
 800751c:	1e8d      	subs	r5, r1, #2
 800751e:	b373      	cbz	r3, 800757e <get_eit_entry+0x6a>
 8007520:	a901      	add	r1, sp, #4
 8007522:	4628      	mov	r0, r5
 8007524:	f3af 8000 	nop.w
 8007528:	b318      	cbz	r0, 8007572 <get_eit_entry+0x5e>
 800752a:	9901      	ldr	r1, [sp, #4]
 800752c:	462a      	mov	r2, r5
 800752e:	f7ff ffad 	bl	800748c <search_EIT_table>
 8007532:	4601      	mov	r1, r0
 8007534:	b1e8      	cbz	r0, 8007572 <get_eit_entry+0x5e>
 8007536:	f7ff ff9f 	bl	8007478 <selfrel_offset31>
 800753a:	684b      	ldr	r3, [r1, #4]
 800753c:	64a0      	str	r0, [r4, #72]	; 0x48
 800753e:	2b01      	cmp	r3, #1
 8007540:	d011      	beq.n	8007566 <get_eit_entry+0x52>
 8007542:	2b00      	cmp	r3, #0
 8007544:	db22      	blt.n	800758c <get_eit_entry+0x78>
 8007546:	1d08      	adds	r0, r1, #4
 8007548:	f7ff ff96 	bl	8007478 <selfrel_offset31>
 800754c:	2300      	movs	r3, #0
 800754e:	64e0      	str	r0, [r4, #76]	; 0x4c
 8007550:	6523      	str	r3, [r4, #80]	; 0x50
 8007552:	6803      	ldr	r3, [r0, #0]
 8007554:	2b00      	cmp	r3, #0
 8007556:	db1e      	blt.n	8007596 <get_eit_entry+0x82>
 8007558:	f7ff ff8e 	bl	8007478 <selfrel_offset31>
 800755c:	2300      	movs	r3, #0
 800755e:	6120      	str	r0, [r4, #16]
 8007560:	4618      	mov	r0, r3
 8007562:	b003      	add	sp, #12
 8007564:	bd30      	pop	{r4, r5, pc}
 8007566:	2305      	movs	r3, #5
 8007568:	2200      	movs	r2, #0
 800756a:	4618      	mov	r0, r3
 800756c:	6122      	str	r2, [r4, #16]
 800756e:	b003      	add	sp, #12
 8007570:	bd30      	pop	{r4, r5, pc}
 8007572:	2309      	movs	r3, #9
 8007574:	2200      	movs	r2, #0
 8007576:	4618      	mov	r0, r3
 8007578:	6122      	str	r2, [r4, #16]
 800757a:	b003      	add	sp, #12
 800757c:	bd30      	pop	{r4, r5, pc}
 800757e:	4b0c      	ldr	r3, [pc, #48]	; (80075b0 <get_eit_entry+0x9c>)
 8007580:	490c      	ldr	r1, [pc, #48]	; (80075b4 <get_eit_entry+0xa0>)
 8007582:	4618      	mov	r0, r3
 8007584:	1ac9      	subs	r1, r1, r3
 8007586:	10c9      	asrs	r1, r1, #3
 8007588:	9101      	str	r1, [sp, #4]
 800758a:	e7cf      	b.n	800752c <get_eit_entry+0x18>
 800758c:	2301      	movs	r3, #1
 800758e:	1d08      	adds	r0, r1, #4
 8007590:	64e0      	str	r0, [r4, #76]	; 0x4c
 8007592:	6523      	str	r3, [r4, #80]	; 0x50
 8007594:	e7dd      	b.n	8007552 <get_eit_entry+0x3e>
 8007596:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800759a:	f7ff ffa7 	bl	80074ec <__gnu_unwind_get_pr_addr>
 800759e:	2800      	cmp	r0, #0
 80075a0:	6120      	str	r0, [r4, #16]
 80075a2:	bf14      	ite	ne
 80075a4:	2300      	movne	r3, #0
 80075a6:	2309      	moveq	r3, #9
 80075a8:	e7da      	b.n	8007560 <get_eit_entry+0x4c>
 80075aa:	bf00      	nop
 80075ac:	00000000 	.word	0x00000000
 80075b0:	08013634 	.word	0x08013634
 80075b4:	08013a84 	.word	0x08013a84

080075b8 <restore_non_core_regs>:
 80075b8:	6803      	ldr	r3, [r0, #0]
 80075ba:	b510      	push	{r4, lr}
 80075bc:	07da      	lsls	r2, r3, #31
 80075be:	4604      	mov	r4, r0
 80075c0:	d406      	bmi.n	80075d0 <restore_non_core_regs+0x18>
 80075c2:	079b      	lsls	r3, r3, #30
 80075c4:	f100 0048 	add.w	r0, r0, #72	; 0x48
 80075c8:	d509      	bpl.n	80075de <restore_non_core_regs+0x26>
 80075ca:	f000 fc57 	bl	8007e7c <__gnu_Unwind_Restore_VFP_D>
 80075ce:	6823      	ldr	r3, [r4, #0]
 80075d0:	0759      	lsls	r1, r3, #29
 80075d2:	d509      	bpl.n	80075e8 <restore_non_core_regs+0x30>
 80075d4:	071a      	lsls	r2, r3, #28
 80075d6:	d50e      	bpl.n	80075f6 <restore_non_core_regs+0x3e>
 80075d8:	06db      	lsls	r3, r3, #27
 80075da:	d513      	bpl.n	8007604 <restore_non_core_regs+0x4c>
 80075dc:	bd10      	pop	{r4, pc}
 80075de:	f000 fc45 	bl	8007e6c <__gnu_Unwind_Restore_VFP>
 80075e2:	6823      	ldr	r3, [r4, #0]
 80075e4:	0759      	lsls	r1, r3, #29
 80075e6:	d4f5      	bmi.n	80075d4 <restore_non_core_regs+0x1c>
 80075e8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80075ec:	f000 fc4e 	bl	8007e8c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80075f0:	6823      	ldr	r3, [r4, #0]
 80075f2:	071a      	lsls	r2, r3, #28
 80075f4:	d4f0      	bmi.n	80075d8 <restore_non_core_regs+0x20>
 80075f6:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 80075fa:	f000 fc4f 	bl	8007e9c <__gnu_Unwind_Restore_WMMXD>
 80075fe:	6823      	ldr	r3, [r4, #0]
 8007600:	06db      	lsls	r3, r3, #27
 8007602:	d4eb      	bmi.n	80075dc <restore_non_core_regs+0x24>
 8007604:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8007608:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800760c:	f000 bc8a 	b.w	8007f24 <__gnu_Unwind_Restore_WMMXC>

08007610 <_Unwind_decode_typeinfo_ptr.isra.0>:
 8007610:	6803      	ldr	r3, [r0, #0]
 8007612:	b103      	cbz	r3, 8007616 <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
 8007614:	4403      	add	r3, r0
 8007616:	4618      	mov	r0, r3
 8007618:	4770      	bx	lr
 800761a:	bf00      	nop

0800761c <__gnu_unwind_24bit.isra.1>:
 800761c:	2009      	movs	r0, #9
 800761e:	4770      	bx	lr

08007620 <_Unwind_DebugHook>:
 8007620:	4770      	bx	lr
 8007622:	bf00      	nop

08007624 <unwind_phase2>:
 8007624:	b570      	push	{r4, r5, r6, lr}
 8007626:	4604      	mov	r4, r0
 8007628:	460d      	mov	r5, r1
 800762a:	e008      	b.n	800763e <unwind_phase2+0x1a>
 800762c:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 800762e:	6923      	ldr	r3, [r4, #16]
 8007630:	6162      	str	r2, [r4, #20]
 8007632:	4621      	mov	r1, r4
 8007634:	462a      	mov	r2, r5
 8007636:	2001      	movs	r0, #1
 8007638:	4798      	blx	r3
 800763a:	2808      	cmp	r0, #8
 800763c:	d108      	bne.n	8007650 <unwind_phase2+0x2c>
 800763e:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007640:	4620      	mov	r0, r4
 8007642:	f7ff ff67 	bl	8007514 <get_eit_entry>
 8007646:	4606      	mov	r6, r0
 8007648:	2800      	cmp	r0, #0
 800764a:	d0ef      	beq.n	800762c <unwind_phase2+0x8>
 800764c:	f005 fd7e 	bl	800d14c <abort>
 8007650:	2807      	cmp	r0, #7
 8007652:	d1fb      	bne.n	800764c <unwind_phase2+0x28>
 8007654:	4630      	mov	r0, r6
 8007656:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007658:	f7ff ffe2 	bl	8007620 <_Unwind_DebugHook>
 800765c:	1d28      	adds	r0, r5, #4
 800765e:	f000 fbf9 	bl	8007e54 <__restore_core_regs>
 8007662:	bf00      	nop

08007664 <unwind_phase2_forced>:
 8007664:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007668:	4605      	mov	r5, r0
 800766a:	2700      	movs	r7, #0
 800766c:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8007670:	ac03      	add	r4, sp, #12
 8007672:	1d0e      	adds	r6, r1, #4
 8007674:	4692      	mov	sl, r2
 8007676:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007678:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800767a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800767c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800767e:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007680:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007682:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8007686:	f8d5 800c 	ldr.w	r8, [r5, #12]
 800768a:	f8d5 9018 	ldr.w	r9, [r5, #24]
 800768e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007692:	ac02      	add	r4, sp, #8
 8007694:	4628      	mov	r0, r5
 8007696:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007698:	6027      	str	r7, [r4, #0]
 800769a:	f7ff ff3b 	bl	8007514 <get_eit_entry>
 800769e:	f1ba 0f00 	cmp.w	sl, #0
 80076a2:	4607      	mov	r7, r0
 80076a4:	bf14      	ite	ne
 80076a6:	260a      	movne	r6, #10
 80076a8:	2609      	moveq	r6, #9
 80076aa:	b17f      	cbz	r7, 80076cc <unwind_phase2_forced+0x68>
 80076ac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80076ae:	f046 0110 	orr.w	r1, r6, #16
 80076b2:	e88d 0210 	stmia.w	sp, {r4, r9}
 80076b6:	462a      	mov	r2, r5
 80076b8:	6463      	str	r3, [r4, #68]	; 0x44
 80076ba:	2001      	movs	r0, #1
 80076bc:	462b      	mov	r3, r5
 80076be:	47c0      	blx	r8
 80076c0:	bb78      	cbnz	r0, 8007722 <unwind_phase2_forced+0xbe>
 80076c2:	4638      	mov	r0, r7
 80076c4:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 80076c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80076cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80076ce:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80076d2:	616b      	str	r3, [r5, #20]
 80076d4:	4621      	mov	r1, r4
 80076d6:	a87a      	add	r0, sp, #488	; 0x1e8
 80076d8:	f006 fa87 	bl	800dbea <memcpy>
 80076dc:	692b      	ldr	r3, [r5, #16]
 80076de:	aa7a      	add	r2, sp, #488	; 0x1e8
 80076e0:	4629      	mov	r1, r5
 80076e2:	4630      	mov	r0, r6
 80076e4:	4798      	blx	r3
 80076e6:	9b88      	ldr	r3, [sp, #544]	; 0x220
 80076e8:	4682      	mov	sl, r0
 80076ea:	e88d 0210 	stmia.w	sp, {r4, r9}
 80076ee:	4631      	mov	r1, r6
 80076f0:	6463      	str	r3, [r4, #68]	; 0x44
 80076f2:	462a      	mov	r2, r5
 80076f4:	462b      	mov	r3, r5
 80076f6:	2001      	movs	r0, #1
 80076f8:	47c0      	blx	r8
 80076fa:	b990      	cbnz	r0, 8007722 <unwind_phase2_forced+0xbe>
 80076fc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007700:	a97a      	add	r1, sp, #488	; 0x1e8
 8007702:	4620      	mov	r0, r4
 8007704:	f006 fa71 	bl	800dbea <memcpy>
 8007708:	f1ba 0f08 	cmp.w	sl, #8
 800770c:	d106      	bne.n	800771c <unwind_phase2_forced+0xb8>
 800770e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007710:	4628      	mov	r0, r5
 8007712:	f7ff feff 	bl	8007514 <get_eit_entry>
 8007716:	2609      	movs	r6, #9
 8007718:	4607      	mov	r7, r0
 800771a:	e7c6      	b.n	80076aa <unwind_phase2_forced+0x46>
 800771c:	f1ba 0f07 	cmp.w	sl, #7
 8007720:	d005      	beq.n	800772e <unwind_phase2_forced+0xca>
 8007722:	2709      	movs	r7, #9
 8007724:	4638      	mov	r0, r7
 8007726:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 800772a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800772e:	4638      	mov	r0, r7
 8007730:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007732:	f7ff ff75 	bl	8007620 <_Unwind_DebugHook>
 8007736:	a803      	add	r0, sp, #12
 8007738:	f000 fb8c 	bl	8007e54 <__restore_core_regs>

0800773c <_Unwind_GetCFA>:
 800773c:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800773e:	4770      	bx	lr

08007740 <__gnu_Unwind_RaiseException>:
 8007740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007742:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
 8007746:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8007748:	b0f9      	sub	sp, #484	; 0x1e4
 800774a:	640b      	str	r3, [r1, #64]	; 0x40
 800774c:	1d0e      	adds	r6, r1, #4
 800774e:	ad01      	add	r5, sp, #4
 8007750:	460f      	mov	r7, r1
 8007752:	4604      	mov	r4, r0
 8007754:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007756:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007758:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800775a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800775c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800775e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007760:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8007764:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8007768:	f8cd e000 	str.w	lr, [sp]
 800776c:	e006      	b.n	800777c <__gnu_Unwind_RaiseException+0x3c>
 800776e:	6923      	ldr	r3, [r4, #16]
 8007770:	466a      	mov	r2, sp
 8007772:	4621      	mov	r1, r4
 8007774:	4798      	blx	r3
 8007776:	2808      	cmp	r0, #8
 8007778:	4605      	mov	r5, r0
 800777a:	d108      	bne.n	800778e <__gnu_Unwind_RaiseException+0x4e>
 800777c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800777e:	4620      	mov	r0, r4
 8007780:	f7ff fec8 	bl	8007514 <get_eit_entry>
 8007784:	2800      	cmp	r0, #0
 8007786:	d0f2      	beq.n	800776e <__gnu_Unwind_RaiseException+0x2e>
 8007788:	2009      	movs	r0, #9
 800778a:	b079      	add	sp, #484	; 0x1e4
 800778c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800778e:	4668      	mov	r0, sp
 8007790:	f7ff ff12 	bl	80075b8 <restore_non_core_regs>
 8007794:	2d06      	cmp	r5, #6
 8007796:	d1f7      	bne.n	8007788 <__gnu_Unwind_RaiseException+0x48>
 8007798:	4639      	mov	r1, r7
 800779a:	4620      	mov	r0, r4
 800779c:	f7ff ff42 	bl	8007624 <unwind_phase2>

080077a0 <__gnu_Unwind_ForcedUnwind>:
 80077a0:	b430      	push	{r4, r5}
 80077a2:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80077a4:	60c1      	str	r1, [r0, #12]
 80077a6:	6182      	str	r2, [r0, #24]
 80077a8:	4619      	mov	r1, r3
 80077aa:	641d      	str	r5, [r3, #64]	; 0x40
 80077ac:	2200      	movs	r2, #0
 80077ae:	bc30      	pop	{r4, r5}
 80077b0:	e758      	b.n	8007664 <unwind_phase2_forced>
 80077b2:	bf00      	nop

080077b4 <__gnu_Unwind_Resume>:
 80077b4:	b570      	push	{r4, r5, r6, lr}
 80077b6:	6943      	ldr	r3, [r0, #20]
 80077b8:	68c6      	ldr	r6, [r0, #12]
 80077ba:	640b      	str	r3, [r1, #64]	; 0x40
 80077bc:	b126      	cbz	r6, 80077c8 <__gnu_Unwind_Resume+0x14>
 80077be:	2201      	movs	r2, #1
 80077c0:	f7ff ff50 	bl	8007664 <unwind_phase2_forced>
 80077c4:	f005 fcc2 	bl	800d14c <abort>
 80077c8:	6903      	ldr	r3, [r0, #16]
 80077ca:	460a      	mov	r2, r1
 80077cc:	4604      	mov	r4, r0
 80077ce:	460d      	mov	r5, r1
 80077d0:	4601      	mov	r1, r0
 80077d2:	2002      	movs	r0, #2
 80077d4:	4798      	blx	r3
 80077d6:	2807      	cmp	r0, #7
 80077d8:	d007      	beq.n	80077ea <__gnu_Unwind_Resume+0x36>
 80077da:	2808      	cmp	r0, #8
 80077dc:	d103      	bne.n	80077e6 <__gnu_Unwind_Resume+0x32>
 80077de:	4629      	mov	r1, r5
 80077e0:	4620      	mov	r0, r4
 80077e2:	f7ff ff1f 	bl	8007624 <unwind_phase2>
 80077e6:	f005 fcb1 	bl	800d14c <abort>
 80077ea:	4630      	mov	r0, r6
 80077ec:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80077ee:	f7ff ff17 	bl	8007620 <_Unwind_DebugHook>
 80077f2:	1d28      	adds	r0, r5, #4
 80077f4:	f000 fb2e 	bl	8007e54 <__restore_core_regs>

080077f8 <__gnu_Unwind_Resume_or_Rethrow>:
 80077f8:	68c2      	ldr	r2, [r0, #12]
 80077fa:	b12a      	cbz	r2, 8007808 <__gnu_Unwind_Resume_or_Rethrow+0x10>
 80077fc:	b410      	push	{r4}
 80077fe:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8007800:	2200      	movs	r2, #0
 8007802:	640c      	str	r4, [r1, #64]	; 0x40
 8007804:	bc10      	pop	{r4}
 8007806:	e72d      	b.n	8007664 <unwind_phase2_forced>
 8007808:	e79a      	b.n	8007740 <__gnu_Unwind_RaiseException>
 800780a:	bf00      	nop

0800780c <_Unwind_Complete>:
 800780c:	4770      	bx	lr
 800780e:	bf00      	nop

08007810 <_Unwind_DeleteException>:
 8007810:	6883      	ldr	r3, [r0, #8]
 8007812:	b113      	cbz	r3, 800781a <_Unwind_DeleteException+0xa>
 8007814:	4601      	mov	r1, r0
 8007816:	2001      	movs	r0, #1
 8007818:	4718      	bx	r3
 800781a:	4770      	bx	lr

0800781c <_Unwind_VRS_Get>:
 800781c:	b500      	push	{lr}
 800781e:	2904      	cmp	r1, #4
 8007820:	d807      	bhi.n	8007832 <_Unwind_VRS_Get+0x16>
 8007822:	e8df f001 	tbb	[pc, r1]
 8007826:	0903      	.short	0x0903
 8007828:	0906      	.short	0x0906
 800782a:	09          	.byte	0x09
 800782b:	00          	.byte	0x00
 800782c:	b90b      	cbnz	r3, 8007832 <_Unwind_VRS_Get+0x16>
 800782e:	2a0f      	cmp	r2, #15
 8007830:	d905      	bls.n	800783e <_Unwind_VRS_Get+0x22>
 8007832:	2002      	movs	r0, #2
 8007834:	f85d fb04 	ldr.w	pc, [sp], #4
 8007838:	2001      	movs	r0, #1
 800783a:	f85d fb04 	ldr.w	pc, [sp], #4
 800783e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8007842:	6852      	ldr	r2, [r2, #4]
 8007844:	4618      	mov	r0, r3
 8007846:	9b01      	ldr	r3, [sp, #4]
 8007848:	601a      	str	r2, [r3, #0]
 800784a:	f85d fb04 	ldr.w	pc, [sp], #4
 800784e:	bf00      	nop

08007850 <_Unwind_GetGR>:
 8007850:	2300      	movs	r3, #0
 8007852:	b510      	push	{r4, lr}
 8007854:	b084      	sub	sp, #16
 8007856:	ac03      	add	r4, sp, #12
 8007858:	460a      	mov	r2, r1
 800785a:	9400      	str	r4, [sp, #0]
 800785c:	4619      	mov	r1, r3
 800785e:	f7ff ffdd 	bl	800781c <_Unwind_VRS_Get>
 8007862:	9803      	ldr	r0, [sp, #12]
 8007864:	b004      	add	sp, #16
 8007866:	bd10      	pop	{r4, pc}

08007868 <_Unwind_VRS_Set>:
 8007868:	b500      	push	{lr}
 800786a:	2904      	cmp	r1, #4
 800786c:	d807      	bhi.n	800787e <_Unwind_VRS_Set+0x16>
 800786e:	e8df f001 	tbb	[pc, r1]
 8007872:	0903      	.short	0x0903
 8007874:	0906      	.short	0x0906
 8007876:	09          	.byte	0x09
 8007877:	00          	.byte	0x00
 8007878:	b90b      	cbnz	r3, 800787e <_Unwind_VRS_Set+0x16>
 800787a:	2a0f      	cmp	r2, #15
 800787c:	d905      	bls.n	800788a <_Unwind_VRS_Set+0x22>
 800787e:	2002      	movs	r0, #2
 8007880:	f85d fb04 	ldr.w	pc, [sp], #4
 8007884:	2001      	movs	r0, #1
 8007886:	f85d fb04 	ldr.w	pc, [sp], #4
 800788a:	9901      	ldr	r1, [sp, #4]
 800788c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8007890:	6809      	ldr	r1, [r1, #0]
 8007892:	4618      	mov	r0, r3
 8007894:	6051      	str	r1, [r2, #4]
 8007896:	f85d fb04 	ldr.w	pc, [sp], #4
 800789a:	bf00      	nop

0800789c <_Unwind_SetGR>:
 800789c:	2300      	movs	r3, #0
 800789e:	b510      	push	{r4, lr}
 80078a0:	b084      	sub	sp, #16
 80078a2:	ac04      	add	r4, sp, #16
 80078a4:	f844 2d04 	str.w	r2, [r4, #-4]!
 80078a8:	9400      	str	r4, [sp, #0]
 80078aa:	460a      	mov	r2, r1
 80078ac:	4619      	mov	r1, r3
 80078ae:	f7ff ffdb 	bl	8007868 <_Unwind_VRS_Set>
 80078b2:	b004      	add	sp, #16
 80078b4:	bd10      	pop	{r4, pc}
 80078b6:	bf00      	nop

080078b8 <__gnu_Unwind_Backtrace>:
 80078b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80078ba:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
 80078be:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80078c0:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 80078c4:	6413      	str	r3, [r2, #64]	; 0x40
 80078c6:	1d15      	adds	r5, r2, #4
 80078c8:	ac17      	add	r4, sp, #92	; 0x5c
 80078ca:	4607      	mov	r7, r0
 80078cc:	460e      	mov	r6, r1
 80078ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80078d0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80078d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80078d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80078d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80078d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80078da:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80078de:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80078e2:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
 80078e6:	e012      	b.n	800790e <__gnu_Unwind_Backtrace+0x56>
 80078e8:	210c      	movs	r1, #12
 80078ea:	a816      	add	r0, sp, #88	; 0x58
 80078ec:	466a      	mov	r2, sp
 80078ee:	f7ff ffd5 	bl	800789c <_Unwind_SetGR>
 80078f2:	4631      	mov	r1, r6
 80078f4:	a816      	add	r0, sp, #88	; 0x58
 80078f6:	47b8      	blx	r7
 80078f8:	b978      	cbnz	r0, 800791a <__gnu_Unwind_Backtrace+0x62>
 80078fa:	9b04      	ldr	r3, [sp, #16]
 80078fc:	aa16      	add	r2, sp, #88	; 0x58
 80078fe:	4669      	mov	r1, sp
 8007900:	2008      	movs	r0, #8
 8007902:	4798      	blx	r3
 8007904:	2805      	cmp	r0, #5
 8007906:	4604      	mov	r4, r0
 8007908:	d008      	beq.n	800791c <__gnu_Unwind_Backtrace+0x64>
 800790a:	2809      	cmp	r0, #9
 800790c:	d005      	beq.n	800791a <__gnu_Unwind_Backtrace+0x62>
 800790e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8007910:	4668      	mov	r0, sp
 8007912:	f7ff fdff 	bl	8007514 <get_eit_entry>
 8007916:	2800      	cmp	r0, #0
 8007918:	d0e6      	beq.n	80078e8 <__gnu_Unwind_Backtrace+0x30>
 800791a:	2409      	movs	r4, #9
 800791c:	a816      	add	r0, sp, #88	; 0x58
 800791e:	f7ff fe4b 	bl	80075b8 <restore_non_core_regs>
 8007922:	4620      	mov	r0, r4
 8007924:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 8007928:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800792a:	bf00      	nop

0800792c <__gnu_unwind_pr_common>:
 800792c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007930:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 8007932:	4691      	mov	r9, r2
 8007934:	6822      	ldr	r2, [r4, #0]
 8007936:	b08b      	sub	sp, #44	; 0x2c
 8007938:	3404      	adds	r4, #4
 800793a:	460d      	mov	r5, r1
 800793c:	9207      	str	r2, [sp, #28]
 800793e:	9408      	str	r4, [sp, #32]
 8007940:	f000 0b03 	and.w	fp, r0, #3
 8007944:	461e      	mov	r6, r3
 8007946:	2b00      	cmp	r3, #0
 8007948:	d160      	bne.n	8007a0c <__gnu_unwind_pr_common+0xe0>
 800794a:	2303      	movs	r3, #3
 800794c:	0212      	lsls	r2, r2, #8
 800794e:	9207      	str	r2, [sp, #28]
 8007950:	f88d 6025 	strb.w	r6, [sp, #37]	; 0x25
 8007954:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8007958:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 800795a:	f1bb 0f02 	cmp.w	fp, #2
 800795e:	bf08      	it	eq
 8007960:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8007962:	f013 0301 	ands.w	r3, r3, #1
 8007966:	d140      	bne.n	80079ea <__gnu_unwind_pr_common+0xbe>
 8007968:	9301      	str	r3, [sp, #4]
 800796a:	f000 0308 	and.w	r3, r0, #8
 800796e:	9303      	str	r3, [sp, #12]
 8007970:	f8d4 8000 	ldr.w	r8, [r4]
 8007974:	f1b8 0f00 	cmp.w	r8, #0
 8007978:	d039      	beq.n	80079ee <__gnu_unwind_pr_common+0xc2>
 800797a:	2e02      	cmp	r6, #2
 800797c:	d043      	beq.n	8007a06 <__gnu_unwind_pr_common+0xda>
 800797e:	f8b4 8000 	ldrh.w	r8, [r4]
 8007982:	8867      	ldrh	r7, [r4, #2]
 8007984:	3404      	adds	r4, #4
 8007986:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8007988:	f027 0a01 	bic.w	sl, r7, #1
 800798c:	210f      	movs	r1, #15
 800798e:	4648      	mov	r0, r9
 8007990:	449a      	add	sl, r3
 8007992:	f7ff ff5d 	bl	8007850 <_Unwind_GetGR>
 8007996:	4582      	cmp	sl, r0
 8007998:	d833      	bhi.n	8007a02 <__gnu_unwind_pr_common+0xd6>
 800799a:	f028 0301 	bic.w	r3, r8, #1
 800799e:	449a      	add	sl, r3
 80079a0:	4550      	cmp	r0, sl
 80079a2:	bf2c      	ite	cs
 80079a4:	2000      	movcs	r0, #0
 80079a6:	2001      	movcc	r0, #1
 80079a8:	007f      	lsls	r7, r7, #1
 80079aa:	f007 0702 	and.w	r7, r7, #2
 80079ae:	f008 0801 	and.w	r8, r8, #1
 80079b2:	ea47 0708 	orr.w	r7, r7, r8
 80079b6:	2f01      	cmp	r7, #1
 80079b8:	d03e      	beq.n	8007a38 <__gnu_unwind_pr_common+0x10c>
 80079ba:	d335      	bcc.n	8007a28 <__gnu_unwind_pr_common+0xfc>
 80079bc:	2f02      	cmp	r7, #2
 80079be:	d11c      	bne.n	80079fa <__gnu_unwind_pr_common+0xce>
 80079c0:	6823      	ldr	r3, [r4, #0]
 80079c2:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80079c6:	9202      	str	r2, [sp, #8]
 80079c8:	f1bb 0f00 	cmp.w	fp, #0
 80079cc:	d176      	bne.n	8007abc <__gnu_unwind_pr_common+0x190>
 80079ce:	b128      	cbz	r0, 80079dc <__gnu_unwind_pr_common+0xb0>
 80079d0:	9903      	ldr	r1, [sp, #12]
 80079d2:	2900      	cmp	r1, #0
 80079d4:	d07e      	beq.n	8007ad4 <__gnu_unwind_pr_common+0x1a8>
 80079d6:	2a00      	cmp	r2, #0
 80079d8:	f000 80a6 	beq.w	8007b28 <__gnu_unwind_pr_common+0x1fc>
 80079dc:	2b00      	cmp	r3, #0
 80079de:	db77      	blt.n	8007ad0 <__gnu_unwind_pr_common+0x1a4>
 80079e0:	9b02      	ldr	r3, [sp, #8]
 80079e2:	3301      	adds	r3, #1
 80079e4:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80079e8:	e7c2      	b.n	8007970 <__gnu_unwind_pr_common+0x44>
 80079ea:	2300      	movs	r3, #0
 80079ec:	9301      	str	r3, [sp, #4]
 80079ee:	2e02      	cmp	r6, #2
 80079f0:	dd3e      	ble.n	8007a70 <__gnu_unwind_pr_common+0x144>
 80079f2:	f7ff fe13 	bl	800761c <__gnu_unwind_24bit.isra.1>
 80079f6:	2800      	cmp	r0, #0
 80079f8:	d040      	beq.n	8007a7c <__gnu_unwind_pr_common+0x150>
 80079fa:	2009      	movs	r0, #9
 80079fc:	b00b      	add	sp, #44	; 0x2c
 80079fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a02:	2000      	movs	r0, #0
 8007a04:	e7d0      	b.n	80079a8 <__gnu_unwind_pr_common+0x7c>
 8007a06:	6867      	ldr	r7, [r4, #4]
 8007a08:	3408      	adds	r4, #8
 8007a0a:	e7bc      	b.n	8007986 <__gnu_unwind_pr_common+0x5a>
 8007a0c:	2b02      	cmp	r3, #2
 8007a0e:	dca3      	bgt.n	8007958 <__gnu_unwind_pr_common+0x2c>
 8007a10:	2102      	movs	r1, #2
 8007a12:	0c13      	lsrs	r3, r2, #16
 8007a14:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
 8007a18:	0412      	lsls	r2, r2, #16
 8007a1a:	b2db      	uxtb	r3, r3
 8007a1c:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007a20:	9207      	str	r2, [sp, #28]
 8007a22:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8007a26:	e797      	b.n	8007958 <__gnu_unwind_pr_common+0x2c>
 8007a28:	f1bb 0f00 	cmp.w	fp, #0
 8007a2c:	d002      	beq.n	8007a34 <__gnu_unwind_pr_common+0x108>
 8007a2e:	2800      	cmp	r0, #0
 8007a30:	f040 80bd 	bne.w	8007bae <__gnu_unwind_pr_common+0x282>
 8007a34:	3404      	adds	r4, #4
 8007a36:	e79b      	b.n	8007970 <__gnu_unwind_pr_common+0x44>
 8007a38:	f1bb 0f00 	cmp.w	fp, #0
 8007a3c:	d125      	bne.n	8007a8a <__gnu_unwind_pr_common+0x15e>
 8007a3e:	b1a8      	cbz	r0, 8007a6c <__gnu_unwind_pr_common+0x140>
 8007a40:	e894 000c 	ldmia.w	r4, {r2, r3}
 8007a44:	1c99      	adds	r1, r3, #2
 8007a46:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8007a4a:	d0d6      	beq.n	80079fa <__gnu_unwind_pr_common+0xce>
 8007a4c:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8007a50:	3301      	adds	r3, #1
 8007a52:	9106      	str	r1, [sp, #24]
 8007a54:	f000 80a3 	beq.w	8007b9e <__gnu_unwind_pr_common+0x272>
 8007a58:	1d20      	adds	r0, r4, #4
 8007a5a:	f7ff fdd9 	bl	8007610 <_Unwind_decode_typeinfo_ptr.isra.0>
 8007a5e:	ab06      	add	r3, sp, #24
 8007a60:	4601      	mov	r1, r0
 8007a62:	4628      	mov	r0, r5
 8007a64:	f004 f996 	bl	800bd94 <__cxa_type_match>
 8007a68:	2800      	cmp	r0, #0
 8007a6a:	d177      	bne.n	8007b5c <__gnu_unwind_pr_common+0x230>
 8007a6c:	3408      	adds	r4, #8
 8007a6e:	e77f      	b.n	8007970 <__gnu_unwind_pr_common+0x44>
 8007a70:	a907      	add	r1, sp, #28
 8007a72:	4648      	mov	r0, r9
 8007a74:	f000 faf0 	bl	8008058 <__gnu_unwind_execute>
 8007a78:	2800      	cmp	r0, #0
 8007a7a:	d1be      	bne.n	80079fa <__gnu_unwind_pr_common+0xce>
 8007a7c:	9b01      	ldr	r3, [sp, #4]
 8007a7e:	2b00      	cmp	r3, #0
 8007a80:	d15c      	bne.n	8007b3c <__gnu_unwind_pr_common+0x210>
 8007a82:	2008      	movs	r0, #8
 8007a84:	b00b      	add	sp, #44	; 0x2c
 8007a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a8a:	210d      	movs	r1, #13
 8007a8c:	4648      	mov	r0, r9
 8007a8e:	6a2f      	ldr	r7, [r5, #32]
 8007a90:	f7ff fede 	bl	8007850 <_Unwind_GetGR>
 8007a94:	4287      	cmp	r7, r0
 8007a96:	d1e9      	bne.n	8007a6c <__gnu_unwind_pr_common+0x140>
 8007a98:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8007a9a:	429c      	cmp	r4, r3
 8007a9c:	d1e6      	bne.n	8007a6c <__gnu_unwind_pr_common+0x140>
 8007a9e:	4620      	mov	r0, r4
 8007aa0:	f7ff fcea 	bl	8007478 <selfrel_offset31>
 8007aa4:	210f      	movs	r1, #15
 8007aa6:	4602      	mov	r2, r0
 8007aa8:	4648      	mov	r0, r9
 8007aaa:	f7ff fef7 	bl	800789c <_Unwind_SetGR>
 8007aae:	4648      	mov	r0, r9
 8007ab0:	462a      	mov	r2, r5
 8007ab2:	2100      	movs	r1, #0
 8007ab4:	f7ff fef2 	bl	800789c <_Unwind_SetGR>
 8007ab8:	2007      	movs	r0, #7
 8007aba:	e79f      	b.n	80079fc <__gnu_unwind_pr_common+0xd0>
 8007abc:	210d      	movs	r1, #13
 8007abe:	4648      	mov	r0, r9
 8007ac0:	6a2f      	ldr	r7, [r5, #32]
 8007ac2:	f7ff fec5 	bl	8007850 <_Unwind_GetGR>
 8007ac6:	4287      	cmp	r7, r0
 8007ac8:	d058      	beq.n	8007b7c <__gnu_unwind_pr_common+0x250>
 8007aca:	6823      	ldr	r3, [r4, #0]
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	da87      	bge.n	80079e0 <__gnu_unwind_pr_common+0xb4>
 8007ad0:	3404      	adds	r4, #4
 8007ad2:	e785      	b.n	80079e0 <__gnu_unwind_pr_common+0xb4>
 8007ad4:	9b02      	ldr	r3, [sp, #8]
 8007ad6:	b33b      	cbz	r3, 8007b28 <__gnu_unwind_pr_common+0x1fc>
 8007ad8:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8007adc:	1d27      	adds	r7, r4, #4
 8007ade:	f8cd b010 	str.w	fp, [sp, #16]
 8007ae2:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8007ae6:	46a3      	mov	fp, r4
 8007ae8:	f8dd a008 	ldr.w	sl, [sp, #8]
 8007aec:	461c      	mov	r4, r3
 8007aee:	9605      	str	r6, [sp, #20]
 8007af0:	e002      	b.n	8007af8 <__gnu_unwind_pr_common+0x1cc>
 8007af2:	45b2      	cmp	sl, r6
 8007af4:	46b0      	mov	r8, r6
 8007af6:	d016      	beq.n	8007b26 <__gnu_unwind_pr_common+0x1fa>
 8007af8:	4638      	mov	r0, r7
 8007afa:	9406      	str	r4, [sp, #24]
 8007afc:	f7ff fd88 	bl	8007610 <_Unwind_decode_typeinfo_ptr.isra.0>
 8007b00:	ab06      	add	r3, sp, #24
 8007b02:	4601      	mov	r1, r0
 8007b04:	2200      	movs	r2, #0
 8007b06:	4628      	mov	r0, r5
 8007b08:	f004 f944 	bl	800bd94 <__cxa_type_match>
 8007b0c:	f108 0601 	add.w	r6, r8, #1
 8007b10:	3704      	adds	r7, #4
 8007b12:	2800      	cmp	r0, #0
 8007b14:	d0ed      	beq.n	8007af2 <__gnu_unwind_pr_common+0x1c6>
 8007b16:	9b02      	ldr	r3, [sp, #8]
 8007b18:	465c      	mov	r4, fp
 8007b1a:	4543      	cmp	r3, r8
 8007b1c:	f8dd b010 	ldr.w	fp, [sp, #16]
 8007b20:	9e05      	ldr	r6, [sp, #20]
 8007b22:	d1d2      	bne.n	8007aca <__gnu_unwind_pr_common+0x19e>
 8007b24:	e000      	b.n	8007b28 <__gnu_unwind_pr_common+0x1fc>
 8007b26:	465c      	mov	r4, fp
 8007b28:	4648      	mov	r0, r9
 8007b2a:	210d      	movs	r1, #13
 8007b2c:	f7ff fe90 	bl	8007850 <_Unwind_GetGR>
 8007b30:	9b06      	ldr	r3, [sp, #24]
 8007b32:	6228      	str	r0, [r5, #32]
 8007b34:	62ac      	str	r4, [r5, #40]	; 0x28
 8007b36:	626b      	str	r3, [r5, #36]	; 0x24
 8007b38:	2006      	movs	r0, #6
 8007b3a:	e75f      	b.n	80079fc <__gnu_unwind_pr_common+0xd0>
 8007b3c:	210f      	movs	r1, #15
 8007b3e:	4648      	mov	r0, r9
 8007b40:	f7ff fe86 	bl	8007850 <_Unwind_GetGR>
 8007b44:	210e      	movs	r1, #14
 8007b46:	4602      	mov	r2, r0
 8007b48:	4648      	mov	r0, r9
 8007b4a:	f7ff fea7 	bl	800789c <_Unwind_SetGR>
 8007b4e:	4648      	mov	r0, r9
 8007b50:	4a29      	ldr	r2, [pc, #164]	; (8007bf8 <__gnu_unwind_pr_common+0x2cc>)
 8007b52:	210f      	movs	r1, #15
 8007b54:	f7ff fea2 	bl	800789c <_Unwind_SetGR>
 8007b58:	2007      	movs	r0, #7
 8007b5a:	e74f      	b.n	80079fc <__gnu_unwind_pr_common+0xd0>
 8007b5c:	4607      	mov	r7, r0
 8007b5e:	210d      	movs	r1, #13
 8007b60:	4648      	mov	r0, r9
 8007b62:	f7ff fe75 	bl	8007850 <_Unwind_GetGR>
 8007b66:	2f02      	cmp	r7, #2
 8007b68:	6228      	str	r0, [r5, #32]
 8007b6a:	d11d      	bne.n	8007ba8 <__gnu_unwind_pr_common+0x27c>
 8007b6c:	462b      	mov	r3, r5
 8007b6e:	9a06      	ldr	r2, [sp, #24]
 8007b70:	f843 2f2c 	str.w	r2, [r3, #44]!
 8007b74:	626b      	str	r3, [r5, #36]	; 0x24
 8007b76:	62ac      	str	r4, [r5, #40]	; 0x28
 8007b78:	2006      	movs	r0, #6
 8007b7a:	e73f      	b.n	80079fc <__gnu_unwind_pr_common+0xd0>
 8007b7c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8007b7e:	429c      	cmp	r4, r3
 8007b80:	d1a3      	bne.n	8007aca <__gnu_unwind_pr_common+0x19e>
 8007b82:	2204      	movs	r2, #4
 8007b84:	2700      	movs	r7, #0
 8007b86:	9902      	ldr	r1, [sp, #8]
 8007b88:	18a3      	adds	r3, r4, r2
 8007b8a:	62a9      	str	r1, [r5, #40]	; 0x28
 8007b8c:	62ef      	str	r7, [r5, #44]	; 0x2c
 8007b8e:	632a      	str	r2, [r5, #48]	; 0x30
 8007b90:	636b      	str	r3, [r5, #52]	; 0x34
 8007b92:	6823      	ldr	r3, [r4, #0]
 8007b94:	42bb      	cmp	r3, r7
 8007b96:	db1d      	blt.n	8007bd4 <__gnu_unwind_pr_common+0x2a8>
 8007b98:	2301      	movs	r3, #1
 8007b9a:	9301      	str	r3, [sp, #4]
 8007b9c:	e720      	b.n	80079e0 <__gnu_unwind_pr_common+0xb4>
 8007b9e:	4648      	mov	r0, r9
 8007ba0:	210d      	movs	r1, #13
 8007ba2:	f7ff fe55 	bl	8007850 <_Unwind_GetGR>
 8007ba6:	6228      	str	r0, [r5, #32]
 8007ba8:	9b06      	ldr	r3, [sp, #24]
 8007baa:	626b      	str	r3, [r5, #36]	; 0x24
 8007bac:	e7e3      	b.n	8007b76 <__gnu_unwind_pr_common+0x24a>
 8007bae:	4620      	mov	r0, r4
 8007bb0:	f7ff fc62 	bl	8007478 <selfrel_offset31>
 8007bb4:	3404      	adds	r4, #4
 8007bb6:	4606      	mov	r6, r0
 8007bb8:	63ac      	str	r4, [r5, #56]	; 0x38
 8007bba:	4628      	mov	r0, r5
 8007bbc:	f004 f946 	bl	800be4c <__cxa_begin_cleanup>
 8007bc0:	2800      	cmp	r0, #0
 8007bc2:	f43f af1a 	beq.w	80079fa <__gnu_unwind_pr_common+0xce>
 8007bc6:	4648      	mov	r0, r9
 8007bc8:	4632      	mov	r2, r6
 8007bca:	210f      	movs	r1, #15
 8007bcc:	f7ff fe66 	bl	800789c <_Unwind_SetGR>
 8007bd0:	2007      	movs	r0, #7
 8007bd2:	e713      	b.n	80079fc <__gnu_unwind_pr_common+0xd0>
 8007bd4:	4608      	mov	r0, r1
 8007bd6:	3001      	adds	r0, #1
 8007bd8:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8007bdc:	f7ff fc4c 	bl	8007478 <selfrel_offset31>
 8007be0:	210f      	movs	r1, #15
 8007be2:	4602      	mov	r2, r0
 8007be4:	4648      	mov	r0, r9
 8007be6:	f7ff fe59 	bl	800789c <_Unwind_SetGR>
 8007bea:	4648      	mov	r0, r9
 8007bec:	462a      	mov	r2, r5
 8007bee:	4639      	mov	r1, r7
 8007bf0:	f7ff fe54 	bl	800789c <_Unwind_SetGR>
 8007bf4:	2007      	movs	r0, #7
 8007bf6:	e701      	b.n	80079fc <__gnu_unwind_pr_common+0xd0>
 8007bf8:	0800c9ed 	.word	0x0800c9ed

08007bfc <__aeabi_unwind_cpp_pr0>:
 8007bfc:	2300      	movs	r3, #0
 8007bfe:	e695      	b.n	800792c <__gnu_unwind_pr_common>

08007c00 <__aeabi_unwind_cpp_pr1>:
 8007c00:	2301      	movs	r3, #1
 8007c02:	e693      	b.n	800792c <__gnu_unwind_pr_common>

08007c04 <__aeabi_unwind_cpp_pr2>:
 8007c04:	2302      	movs	r3, #2
 8007c06:	e691      	b.n	800792c <__gnu_unwind_pr_common>

08007c08 <_Unwind_VRS_Pop>:
 8007c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c0a:	4604      	mov	r4, r0
 8007c0c:	b0c5      	sub	sp, #276	; 0x114
 8007c0e:	2904      	cmp	r1, #4
 8007c10:	d80d      	bhi.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007c12:	e8df f001 	tbb	[pc, r1]
 8007c16:	0355      	.short	0x0355
 8007c18:	310c      	.short	0x310c
 8007c1a:	0f          	.byte	0x0f
 8007c1b:	00          	.byte	0x00
 8007c1c:	2b01      	cmp	r3, #1
 8007c1e:	ea4f 4612 	mov.w	r6, r2, lsr #16
 8007c22:	b295      	uxth	r5, r2
 8007c24:	d164      	bne.n	8007cf0 <_Unwind_VRS_Pop+0xe8>
 8007c26:	1972      	adds	r2, r6, r5
 8007c28:	2a10      	cmp	r2, #16
 8007c2a:	f240 809d 	bls.w	8007d68 <_Unwind_VRS_Pop+0x160>
 8007c2e:	2002      	movs	r0, #2
 8007c30:	b045      	add	sp, #276	; 0x114
 8007c32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007c34:	2b00      	cmp	r3, #0
 8007c36:	d1fa      	bne.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007c38:	2a10      	cmp	r2, #16
 8007c3a:	d8f8      	bhi.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007c3c:	6823      	ldr	r3, [r4, #0]
 8007c3e:	06d8      	lsls	r0, r3, #27
 8007c40:	f100 80c8 	bmi.w	8007dd4 <_Unwind_VRS_Pop+0x1cc>
 8007c44:	ae22      	add	r6, sp, #136	; 0x88
 8007c46:	4630      	mov	r0, r6
 8007c48:	9201      	str	r2, [sp, #4]
 8007c4a:	2501      	movs	r5, #1
 8007c4c:	f000 f974 	bl	8007f38 <__gnu_Unwind_Save_WMMXC>
 8007c50:	2300      	movs	r3, #0
 8007c52:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8007c54:	9a01      	ldr	r2, [sp, #4]
 8007c56:	fa05 f103 	lsl.w	r1, r5, r3
 8007c5a:	4211      	tst	r1, r2
 8007c5c:	d003      	beq.n	8007c66 <_Unwind_VRS_Pop+0x5e>
 8007c5e:	6801      	ldr	r1, [r0, #0]
 8007c60:	3004      	adds	r0, #4
 8007c62:	f846 1023 	str.w	r1, [r6, r3, lsl #2]
 8007c66:	3301      	adds	r3, #1
 8007c68:	2b04      	cmp	r3, #4
 8007c6a:	d1f4      	bne.n	8007c56 <_Unwind_VRS_Pop+0x4e>
 8007c6c:	63a0      	str	r0, [r4, #56]	; 0x38
 8007c6e:	4630      	mov	r0, r6
 8007c70:	f000 f958 	bl	8007f24 <__gnu_Unwind_Restore_WMMXC>
 8007c74:	2000      	movs	r0, #0
 8007c76:	e7db      	b.n	8007c30 <_Unwind_VRS_Pop+0x28>
 8007c78:	2b03      	cmp	r3, #3
 8007c7a:	d1d8      	bne.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007c7c:	0c15      	lsrs	r5, r2, #16
 8007c7e:	b297      	uxth	r7, r2
 8007c80:	19eb      	adds	r3, r5, r7
 8007c82:	2b10      	cmp	r3, #16
 8007c84:	d8d3      	bhi.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007c86:	6823      	ldr	r3, [r4, #0]
 8007c88:	071e      	lsls	r6, r3, #28
 8007c8a:	f100 80b7 	bmi.w	8007dfc <_Unwind_VRS_Pop+0x1f4>
 8007c8e:	ae22      	add	r6, sp, #136	; 0x88
 8007c90:	4630      	mov	r0, r6
 8007c92:	f000 f925 	bl	8007ee0 <__gnu_Unwind_Save_WMMXD>
 8007c96:	00ed      	lsls	r5, r5, #3
 8007c98:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8007c9a:	b15f      	cbz	r7, 8007cb4 <_Unwind_VRS_Pop+0xac>
 8007c9c:	3d04      	subs	r5, #4
 8007c9e:	4603      	mov	r3, r0
 8007ca0:	1971      	adds	r1, r6, r5
 8007ca2:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
 8007ca6:	f853 2b04 	ldr.w	r2, [r3], #4
 8007caa:	4283      	cmp	r3, r0
 8007cac:	f841 2f04 	str.w	r2, [r1, #4]!
 8007cb0:	d1f9      	bne.n	8007ca6 <_Unwind_VRS_Pop+0x9e>
 8007cb2:	4618      	mov	r0, r3
 8007cb4:	63a0      	str	r0, [r4, #56]	; 0x38
 8007cb6:	4630      	mov	r0, r6
 8007cb8:	f000 f8f0 	bl	8007e9c <__gnu_Unwind_Restore_WMMXD>
 8007cbc:	2000      	movs	r0, #0
 8007cbe:	e7b7      	b.n	8007c30 <_Unwind_VRS_Pop+0x28>
 8007cc0:	2b00      	cmp	r3, #0
 8007cc2:	d1b4      	bne.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007cc4:	2701      	movs	r7, #1
 8007cc6:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8007cc8:	b296      	uxth	r6, r2
 8007cca:	1d20      	adds	r0, r4, #4
 8007ccc:	fa07 f103 	lsl.w	r1, r7, r3
 8007cd0:	4231      	tst	r1, r6
 8007cd2:	f103 0301 	add.w	r3, r3, #1
 8007cd6:	d002      	beq.n	8007cde <_Unwind_VRS_Pop+0xd6>
 8007cd8:	6829      	ldr	r1, [r5, #0]
 8007cda:	3504      	adds	r5, #4
 8007cdc:	6001      	str	r1, [r0, #0]
 8007cde:	2b10      	cmp	r3, #16
 8007ce0:	f100 0004 	add.w	r0, r0, #4
 8007ce4:	d1f2      	bne.n	8007ccc <_Unwind_VRS_Pop+0xc4>
 8007ce6:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 8007cea:	d13b      	bne.n	8007d64 <_Unwind_VRS_Pop+0x15c>
 8007cec:	63a5      	str	r5, [r4, #56]	; 0x38
 8007cee:	e79f      	b.n	8007c30 <_Unwind_VRS_Pop+0x28>
 8007cf0:	2b05      	cmp	r3, #5
 8007cf2:	d19c      	bne.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007cf4:	1977      	adds	r7, r6, r5
 8007cf6:	2f20      	cmp	r7, #32
 8007cf8:	d899      	bhi.n	8007c2e <_Unwind_VRS_Pop+0x26>
 8007cfa:	2e0f      	cmp	r6, #15
 8007cfc:	d966      	bls.n	8007dcc <_Unwind_VRS_Pop+0x1c4>
 8007cfe:	462f      	mov	r7, r5
 8007d00:	2d00      	cmp	r5, #0
 8007d02:	d13a      	bne.n	8007d7a <_Unwind_VRS_Pop+0x172>
 8007d04:	462a      	mov	r2, r5
 8007d06:	2700      	movs	r7, #0
 8007d08:	2a00      	cmp	r2, #0
 8007d0a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8007d0c:	dd72      	ble.n	8007df4 <_Unwind_VRS_Pop+0x1ec>
 8007d0e:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8007d12:	4601      	mov	r1, r0
 8007d14:	a844      	add	r0, sp, #272	; 0x110
 8007d16:	eb00 00c6 	add.w	r0, r0, r6, lsl #3
 8007d1a:	388c      	subs	r0, #140	; 0x8c
 8007d1c:	f851 5b04 	ldr.w	r5, [r1], #4
 8007d20:	4291      	cmp	r1, r2
 8007d22:	f840 5f04 	str.w	r5, [r0, #4]!
 8007d26:	d1f9      	bne.n	8007d1c <_Unwind_VRS_Pop+0x114>
 8007d28:	4608      	mov	r0, r1
 8007d2a:	b197      	cbz	r7, 8007d52 <_Unwind_VRS_Pop+0x14a>
 8007d2c:	2e10      	cmp	r6, #16
 8007d2e:	4632      	mov	r2, r6
 8007d30:	bf38      	it	cc
 8007d32:	2210      	movcc	r2, #16
 8007d34:	a944      	add	r1, sp, #272	; 0x110
 8007d36:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8007d3a:	f5a2 72c4 	sub.w	r2, r2, #392	; 0x188
 8007d3e:	0079      	lsls	r1, r7, #1
 8007d40:	3a04      	subs	r2, #4
 8007d42:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8007d46:	f850 5b04 	ldr.w	r5, [r0], #4
 8007d4a:	4288      	cmp	r0, r1
 8007d4c:	f842 5f04 	str.w	r5, [r2, #4]!
 8007d50:	d1f9      	bne.n	8007d46 <_Unwind_VRS_Pop+0x13e>
 8007d52:	2b01      	cmp	r3, #1
 8007d54:	d048      	beq.n	8007de8 <_Unwind_VRS_Pop+0x1e0>
 8007d56:	2e0f      	cmp	r6, #15
 8007d58:	63a1      	str	r1, [r4, #56]	; 0x38
 8007d5a:	d933      	bls.n	8007dc4 <_Unwind_VRS_Pop+0x1bc>
 8007d5c:	b117      	cbz	r7, 8007d64 <_Unwind_VRS_Pop+0x15c>
 8007d5e:	a802      	add	r0, sp, #8
 8007d60:	f000 f894 	bl	8007e8c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8007d64:	2000      	movs	r0, #0
 8007d66:	e763      	b.n	8007c30 <_Unwind_VRS_Pop+0x28>
 8007d68:	2e0f      	cmp	r6, #15
 8007d6a:	f63f af60 	bhi.w	8007c2e <_Unwind_VRS_Pop+0x26>
 8007d6e:	2700      	movs	r7, #0
 8007d70:	6822      	ldr	r2, [r4, #0]
 8007d72:	07d1      	lsls	r1, r2, #31
 8007d74:	d417      	bmi.n	8007da6 <_Unwind_VRS_Pop+0x19e>
 8007d76:	2f00      	cmp	r7, #0
 8007d78:	d060      	beq.n	8007e3c <_Unwind_VRS_Pop+0x234>
 8007d7a:	6822      	ldr	r2, [r4, #0]
 8007d7c:	0751      	lsls	r1, r2, #29
 8007d7e:	d445      	bmi.n	8007e0c <_Unwind_VRS_Pop+0x204>
 8007d80:	2b01      	cmp	r3, #1
 8007d82:	d04d      	beq.n	8007e20 <_Unwind_VRS_Pop+0x218>
 8007d84:	2e0f      	cmp	r6, #15
 8007d86:	d806      	bhi.n	8007d96 <_Unwind_VRS_Pop+0x18e>
 8007d88:	a822      	add	r0, sp, #136	; 0x88
 8007d8a:	9301      	str	r3, [sp, #4]
 8007d8c:	f000 f87a 	bl	8007e84 <__gnu_Unwind_Save_VFP_D>
 8007d90:	9b01      	ldr	r3, [sp, #4]
 8007d92:	2f00      	cmp	r7, #0
 8007d94:	d0b6      	beq.n	8007d04 <_Unwind_VRS_Pop+0xfc>
 8007d96:	a802      	add	r0, sp, #8
 8007d98:	9301      	str	r3, [sp, #4]
 8007d9a:	f000 f87b 	bl	8007e94 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8007d9e:	9b01      	ldr	r3, [sp, #4]
 8007da0:	f1c6 0210 	rsb	r2, r6, #16
 8007da4:	e7b0      	b.n	8007d08 <_Unwind_VRS_Pop+0x100>
 8007da6:	f022 0101 	bic.w	r1, r2, #1
 8007daa:	2b05      	cmp	r3, #5
 8007dac:	6021      	str	r1, [r4, #0]
 8007dae:	9301      	str	r3, [sp, #4]
 8007db0:	4620      	mov	r0, r4
 8007db2:	d03b      	beq.n	8007e2c <_Unwind_VRS_Pop+0x224>
 8007db4:	f022 0203 	bic.w	r2, r2, #3
 8007db8:	f840 2b48 	str.w	r2, [r0], #72
 8007dbc:	f000 f85a 	bl	8007e74 <__gnu_Unwind_Save_VFP>
 8007dc0:	9b01      	ldr	r3, [sp, #4]
 8007dc2:	e7d8      	b.n	8007d76 <_Unwind_VRS_Pop+0x16e>
 8007dc4:	a822      	add	r0, sp, #136	; 0x88
 8007dc6:	f000 f859 	bl	8007e7c <__gnu_Unwind_Restore_VFP_D>
 8007dca:	e7c7      	b.n	8007d5c <_Unwind_VRS_Pop+0x154>
 8007dcc:	2f10      	cmp	r7, #16
 8007dce:	d9ce      	bls.n	8007d6e <_Unwind_VRS_Pop+0x166>
 8007dd0:	3f10      	subs	r7, #16
 8007dd2:	e7cd      	b.n	8007d70 <_Unwind_VRS_Pop+0x168>
 8007dd4:	f023 0310 	bic.w	r3, r3, #16
 8007dd8:	6023      	str	r3, [r4, #0]
 8007dda:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8007dde:	9201      	str	r2, [sp, #4]
 8007de0:	f000 f8aa 	bl	8007f38 <__gnu_Unwind_Save_WMMXC>
 8007de4:	9a01      	ldr	r2, [sp, #4]
 8007de6:	e72d      	b.n	8007c44 <_Unwind_VRS_Pop+0x3c>
 8007de8:	3104      	adds	r1, #4
 8007dea:	63a1      	str	r1, [r4, #56]	; 0x38
 8007dec:	a822      	add	r0, sp, #136	; 0x88
 8007dee:	f000 f83d 	bl	8007e6c <__gnu_Unwind_Restore_VFP>
 8007df2:	e7b7      	b.n	8007d64 <_Unwind_VRS_Pop+0x15c>
 8007df4:	2f00      	cmp	r7, #0
 8007df6:	d199      	bne.n	8007d2c <_Unwind_VRS_Pop+0x124>
 8007df8:	4601      	mov	r1, r0
 8007dfa:	e7aa      	b.n	8007d52 <_Unwind_VRS_Pop+0x14a>
 8007dfc:	f023 0308 	bic.w	r3, r3, #8
 8007e00:	6023      	str	r3, [r4, #0]
 8007e02:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8007e06:	f000 f86b 	bl	8007ee0 <__gnu_Unwind_Save_WMMXD>
 8007e0a:	e740      	b.n	8007c8e <_Unwind_VRS_Pop+0x86>
 8007e0c:	4620      	mov	r0, r4
 8007e0e:	f022 0204 	bic.w	r2, r2, #4
 8007e12:	f840 2bd0 	str.w	r2, [r0], #208
 8007e16:	9301      	str	r3, [sp, #4]
 8007e18:	f000 f83c 	bl	8007e94 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8007e1c:	9b01      	ldr	r3, [sp, #4]
 8007e1e:	e7af      	b.n	8007d80 <_Unwind_VRS_Pop+0x178>
 8007e20:	a822      	add	r0, sp, #136	; 0x88
 8007e22:	9301      	str	r3, [sp, #4]
 8007e24:	f000 f826 	bl	8007e74 <__gnu_Unwind_Save_VFP>
 8007e28:	9b01      	ldr	r3, [sp, #4]
 8007e2a:	e7b9      	b.n	8007da0 <_Unwind_VRS_Pop+0x198>
 8007e2c:	f041 0102 	orr.w	r1, r1, #2
 8007e30:	f840 1b48 	str.w	r1, [r0], #72
 8007e34:	f000 f826 	bl	8007e84 <__gnu_Unwind_Save_VFP_D>
 8007e38:	9b01      	ldr	r3, [sp, #4]
 8007e3a:	e79c      	b.n	8007d76 <_Unwind_VRS_Pop+0x16e>
 8007e3c:	2b01      	cmp	r3, #1
 8007e3e:	d003      	beq.n	8007e48 <_Unwind_VRS_Pop+0x240>
 8007e40:	2e0f      	cmp	r6, #15
 8007e42:	f63f af5f 	bhi.w	8007d04 <_Unwind_VRS_Pop+0xfc>
 8007e46:	e79f      	b.n	8007d88 <_Unwind_VRS_Pop+0x180>
 8007e48:	a822      	add	r0, sp, #136	; 0x88
 8007e4a:	9301      	str	r3, [sp, #4]
 8007e4c:	f000 f812 	bl	8007e74 <__gnu_Unwind_Save_VFP>
 8007e50:	9b01      	ldr	r3, [sp, #4]
 8007e52:	e757      	b.n	8007d04 <_Unwind_VRS_Pop+0xfc>

08007e54 <__restore_core_regs>:
 8007e54:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8007e58:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8007e5c:	469c      	mov	ip, r3
 8007e5e:	46a6      	mov	lr, r4
 8007e60:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8007e64:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8007e68:	46e5      	mov	sp, ip
 8007e6a:	bd00      	pop	{pc}

08007e6c <__gnu_Unwind_Restore_VFP>:
 8007e6c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8007e70:	4770      	bx	lr
 8007e72:	bf00      	nop

08007e74 <__gnu_Unwind_Save_VFP>:
 8007e74:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8007e78:	4770      	bx	lr
 8007e7a:	bf00      	nop

08007e7c <__gnu_Unwind_Restore_VFP_D>:
 8007e7c:	ec90 0b20 	vldmia	r0, {d0-d15}
 8007e80:	4770      	bx	lr
 8007e82:	bf00      	nop

08007e84 <__gnu_Unwind_Save_VFP_D>:
 8007e84:	ec80 0b20 	vstmia	r0, {d0-d15}
 8007e88:	4770      	bx	lr
 8007e8a:	bf00      	nop

08007e8c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8007e8c:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8007e90:	4770      	bx	lr
 8007e92:	bf00      	nop

08007e94 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8007e94:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8007e98:	4770      	bx	lr
 8007e9a:	bf00      	nop

08007e9c <__gnu_Unwind_Restore_WMMXD>:
 8007e9c:	ecf0 0102 	ldfe	f0, [r0], #8
 8007ea0:	ecf0 1102 	ldfe	f1, [r0], #8
 8007ea4:	ecf0 2102 	ldfe	f2, [r0], #8
 8007ea8:	ecf0 3102 	ldfe	f3, [r0], #8
 8007eac:	ecf0 4102 	ldfe	f4, [r0], #8
 8007eb0:	ecf0 5102 	ldfe	f5, [r0], #8
 8007eb4:	ecf0 6102 	ldfe	f6, [r0], #8
 8007eb8:	ecf0 7102 	ldfe	f7, [r0], #8
 8007ebc:	ecf0 8102 	ldfp	f0, [r0], #8
 8007ec0:	ecf0 9102 	ldfp	f1, [r0], #8
 8007ec4:	ecf0 a102 	ldfp	f2, [r0], #8
 8007ec8:	ecf0 b102 	ldfp	f3, [r0], #8
 8007ecc:	ecf0 c102 	ldfp	f4, [r0], #8
 8007ed0:	ecf0 d102 	ldfp	f5, [r0], #8
 8007ed4:	ecf0 e102 	ldfp	f6, [r0], #8
 8007ed8:	ecf0 f102 	ldfp	f7, [r0], #8
 8007edc:	4770      	bx	lr
 8007ede:	bf00      	nop

08007ee0 <__gnu_Unwind_Save_WMMXD>:
 8007ee0:	ece0 0102 	stfe	f0, [r0], #8
 8007ee4:	ece0 1102 	stfe	f1, [r0], #8
 8007ee8:	ece0 2102 	stfe	f2, [r0], #8
 8007eec:	ece0 3102 	stfe	f3, [r0], #8
 8007ef0:	ece0 4102 	stfe	f4, [r0], #8
 8007ef4:	ece0 5102 	stfe	f5, [r0], #8
 8007ef8:	ece0 6102 	stfe	f6, [r0], #8
 8007efc:	ece0 7102 	stfe	f7, [r0], #8
 8007f00:	ece0 8102 	stfp	f0, [r0], #8
 8007f04:	ece0 9102 	stfp	f1, [r0], #8
 8007f08:	ece0 a102 	stfp	f2, [r0], #8
 8007f0c:	ece0 b102 	stfp	f3, [r0], #8
 8007f10:	ece0 c102 	stfp	f4, [r0], #8
 8007f14:	ece0 d102 	stfp	f5, [r0], #8
 8007f18:	ece0 e102 	stfp	f6, [r0], #8
 8007f1c:	ece0 f102 	stfp	f7, [r0], #8
 8007f20:	4770      	bx	lr
 8007f22:	bf00      	nop

08007f24 <__gnu_Unwind_Restore_WMMXC>:
 8007f24:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8007f28:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8007f2c:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8007f30:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8007f34:	4770      	bx	lr
 8007f36:	bf00      	nop

08007f38 <__gnu_Unwind_Save_WMMXC>:
 8007f38:	fca0 8101 	stc2	1, cr8, [r0], #4
 8007f3c:	fca0 9101 	stc2	1, cr9, [r0], #4
 8007f40:	fca0 a101 	stc2	1, cr10, [r0], #4
 8007f44:	fca0 b101 	stc2	1, cr11, [r0], #4
 8007f48:	4770      	bx	lr
 8007f4a:	bf00      	nop

08007f4c <_Unwind_RaiseException>:
 8007f4c:	46ec      	mov	ip, sp
 8007f4e:	b500      	push	{lr}
 8007f50:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007f54:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8007f58:	f04f 0300 	mov.w	r3, #0
 8007f5c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007f60:	a901      	add	r1, sp, #4
 8007f62:	f7ff fbed 	bl	8007740 <__gnu_Unwind_RaiseException>
 8007f66:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8007f6a:	b012      	add	sp, #72	; 0x48
 8007f6c:	4770      	bx	lr
 8007f6e:	bf00      	nop

08007f70 <_Unwind_Resume>:
 8007f70:	46ec      	mov	ip, sp
 8007f72:	b500      	push	{lr}
 8007f74:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007f78:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8007f7c:	f04f 0300 	mov.w	r3, #0
 8007f80:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007f84:	a901      	add	r1, sp, #4
 8007f86:	f7ff fc15 	bl	80077b4 <__gnu_Unwind_Resume>
 8007f8a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8007f8e:	b012      	add	sp, #72	; 0x48
 8007f90:	4770      	bx	lr
 8007f92:	bf00      	nop

08007f94 <_Unwind_Resume_or_Rethrow>:
 8007f94:	46ec      	mov	ip, sp
 8007f96:	b500      	push	{lr}
 8007f98:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007f9c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8007fa0:	f04f 0300 	mov.w	r3, #0
 8007fa4:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007fa8:	a901      	add	r1, sp, #4
 8007faa:	f7ff fc25 	bl	80077f8 <__gnu_Unwind_Resume_or_Rethrow>
 8007fae:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8007fb2:	b012      	add	sp, #72	; 0x48
 8007fb4:	4770      	bx	lr
 8007fb6:	bf00      	nop

08007fb8 <_Unwind_ForcedUnwind>:
 8007fb8:	46ec      	mov	ip, sp
 8007fba:	b500      	push	{lr}
 8007fbc:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007fc0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8007fc4:	f04f 0300 	mov.w	r3, #0
 8007fc8:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007fcc:	ab01      	add	r3, sp, #4
 8007fce:	f7ff fbe7 	bl	80077a0 <__gnu_Unwind_ForcedUnwind>
 8007fd2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8007fd6:	b012      	add	sp, #72	; 0x48
 8007fd8:	4770      	bx	lr
 8007fda:	bf00      	nop

08007fdc <_Unwind_Backtrace>:
 8007fdc:	46ec      	mov	ip, sp
 8007fde:	b500      	push	{lr}
 8007fe0:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007fe4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8007fe8:	f04f 0300 	mov.w	r3, #0
 8007fec:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007ff0:	aa01      	add	r2, sp, #4
 8007ff2:	f7ff fc61 	bl	80078b8 <__gnu_Unwind_Backtrace>
 8007ff6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8007ffa:	b012      	add	sp, #72	; 0x48
 8007ffc:	4770      	bx	lr
 8007ffe:	bf00      	nop

08008000 <next_unwind_byte>:
 8008000:	7a02      	ldrb	r2, [r0, #8]
 8008002:	b91a      	cbnz	r2, 800800c <next_unwind_byte+0xc>
 8008004:	7a43      	ldrb	r3, [r0, #9]
 8008006:	b943      	cbnz	r3, 800801a <next_unwind_byte+0x1a>
 8008008:	20b0      	movs	r0, #176	; 0xb0
 800800a:	4770      	bx	lr
 800800c:	6803      	ldr	r3, [r0, #0]
 800800e:	3a01      	subs	r2, #1
 8008010:	7202      	strb	r2, [r0, #8]
 8008012:	021a      	lsls	r2, r3, #8
 8008014:	6002      	str	r2, [r0, #0]
 8008016:	0e18      	lsrs	r0, r3, #24
 8008018:	4770      	bx	lr
 800801a:	2103      	movs	r1, #3
 800801c:	6842      	ldr	r2, [r0, #4]
 800801e:	3b01      	subs	r3, #1
 8008020:	b410      	push	{r4}
 8008022:	7243      	strb	r3, [r0, #9]
 8008024:	6813      	ldr	r3, [r2, #0]
 8008026:	1d14      	adds	r4, r2, #4
 8008028:	7201      	strb	r1, [r0, #8]
 800802a:	021a      	lsls	r2, r3, #8
 800802c:	6044      	str	r4, [r0, #4]
 800802e:	6002      	str	r2, [r0, #0]
 8008030:	bc10      	pop	{r4}
 8008032:	0e18      	lsrs	r0, r3, #24
 8008034:	4770      	bx	lr
 8008036:	bf00      	nop

08008038 <_Unwind_GetGR.constprop.0>:
 8008038:	2300      	movs	r3, #0
 800803a:	b500      	push	{lr}
 800803c:	b085      	sub	sp, #20
 800803e:	aa03      	add	r2, sp, #12
 8008040:	9200      	str	r2, [sp, #0]
 8008042:	4619      	mov	r1, r3
 8008044:	220c      	movs	r2, #12
 8008046:	f7ff fbe9 	bl	800781c <_Unwind_VRS_Get>
 800804a:	9803      	ldr	r0, [sp, #12]
 800804c:	b005      	add	sp, #20
 800804e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008052:	bf00      	nop

08008054 <unwind_UCB_from_context>:
 8008054:	e7f0      	b.n	8008038 <_Unwind_GetGR.constprop.0>
 8008056:	bf00      	nop

08008058 <__gnu_unwind_execute>:
 8008058:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800805c:	4606      	mov	r6, r0
 800805e:	460f      	mov	r7, r1
 8008060:	f04f 0800 	mov.w	r8, #0
 8008064:	b085      	sub	sp, #20
 8008066:	4638      	mov	r0, r7
 8008068:	f7ff ffca 	bl	8008000 <next_unwind_byte>
 800806c:	28b0      	cmp	r0, #176	; 0xb0
 800806e:	4604      	mov	r4, r0
 8008070:	d023      	beq.n	80080ba <__gnu_unwind_execute+0x62>
 8008072:	0605      	lsls	r5, r0, #24
 8008074:	d427      	bmi.n	80080c6 <__gnu_unwind_execute+0x6e>
 8008076:	2300      	movs	r3, #0
 8008078:	f10d 090c 	add.w	r9, sp, #12
 800807c:	4619      	mov	r1, r3
 800807e:	0085      	lsls	r5, r0, #2
 8008080:	220d      	movs	r2, #13
 8008082:	f8cd 9000 	str.w	r9, [sp]
 8008086:	4630      	mov	r0, r6
 8008088:	f7ff fbc8 	bl	800781c <_Unwind_VRS_Get>
 800808c:	b2ed      	uxtb	r5, r5
 800808e:	9b03      	ldr	r3, [sp, #12]
 8008090:	0660      	lsls	r0, r4, #25
 8008092:	f105 0504 	add.w	r5, r5, #4
 8008096:	bf4c      	ite	mi
 8008098:	1b5d      	submi	r5, r3, r5
 800809a:	18ed      	addpl	r5, r5, r3
 800809c:	2300      	movs	r3, #0
 800809e:	220d      	movs	r2, #13
 80080a0:	4619      	mov	r1, r3
 80080a2:	f8cd 9000 	str.w	r9, [sp]
 80080a6:	4630      	mov	r0, r6
 80080a8:	9503      	str	r5, [sp, #12]
 80080aa:	f7ff fbdd 	bl	8007868 <_Unwind_VRS_Set>
 80080ae:	4638      	mov	r0, r7
 80080b0:	f7ff ffa6 	bl	8008000 <next_unwind_byte>
 80080b4:	28b0      	cmp	r0, #176	; 0xb0
 80080b6:	4604      	mov	r4, r0
 80080b8:	d1db      	bne.n	8008072 <__gnu_unwind_execute+0x1a>
 80080ba:	f1b8 0f00 	cmp.w	r8, #0
 80080be:	f000 8094 	beq.w	80081ea <__gnu_unwind_execute+0x192>
 80080c2:	2000      	movs	r0, #0
 80080c4:	e01c      	b.n	8008100 <__gnu_unwind_execute+0xa8>
 80080c6:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 80080ca:	2b80      	cmp	r3, #128	; 0x80
 80080cc:	d05c      	beq.n	8008188 <__gnu_unwind_execute+0x130>
 80080ce:	2b90      	cmp	r3, #144	; 0x90
 80080d0:	d019      	beq.n	8008106 <__gnu_unwind_execute+0xae>
 80080d2:	2ba0      	cmp	r3, #160	; 0xa0
 80080d4:	d02c      	beq.n	8008130 <__gnu_unwind_execute+0xd8>
 80080d6:	2bb0      	cmp	r3, #176	; 0xb0
 80080d8:	d03e      	beq.n	8008158 <__gnu_unwind_execute+0x100>
 80080da:	2bc0      	cmp	r3, #192	; 0xc0
 80080dc:	d06b      	beq.n	80081b6 <__gnu_unwind_execute+0x15e>
 80080de:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80080e2:	2bd0      	cmp	r3, #208	; 0xd0
 80080e4:	d10b      	bne.n	80080fe <__gnu_unwind_execute+0xa6>
 80080e6:	f000 0207 	and.w	r2, r0, #7
 80080ea:	3201      	adds	r2, #1
 80080ec:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80080f0:	2305      	movs	r3, #5
 80080f2:	2101      	movs	r1, #1
 80080f4:	4630      	mov	r0, r6
 80080f6:	f7ff fd87 	bl	8007c08 <_Unwind_VRS_Pop>
 80080fa:	2800      	cmp	r0, #0
 80080fc:	d0b3      	beq.n	8008066 <__gnu_unwind_execute+0xe>
 80080fe:	2009      	movs	r0, #9
 8008100:	b005      	add	sp, #20
 8008102:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008106:	f000 030d 	and.w	r3, r0, #13
 800810a:	2b0d      	cmp	r3, #13
 800810c:	d0f7      	beq.n	80080fe <__gnu_unwind_execute+0xa6>
 800810e:	2300      	movs	r3, #0
 8008110:	ad03      	add	r5, sp, #12
 8008112:	f000 020f 	and.w	r2, r0, #15
 8008116:	4619      	mov	r1, r3
 8008118:	9500      	str	r5, [sp, #0]
 800811a:	4630      	mov	r0, r6
 800811c:	f7ff fb7e 	bl	800781c <_Unwind_VRS_Get>
 8008120:	2300      	movs	r3, #0
 8008122:	9500      	str	r5, [sp, #0]
 8008124:	4619      	mov	r1, r3
 8008126:	220d      	movs	r2, #13
 8008128:	4630      	mov	r0, r6
 800812a:	f7ff fb9d 	bl	8007868 <_Unwind_VRS_Set>
 800812e:	e79a      	b.n	8008066 <__gnu_unwind_execute+0xe>
 8008130:	43c3      	mvns	r3, r0
 8008132:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8008136:	f003 0307 	and.w	r3, r3, #7
 800813a:	411a      	asrs	r2, r3
 800813c:	2300      	movs	r3, #0
 800813e:	0701      	lsls	r1, r0, #28
 8008140:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8008144:	bf48      	it	mi
 8008146:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 800814a:	4619      	mov	r1, r3
 800814c:	4630      	mov	r0, r6
 800814e:	f7ff fd5b 	bl	8007c08 <_Unwind_VRS_Pop>
 8008152:	2800      	cmp	r0, #0
 8008154:	d1d3      	bne.n	80080fe <__gnu_unwind_execute+0xa6>
 8008156:	e786      	b.n	8008066 <__gnu_unwind_execute+0xe>
 8008158:	28b1      	cmp	r0, #177	; 0xb1
 800815a:	d057      	beq.n	800820c <__gnu_unwind_execute+0x1b4>
 800815c:	28b2      	cmp	r0, #178	; 0xb2
 800815e:	d068      	beq.n	8008232 <__gnu_unwind_execute+0x1da>
 8008160:	28b3      	cmp	r0, #179	; 0xb3
 8008162:	f000 8095 	beq.w	8008290 <__gnu_unwind_execute+0x238>
 8008166:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 800816a:	2bb4      	cmp	r3, #180	; 0xb4
 800816c:	d0c7      	beq.n	80080fe <__gnu_unwind_execute+0xa6>
 800816e:	2301      	movs	r3, #1
 8008170:	f000 0207 	and.w	r2, r0, #7
 8008174:	441a      	add	r2, r3
 8008176:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800817a:	4619      	mov	r1, r3
 800817c:	4630      	mov	r0, r6
 800817e:	f7ff fd43 	bl	8007c08 <_Unwind_VRS_Pop>
 8008182:	2800      	cmp	r0, #0
 8008184:	d1bb      	bne.n	80080fe <__gnu_unwind_execute+0xa6>
 8008186:	e76e      	b.n	8008066 <__gnu_unwind_execute+0xe>
 8008188:	4638      	mov	r0, r7
 800818a:	f7ff ff39 	bl	8008000 <next_unwind_byte>
 800818e:	0224      	lsls	r4, r4, #8
 8008190:	4304      	orrs	r4, r0
 8008192:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
 8008196:	d0b2      	beq.n	80080fe <__gnu_unwind_execute+0xa6>
 8008198:	2300      	movs	r3, #0
 800819a:	0124      	lsls	r4, r4, #4
 800819c:	b2a2      	uxth	r2, r4
 800819e:	4619      	mov	r1, r3
 80081a0:	4630      	mov	r0, r6
 80081a2:	f7ff fd31 	bl	8007c08 <_Unwind_VRS_Pop>
 80081a6:	2800      	cmp	r0, #0
 80081a8:	d1a9      	bne.n	80080fe <__gnu_unwind_execute+0xa6>
 80081aa:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80081ae:	bf18      	it	ne
 80081b0:	f04f 0801 	movne.w	r8, #1
 80081b4:	e757      	b.n	8008066 <__gnu_unwind_execute+0xe>
 80081b6:	28c6      	cmp	r0, #198	; 0xc6
 80081b8:	d07d      	beq.n	80082b6 <__gnu_unwind_execute+0x25e>
 80081ba:	28c7      	cmp	r0, #199	; 0xc7
 80081bc:	f000 8086 	beq.w	80082cc <__gnu_unwind_execute+0x274>
 80081c0:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80081c4:	2bc0      	cmp	r3, #192	; 0xc0
 80081c6:	f000 8094 	beq.w	80082f2 <__gnu_unwind_execute+0x29a>
 80081ca:	28c8      	cmp	r0, #200	; 0xc8
 80081cc:	f000 809f 	beq.w	800830e <__gnu_unwind_execute+0x2b6>
 80081d0:	28c9      	cmp	r0, #201	; 0xc9
 80081d2:	d194      	bne.n	80080fe <__gnu_unwind_execute+0xa6>
 80081d4:	4638      	mov	r0, r7
 80081d6:	f7ff ff13 	bl	8008000 <next_unwind_byte>
 80081da:	0302      	lsls	r2, r0, #12
 80081dc:	f000 000f 	and.w	r0, r0, #15
 80081e0:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 80081e4:	3001      	adds	r0, #1
 80081e6:	4302      	orrs	r2, r0
 80081e8:	e782      	b.n	80080f0 <__gnu_unwind_execute+0x98>
 80081ea:	ac03      	add	r4, sp, #12
 80081ec:	4643      	mov	r3, r8
 80081ee:	220e      	movs	r2, #14
 80081f0:	4641      	mov	r1, r8
 80081f2:	9400      	str	r4, [sp, #0]
 80081f4:	4630      	mov	r0, r6
 80081f6:	f7ff fb11 	bl	800781c <_Unwind_VRS_Get>
 80081fa:	9400      	str	r4, [sp, #0]
 80081fc:	4630      	mov	r0, r6
 80081fe:	4643      	mov	r3, r8
 8008200:	220f      	movs	r2, #15
 8008202:	4641      	mov	r1, r8
 8008204:	f7ff fb30 	bl	8007868 <_Unwind_VRS_Set>
 8008208:	4640      	mov	r0, r8
 800820a:	e779      	b.n	8008100 <__gnu_unwind_execute+0xa8>
 800820c:	4638      	mov	r0, r7
 800820e:	f7ff fef7 	bl	8008000 <next_unwind_byte>
 8008212:	2800      	cmp	r0, #0
 8008214:	f43f af73 	beq.w	80080fe <__gnu_unwind_execute+0xa6>
 8008218:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 800821c:	f47f af6f 	bne.w	80080fe <__gnu_unwind_execute+0xa6>
 8008220:	4602      	mov	r2, r0
 8008222:	4619      	mov	r1, r3
 8008224:	4630      	mov	r0, r6
 8008226:	f7ff fcef 	bl	8007c08 <_Unwind_VRS_Pop>
 800822a:	2800      	cmp	r0, #0
 800822c:	f47f af67 	bne.w	80080fe <__gnu_unwind_execute+0xa6>
 8008230:	e719      	b.n	8008066 <__gnu_unwind_execute+0xe>
 8008232:	2300      	movs	r3, #0
 8008234:	f10d 090c 	add.w	r9, sp, #12
 8008238:	220d      	movs	r2, #13
 800823a:	4619      	mov	r1, r3
 800823c:	f8cd 9000 	str.w	r9, [sp]
 8008240:	4630      	mov	r0, r6
 8008242:	f7ff faeb 	bl	800781c <_Unwind_VRS_Get>
 8008246:	4638      	mov	r0, r7
 8008248:	f7ff feda 	bl	8008000 <next_unwind_byte>
 800824c:	0602      	lsls	r2, r0, #24
 800824e:	f04f 0402 	mov.w	r4, #2
 8008252:	d50c      	bpl.n	800826e <__gnu_unwind_execute+0x216>
 8008254:	9b03      	ldr	r3, [sp, #12]
 8008256:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800825a:	40a0      	lsls	r0, r4
 800825c:	4403      	add	r3, r0
 800825e:	4638      	mov	r0, r7
 8008260:	9303      	str	r3, [sp, #12]
 8008262:	f7ff fecd 	bl	8008000 <next_unwind_byte>
 8008266:	0603      	lsls	r3, r0, #24
 8008268:	f104 0407 	add.w	r4, r4, #7
 800826c:	d4f2      	bmi.n	8008254 <__gnu_unwind_execute+0x1fc>
 800826e:	2300      	movs	r3, #0
 8008270:	9903      	ldr	r1, [sp, #12]
 8008272:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 8008276:	40a2      	lsls	r2, r4
 8008278:	f501 7101 	add.w	r1, r1, #516	; 0x204
 800827c:	188c      	adds	r4, r1, r2
 800827e:	f8cd 9000 	str.w	r9, [sp]
 8008282:	4619      	mov	r1, r3
 8008284:	220d      	movs	r2, #13
 8008286:	4630      	mov	r0, r6
 8008288:	9403      	str	r4, [sp, #12]
 800828a:	f7ff faed 	bl	8007868 <_Unwind_VRS_Set>
 800828e:	e6ea      	b.n	8008066 <__gnu_unwind_execute+0xe>
 8008290:	4638      	mov	r0, r7
 8008292:	f7ff feb5 	bl	8008000 <next_unwind_byte>
 8008296:	2301      	movs	r3, #1
 8008298:	0301      	lsls	r1, r0, #12
 800829a:	f000 000f 	and.w	r0, r0, #15
 800829e:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80082a2:	18c2      	adds	r2, r0, r3
 80082a4:	430a      	orrs	r2, r1
 80082a6:	4630      	mov	r0, r6
 80082a8:	4619      	mov	r1, r3
 80082aa:	f7ff fcad 	bl	8007c08 <_Unwind_VRS_Pop>
 80082ae:	2800      	cmp	r0, #0
 80082b0:	f47f af25 	bne.w	80080fe <__gnu_unwind_execute+0xa6>
 80082b4:	e6d7      	b.n	8008066 <__gnu_unwind_execute+0xe>
 80082b6:	4638      	mov	r0, r7
 80082b8:	f7ff fea2 	bl	8008000 <next_unwind_byte>
 80082bc:	0301      	lsls	r1, r0, #12
 80082be:	f000 000f 	and.w	r0, r0, #15
 80082c2:	2303      	movs	r3, #3
 80082c4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80082c8:	1c42      	adds	r2, r0, #1
 80082ca:	e7eb      	b.n	80082a4 <__gnu_unwind_execute+0x24c>
 80082cc:	4638      	mov	r0, r7
 80082ce:	f7ff fe97 	bl	8008000 <next_unwind_byte>
 80082d2:	2800      	cmp	r0, #0
 80082d4:	f43f af13 	beq.w	80080fe <__gnu_unwind_execute+0xa6>
 80082d8:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80082dc:	f47f af0f 	bne.w	80080fe <__gnu_unwind_execute+0xa6>
 80082e0:	4602      	mov	r2, r0
 80082e2:	2104      	movs	r1, #4
 80082e4:	4630      	mov	r0, r6
 80082e6:	f7ff fc8f 	bl	8007c08 <_Unwind_VRS_Pop>
 80082ea:	2800      	cmp	r0, #0
 80082ec:	f47f af07 	bne.w	80080fe <__gnu_unwind_execute+0xa6>
 80082f0:	e6b9      	b.n	8008066 <__gnu_unwind_execute+0xe>
 80082f2:	2303      	movs	r3, #3
 80082f4:	f000 020f 	and.w	r2, r0, #15
 80082f8:	3201      	adds	r2, #1
 80082fa:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 80082fe:	4619      	mov	r1, r3
 8008300:	4630      	mov	r0, r6
 8008302:	f7ff fc81 	bl	8007c08 <_Unwind_VRS_Pop>
 8008306:	2800      	cmp	r0, #0
 8008308:	f47f aef9 	bne.w	80080fe <__gnu_unwind_execute+0xa6>
 800830c:	e6ab      	b.n	8008066 <__gnu_unwind_execute+0xe>
 800830e:	4638      	mov	r0, r7
 8008310:	f7ff fe76 	bl	8008000 <next_unwind_byte>
 8008314:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8008318:	f000 030f 	and.w	r3, r0, #15
 800831c:	3210      	adds	r2, #16
 800831e:	3301      	adds	r3, #1
 8008320:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8008324:	e6e4      	b.n	80080f0 <__gnu_unwind_execute+0x98>
 8008326:	bf00      	nop

08008328 <__gnu_unwind_frame>:
 8008328:	b530      	push	{r4, r5, lr}
 800832a:	2403      	movs	r4, #3
 800832c:	460d      	mov	r5, r1
 800832e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008330:	b085      	sub	sp, #20
 8008332:	685a      	ldr	r2, [r3, #4]
 8008334:	f88d 400c 	strb.w	r4, [sp, #12]
 8008338:	79dc      	ldrb	r4, [r3, #7]
 800833a:	0212      	lsls	r2, r2, #8
 800833c:	3308      	adds	r3, #8
 800833e:	a901      	add	r1, sp, #4
 8008340:	4628      	mov	r0, r5
 8008342:	9201      	str	r2, [sp, #4]
 8008344:	f88d 400d 	strb.w	r4, [sp, #13]
 8008348:	9302      	str	r3, [sp, #8]
 800834a:	f7ff fe85 	bl	8008058 <__gnu_unwind_execute>
 800834e:	b005      	add	sp, #20
 8008350:	bd30      	pop	{r4, r5, pc}
 8008352:	bf00      	nop

08008354 <_Unwind_GetRegionStart>:
 8008354:	b508      	push	{r3, lr}
 8008356:	f7ff fe7d 	bl	8008054 <unwind_UCB_from_context>
 800835a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800835c:	bd08      	pop	{r3, pc}
 800835e:	bf00      	nop

08008360 <_Unwind_GetLanguageSpecificData>:
 8008360:	b508      	push	{r3, lr}
 8008362:	f7ff fe77 	bl	8008054 <unwind_UCB_from_context>
 8008366:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008368:	79c3      	ldrb	r3, [r0, #7]
 800836a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800836e:	3008      	adds	r0, #8
 8008370:	bd08      	pop	{r3, pc}
 8008372:	bf00      	nop

08008374 <_Unwind_GetTextRelBase>:
 8008374:	b508      	push	{r3, lr}
 8008376:	f004 fee9 	bl	800d14c <abort>
 800837a:	bf00      	nop

0800837c <_Unwind_GetDataRelBase>:
 800837c:	b508      	push	{r3, lr}
 800837e:	f7ff fff9 	bl	8008374 <_Unwind_GetTextRelBase>
 8008382:	bf00      	nop

08008384 <__aeabi_idiv0>:
 8008384:	4770      	bx	lr
 8008386:	bf00      	nop

08008388 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8008388:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800838a:	4b0e      	ldr	r3, [pc, #56]	; (80083c4 <HAL_InitTick+0x3c>)
{
 800838c:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800838e:	7818      	ldrb	r0, [r3, #0]
 8008390:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008394:	fbb3 f3f0 	udiv	r3, r3, r0
 8008398:	4a0b      	ldr	r2, [pc, #44]	; (80083c8 <HAL_InitTick+0x40>)
 800839a:	6810      	ldr	r0, [r2, #0]
 800839c:	fbb0 f0f3 	udiv	r0, r0, r3
 80083a0:	f000 f88c 	bl	80084bc <HAL_SYSTICK_Config>
 80083a4:	4604      	mov	r4, r0
 80083a6:	b958      	cbnz	r0, 80083c0 <HAL_InitTick+0x38>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80083a8:	2d0f      	cmp	r5, #15
 80083aa:	d809      	bhi.n	80083c0 <HAL_InitTick+0x38>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80083ac:	4602      	mov	r2, r0
 80083ae:	4629      	mov	r1, r5
 80083b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80083b4:	f000 f842 	bl	800843c <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80083b8:	4b04      	ldr	r3, [pc, #16]	; (80083cc <HAL_InitTick+0x44>)
 80083ba:	4620      	mov	r0, r4
 80083bc:	601d      	str	r5, [r3, #0]
 80083be:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80083c0:	2001      	movs	r0, #1
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 80083c2:	bd38      	pop	{r3, r4, r5, pc}
 80083c4:	20000004 	.word	0x20000004
 80083c8:	2000000c 	.word	0x2000000c
 80083cc:	20000008 	.word	0x20000008

080083d0 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80083d0:	4a07      	ldr	r2, [pc, #28]	; (80083f0 <HAL_Init+0x20>)
{
 80083d2:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80083d4:	6813      	ldr	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80083d6:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80083d8:	f043 0310 	orr.w	r3, r3, #16
 80083dc:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80083de:	f000 f81b 	bl	8008418 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 80083e2:	2000      	movs	r0, #0
 80083e4:	f7ff ffd0 	bl	8008388 <HAL_InitTick>
  HAL_MspInit();
 80083e8:	f003 f896 	bl	800b518 <HAL_MspInit>
}
 80083ec:	2000      	movs	r0, #0
 80083ee:	bd08      	pop	{r3, pc}
 80083f0:	40022000 	.word	0x40022000

080083f4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80083f4:	4a03      	ldr	r2, [pc, #12]	; (8008404 <HAL_IncTick+0x10>)
 80083f6:	4b04      	ldr	r3, [pc, #16]	; (8008408 <HAL_IncTick+0x14>)
 80083f8:	6811      	ldr	r1, [r2, #0]
 80083fa:	781b      	ldrb	r3, [r3, #0]
 80083fc:	440b      	add	r3, r1
 80083fe:	6013      	str	r3, [r2, #0]
 8008400:	4770      	bx	lr
 8008402:	bf00      	nop
 8008404:	20000b10 	.word	0x20000b10
 8008408:	20000004 	.word	0x20000004

0800840c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800840c:	4b01      	ldr	r3, [pc, #4]	; (8008414 <HAL_GetTick+0x8>)
 800840e:	6818      	ldr	r0, [r3, #0]
}
 8008410:	4770      	bx	lr
 8008412:	bf00      	nop
 8008414:	20000b10 	.word	0x20000b10

08008418 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008418:	4a07      	ldr	r2, [pc, #28]	; (8008438 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 800841a:	0200      	lsls	r0, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800841c:	68d3      	ldr	r3, [r2, #12]
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 800841e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008422:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8008426:	041b      	lsls	r3, r3, #16
 8008428:	0c1b      	lsrs	r3, r3, #16
 800842a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800842e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  reg_value  =  (reg_value                                   |
 8008432:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8008434:	60d3      	str	r3, [r2, #12]
 8008436:	4770      	bx	lr
 8008438:	e000ed00 	.word	0xe000ed00

0800843c <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800843c:	4b17      	ldr	r3, [pc, #92]	; (800849c <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800843e:	b530      	push	{r4, r5, lr}
 8008440:	68dc      	ldr	r4, [r3, #12]
 8008442:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008446:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800844a:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800844c:	2b04      	cmp	r3, #4
 800844e:	bf28      	it	cs
 8008450:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008452:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008454:	f04f 0501 	mov.w	r5, #1
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008458:	bf98      	it	ls
 800845a:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800845c:	fa05 f303 	lsl.w	r3, r5, r3
 8008460:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008464:	bf88      	it	hi
 8008466:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008468:	4019      	ands	r1, r3
 800846a:	40a1      	lsls	r1, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800846c:	fa05 f404 	lsl.w	r4, r5, r4
 8008470:	3c01      	subs	r4, #1
 8008472:	4022      	ands	r2, r4
  if ((int32_t)(IRQn) < 0)
 8008474:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008476:	ea42 0201 	orr.w	r2, r2, r1
 800847a:	ea4f 1202 	mov.w	r2, r2, lsl #4
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800847e:	bfaf      	iteee	ge
 8008480:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008484:	4b06      	ldrlt	r3, [pc, #24]	; (80084a0 <HAL_NVIC_SetPriority+0x64>)
 8008486:	f000 000f 	andlt.w	r0, r0, #15
 800848a:	b2d2      	uxtblt	r2, r2
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800848c:	bfa5      	ittet	ge
 800848e:	b2d2      	uxtbge	r2, r2
 8008490:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008494:	541a      	strblt	r2, [r3, r0]
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008496:	f880 2300 	strbge.w	r2, [r0, #768]	; 0x300
 800849a:	bd30      	pop	{r4, r5, pc}
 800849c:	e000ed00 	.word	0xe000ed00
 80084a0:	e000ed14 	.word	0xe000ed14

080084a4 <HAL_NVIC_EnableIRQ>:
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 80084a4:	2301      	movs	r3, #1
 80084a6:	0942      	lsrs	r2, r0, #5
 80084a8:	f000 001f 	and.w	r0, r0, #31
 80084ac:	fa03 f000 	lsl.w	r0, r3, r0
 80084b0:	4b01      	ldr	r3, [pc, #4]	; (80084b8 <HAL_NVIC_EnableIRQ+0x14>)
 80084b2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 80084b6:	4770      	bx	lr
 80084b8:	e000e100 	.word	0xe000e100

080084bc <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80084bc:	3801      	subs	r0, #1
 80084be:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80084c2:	d20a      	bcs.n	80084da <HAL_SYSTICK_Config+0x1e>
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80084c4:	21f0      	movs	r1, #240	; 0xf0
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80084c6:	4b06      	ldr	r3, [pc, #24]	; (80084e0 <HAL_SYSTICK_Config+0x24>)
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80084c8:	4a06      	ldr	r2, [pc, #24]	; (80084e4 <HAL_SYSTICK_Config+0x28>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80084ca:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80084cc:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80084d0:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80084d2:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80084d4:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80084d6:	601a      	str	r2, [r3, #0]
 80084d8:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80084da:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80084dc:	4770      	bx	lr
 80084de:	bf00      	nop
 80084e0:	e000e010 	.word	0xe000e010
 80084e4:	e000ed00 	.word	0xe000ed00

080084e8 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 80084e8:	4b04      	ldr	r3, [pc, #16]	; (80084fc <HAL_SYSTICK_CLKSourceConfig+0x14>)
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 80084ea:	2804      	cmp	r0, #4
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 80084ec:	681a      	ldr	r2, [r3, #0]
 80084ee:	bf0c      	ite	eq
 80084f0:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 80084f4:	f022 0204 	bicne.w	r2, r2, #4
 80084f8:	601a      	str	r2, [r3, #0]
 80084fa:	4770      	bx	lr
 80084fc:	e000e010 	.word	0xe000e010

08008500 <HAL_SYSTICK_Callback>:
/**
  * @brief  SYSTICK callback.
  * @retval None
  */
__weak void HAL_SYSTICK_Callback(void)
{
 8008500:	4770      	bx	lr

08008502 <HAL_SYSTICK_IRQHandler>:
{
 8008502:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 8008504:	f7ff fffc 	bl	8008500 <HAL_SYSTICK_Callback>
 8008508:	bd08      	pop	{r3, pc}
	...

0800850c <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800850c:	b510      	push	{r4, lr}
  uint32_t tmp = 0U;

  /* Check the DMA handle allocation */
  if(hdma == NULL)
 800850e:	b350      	cbz	r0, 8008566 <HAL_DMA_Init+0x5a>
    hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Channel2 - (uint32_t)DMA2_Channel1)) << 2;
    hdma->DmaBaseAddress = DMA2;
  }
#else
  /* DMA1 */
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2;
 8008510:	2214      	movs	r2, #20
 8008512:	6801      	ldr	r1, [r0, #0]
 8008514:	4b15      	ldr	r3, [pc, #84]	; (800856c <HAL_DMA_Init+0x60>)
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
                      DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
                      DMA_CCR_DIR));

  /* Prepare the DMA Channel configuration */
  tmp |=  hdma->Init.Direction        |
 8008516:	6884      	ldr	r4, [r0, #8]
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2;
 8008518:	440b      	add	r3, r1
 800851a:	fbb3 f3f2 	udiv	r3, r3, r2
 800851e:	009b      	lsls	r3, r3, #2
 8008520:	6403      	str	r3, [r0, #64]	; 0x40
  hdma->DmaBaseAddress = DMA1;
 8008522:	4b13      	ldr	r3, [pc, #76]	; (8008570 <HAL_DMA_Init+0x64>)
  tmp = hdma->Instance->CCR;
 8008524:	680a      	ldr	r2, [r1, #0]
  hdma->DmaBaseAddress = DMA1;
 8008526:	63c3      	str	r3, [r0, #60]	; 0x3c
  tmp |=  hdma->Init.Direction        |
 8008528:	6843      	ldr	r3, [r0, #4]
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 800852a:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
  tmp |=  hdma->Init.Direction        |
 800852e:	4323      	orrs	r3, r4
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8008530:	68c4      	ldr	r4, [r0, #12]
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8008532:	f022 0230 	bic.w	r2, r2, #48	; 0x30
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8008536:	4323      	orrs	r3, r4
 8008538:	6904      	ldr	r4, [r0, #16]
 800853a:	4323      	orrs	r3, r4
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800853c:	6944      	ldr	r4, [r0, #20]
 800853e:	4323      	orrs	r3, r4
 8008540:	6984      	ldr	r4, [r0, #24]
 8008542:	4323      	orrs	r3, r4
          hdma->Init.Mode                | hdma->Init.Priority;
 8008544:	69c4      	ldr	r4, [r0, #28]
 8008546:	4323      	orrs	r3, r4
  tmp |=  hdma->Init.Direction        |
 8008548:	4313      	orrs	r3, r2

  /* Write to DMA Channel CR register */
  hdma->Instance->CCR = tmp;
 800854a:	600b      	str	r3, [r1, #0]

  /* Initialise the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;

  /* Initialize the DMA state*/
  hdma->State = HAL_DMA_STATE_READY;
 800854c:	2201      	movs	r2, #1
  hdma->XferCpltCallback = NULL;
 800854e:	2300      	movs	r3, #0
  hdma->State = HAL_DMA_STATE_READY;
 8008550:	f880 2021 	strb.w	r2, [r0, #33]	; 0x21
  hdma->XferCpltCallback = NULL;
 8008554:	6283      	str	r3, [r0, #40]	; 0x28
  hdma->XferHalfCpltCallback = NULL;
 8008556:	62c3      	str	r3, [r0, #44]	; 0x2c
  hdma->XferErrorCallback = NULL;
 8008558:	6303      	str	r3, [r0, #48]	; 0x30
  hdma->XferAbortCallback = NULL;
 800855a:	6343      	str	r3, [r0, #52]	; 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800855c:	6383      	str	r3, [r0, #56]	; 0x38
  /* Allocate lock resource and initialize it */
  hdma->Lock = HAL_UNLOCKED;
 800855e:	f880 3020 	strb.w	r3, [r0, #32]
  
  return HAL_OK;
 8008562:	4618      	mov	r0, r3
 8008564:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008566:	2001      	movs	r0, #1
}
 8008568:	bd10      	pop	{r4, pc}
 800856a:	bf00      	nop
 800856c:	bffdfff8 	.word	0xbffdfff8
 8008570:	40020000 	.word	0x40020000

08008574 <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8008574:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Process locked */
  __HAL_LOCK(hdma);
 8008576:	f890 4020 	ldrb.w	r4, [r0, #32]
 800857a:	2c01      	cmp	r4, #1
 800857c:	d035      	beq.n	80085ea <HAL_DMA_Start_IT+0x76>
 800857e:	2401      	movs	r4, #1
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8008580:	f890 5021 	ldrb.w	r5, [r0, #33]	; 0x21
  __HAL_LOCK(hdma);
 8008584:	f880 4020 	strb.w	r4, [r0, #32]
  if(HAL_DMA_STATE_READY == hdma->State)
 8008588:	42a5      	cmp	r5, r4
 800858a:	f04f 0600 	mov.w	r6, #0
 800858e:	f04f 0402 	mov.w	r4, #2
 8008592:	d128      	bne.n	80085e6 <HAL_DMA_Start_IT+0x72>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8008594:	f880 4021 	strb.w	r4, [r0, #33]	; 0x21
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
    
    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8008598:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800859a:	6386      	str	r6, [r0, #56]	; 0x38
    __HAL_DMA_DISABLE(hdma);
 800859c:	6826      	ldr	r6, [r4, #0]
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
  /* Clear all flags */
  hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 800859e:	6c07      	ldr	r7, [r0, #64]	; 0x40
    __HAL_DMA_DISABLE(hdma);
 80085a0:	f026 0601 	bic.w	r6, r6, #1
 80085a4:	6026      	str	r6, [r4, #0]
  hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 80085a6:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 80085a8:	40bd      	lsls	r5, r7
 80085aa:	6075      	str	r5, [r6, #4]

  /* Configure DMA Channel data length */
  hdma->Instance->CNDTR = DataLength;
 80085ac:	6063      	str	r3, [r4, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80085ae:	6843      	ldr	r3, [r0, #4]
 80085b0:	6805      	ldr	r5, [r0, #0]
 80085b2:	2b10      	cmp	r3, #16
    if(NULL != hdma->XferHalfCpltCallback)
 80085b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
  {
    /* Configure DMA Channel destination address */
    hdma->Instance->CPAR = DstAddress;
 80085b6:	bf0b      	itete	eq
 80085b8:	60a2      	streq	r2, [r4, #8]
  }
  /* Peripheral to Memory */
  else
  {
    /* Configure DMA Channel source address */
    hdma->Instance->CPAR = SrcAddress;
 80085ba:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->CMAR = SrcAddress;
 80085bc:	60e1      	streq	r1, [r4, #12]

    /* Configure DMA Channel destination address */
    hdma->Instance->CMAR = DstAddress;
 80085be:	60e2      	strne	r2, [r4, #12]
    if(NULL != hdma->XferHalfCpltCallback)
 80085c0:	b14b      	cbz	r3, 80085d6 <HAL_DMA_Start_IT+0x62>
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80085c2:	6823      	ldr	r3, [r4, #0]
 80085c4:	f043 030e 	orr.w	r3, r3, #14
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 80085c8:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 80085ca:	682b      	ldr	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80085cc:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 80085ce:	f043 0301 	orr.w	r3, r3, #1
 80085d2:	602b      	str	r3, [r5, #0]
 80085d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 80085d6:	6823      	ldr	r3, [r4, #0]
 80085d8:	f023 0304 	bic.w	r3, r3, #4
 80085dc:	6023      	str	r3, [r4, #0]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 80085de:	6823      	ldr	r3, [r4, #0]
 80085e0:	f043 030a 	orr.w	r3, r3, #10
 80085e4:	e7f0      	b.n	80085c8 <HAL_DMA_Start_IT+0x54>
    __HAL_UNLOCK(hdma); 
 80085e6:	f880 6020 	strb.w	r6, [r0, #32]
  __HAL_LOCK(hdma);
 80085ea:	2002      	movs	r0, #2
}
 80085ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080085f0 <HAL_DMA_Abort_IT>:
  if(HAL_DMA_STATE_BUSY != hdma->State)
 80085f0:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
{  
 80085f4:	b510      	push	{r4, lr}
  if(HAL_DMA_STATE_BUSY != hdma->State)
 80085f6:	2b02      	cmp	r3, #2
 80085f8:	d003      	beq.n	8008602 <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80085fa:	2304      	movs	r3, #4
 80085fc:	6383      	str	r3, [r0, #56]	; 0x38
    status = HAL_ERROR;
 80085fe:	2001      	movs	r0, #1
 8008600:	bd10      	pop	{r4, pc}
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8008602:	6803      	ldr	r3, [r0, #0]
 8008604:	681a      	ldr	r2, [r3, #0]
 8008606:	f022 020e 	bic.w	r2, r2, #14
 800860a:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800860c:	681a      	ldr	r2, [r3, #0]
 800860e:	f022 0201 	bic.w	r2, r2, #1
 8008612:	601a      	str	r2, [r3, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
 8008614:	4a18      	ldr	r2, [pc, #96]	; (8008678 <HAL_DMA_Abort_IT+0x88>)
 8008616:	4293      	cmp	r3, r2
 8008618:	d01f      	beq.n	800865a <HAL_DMA_Abort_IT+0x6a>
 800861a:	3214      	adds	r2, #20
 800861c:	4293      	cmp	r3, r2
 800861e:	d01e      	beq.n	800865e <HAL_DMA_Abort_IT+0x6e>
 8008620:	3214      	adds	r2, #20
 8008622:	4293      	cmp	r3, r2
 8008624:	d01d      	beq.n	8008662 <HAL_DMA_Abort_IT+0x72>
 8008626:	3214      	adds	r2, #20
 8008628:	4293      	cmp	r3, r2
 800862a:	d01d      	beq.n	8008668 <HAL_DMA_Abort_IT+0x78>
 800862c:	3214      	adds	r2, #20
 800862e:	4293      	cmp	r3, r2
 8008630:	d01d      	beq.n	800866e <HAL_DMA_Abort_IT+0x7e>
 8008632:	3214      	adds	r2, #20
 8008634:	4293      	cmp	r3, r2
 8008636:	bf0c      	ite	eq
 8008638:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 800863c:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 8008640:	4a0e      	ldr	r2, [pc, #56]	; (800867c <HAL_DMA_Abort_IT+0x8c>)
    __HAL_UNLOCK(hdma);
 8008642:	2400      	movs	r4, #0
    __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
 8008644:	6053      	str	r3, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8008646:	2301      	movs	r3, #1
 8008648:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
    if(hdma->XferAbortCallback != NULL)
 800864c:	6b43      	ldr	r3, [r0, #52]	; 0x34
    __HAL_UNLOCK(hdma);
 800864e:	f880 4020 	strb.w	r4, [r0, #32]
    if(hdma->XferAbortCallback != NULL)
 8008652:	b17b      	cbz	r3, 8008674 <HAL_DMA_Abort_IT+0x84>
      hdma->XferAbortCallback(hdma);
 8008654:	4798      	blx	r3
  HAL_StatusTypeDef status = HAL_OK;
 8008656:	4620      	mov	r0, r4
 8008658:	bd10      	pop	{r4, pc}
    __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
 800865a:	2301      	movs	r3, #1
 800865c:	e7f0      	b.n	8008640 <HAL_DMA_Abort_IT+0x50>
 800865e:	2310      	movs	r3, #16
 8008660:	e7ee      	b.n	8008640 <HAL_DMA_Abort_IT+0x50>
 8008662:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008666:	e7eb      	b.n	8008640 <HAL_DMA_Abort_IT+0x50>
 8008668:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800866c:	e7e8      	b.n	8008640 <HAL_DMA_Abort_IT+0x50>
 800866e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8008672:	e7e5      	b.n	8008640 <HAL_DMA_Abort_IT+0x50>
  HAL_StatusTypeDef status = HAL_OK;
 8008674:	4618      	mov	r0, r3
}
 8008676:	bd10      	pop	{r4, pc}
 8008678:	40020008 	.word	0x40020008
 800867c:	40020000 	.word	0x40020000

08008680 <HAL_DMA_IRQHandler>:
{
 8008680:	b470      	push	{r4, r5, r6}
  if (((flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_HT) != RESET))
 8008682:	2504      	movs	r5, #4
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8008684:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
  if (((flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_HT) != RESET))
 8008686:	6c02      	ldr	r2, [r0, #64]	; 0x40
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8008688:	6834      	ldr	r4, [r6, #0]
  uint32_t source_it = hdma->Instance->CCR;
 800868a:	6803      	ldr	r3, [r0, #0]
  if (((flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_HT) != RESET))
 800868c:	4095      	lsls	r5, r2
 800868e:	4225      	tst	r5, r4
  uint32_t source_it = hdma->Instance->CCR;
 8008690:	6819      	ldr	r1, [r3, #0]
  if (((flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_HT) != RESET))
 8008692:	d032      	beq.n	80086fa <HAL_DMA_IRQHandler+0x7a>
 8008694:	074d      	lsls	r5, r1, #29
 8008696:	d530      	bpl.n	80086fa <HAL_DMA_IRQHandler+0x7a>
    if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8008698:	681a      	ldr	r2, [r3, #0]
 800869a:	0696      	lsls	r6, r2, #26
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 800869c:	bf5e      	ittt	pl
 800869e:	681a      	ldrpl	r2, [r3, #0]
 80086a0:	f022 0204 	bicpl.w	r2, r2, #4
 80086a4:	601a      	strpl	r2, [r3, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 80086a6:	4a3e      	ldr	r2, [pc, #248]	; (80087a0 <HAL_DMA_IRQHandler+0x120>)
 80086a8:	4293      	cmp	r3, r2
 80086aa:	d019      	beq.n	80086e0 <HAL_DMA_IRQHandler+0x60>
 80086ac:	3214      	adds	r2, #20
 80086ae:	4293      	cmp	r3, r2
 80086b0:	d018      	beq.n	80086e4 <HAL_DMA_IRQHandler+0x64>
 80086b2:	3214      	adds	r2, #20
 80086b4:	4293      	cmp	r3, r2
 80086b6:	d017      	beq.n	80086e8 <HAL_DMA_IRQHandler+0x68>
 80086b8:	3214      	adds	r2, #20
 80086ba:	4293      	cmp	r3, r2
 80086bc:	d017      	beq.n	80086ee <HAL_DMA_IRQHandler+0x6e>
 80086be:	3214      	adds	r2, #20
 80086c0:	4293      	cmp	r3, r2
 80086c2:	d017      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x74>
 80086c4:	3214      	adds	r2, #20
 80086c6:	4293      	cmp	r3, r2
 80086c8:	bf0c      	ite	eq
 80086ca:	f44f 0380 	moveq.w	r3, #4194304	; 0x400000
 80086ce:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80086d2:	4a34      	ldr	r2, [pc, #208]	; (80087a4 <HAL_DMA_IRQHandler+0x124>)
 80086d4:	6053      	str	r3, [r2, #4]
    if(hdma->XferHalfCpltCallback != NULL)
 80086d6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    if (hdma->XferErrorCallback != NULL)
 80086d8:	2b00      	cmp	r3, #0
 80086da:	d05e      	beq.n	800879a <HAL_DMA_IRQHandler+0x11a>
}
 80086dc:	bc70      	pop	{r4, r5, r6}
      hdma->XferErrorCallback(hdma);
 80086de:	4718      	bx	r3
    __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 80086e0:	2304      	movs	r3, #4
 80086e2:	e7f6      	b.n	80086d2 <HAL_DMA_IRQHandler+0x52>
 80086e4:	2340      	movs	r3, #64	; 0x40
 80086e6:	e7f4      	b.n	80086d2 <HAL_DMA_IRQHandler+0x52>
 80086e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80086ec:	e7f1      	b.n	80086d2 <HAL_DMA_IRQHandler+0x52>
 80086ee:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80086f2:	e7ee      	b.n	80086d2 <HAL_DMA_IRQHandler+0x52>
 80086f4:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80086f8:	e7eb      	b.n	80086d2 <HAL_DMA_IRQHandler+0x52>
  else if (((flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_TC) != RESET))
 80086fa:	2502      	movs	r5, #2
 80086fc:	4095      	lsls	r5, r2
 80086fe:	4225      	tst	r5, r4
 8008700:	d035      	beq.n	800876e <HAL_DMA_IRQHandler+0xee>
 8008702:	078d      	lsls	r5, r1, #30
 8008704:	d533      	bpl.n	800876e <HAL_DMA_IRQHandler+0xee>
    if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8008706:	681a      	ldr	r2, [r3, #0]
 8008708:	0694      	lsls	r4, r2, #26
 800870a:	d406      	bmi.n	800871a <HAL_DMA_IRQHandler+0x9a>
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);  
 800870c:	681a      	ldr	r2, [r3, #0]
 800870e:	f022 020a 	bic.w	r2, r2, #10
 8008712:	601a      	str	r2, [r3, #0]
      hdma->State = HAL_DMA_STATE_READY;
 8008714:	2201      	movs	r2, #1
 8008716:	f880 2021 	strb.w	r2, [r0, #33]	; 0x21
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
 800871a:	4a21      	ldr	r2, [pc, #132]	; (80087a0 <HAL_DMA_IRQHandler+0x120>)
 800871c:	4293      	cmp	r3, r2
 800871e:	d019      	beq.n	8008754 <HAL_DMA_IRQHandler+0xd4>
 8008720:	3214      	adds	r2, #20
 8008722:	4293      	cmp	r3, r2
 8008724:	d018      	beq.n	8008758 <HAL_DMA_IRQHandler+0xd8>
 8008726:	3214      	adds	r2, #20
 8008728:	4293      	cmp	r3, r2
 800872a:	d017      	beq.n	800875c <HAL_DMA_IRQHandler+0xdc>
 800872c:	3214      	adds	r2, #20
 800872e:	4293      	cmp	r3, r2
 8008730:	d017      	beq.n	8008762 <HAL_DMA_IRQHandler+0xe2>
 8008732:	3214      	adds	r2, #20
 8008734:	4293      	cmp	r3, r2
 8008736:	d017      	beq.n	8008768 <HAL_DMA_IRQHandler+0xe8>
 8008738:	3214      	adds	r2, #20
 800873a:	4293      	cmp	r3, r2
 800873c:	bf0c      	ite	eq
 800873e:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 8008742:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 8008746:	4a17      	ldr	r2, [pc, #92]	; (80087a4 <HAL_DMA_IRQHandler+0x124>)
 8008748:	6053      	str	r3, [r2, #4]
    __HAL_UNLOCK(hdma);
 800874a:	2300      	movs	r3, #0
 800874c:	f880 3020 	strb.w	r3, [r0, #32]
    if(hdma->XferCpltCallback != NULL)
 8008750:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008752:	e7c1      	b.n	80086d8 <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
 8008754:	2302      	movs	r3, #2
 8008756:	e7f6      	b.n	8008746 <HAL_DMA_IRQHandler+0xc6>
 8008758:	2320      	movs	r3, #32
 800875a:	e7f4      	b.n	8008746 <HAL_DMA_IRQHandler+0xc6>
 800875c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008760:	e7f1      	b.n	8008746 <HAL_DMA_IRQHandler+0xc6>
 8008762:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8008766:	e7ee      	b.n	8008746 <HAL_DMA_IRQHandler+0xc6>
 8008768:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800876c:	e7eb      	b.n	8008746 <HAL_DMA_IRQHandler+0xc6>
  else if (( RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TE)))
 800876e:	2508      	movs	r5, #8
 8008770:	4095      	lsls	r5, r2
 8008772:	4225      	tst	r5, r4
 8008774:	d011      	beq.n	800879a <HAL_DMA_IRQHandler+0x11a>
 8008776:	0709      	lsls	r1, r1, #28
 8008778:	d50f      	bpl.n	800879a <HAL_DMA_IRQHandler+0x11a>
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 800877a:	6819      	ldr	r1, [r3, #0]
 800877c:	f021 010e 	bic.w	r1, r1, #14
 8008780:	6019      	str	r1, [r3, #0]
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 8008782:	2301      	movs	r3, #1
 8008784:	fa03 f202 	lsl.w	r2, r3, r2
 8008788:	6072      	str	r2, [r6, #4]
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 800878a:	6383      	str	r3, [r0, #56]	; 0x38
    hdma->State = HAL_DMA_STATE_READY;
 800878c:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
    __HAL_UNLOCK(hdma);
 8008790:	2300      	movs	r3, #0
 8008792:	f880 3020 	strb.w	r3, [r0, #32]
    if (hdma->XferErrorCallback != NULL)
 8008796:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8008798:	e79e      	b.n	80086d8 <HAL_DMA_IRQHandler+0x58>
}
 800879a:	bc70      	pop	{r4, r5, r6}
 800879c:	4770      	bx	lr
 800879e:	bf00      	nop
 80087a0:	40020008 	.word	0x40020008
 80087a4:	40020000 	.word	0x40020000

080087a8 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80087a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position;
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;
  uint32_t config = 0x00U;
 80087ac:	2200      	movs	r2, #0
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for (position = 0U; position < GPIO_NUMBER; position++)
 80087ae:	4616      	mov	r6, r2
 80087b0:	4b65      	ldr	r3, [pc, #404]	; (8008948 <HAL_GPIO_Init+0x1a0>)
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 80087b2:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8008958 <HAL_GPIO_Init+0x1b0>
 80087b6:	f8df c1a4 	ldr.w	ip, [pc, #420]	; 800895c <HAL_GPIO_Init+0x1b4>
    ioposition = (0x01U << position);
 80087ba:	f04f 0801 	mov.w	r8, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80087be:	680c      	ldr	r4, [r1, #0]
    ioposition = (0x01U << position);
 80087c0:	fa08 f806 	lsl.w	r8, r8, r6
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80087c4:	ea08 0404 	and.w	r4, r8, r4
    if (iocurrent == ioposition)
 80087c8:	45a0      	cmp	r8, r4
 80087ca:	d17f      	bne.n	80088cc <HAL_GPIO_Init+0x124>
      switch (GPIO_Init->Mode)
 80087cc:	684d      	ldr	r5, [r1, #4]
 80087ce:	2d12      	cmp	r5, #18
 80087d0:	f000 80af 	beq.w	8008932 <HAL_GPIO_Init+0x18a>
 80087d4:	f200 8088 	bhi.w	80088e8 <HAL_GPIO_Init+0x140>
 80087d8:	2d02      	cmp	r5, #2
 80087da:	f000 80a7 	beq.w	800892c <HAL_GPIO_Init+0x184>
 80087de:	d87c      	bhi.n	80088da <HAL_GPIO_Init+0x132>
 80087e0:	2d00      	cmp	r5, #0
 80087e2:	f000 808e 	beq.w	8008902 <HAL_GPIO_Init+0x15a>
 80087e6:	2d01      	cmp	r5, #1
 80087e8:	f000 809e 	beq.w	8008928 <HAL_GPIO_Init+0x180>
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2U) : ((position - 8U) << 2U);

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80087ec:	f04f 090f 	mov.w	r9, #15
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 80087f0:	2cff      	cmp	r4, #255	; 0xff
 80087f2:	bf93      	iteet	ls
 80087f4:	4682      	movls	sl, r0
 80087f6:	f106 4580 	addhi.w	r5, r6, #1073741824	; 0x40000000
 80087fa:	3d08      	subhi	r5, #8
 80087fc:	f8d0 b000 	ldrls.w	fp, [r0]
 8008800:	bf92      	itee	ls
 8008802:	00b5      	lslls	r5, r6, #2
 8008804:	f8d0 b004 	ldrhi.w	fp, [r0, #4]
 8008808:	00ad      	lslhi	r5, r5, #2
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 800880a:	fa09 f805 	lsl.w	r8, r9, r5
 800880e:	ea2b 0808 	bic.w	r8, fp, r8
 8008812:	fa02 f505 	lsl.w	r5, r2, r5
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 8008816:	bf88      	it	hi
 8008818:	f100 0a04 	addhi.w	sl, r0, #4
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 800881c:	ea48 0505 	orr.w	r5, r8, r5
 8008820:	f8ca 5000 	str.w	r5, [sl]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8008824:	f8d1 a004 	ldr.w	sl, [r1, #4]
 8008828:	f01a 5f80 	tst.w	sl, #268435456	; 0x10000000
 800882c:	d04e      	beq.n	80088cc <HAL_GPIO_Init+0x124>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 800882e:	4d47      	ldr	r5, [pc, #284]	; (800894c <HAL_GPIO_Init+0x1a4>)
 8008830:	4f46      	ldr	r7, [pc, #280]	; (800894c <HAL_GPIO_Init+0x1a4>)
 8008832:	69ad      	ldr	r5, [r5, #24]
 8008834:	f026 0803 	bic.w	r8, r6, #3
 8008838:	f045 0501 	orr.w	r5, r5, #1
 800883c:	61bd      	str	r5, [r7, #24]
 800883e:	69bd      	ldr	r5, [r7, #24]
 8008840:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
 8008844:	f005 0501 	and.w	r5, r5, #1
 8008848:	9501      	str	r5, [sp, #4]
 800884a:	f508 3880 	add.w	r8, r8, #65536	; 0x10000
        temp = AFIO->EXTICR[position >> 2U];
        CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 800884e:	f006 0b03 	and.w	fp, r6, #3
        __HAL_RCC_AFIO_CLK_ENABLE();
 8008852:	9d01      	ldr	r5, [sp, #4]
        CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 8008854:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = AFIO->EXTICR[position >> 2U];
 8008858:	f8d8 5008 	ldr.w	r5, [r8, #8]
        CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 800885c:	fa09 f90b 	lsl.w	r9, r9, fp
 8008860:	ea25 0909 	bic.w	r9, r5, r9
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008864:	4d3a      	ldr	r5, [pc, #232]	; (8008950 <HAL_GPIO_Init+0x1a8>)
 8008866:	42a8      	cmp	r0, r5
 8008868:	d068      	beq.n	800893c <HAL_GPIO_Init+0x194>
 800886a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800886e:	42a8      	cmp	r0, r5
 8008870:	d066      	beq.n	8008940 <HAL_GPIO_Init+0x198>
 8008872:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008876:	42a8      	cmp	r0, r5
 8008878:	d064      	beq.n	8008944 <HAL_GPIO_Init+0x19c>
 800887a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800887e:	42a8      	cmp	r0, r5
 8008880:	bf0c      	ite	eq
 8008882:	2503      	moveq	r5, #3
 8008884:	2504      	movne	r5, #4
 8008886:	fa05 f50b 	lsl.w	r5, r5, fp
 800888a:	ea45 0509 	orr.w	r5, r5, r9
        AFIO->EXTICR[position >> 2U] = temp;
 800888e:	f8c8 5008 	str.w	r5, [r8, #8]


        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
        {
          SET_BIT(EXTI->IMR, iocurrent);
 8008892:	681d      	ldr	r5, [r3, #0]
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8008894:	f41a 3f80 	tst.w	sl, #65536	; 0x10000
          SET_BIT(EXTI->IMR, iocurrent);
 8008898:	bf14      	ite	ne
 800889a:	4325      	orrne	r5, r4
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 800889c:	43a5      	biceq	r5, r4
 800889e:	601d      	str	r5, [r3, #0]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          SET_BIT(EXTI->EMR, iocurrent);
 80088a0:	685d      	ldr	r5, [r3, #4]
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80088a2:	f41a 3f00 	tst.w	sl, #131072	; 0x20000
          SET_BIT(EXTI->EMR, iocurrent);
 80088a6:	bf14      	ite	ne
 80088a8:	4325      	orrne	r5, r4
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 80088aa:	43a5      	biceq	r5, r4
 80088ac:	605d      	str	r5, [r3, #4]
        }

        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 80088ae:	689d      	ldr	r5, [r3, #8]
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80088b0:	f41a 1f80 	tst.w	sl, #1048576	; 0x100000
          SET_BIT(EXTI->RTSR, iocurrent);
 80088b4:	bf14      	ite	ne
 80088b6:	4325      	orrne	r5, r4
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 80088b8:	43a5      	biceq	r5, r4
 80088ba:	609d      	str	r5, [r3, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 80088bc:	68dd      	ldr	r5, [r3, #12]
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80088be:	f41a 1f00 	tst.w	sl, #2097152	; 0x200000
          SET_BIT(EXTI->FTSR, iocurrent);
 80088c2:	bf14      	ite	ne
 80088c4:	432c      	orrne	r4, r5
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 80088c6:	ea25 0404 	biceq.w	r4, r5, r4
 80088ca:	60dc      	str	r4, [r3, #12]
  for (position = 0U; position < GPIO_NUMBER; position++)
 80088cc:	3601      	adds	r6, #1
 80088ce:	2e10      	cmp	r6, #16
 80088d0:	f47f af73 	bne.w	80087ba <HAL_GPIO_Init+0x12>
        }
      }
    }
  }
}
 80088d4:	b003      	add	sp, #12
 80088d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      switch (GPIO_Init->Mode)
 80088da:	2d03      	cmp	r5, #3
 80088dc:	d022      	beq.n	8008924 <HAL_GPIO_Init+0x17c>
 80088de:	2d11      	cmp	r5, #17
 80088e0:	d184      	bne.n	80087ec <HAL_GPIO_Init+0x44>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 80088e2:	68ca      	ldr	r2, [r1, #12]
 80088e4:	3204      	adds	r2, #4
          break;
 80088e6:	e781      	b.n	80087ec <HAL_GPIO_Init+0x44>
      switch (GPIO_Init->Mode)
 80088e8:	4f1a      	ldr	r7, [pc, #104]	; (8008954 <HAL_GPIO_Init+0x1ac>)
 80088ea:	42bd      	cmp	r5, r7
 80088ec:	d009      	beq.n	8008902 <HAL_GPIO_Init+0x15a>
 80088ee:	d812      	bhi.n	8008916 <HAL_GPIO_Init+0x16e>
 80088f0:	f8df 906c 	ldr.w	r9, [pc, #108]	; 8008960 <HAL_GPIO_Init+0x1b8>
 80088f4:	454d      	cmp	r5, r9
 80088f6:	d004      	beq.n	8008902 <HAL_GPIO_Init+0x15a>
 80088f8:	f509 3980 	add.w	r9, r9, #65536	; 0x10000
 80088fc:	454d      	cmp	r5, r9
 80088fe:	f47f af75 	bne.w	80087ec <HAL_GPIO_Init+0x44>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 8008902:	688a      	ldr	r2, [r1, #8]
 8008904:	b1c2      	cbz	r2, 8008938 <HAL_GPIO_Init+0x190>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 8008906:	2a01      	cmp	r2, #1
            GPIOx->BSRR = ioposition;
 8008908:	bf0c      	ite	eq
 800890a:	f8c0 8010 	streq.w	r8, [r0, #16]
            GPIOx->BRR = ioposition;
 800890e:	f8c0 8014 	strne.w	r8, [r0, #20]
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8008912:	2208      	movs	r2, #8
 8008914:	e76a      	b.n	80087ec <HAL_GPIO_Init+0x44>
      switch (GPIO_Init->Mode)
 8008916:	4575      	cmp	r5, lr
 8008918:	d0f3      	beq.n	8008902 <HAL_GPIO_Init+0x15a>
 800891a:	4565      	cmp	r5, ip
 800891c:	d0f1      	beq.n	8008902 <HAL_GPIO_Init+0x15a>
 800891e:	f8df 9044 	ldr.w	r9, [pc, #68]	; 8008964 <HAL_GPIO_Init+0x1bc>
 8008922:	e7eb      	b.n	80088fc <HAL_GPIO_Init+0x154>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 8008924:	2200      	movs	r2, #0
 8008926:	e761      	b.n	80087ec <HAL_GPIO_Init+0x44>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 8008928:	68ca      	ldr	r2, [r1, #12]
          break;
 800892a:	e75f      	b.n	80087ec <HAL_GPIO_Init+0x44>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 800892c:	68ca      	ldr	r2, [r1, #12]
 800892e:	3208      	adds	r2, #8
          break;
 8008930:	e75c      	b.n	80087ec <HAL_GPIO_Init+0x44>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 8008932:	68ca      	ldr	r2, [r1, #12]
 8008934:	320c      	adds	r2, #12
          break;
 8008936:	e759      	b.n	80087ec <HAL_GPIO_Init+0x44>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 8008938:	2204      	movs	r2, #4
 800893a:	e757      	b.n	80087ec <HAL_GPIO_Init+0x44>
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800893c:	2500      	movs	r5, #0
 800893e:	e7a2      	b.n	8008886 <HAL_GPIO_Init+0xde>
 8008940:	2501      	movs	r5, #1
 8008942:	e7a0      	b.n	8008886 <HAL_GPIO_Init+0xde>
 8008944:	2502      	movs	r5, #2
 8008946:	e79e      	b.n	8008886 <HAL_GPIO_Init+0xde>
 8008948:	40010400 	.word	0x40010400
 800894c:	40021000 	.word	0x40021000
 8008950:	40010800 	.word	0x40010800
 8008954:	10210000 	.word	0x10210000
 8008958:	10310000 	.word	0x10310000
 800895c:	10320000 	.word	0x10320000
 8008960:	10110000 	.word	0x10110000
 8008964:	10220000 	.word	0x10220000

08008968 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8008968:	6883      	ldr	r3, [r0, #8]
 800896a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800896c:	bf14      	ite	ne
 800896e:	2001      	movne	r0, #1
 8008970:	2000      	moveq	r0, #0
 8008972:	4770      	bx	lr

08008974 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8008974:	b10a      	cbz	r2, 800897a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008976:	6101      	str	r1, [r0, #16]
 8008978:	4770      	bx	lr
 800897a:	0409      	lsls	r1, r1, #16
 800897c:	e7fb      	b.n	8008976 <HAL_GPIO_WritePin+0x2>

0800897e <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  GPIOx->ODR ^= GPIO_Pin;
 800897e:	68c3      	ldr	r3, [r0, #12]
 8008980:	4059      	eors	r1, r3
 8008982:	60c1      	str	r1, [r0, #12]
 8008984:	4770      	bx	lr
	...

08008988 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin: Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8008988:	b508      	push	{r3, lr}
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800898a:	4b04      	ldr	r3, [pc, #16]	; (800899c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800898c:	6959      	ldr	r1, [r3, #20]
 800898e:	4201      	tst	r1, r0
 8008990:	d002      	beq.n	8008998 <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8008992:	6158      	str	r0, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8008994:	f002 fa94 	bl	800aec0 <HAL_GPIO_EXTI_Callback>
 8008998:	bd08      	pop	{r3, pc}
 800899a:	bf00      	nop
 800899c:	40010400 	.word	0x40010400

080089a0 <HAL_RCC_OscConfig>:
  /* Check the parameters */
  assert_param(RCC_OscInitStruct != NULL);
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80089a0:	6803      	ldr	r3, [r0, #0]
{
 80089a2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80089a6:	07db      	lsls	r3, r3, #31
{
 80089a8:	4605      	mov	r5, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80089aa:	d410      	bmi.n	80089ce <HAL_RCC_OscConfig+0x2e>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80089ac:	682b      	ldr	r3, [r5, #0]
 80089ae:	079f      	lsls	r7, r3, #30
 80089b0:	d45e      	bmi.n	8008a70 <HAL_RCC_OscConfig+0xd0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80089b2:	682b      	ldr	r3, [r5, #0]
 80089b4:	0719      	lsls	r1, r3, #28
 80089b6:	f100 8095 	bmi.w	8008ae4 <HAL_RCC_OscConfig+0x144>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80089ba:	682b      	ldr	r3, [r5, #0]
 80089bc:	075a      	lsls	r2, r3, #29
 80089be:	f100 80bf 	bmi.w	8008b40 <HAL_RCC_OscConfig+0x1a0>

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80089c2:	69ea      	ldr	r2, [r5, #28]
 80089c4:	2a00      	cmp	r2, #0
 80089c6:	f040 812d 	bne.w	8008c24 <HAL_RCC_OscConfig+0x284>
    {
      return HAL_ERROR;
    }
  }
  
  return HAL_OK;
 80089ca:	2000      	movs	r0, #0
 80089cc:	e014      	b.n	80089f8 <HAL_RCC_OscConfig+0x58>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80089ce:	4c90      	ldr	r4, [pc, #576]	; (8008c10 <HAL_RCC_OscConfig+0x270>)
 80089d0:	6863      	ldr	r3, [r4, #4]
 80089d2:	f003 030c 	and.w	r3, r3, #12
 80089d6:	2b04      	cmp	r3, #4
 80089d8:	d007      	beq.n	80089ea <HAL_RCC_OscConfig+0x4a>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80089da:	6863      	ldr	r3, [r4, #4]
 80089dc:	f003 030c 	and.w	r3, r3, #12
 80089e0:	2b08      	cmp	r3, #8
 80089e2:	d10c      	bne.n	80089fe <HAL_RCC_OscConfig+0x5e>
 80089e4:	6863      	ldr	r3, [r4, #4]
 80089e6:	03de      	lsls	r6, r3, #15
 80089e8:	d509      	bpl.n	80089fe <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80089ea:	6823      	ldr	r3, [r4, #0]
 80089ec:	039c      	lsls	r4, r3, #14
 80089ee:	d5dd      	bpl.n	80089ac <HAL_RCC_OscConfig+0xc>
 80089f0:	686b      	ldr	r3, [r5, #4]
 80089f2:	2b00      	cmp	r3, #0
 80089f4:	d1da      	bne.n	80089ac <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 80089f6:	2001      	movs	r0, #1
}
 80089f8:	b002      	add	sp, #8
 80089fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80089fe:	686b      	ldr	r3, [r5, #4]
 8008a00:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008a04:	d110      	bne.n	8008a28 <HAL_RCC_OscConfig+0x88>
 8008a06:	6823      	ldr	r3, [r4, #0]
 8008a08:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008a0c:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8008a0e:	f7ff fcfd 	bl	800840c <HAL_GetTick>
 8008a12:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008a14:	6823      	ldr	r3, [r4, #0]
 8008a16:	0398      	lsls	r0, r3, #14
 8008a18:	d4c8      	bmi.n	80089ac <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008a1a:	f7ff fcf7 	bl	800840c <HAL_GetTick>
 8008a1e:	1b80      	subs	r0, r0, r6
 8008a20:	2864      	cmp	r0, #100	; 0x64
 8008a22:	d9f7      	bls.n	8008a14 <HAL_RCC_OscConfig+0x74>
            return HAL_TIMEOUT;
 8008a24:	2003      	movs	r0, #3
 8008a26:	e7e7      	b.n	80089f8 <HAL_RCC_OscConfig+0x58>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008a28:	b99b      	cbnz	r3, 8008a52 <HAL_RCC_OscConfig+0xb2>
 8008a2a:	6823      	ldr	r3, [r4, #0]
 8008a2c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008a30:	6023      	str	r3, [r4, #0]
 8008a32:	6823      	ldr	r3, [r4, #0]
 8008a34:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008a38:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8008a3a:	f7ff fce7 	bl	800840c <HAL_GetTick>
 8008a3e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8008a40:	6823      	ldr	r3, [r4, #0]
 8008a42:	0399      	lsls	r1, r3, #14
 8008a44:	d5b2      	bpl.n	80089ac <HAL_RCC_OscConfig+0xc>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008a46:	f7ff fce1 	bl	800840c <HAL_GetTick>
 8008a4a:	1b80      	subs	r0, r0, r6
 8008a4c:	2864      	cmp	r0, #100	; 0x64
 8008a4e:	d9f7      	bls.n	8008a40 <HAL_RCC_OscConfig+0xa0>
 8008a50:	e7e8      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008a52:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008a56:	6823      	ldr	r3, [r4, #0]
 8008a58:	d103      	bne.n	8008a62 <HAL_RCC_OscConfig+0xc2>
 8008a5a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008a5e:	6023      	str	r3, [r4, #0]
 8008a60:	e7d1      	b.n	8008a06 <HAL_RCC_OscConfig+0x66>
 8008a62:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008a66:	6023      	str	r3, [r4, #0]
 8008a68:	6823      	ldr	r3, [r4, #0]
 8008a6a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008a6e:	e7cd      	b.n	8008a0c <HAL_RCC_OscConfig+0x6c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8008a70:	4c67      	ldr	r4, [pc, #412]	; (8008c10 <HAL_RCC_OscConfig+0x270>)
 8008a72:	6863      	ldr	r3, [r4, #4]
 8008a74:	f013 0f0c 	tst.w	r3, #12
 8008a78:	d007      	beq.n	8008a8a <HAL_RCC_OscConfig+0xea>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 8008a7a:	6863      	ldr	r3, [r4, #4]
 8008a7c:	f003 030c 	and.w	r3, r3, #12
 8008a80:	2b08      	cmp	r3, #8
 8008a82:	d110      	bne.n	8008aa6 <HAL_RCC_OscConfig+0x106>
 8008a84:	6863      	ldr	r3, [r4, #4]
 8008a86:	03da      	lsls	r2, r3, #15
 8008a88:	d40d      	bmi.n	8008aa6 <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008a8a:	6823      	ldr	r3, [r4, #0]
 8008a8c:	079b      	lsls	r3, r3, #30
 8008a8e:	d502      	bpl.n	8008a96 <HAL_RCC_OscConfig+0xf6>
 8008a90:	692b      	ldr	r3, [r5, #16]
 8008a92:	2b01      	cmp	r3, #1
 8008a94:	d1af      	bne.n	80089f6 <HAL_RCC_OscConfig+0x56>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008a96:	6823      	ldr	r3, [r4, #0]
 8008a98:	696a      	ldr	r2, [r5, #20]
 8008a9a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008a9e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008aa2:	6023      	str	r3, [r4, #0]
 8008aa4:	e785      	b.n	80089b2 <HAL_RCC_OscConfig+0x12>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8008aa6:	692a      	ldr	r2, [r5, #16]
 8008aa8:	4b5a      	ldr	r3, [pc, #360]	; (8008c14 <HAL_RCC_OscConfig+0x274>)
 8008aaa:	b16a      	cbz	r2, 8008ac8 <HAL_RCC_OscConfig+0x128>
        __HAL_RCC_HSI_ENABLE();
 8008aac:	2201      	movs	r2, #1
 8008aae:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008ab0:	f7ff fcac 	bl	800840c <HAL_GetTick>
 8008ab4:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008ab6:	6823      	ldr	r3, [r4, #0]
 8008ab8:	079f      	lsls	r7, r3, #30
 8008aba:	d4ec      	bmi.n	8008a96 <HAL_RCC_OscConfig+0xf6>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008abc:	f7ff fca6 	bl	800840c <HAL_GetTick>
 8008ac0:	1b80      	subs	r0, r0, r6
 8008ac2:	2802      	cmp	r0, #2
 8008ac4:	d9f7      	bls.n	8008ab6 <HAL_RCC_OscConfig+0x116>
 8008ac6:	e7ad      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_HSI_DISABLE();
 8008ac8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008aca:	f7ff fc9f 	bl	800840c <HAL_GetTick>
 8008ace:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008ad0:	6823      	ldr	r3, [r4, #0]
 8008ad2:	0798      	lsls	r0, r3, #30
 8008ad4:	f57f af6d 	bpl.w	80089b2 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008ad8:	f7ff fc98 	bl	800840c <HAL_GetTick>
 8008adc:	1b80      	subs	r0, r0, r6
 8008ade:	2802      	cmp	r0, #2
 8008ae0:	d9f6      	bls.n	8008ad0 <HAL_RCC_OscConfig+0x130>
 8008ae2:	e79f      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8008ae4:	69aa      	ldr	r2, [r5, #24]
 8008ae6:	4c4a      	ldr	r4, [pc, #296]	; (8008c10 <HAL_RCC_OscConfig+0x270>)
 8008ae8:	4b4b      	ldr	r3, [pc, #300]	; (8008c18 <HAL_RCC_OscConfig+0x278>)
 8008aea:	b1da      	cbz	r2, 8008b24 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8008aec:	2201      	movs	r2, #1
 8008aee:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8008af0:	f7ff fc8c 	bl	800840c <HAL_GetTick>
 8008af4:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008af6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008af8:	079b      	lsls	r3, r3, #30
 8008afa:	d50d      	bpl.n	8008b18 <HAL_RCC_OscConfig+0x178>
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8008afc:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 8008b00:	4b46      	ldr	r3, [pc, #280]	; (8008c1c <HAL_RCC_OscConfig+0x27c>)
 8008b02:	681b      	ldr	r3, [r3, #0]
 8008b04:	fbb3 f3f2 	udiv	r3, r3, r2
 8008b08:	9301      	str	r3, [sp, #4]
  \brief   No Operation
  \details No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
 8008b0a:	bf00      	nop
  do 
  {
    __NOP();
  } 
  while (Delay --);
 8008b0c:	9b01      	ldr	r3, [sp, #4]
 8008b0e:	1e5a      	subs	r2, r3, #1
 8008b10:	9201      	str	r2, [sp, #4]
 8008b12:	2b00      	cmp	r3, #0
 8008b14:	d1f9      	bne.n	8008b0a <HAL_RCC_OscConfig+0x16a>
 8008b16:	e750      	b.n	80089ba <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008b18:	f7ff fc78 	bl	800840c <HAL_GetTick>
 8008b1c:	1b80      	subs	r0, r0, r6
 8008b1e:	2802      	cmp	r0, #2
 8008b20:	d9e9      	bls.n	8008af6 <HAL_RCC_OscConfig+0x156>
 8008b22:	e77f      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_LSI_DISABLE();
 8008b24:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8008b26:	f7ff fc71 	bl	800840c <HAL_GetTick>
 8008b2a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008b2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008b2e:	079f      	lsls	r7, r3, #30
 8008b30:	f57f af43 	bpl.w	80089ba <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008b34:	f7ff fc6a 	bl	800840c <HAL_GetTick>
 8008b38:	1b80      	subs	r0, r0, r6
 8008b3a:	2802      	cmp	r0, #2
 8008b3c:	d9f6      	bls.n	8008b2c <HAL_RCC_OscConfig+0x18c>
 8008b3e:	e771      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008b40:	4c33      	ldr	r4, [pc, #204]	; (8008c10 <HAL_RCC_OscConfig+0x270>)
 8008b42:	69e3      	ldr	r3, [r4, #28]
 8008b44:	00d8      	lsls	r0, r3, #3
 8008b46:	d424      	bmi.n	8008b92 <HAL_RCC_OscConfig+0x1f2>
      pwrclkchanged = SET;
 8008b48:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8008b4a:	69e3      	ldr	r3, [r4, #28]
 8008b4c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008b50:	61e3      	str	r3, [r4, #28]
 8008b52:	69e3      	ldr	r3, [r4, #28]
 8008b54:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008b58:	9300      	str	r3, [sp, #0]
 8008b5a:	9b00      	ldr	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008b5c:	4e30      	ldr	r6, [pc, #192]	; (8008c20 <HAL_RCC_OscConfig+0x280>)
 8008b5e:	6833      	ldr	r3, [r6, #0]
 8008b60:	05d9      	lsls	r1, r3, #23
 8008b62:	d518      	bpl.n	8008b96 <HAL_RCC_OscConfig+0x1f6>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008b64:	68eb      	ldr	r3, [r5, #12]
 8008b66:	2b01      	cmp	r3, #1
 8008b68:	d126      	bne.n	8008bb8 <HAL_RCC_OscConfig+0x218>
 8008b6a:	6a23      	ldr	r3, [r4, #32]
 8008b6c:	f043 0301 	orr.w	r3, r3, #1
 8008b70:	6223      	str	r3, [r4, #32]
      tickstart = HAL_GetTick();
 8008b72:	f7ff fc4b 	bl	800840c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008b76:	f241 3688 	movw	r6, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8008b7a:	4680      	mov	r8, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008b7c:	6a23      	ldr	r3, [r4, #32]
 8008b7e:	079b      	lsls	r3, r3, #30
 8008b80:	d53f      	bpl.n	8008c02 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8008b82:	2f00      	cmp	r7, #0
 8008b84:	f43f af1d 	beq.w	80089c2 <HAL_RCC_OscConfig+0x22>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008b88:	69e3      	ldr	r3, [r4, #28]
 8008b8a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008b8e:	61e3      	str	r3, [r4, #28]
 8008b90:	e717      	b.n	80089c2 <HAL_RCC_OscConfig+0x22>
    FlagStatus       pwrclkchanged = RESET;
 8008b92:	2700      	movs	r7, #0
 8008b94:	e7e2      	b.n	8008b5c <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008b96:	6833      	ldr	r3, [r6, #0]
 8008b98:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008b9c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8008b9e:	f7ff fc35 	bl	800840c <HAL_GetTick>
 8008ba2:	4680      	mov	r8, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008ba4:	6833      	ldr	r3, [r6, #0]
 8008ba6:	05da      	lsls	r2, r3, #23
 8008ba8:	d4dc      	bmi.n	8008b64 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008baa:	f7ff fc2f 	bl	800840c <HAL_GetTick>
 8008bae:	eba0 0008 	sub.w	r0, r0, r8
 8008bb2:	2864      	cmp	r0, #100	; 0x64
 8008bb4:	d9f6      	bls.n	8008ba4 <HAL_RCC_OscConfig+0x204>
 8008bb6:	e735      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008bb8:	b9ab      	cbnz	r3, 8008be6 <HAL_RCC_OscConfig+0x246>
 8008bba:	6a23      	ldr	r3, [r4, #32]
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008bbc:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008bc0:	f023 0301 	bic.w	r3, r3, #1
 8008bc4:	6223      	str	r3, [r4, #32]
 8008bc6:	6a23      	ldr	r3, [r4, #32]
 8008bc8:	f023 0304 	bic.w	r3, r3, #4
 8008bcc:	6223      	str	r3, [r4, #32]
      tickstart = HAL_GetTick();
 8008bce:	f7ff fc1d 	bl	800840c <HAL_GetTick>
 8008bd2:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008bd4:	6a23      	ldr	r3, [r4, #32]
 8008bd6:	0798      	lsls	r0, r3, #30
 8008bd8:	d5d3      	bpl.n	8008b82 <HAL_RCC_OscConfig+0x1e2>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008bda:	f7ff fc17 	bl	800840c <HAL_GetTick>
 8008bde:	1b80      	subs	r0, r0, r6
 8008be0:	4540      	cmp	r0, r8
 8008be2:	d9f7      	bls.n	8008bd4 <HAL_RCC_OscConfig+0x234>
 8008be4:	e71e      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008be6:	2b05      	cmp	r3, #5
 8008be8:	6a23      	ldr	r3, [r4, #32]
 8008bea:	d103      	bne.n	8008bf4 <HAL_RCC_OscConfig+0x254>
 8008bec:	f043 0304 	orr.w	r3, r3, #4
 8008bf0:	6223      	str	r3, [r4, #32]
 8008bf2:	e7ba      	b.n	8008b6a <HAL_RCC_OscConfig+0x1ca>
 8008bf4:	f023 0301 	bic.w	r3, r3, #1
 8008bf8:	6223      	str	r3, [r4, #32]
 8008bfa:	6a23      	ldr	r3, [r4, #32]
 8008bfc:	f023 0304 	bic.w	r3, r3, #4
 8008c00:	e7b6      	b.n	8008b70 <HAL_RCC_OscConfig+0x1d0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008c02:	f7ff fc03 	bl	800840c <HAL_GetTick>
 8008c06:	eba0 0008 	sub.w	r0, r0, r8
 8008c0a:	42b0      	cmp	r0, r6
 8008c0c:	d9b6      	bls.n	8008b7c <HAL_RCC_OscConfig+0x1dc>
 8008c0e:	e709      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
 8008c10:	40021000 	.word	0x40021000
 8008c14:	42420000 	.word	0x42420000
 8008c18:	42420480 	.word	0x42420480
 8008c1c:	2000000c 	.word	0x2000000c
 8008c20:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8008c24:	4c22      	ldr	r4, [pc, #136]	; (8008cb0 <HAL_RCC_OscConfig+0x310>)
 8008c26:	6863      	ldr	r3, [r4, #4]
 8008c28:	f003 030c 	and.w	r3, r3, #12
 8008c2c:	2b08      	cmp	r3, #8
 8008c2e:	f43f aee2 	beq.w	80089f6 <HAL_RCC_OscConfig+0x56>
 8008c32:	2300      	movs	r3, #0
 8008c34:	4e1f      	ldr	r6, [pc, #124]	; (8008cb4 <HAL_RCC_OscConfig+0x314>)
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008c36:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8008c38:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008c3a:	d12b      	bne.n	8008c94 <HAL_RCC_OscConfig+0x2f4>
        tickstart = HAL_GetTick();
 8008c3c:	f7ff fbe6 	bl	800840c <HAL_GetTick>
 8008c40:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008c42:	6823      	ldr	r3, [r4, #0]
 8008c44:	0199      	lsls	r1, r3, #6
 8008c46:	d41f      	bmi.n	8008c88 <HAL_RCC_OscConfig+0x2e8>
        if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8008c48:	6a2b      	ldr	r3, [r5, #32]
 8008c4a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008c4e:	d105      	bne.n	8008c5c <HAL_RCC_OscConfig+0x2bc>
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8008c50:	6862      	ldr	r2, [r4, #4]
 8008c52:	68a9      	ldr	r1, [r5, #8]
 8008c54:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8008c58:	430a      	orrs	r2, r1
 8008c5a:	6062      	str	r2, [r4, #4]
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8008c5c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8008c5e:	6862      	ldr	r2, [r4, #4]
 8008c60:	430b      	orrs	r3, r1
 8008c62:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 8008c66:	4313      	orrs	r3, r2
 8008c68:	6063      	str	r3, [r4, #4]
        __HAL_RCC_PLL_ENABLE();
 8008c6a:	2301      	movs	r3, #1
 8008c6c:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8008c6e:	f7ff fbcd 	bl	800840c <HAL_GetTick>
 8008c72:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8008c74:	6823      	ldr	r3, [r4, #0]
 8008c76:	019a      	lsls	r2, r3, #6
 8008c78:	f53f aea7 	bmi.w	80089ca <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008c7c:	f7ff fbc6 	bl	800840c <HAL_GetTick>
 8008c80:	1b40      	subs	r0, r0, r5
 8008c82:	2802      	cmp	r0, #2
 8008c84:	d9f6      	bls.n	8008c74 <HAL_RCC_OscConfig+0x2d4>
 8008c86:	e6cd      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008c88:	f7ff fbc0 	bl	800840c <HAL_GetTick>
 8008c8c:	1bc0      	subs	r0, r0, r7
 8008c8e:	2802      	cmp	r0, #2
 8008c90:	d9d7      	bls.n	8008c42 <HAL_RCC_OscConfig+0x2a2>
 8008c92:	e6c7      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
        tickstart = HAL_GetTick();
 8008c94:	f7ff fbba 	bl	800840c <HAL_GetTick>
 8008c98:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008c9a:	6823      	ldr	r3, [r4, #0]
 8008c9c:	019b      	lsls	r3, r3, #6
 8008c9e:	f57f ae94 	bpl.w	80089ca <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008ca2:	f7ff fbb3 	bl	800840c <HAL_GetTick>
 8008ca6:	1b40      	subs	r0, r0, r5
 8008ca8:	2802      	cmp	r0, #2
 8008caa:	d9f6      	bls.n	8008c9a <HAL_RCC_OscConfig+0x2fa>
 8008cac:	e6ba      	b.n	8008a24 <HAL_RCC_OscConfig+0x84>
 8008cae:	bf00      	nop
 8008cb0:	40021000 	.word	0x40021000
 8008cb4:	42420060 	.word	0x42420060

08008cb8 <HAL_RCC_GetSysClockFreq>:
{
 8008cb8:	b530      	push	{r4, r5, lr}
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 8008cba:	4b19      	ldr	r3, [pc, #100]	; (8008d20 <HAL_RCC_GetSysClockFreq+0x68>)
{
 8008cbc:	b087      	sub	sp, #28
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 8008cbe:	ac02      	add	r4, sp, #8
 8008cc0:	f103 0510 	add.w	r5, r3, #16
 8008cc4:	4622      	mov	r2, r4
 8008cc6:	6818      	ldr	r0, [r3, #0]
 8008cc8:	6859      	ldr	r1, [r3, #4]
 8008cca:	3308      	adds	r3, #8
 8008ccc:	c203      	stmia	r2!, {r0, r1}
 8008cce:	42ab      	cmp	r3, r5
 8008cd0:	4614      	mov	r4, r2
 8008cd2:	d1f7      	bne.n	8008cc4 <HAL_RCC_GetSysClockFreq+0xc>
  const uint8_t aPredivFactorTable[2] = {1, 2};
 8008cd4:	2301      	movs	r3, #1
 8008cd6:	f88d 3004 	strb.w	r3, [sp, #4]
 8008cda:	2302      	movs	r3, #2
  tmpreg = RCC->CFGR;
 8008cdc:	4911      	ldr	r1, [pc, #68]	; (8008d24 <HAL_RCC_GetSysClockFreq+0x6c>)
  const uint8_t aPredivFactorTable[2] = {1, 2};
 8008cde:	f88d 3005 	strb.w	r3, [sp, #5]
  tmpreg = RCC->CFGR;
 8008ce2:	684b      	ldr	r3, [r1, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8008ce4:	f003 020c 	and.w	r2, r3, #12
 8008ce8:	2a08      	cmp	r2, #8
 8008cea:	d117      	bne.n	8008d1c <HAL_RCC_GetSysClockFreq+0x64>
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8008cec:	f3c3 4283 	ubfx	r2, r3, #18, #4
 8008cf0:	a806      	add	r0, sp, #24
 8008cf2:	4402      	add	r2, r0
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8008cf4:	03db      	lsls	r3, r3, #15
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8008cf6:	f812 2c10 	ldrb.w	r2, [r2, #-16]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8008cfa:	d50c      	bpl.n	8008d16 <HAL_RCC_GetSysClockFreq+0x5e>
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8008cfc:	684b      	ldr	r3, [r1, #4]
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8008cfe:	480a      	ldr	r0, [pc, #40]	; (8008d28 <HAL_RCC_GetSysClockFreq+0x70>)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8008d00:	f3c3 4340 	ubfx	r3, r3, #17, #1
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8008d04:	4350      	muls	r0, r2
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8008d06:	aa06      	add	r2, sp, #24
 8008d08:	4413      	add	r3, r2
 8008d0a:	f813 3c14 	ldrb.w	r3, [r3, #-20]
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8008d0e:	fbb0 f0f3 	udiv	r0, r0, r3
}
 8008d12:	b007      	add	sp, #28
 8008d14:	bd30      	pop	{r4, r5, pc}
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8008d16:	4805      	ldr	r0, [pc, #20]	; (8008d2c <HAL_RCC_GetSysClockFreq+0x74>)
 8008d18:	4350      	muls	r0, r2
 8008d1a:	e7fa      	b.n	8008d12 <HAL_RCC_GetSysClockFreq+0x5a>
      sysclockfreq = HSE_VALUE;
 8008d1c:	4802      	ldr	r0, [pc, #8]	; (8008d28 <HAL_RCC_GetSysClockFreq+0x70>)
  return sysclockfreq;
 8008d1e:	e7f8      	b.n	8008d12 <HAL_RCC_GetSysClockFreq+0x5a>
 8008d20:	08011388 	.word	0x08011388
 8008d24:	40021000 	.word	0x40021000
 8008d28:	007a1200 	.word	0x007a1200
 8008d2c:	003d0900 	.word	0x003d0900

08008d30 <HAL_RCC_ClockConfig>:
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8008d30:	4a4d      	ldr	r2, [pc, #308]	; (8008e68 <HAL_RCC_ClockConfig+0x138>)
{
 8008d32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8008d36:	6813      	ldr	r3, [r2, #0]
{
 8008d38:	4605      	mov	r5, r0
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8008d3a:	f003 0307 	and.w	r3, r3, #7
 8008d3e:	428b      	cmp	r3, r1
{
 8008d40:	460e      	mov	r6, r1
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8008d42:	d328      	bcc.n	8008d96 <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008d44:	682a      	ldr	r2, [r5, #0]
 8008d46:	0791      	lsls	r1, r2, #30
 8008d48:	d432      	bmi.n	8008db0 <HAL_RCC_ClockConfig+0x80>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008d4a:	07d2      	lsls	r2, r2, #31
 8008d4c:	d438      	bmi.n	8008dc0 <HAL_RCC_ClockConfig+0x90>
  if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 8008d4e:	4a46      	ldr	r2, [pc, #280]	; (8008e68 <HAL_RCC_ClockConfig+0x138>)
 8008d50:	6813      	ldr	r3, [r2, #0]
 8008d52:	f003 0307 	and.w	r3, r3, #7
 8008d56:	429e      	cmp	r6, r3
 8008d58:	d373      	bcc.n	8008e42 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008d5a:	682a      	ldr	r2, [r5, #0]
 8008d5c:	4c43      	ldr	r4, [pc, #268]	; (8008e6c <HAL_RCC_ClockConfig+0x13c>)
 8008d5e:	f012 0f04 	tst.w	r2, #4
 8008d62:	d179      	bne.n	8008e58 <HAL_RCC_ClockConfig+0x128>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008d64:	0713      	lsls	r3, r2, #28
 8008d66:	d506      	bpl.n	8008d76 <HAL_RCC_ClockConfig+0x46>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8008d68:	6863      	ldr	r3, [r4, #4]
 8008d6a:	692a      	ldr	r2, [r5, #16]
 8008d6c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8008d70:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008d74:	6063      	str	r3, [r4, #4]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8008d76:	f7ff ff9f 	bl	8008cb8 <HAL_RCC_GetSysClockFreq>
 8008d7a:	6863      	ldr	r3, [r4, #4]
 8008d7c:	4a3c      	ldr	r2, [pc, #240]	; (8008e70 <HAL_RCC_ClockConfig+0x140>)
 8008d7e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008d82:	5cd3      	ldrb	r3, [r2, r3]
 8008d84:	40d8      	lsrs	r0, r3
 8008d86:	4b3b      	ldr	r3, [pc, #236]	; (8008e74 <HAL_RCC_ClockConfig+0x144>)
 8008d88:	6018      	str	r0, [r3, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8008d8a:	2000      	movs	r0, #0
 8008d8c:	f7ff fafc 	bl	8008388 <HAL_InitTick>
  return HAL_OK;
 8008d90:	2000      	movs	r0, #0
}
 8008d92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008d96:	6813      	ldr	r3, [r2, #0]
 8008d98:	f023 0307 	bic.w	r3, r3, #7
 8008d9c:	430b      	orrs	r3, r1
 8008d9e:	6013      	str	r3, [r2, #0]
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8008da0:	6813      	ldr	r3, [r2, #0]
 8008da2:	f003 0307 	and.w	r3, r3, #7
 8008da6:	4299      	cmp	r1, r3
 8008da8:	d0cc      	beq.n	8008d44 <HAL_RCC_ClockConfig+0x14>
      return HAL_ERROR;
 8008daa:	2001      	movs	r0, #1
 8008dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008db0:	492e      	ldr	r1, [pc, #184]	; (8008e6c <HAL_RCC_ClockConfig+0x13c>)
 8008db2:	68a8      	ldr	r0, [r5, #8]
 8008db4:	684b      	ldr	r3, [r1, #4]
 8008db6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008dba:	4303      	orrs	r3, r0
 8008dbc:	604b      	str	r3, [r1, #4]
 8008dbe:	e7c4      	b.n	8008d4a <HAL_RCC_ClockConfig+0x1a>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008dc0:	686a      	ldr	r2, [r5, #4]
 8008dc2:	4c2a      	ldr	r4, [pc, #168]	; (8008e6c <HAL_RCC_ClockConfig+0x13c>)
 8008dc4:	2a01      	cmp	r2, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008dc6:	6823      	ldr	r3, [r4, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008dc8:	d11c      	bne.n	8008e04 <HAL_RCC_ClockConfig+0xd4>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008dca:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008dce:	d0ec      	beq.n	8008daa <HAL_RCC_ClockConfig+0x7a>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008dd0:	6863      	ldr	r3, [r4, #4]
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008dd2:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008dd6:	f023 0303 	bic.w	r3, r3, #3
 8008dda:	4313      	orrs	r3, r2
 8008ddc:	6063      	str	r3, [r4, #4]
    tickstart = HAL_GetTick();
 8008dde:	f7ff fb15 	bl	800840c <HAL_GetTick>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008de2:	686b      	ldr	r3, [r5, #4]
    tickstart = HAL_GetTick();
 8008de4:	4607      	mov	r7, r0
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008de6:	2b01      	cmp	r3, #1
 8008de8:	d114      	bne.n	8008e14 <HAL_RCC_ClockConfig+0xe4>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8008dea:	6863      	ldr	r3, [r4, #4]
 8008dec:	f003 030c 	and.w	r3, r3, #12
 8008df0:	2b04      	cmp	r3, #4
 8008df2:	d0ac      	beq.n	8008d4e <HAL_RCC_ClockConfig+0x1e>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008df4:	f7ff fb0a 	bl	800840c <HAL_GetTick>
 8008df8:	1bc0      	subs	r0, r0, r7
 8008dfa:	4540      	cmp	r0, r8
 8008dfc:	d9f5      	bls.n	8008dea <HAL_RCC_ClockConfig+0xba>
          return HAL_TIMEOUT;
 8008dfe:	2003      	movs	r0, #3
 8008e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8008e04:	2a02      	cmp	r2, #2
 8008e06:	d102      	bne.n	8008e0e <HAL_RCC_ClockConfig+0xde>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008e08:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8008e0c:	e7df      	b.n	8008dce <HAL_RCC_ClockConfig+0x9e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008e0e:	f013 0f02 	tst.w	r3, #2
 8008e12:	e7dc      	b.n	8008dce <HAL_RCC_ClockConfig+0x9e>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8008e14:	2b02      	cmp	r3, #2
 8008e16:	d10f      	bne.n	8008e38 <HAL_RCC_ClockConfig+0x108>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8008e18:	6863      	ldr	r3, [r4, #4]
 8008e1a:	f003 030c 	and.w	r3, r3, #12
 8008e1e:	2b08      	cmp	r3, #8
 8008e20:	d095      	beq.n	8008d4e <HAL_RCC_ClockConfig+0x1e>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008e22:	f7ff faf3 	bl	800840c <HAL_GetTick>
 8008e26:	1bc0      	subs	r0, r0, r7
 8008e28:	4540      	cmp	r0, r8
 8008e2a:	d9f5      	bls.n	8008e18 <HAL_RCC_ClockConfig+0xe8>
 8008e2c:	e7e7      	b.n	8008dfe <HAL_RCC_ClockConfig+0xce>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008e2e:	f7ff faed 	bl	800840c <HAL_GetTick>
 8008e32:	1bc0      	subs	r0, r0, r7
 8008e34:	4540      	cmp	r0, r8
 8008e36:	d8e2      	bhi.n	8008dfe <HAL_RCC_ClockConfig+0xce>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8008e38:	6863      	ldr	r3, [r4, #4]
 8008e3a:	f013 0f0c 	tst.w	r3, #12
 8008e3e:	d1f6      	bne.n	8008e2e <HAL_RCC_ClockConfig+0xfe>
 8008e40:	e785      	b.n	8008d4e <HAL_RCC_ClockConfig+0x1e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008e42:	6813      	ldr	r3, [r2, #0]
 8008e44:	f023 0307 	bic.w	r3, r3, #7
 8008e48:	4333      	orrs	r3, r6
 8008e4a:	6013      	str	r3, [r2, #0]
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8008e4c:	6813      	ldr	r3, [r2, #0]
 8008e4e:	f003 0307 	and.w	r3, r3, #7
 8008e52:	429e      	cmp	r6, r3
 8008e54:	d1a9      	bne.n	8008daa <HAL_RCC_ClockConfig+0x7a>
 8008e56:	e780      	b.n	8008d5a <HAL_RCC_ClockConfig+0x2a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008e58:	6863      	ldr	r3, [r4, #4]
 8008e5a:	68e9      	ldr	r1, [r5, #12]
 8008e5c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8008e60:	430b      	orrs	r3, r1
 8008e62:	6063      	str	r3, [r4, #4]
 8008e64:	e77e      	b.n	8008d64 <HAL_RCC_ClockConfig+0x34>
 8008e66:	bf00      	nop
 8008e68:	40022000 	.word	0x40022000
 8008e6c:	40021000 	.word	0x40021000
 8008e70:	08011bdb 	.word	0x08011bdb
 8008e74:	2000000c 	.word	0x2000000c

08008e78 <HAL_RCC_GetHCLKFreq>:
}
 8008e78:	4b01      	ldr	r3, [pc, #4]	; (8008e80 <HAL_RCC_GetHCLKFreq+0x8>)
 8008e7a:	6818      	ldr	r0, [r3, #0]
 8008e7c:	4770      	bx	lr
 8008e7e:	bf00      	nop
 8008e80:	2000000c 	.word	0x2000000c

08008e84 <HAL_RCC_GetPCLK1Freq>:
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8008e84:	4b04      	ldr	r3, [pc, #16]	; (8008e98 <HAL_RCC_GetPCLK1Freq+0x14>)
 8008e86:	4a05      	ldr	r2, [pc, #20]	; (8008e9c <HAL_RCC_GetPCLK1Freq+0x18>)
 8008e88:	685b      	ldr	r3, [r3, #4]
 8008e8a:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8008e8e:	5cd3      	ldrb	r3, [r2, r3]
 8008e90:	4a03      	ldr	r2, [pc, #12]	; (8008ea0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8008e92:	6810      	ldr	r0, [r2, #0]
}    
 8008e94:	40d8      	lsrs	r0, r3
 8008e96:	4770      	bx	lr
 8008e98:	40021000 	.word	0x40021000
 8008e9c:	08011beb 	.word	0x08011beb
 8008ea0:	2000000c 	.word	0x2000000c

08008ea4 <HAL_RCC_GetPCLK2Freq>:
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8008ea4:	4b04      	ldr	r3, [pc, #16]	; (8008eb8 <HAL_RCC_GetPCLK2Freq+0x14>)
 8008ea6:	4a05      	ldr	r2, [pc, #20]	; (8008ebc <HAL_RCC_GetPCLK2Freq+0x18>)
 8008ea8:	685b      	ldr	r3, [r3, #4]
 8008eaa:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8008eae:	5cd3      	ldrb	r3, [r2, r3]
 8008eb0:	4a03      	ldr	r2, [pc, #12]	; (8008ec0 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8008eb2:	6810      	ldr	r0, [r2, #0]
} 
 8008eb4:	40d8      	lsrs	r0, r3
 8008eb6:	4770      	bx	lr
 8008eb8:	40021000 	.word	0x40021000
 8008ebc:	08011beb 	.word	0x08011beb
 8008ec0:	2000000c 	.word	0x2000000c

08008ec4 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;

   /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008ec4:	6a03      	ldr	r3, [r0, #32]
{
 8008ec6:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008ec8:	f023 0301 	bic.w	r3, r3, #1
 8008ecc:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008ece:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008ed0:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008ed2:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008ed4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008ed6:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8008eda:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8008edc:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8008ede:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 8008ee2:	432b      	orrs	r3, r5

  if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008ee4:	4d0a      	ldr	r5, [pc, #40]	; (8008f10 <TIM_OC1_SetConfig+0x4c>)
 8008ee6:	42a8      	cmp	r0, r5
 8008ee8:	d10b      	bne.n	8008f02 <TIM_OC1_SetConfig+0x3e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8008eea:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8008eec:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8008ef0:	432b      	orrs	r3, r5
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8008ef2:	698e      	ldr	r6, [r1, #24]
 8008ef4:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008ef6:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 8008efa:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC1NE;
 8008efc:	f023 0304 	bic.w	r3, r3, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 8008f00:	432c      	orrs	r4, r5
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008f02:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008f04:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8008f06:	684a      	ldr	r2, [r1, #4]
 8008f08:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008f0a:	6203      	str	r3, [r0, #32]
 8008f0c:	bd70      	pop	{r4, r5, r6, pc}
 8008f0e:	bf00      	nop
 8008f10:	40012c00 	.word	0x40012c00

08008f14 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008f14:	6a03      	ldr	r3, [r0, #32]
{
 8008f16:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008f18:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008f1c:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008f1e:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008f20:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008f22:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008f24:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008f26:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8008f2a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008f2c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8008f2e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008f32:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008f36:	4d0b      	ldr	r5, [pc, #44]	; (8008f64 <TIM_OC3_SetConfig+0x50>)
 8008f38:	42a8      	cmp	r0, r5
 8008f3a:	d10d      	bne.n	8008f58 <TIM_OC3_SetConfig+0x44>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008f3c:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8008f3e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008f42:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008f46:	698e      	ldr	r6, [r1, #24]
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8008f48:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008f4a:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008f4e:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC3NE;
 8008f50:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008f54:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008f58:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008f5a:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8008f5c:	684a      	ldr	r2, [r1, #4]
 8008f5e:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008f60:	6203      	str	r3, [r0, #32]
 8008f62:	bd70      	pop	{r4, r5, r6, pc}
 8008f64:	40012c00 	.word	0x40012c00

08008f68 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8008f68:	6a03      	ldr	r3, [r0, #32]
{
 8008f6a:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8008f6c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008f70:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008f72:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008f74:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008f76:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008f78:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8008f7a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008f7e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008f82:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8008f84:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008f88:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if(IS_TIM_BREAK_INSTANCE(TIMx))
 8008f8c:	4d06      	ldr	r5, [pc, #24]	; (8008fa8 <TIM_OC4_SetConfig+0x40>)
 8008f8e:	42a8      	cmp	r0, r5
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

   /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6);
 8008f90:	bf02      	ittt	eq
 8008f92:	694d      	ldreq	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8008f94:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6);
 8008f98:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008f9c:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008f9e:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8008fa0:	684a      	ldr	r2, [r1, #4]
 8008fa2:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008fa4:	6203      	str	r3, [r0, #32]
 8008fa6:	bd30      	pop	{r4, r5, pc}
 8008fa8:	40012c00 	.word	0x40012c00

08008fac <HAL_TIM_Base_Start_IT>:
   __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008fac:	6803      	ldr	r3, [r0, #0]
}
 8008fae:	2000      	movs	r0, #0
   __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008fb0:	68da      	ldr	r2, [r3, #12]
 8008fb2:	f042 0201 	orr.w	r2, r2, #1
 8008fb6:	60da      	str	r2, [r3, #12]
  __HAL_TIM_ENABLE(htim);
 8008fb8:	681a      	ldr	r2, [r3, #0]
 8008fba:	f042 0201 	orr.w	r2, r2, #1
 8008fbe:	601a      	str	r2, [r3, #0]
}
 8008fc0:	4770      	bx	lr

08008fc2 <HAL_TIM_Base_Stop_IT>:
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 8008fc2:	6803      	ldr	r3, [r0, #0]
 8008fc4:	68da      	ldr	r2, [r3, #12]
 8008fc6:	f022 0201 	bic.w	r2, r2, #1
 8008fca:	60da      	str	r2, [r3, #12]
  __HAL_TIM_DISABLE(htim);
 8008fcc:	f241 1211 	movw	r2, #4369	; 0x1111
 8008fd0:	6a19      	ldr	r1, [r3, #32]
 8008fd2:	4211      	tst	r1, r2
 8008fd4:	d108      	bne.n	8008fe8 <HAL_TIM_Base_Stop_IT+0x26>
 8008fd6:	f240 4244 	movw	r2, #1092	; 0x444
 8008fda:	6a19      	ldr	r1, [r3, #32]
 8008fdc:	4211      	tst	r1, r2
 8008fde:	bf02      	ittt	eq
 8008fe0:	681a      	ldreq	r2, [r3, #0]
 8008fe2:	f022 0201 	biceq.w	r2, r2, #1
 8008fe6:	601a      	streq	r2, [r3, #0]
}
 8008fe8:	2000      	movs	r0, #0
 8008fea:	4770      	bx	lr

08008fec <HAL_TIM_PWM_MspInit>:
 8008fec:	4770      	bx	lr

08008fee <HAL_TIM_OnePulse_MspInit>:
 8008fee:	4770      	bx	lr

08008ff0 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 8008ff0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
{
 8008ff4:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 8008ff6:	2b01      	cmp	r3, #1
 8008ff8:	f04f 0302 	mov.w	r3, #2
 8008ffc:	d01c      	beq.n	8009038 <HAL_TIM_ConfigClockSource+0x48>
 8008ffe:	2201      	movs	r2, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8009000:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR;
 8009004:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(htim);
 8009006:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800900a:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800900c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8009010:	f022 0277 	bic.w	r2, r2, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 8009014:	609a      	str	r2, [r3, #8]
  switch (sClockSourceConfig->ClockSource)
 8009016:	680a      	ldr	r2, [r1, #0]
 8009018:	2a40      	cmp	r2, #64	; 0x40
 800901a:	d079      	beq.n	8009110 <HAL_TIM_ConfigClockSource+0x120>
 800901c:	d819      	bhi.n	8009052 <HAL_TIM_ConfigClockSource+0x62>
 800901e:	2a10      	cmp	r2, #16
 8009020:	f000 8093 	beq.w	800914a <HAL_TIM_ConfigClockSource+0x15a>
 8009024:	d80a      	bhi.n	800903c <HAL_TIM_ConfigClockSource+0x4c>
 8009026:	2a00      	cmp	r2, #0
 8009028:	f000 8089 	beq.w	800913e <HAL_TIM_ConfigClockSource+0x14e>
  htim->State = HAL_TIM_STATE_READY;
 800902c:	2301      	movs	r3, #1
 800902e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8009032:	2300      	movs	r3, #0
 8009034:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8009038:	4618      	mov	r0, r3
}
 800903a:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 800903c:	2a20      	cmp	r2, #32
 800903e:	f000 808a 	beq.w	8009156 <HAL_TIM_ConfigClockSource+0x166>
 8009042:	2a30      	cmp	r2, #48	; 0x30
 8009044:	d1f2      	bne.n	800902c <HAL_TIM_ConfigClockSource+0x3c>
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t InputTriggerSource)
{
  uint32_t tmpsmcr = 0U;

   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 8009046:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 8009048:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 800904c:	f042 0237 	orr.w	r2, r2, #55	; 0x37
 8009050:	e036      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
  switch (sClockSourceConfig->ClockSource)
 8009052:	2a70      	cmp	r2, #112	; 0x70
 8009054:	d036      	beq.n	80090c4 <HAL_TIM_ConfigClockSource+0xd4>
 8009056:	d81b      	bhi.n	8009090 <HAL_TIM_ConfigClockSource+0xa0>
 8009058:	2a50      	cmp	r2, #80	; 0x50
 800905a:	d042      	beq.n	80090e2 <HAL_TIM_ConfigClockSource+0xf2>
 800905c:	2a60      	cmp	r2, #96	; 0x60
 800905e:	d1e5      	bne.n	800902c <HAL_TIM_ConfigClockSource+0x3c>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009060:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8009062:	684d      	ldr	r5, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009064:	f024 0410 	bic.w	r4, r4, #16
      TIM_TI2_ConfigInputStage(htim->Instance,
 8009068:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800906a:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800906c:	6999      	ldr	r1, [r3, #24]
  tmpccer = TIMx->CCER;
 800906e:	6a1a      	ldr	r2, [r3, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8009070:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8009074:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 8009078:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800907c:	ea41 3106 	orr.w	r1, r1, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 8009080:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 8009082:	621a      	str	r2, [r3, #32]
   tmpsmcr = TIMx->SMCR;
 8009084:	689a      	ldr	r2, [r3, #8]
   tmpsmcr &= ~TIM_SMCR_TS;
 8009086:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 800908a:	f042 0267 	orr.w	r2, r2, #103	; 0x67
 800908e:	e017      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
  switch (sClockSourceConfig->ClockSource)
 8009090:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8009094:	d011      	beq.n	80090ba <HAL_TIM_ConfigClockSource+0xca>
 8009096:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800909a:	d1c7      	bne.n	800902c <HAL_TIM_ConfigClockSource+0x3c>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800909c:	688a      	ldr	r2, [r1, #8]
 800909e:	684d      	ldr	r5, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 80090a0:	689c      	ldr	r4, [r3, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80090a2:	68c9      	ldr	r1, [r1, #12]
 80090a4:	432a      	orrs	r2, r5
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80090a6:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80090aa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80090ae:	4322      	orrs	r2, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80090b0:	609a      	str	r2, [r3, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80090b2:	689a      	ldr	r2, [r3, #8]
 80090b4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80090b8:	e002      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
      htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 80090ba:	689a      	ldr	r2, [r3, #8]
 80090bc:	f022 0207 	bic.w	r2, r2, #7
   TIMx->SMCR = tmpsmcr;
 80090c0:	609a      	str	r2, [r3, #8]
 80090c2:	e7b3      	b.n	800902c <HAL_TIM_ConfigClockSource+0x3c>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80090c4:	688a      	ldr	r2, [r1, #8]
 80090c6:	684d      	ldr	r5, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 80090c8:	689c      	ldr	r4, [r3, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80090ca:	68c9      	ldr	r1, [r1, #12]
 80090cc:	432a      	orrs	r2, r5
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80090ce:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80090d2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80090d6:	4322      	orrs	r2, r4
  TIMx->SMCR = tmpsmcr;
 80090d8:	609a      	str	r2, [r3, #8]
      tmpsmcr = htim->Instance->SMCR;
 80090da:	689a      	ldr	r2, [r3, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80090dc:	f042 0277 	orr.w	r2, r2, #119	; 0x77
 80090e0:	e7ee      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80090e2:	684c      	ldr	r4, [r1, #4]
 80090e4:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 80090e6:	6a19      	ldr	r1, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80090e8:	6a1d      	ldr	r5, [r3, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80090ea:	f021 010a 	bic.w	r1, r1, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80090ee:	f025 0501 	bic.w	r5, r5, #1
 80090f2:	621d      	str	r5, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80090f4:	699a      	ldr	r2, [r3, #24]
  tmpccer |= TIM_ICPolarity;
 80090f6:	4321      	orrs	r1, r4
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80090f8:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80090fc:	ea42 1206 	orr.w	r2, r2, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8009100:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8009102:	6219      	str	r1, [r3, #32]
   tmpsmcr = TIMx->SMCR;
 8009104:	689a      	ldr	r2, [r3, #8]
   tmpsmcr &= ~TIM_SMCR_TS;
 8009106:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 800910a:	f042 0257 	orr.w	r2, r2, #87	; 0x57
 800910e:	e7d7      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8009110:	684c      	ldr	r4, [r1, #4]
 8009112:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8009114:	6a19      	ldr	r1, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8009116:	6a1d      	ldr	r5, [r3, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8009118:	f021 010a 	bic.w	r1, r1, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800911c:	f025 0501 	bic.w	r5, r5, #1
 8009120:	621d      	str	r5, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8009122:	699a      	ldr	r2, [r3, #24]
  tmpccer |= TIM_ICPolarity;
 8009124:	4321      	orrs	r1, r4
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8009126:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800912a:	ea42 1206 	orr.w	r2, r2, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800912e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8009130:	6219      	str	r1, [r3, #32]
   tmpsmcr = TIMx->SMCR;
 8009132:	689a      	ldr	r2, [r3, #8]
   tmpsmcr &= ~TIM_SMCR_TS;
 8009134:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 8009138:	f042 0247 	orr.w	r2, r2, #71	; 0x47
 800913c:	e7c0      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
   tmpsmcr = TIMx->SMCR;
 800913e:	689a      	ldr	r2, [r3, #8]
   tmpsmcr &= ~TIM_SMCR_TS;
 8009140:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 8009144:	f042 0207 	orr.w	r2, r2, #7
 8009148:	e7ba      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
   tmpsmcr = TIMx->SMCR;
 800914a:	689a      	ldr	r2, [r3, #8]
   tmpsmcr &= ~TIM_SMCR_TS;
 800914c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 8009150:	f042 0217 	orr.w	r2, r2, #23
 8009154:	e7b4      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>
   tmpsmcr = TIMx->SMCR;
 8009156:	689a      	ldr	r2, [r3, #8]
   tmpsmcr &= ~TIM_SMCR_TS;
 8009158:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 800915c:	f042 0227 	orr.w	r2, r2, #39	; 0x27
 8009160:	e7ae      	b.n	80090c0 <HAL_TIM_ConfigClockSource+0xd0>

08009162 <HAL_TIM_OC_DelayElapsedCallback>:
 8009162:	4770      	bx	lr

08009164 <HAL_TIM_IC_CaptureCallback>:
 8009164:	4770      	bx	lr

08009166 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009166:	4770      	bx	lr

08009168 <HAL_TIM_TriggerCallback>:
 8009168:	4770      	bx	lr

0800916a <HAL_TIM_IRQHandler>:
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800916a:	6803      	ldr	r3, [r0, #0]
{
 800916c:	b510      	push	{r4, lr}
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800916e:	691a      	ldr	r2, [r3, #16]
{
 8009170:	4604      	mov	r4, r0
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009172:	0791      	lsls	r1, r2, #30
 8009174:	d50e      	bpl.n	8009194 <HAL_TIM_IRQHandler+0x2a>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) !=RESET)
 8009176:	68da      	ldr	r2, [r3, #12]
 8009178:	0792      	lsls	r2, r2, #30
 800917a:	d50b      	bpl.n	8009194 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800917c:	f06f 0202 	mvn.w	r2, #2
 8009180:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009182:	2201      	movs	r2, #1
        if((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009184:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009186:	7702      	strb	r2, [r0, #28]
        if((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009188:	079b      	lsls	r3, r3, #30
 800918a:	d077      	beq.n	800927c <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800918c:	f7ff ffea 	bl	8009164 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009190:	2300      	movs	r3, #0
 8009192:	7723      	strb	r3, [r4, #28]
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8009194:	6823      	ldr	r3, [r4, #0]
 8009196:	691a      	ldr	r2, [r3, #16]
 8009198:	0750      	lsls	r0, r2, #29
 800919a:	d510      	bpl.n	80091be <HAL_TIM_IRQHandler+0x54>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) !=RESET)
 800919c:	68da      	ldr	r2, [r3, #12]
 800919e:	0751      	lsls	r1, r2, #29
 80091a0:	d50d      	bpl.n	80091be <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80091a2:	f06f 0204 	mvn.w	r2, #4
 80091a6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80091a8:	2202      	movs	r2, #2
      if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80091aa:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80091ac:	7722      	strb	r2, [r4, #28]
      if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80091ae:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80091b2:	4620      	mov	r0, r4
      if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80091b4:	d068      	beq.n	8009288 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80091b6:	f7ff ffd5 	bl	8009164 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80091ba:	2300      	movs	r3, #0
 80091bc:	7723      	strb	r3, [r4, #28]
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80091be:	6823      	ldr	r3, [r4, #0]
 80091c0:	691a      	ldr	r2, [r3, #16]
 80091c2:	0712      	lsls	r2, r2, #28
 80091c4:	d50f      	bpl.n	80091e6 <HAL_TIM_IRQHandler+0x7c>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) !=RESET)
 80091c6:	68da      	ldr	r2, [r3, #12]
 80091c8:	0710      	lsls	r0, r2, #28
 80091ca:	d50c      	bpl.n	80091e6 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80091cc:	f06f 0208 	mvn.w	r2, #8
 80091d0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80091d2:	2204      	movs	r2, #4
      if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80091d4:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80091d6:	7722      	strb	r2, [r4, #28]
      if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80091d8:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80091da:	4620      	mov	r0, r4
      if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80091dc:	d05a      	beq.n	8009294 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80091de:	f7ff ffc1 	bl	8009164 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80091e2:	2300      	movs	r3, #0
 80091e4:	7723      	strb	r3, [r4, #28]
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80091e6:	6823      	ldr	r3, [r4, #0]
 80091e8:	691a      	ldr	r2, [r3, #16]
 80091ea:	06d2      	lsls	r2, r2, #27
 80091ec:	d510      	bpl.n	8009210 <HAL_TIM_IRQHandler+0xa6>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) !=RESET)
 80091ee:	68da      	ldr	r2, [r3, #12]
 80091f0:	06d0      	lsls	r0, r2, #27
 80091f2:	d50d      	bpl.n	8009210 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80091f4:	f06f 0210 	mvn.w	r2, #16
 80091f8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80091fa:	2208      	movs	r2, #8
      if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80091fc:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80091fe:	7722      	strb	r2, [r4, #28]
      if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009200:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8009204:	4620      	mov	r0, r4
      if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009206:	d04b      	beq.n	80092a0 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8009208:	f7ff ffac 	bl	8009164 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800920c:	2300      	movs	r3, #0
 800920e:	7723      	strb	r3, [r4, #28]
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8009210:	6823      	ldr	r3, [r4, #0]
 8009212:	691a      	ldr	r2, [r3, #16]
 8009214:	07d1      	lsls	r1, r2, #31
 8009216:	d508      	bpl.n	800922a <HAL_TIM_IRQHandler+0xc0>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) !=RESET)
 8009218:	68da      	ldr	r2, [r3, #12]
 800921a:	07d2      	lsls	r2, r2, #31
 800921c:	d505      	bpl.n	800922a <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800921e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 8009222:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8009224:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8009226:	f001 fe69 	bl	800aefc <HAL_TIM_PeriodElapsedCallback>
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800922a:	6823      	ldr	r3, [r4, #0]
 800922c:	691a      	ldr	r2, [r3, #16]
 800922e:	0610      	lsls	r0, r2, #24
 8009230:	d508      	bpl.n	8009244 <HAL_TIM_IRQHandler+0xda>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) !=RESET)
 8009232:	68da      	ldr	r2, [r3, #12]
 8009234:	0611      	lsls	r1, r2, #24
 8009236:	d505      	bpl.n	8009244 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009238:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
 800923c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800923e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009240:	f000 f999 	bl	8009576 <HAL_TIMEx_BreakCallback>
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009244:	6823      	ldr	r3, [r4, #0]
 8009246:	691a      	ldr	r2, [r3, #16]
 8009248:	0652      	lsls	r2, r2, #25
 800924a:	d508      	bpl.n	800925e <HAL_TIM_IRQHandler+0xf4>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) !=RESET)
 800924c:	68da      	ldr	r2, [r3, #12]
 800924e:	0650      	lsls	r0, r2, #25
 8009250:	d505      	bpl.n	800925e <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009252:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
 8009256:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009258:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800925a:	f7ff ff85 	bl	8009168 <HAL_TIM_TriggerCallback>
  if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800925e:	6823      	ldr	r3, [r4, #0]
 8009260:	691a      	ldr	r2, [r3, #16]
 8009262:	0691      	lsls	r1, r2, #26
 8009264:	d522      	bpl.n	80092ac <HAL_TIM_IRQHandler+0x142>
    if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) !=RESET)
 8009266:	68da      	ldr	r2, [r3, #12]
 8009268:	0692      	lsls	r2, r2, #26
 800926a:	d51f      	bpl.n	80092ac <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800926c:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutationCallback(htim);
 8009270:	4620      	mov	r0, r4
}
 8009272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009276:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutationCallback(htim);
 8009278:	f000 b97c 	b.w	8009574 <HAL_TIMEx_CommutationCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800927c:	f7ff ff71 	bl	8009162 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009280:	4620      	mov	r0, r4
 8009282:	f7ff ff70 	bl	8009166 <HAL_TIM_PWM_PulseFinishedCallback>
 8009286:	e783      	b.n	8009190 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009288:	f7ff ff6b 	bl	8009162 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800928c:	4620      	mov	r0, r4
 800928e:	f7ff ff6a 	bl	8009166 <HAL_TIM_PWM_PulseFinishedCallback>
 8009292:	e792      	b.n	80091ba <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009294:	f7ff ff65 	bl	8009162 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009298:	4620      	mov	r0, r4
 800929a:	f7ff ff64 	bl	8009166 <HAL_TIM_PWM_PulseFinishedCallback>
 800929e:	e7a0      	b.n	80091e2 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80092a0:	f7ff ff5f 	bl	8009162 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80092a4:	4620      	mov	r0, r4
 80092a6:	f7ff ff5e 	bl	8009166 <HAL_TIM_PWM_PulseFinishedCallback>
 80092aa:	e7af      	b.n	800920c <HAL_TIM_IRQHandler+0xa2>
 80092ac:	bd10      	pop	{r4, pc}
	...

080092b0 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80092b0:	4a1a      	ldr	r2, [pc, #104]	; (800931c <TIM_Base_SetConfig+0x6c>)
  tmpcr1 = TIMx->CR1;
 80092b2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80092b4:	4290      	cmp	r0, r2
 80092b6:	d00a      	beq.n	80092ce <TIM_Base_SetConfig+0x1e>
 80092b8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80092bc:	d007      	beq.n	80092ce <TIM_Base_SetConfig+0x1e>
 80092be:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80092c2:	4290      	cmp	r0, r2
 80092c4:	d003      	beq.n	80092ce <TIM_Base_SetConfig+0x1e>
 80092c6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80092ca:	4290      	cmp	r0, r2
 80092cc:	d115      	bne.n	80092fa <TIM_Base_SetConfig+0x4a>
    tmpcr1 |= Structure->CounterMode;
 80092ce:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80092d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80092d4:	4313      	orrs	r3, r2
  if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80092d6:	4a11      	ldr	r2, [pc, #68]	; (800931c <TIM_Base_SetConfig+0x6c>)
 80092d8:	4290      	cmp	r0, r2
 80092da:	d00a      	beq.n	80092f2 <TIM_Base_SetConfig+0x42>
 80092dc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80092e0:	d007      	beq.n	80092f2 <TIM_Base_SetConfig+0x42>
 80092e2:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80092e6:	4290      	cmp	r0, r2
 80092e8:	d003      	beq.n	80092f2 <TIM_Base_SetConfig+0x42>
 80092ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80092ee:	4290      	cmp	r0, r2
 80092f0:	d103      	bne.n	80092fa <TIM_Base_SetConfig+0x4a>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80092f2:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80092f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80092f8:	4313      	orrs	r3, r2
  tmpcr1 |= (uint32_t)Structure->AutoReloadPreload;
 80092fa:	694a      	ldr	r2, [r1, #20]
  tmpcr1 &= ~TIM_CR1_ARPE;
 80092fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  tmpcr1 |= (uint32_t)Structure->AutoReloadPreload;
 8009300:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8009302:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009304:	688b      	ldr	r3, [r1, #8]
 8009306:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = (uint32_t)Structure->Prescaler;
 8009308:	680b      	ldr	r3, [r1, #0]
 800930a:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800930c:	4b03      	ldr	r3, [pc, #12]	; (800931c <TIM_Base_SetConfig+0x6c>)
 800930e:	4298      	cmp	r0, r3
    TIMx->RCR = Structure->RepetitionCounter;
 8009310:	bf04      	itt	eq
 8009312:	690b      	ldreq	r3, [r1, #16]
 8009314:	6303      	streq	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8009316:	2301      	movs	r3, #1
 8009318:	6143      	str	r3, [r0, #20]
 800931a:	4770      	bx	lr
 800931c:	40012c00 	.word	0x40012c00

08009320 <HAL_TIM_Base_Init>:
{
 8009320:	b510      	push	{r4, lr}
  if(htim == NULL)
 8009322:	4604      	mov	r4, r0
 8009324:	b1a0      	cbz	r0, 8009350 <HAL_TIM_Base_Init+0x30>
  if(htim->State == HAL_TIM_STATE_RESET)
 8009326:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800932a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800932e:	b91b      	cbnz	r3, 8009338 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009330:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009334:	f002 f940 	bl	800b5b8 <HAL_TIM_Base_MspInit>
  htim->State= HAL_TIM_STATE_BUSY;
 8009338:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800933a:	6820      	ldr	r0, [r4, #0]
  htim->State= HAL_TIM_STATE_BUSY;
 800933c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009340:	1d21      	adds	r1, r4, #4
 8009342:	f7ff ffb5 	bl	80092b0 <TIM_Base_SetConfig>
  htim->State= HAL_TIM_STATE_READY;
 8009346:	2301      	movs	r3, #1
  return HAL_OK;
 8009348:	2000      	movs	r0, #0
  htim->State= HAL_TIM_STATE_READY;
 800934a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800934e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009350:	2001      	movs	r0, #1
}
 8009352:	bd10      	pop	{r4, pc}

08009354 <HAL_TIM_PWM_Init>:
{
 8009354:	b510      	push	{r4, lr}
  if(htim == NULL)
 8009356:	4604      	mov	r4, r0
 8009358:	b1a0      	cbz	r0, 8009384 <HAL_TIM_PWM_Init+0x30>
  if(htim->State == HAL_TIM_STATE_RESET)
 800935a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800935e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009362:	b91b      	cbnz	r3, 800936c <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009364:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8009368:	f7ff fe40 	bl	8008fec <HAL_TIM_PWM_MspInit>
  htim->State= HAL_TIM_STATE_BUSY;
 800936c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800936e:	6820      	ldr	r0, [r4, #0]
  htim->State= HAL_TIM_STATE_BUSY;
 8009370:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009374:	1d21      	adds	r1, r4, #4
 8009376:	f7ff ff9b 	bl	80092b0 <TIM_Base_SetConfig>
  htim->State= HAL_TIM_STATE_READY;
 800937a:	2301      	movs	r3, #1
  return HAL_OK;
 800937c:	2000      	movs	r0, #0
  htim->State= HAL_TIM_STATE_READY;
 800937e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8009382:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009384:	2001      	movs	r0, #1
}
 8009386:	bd10      	pop	{r4, pc}

08009388 <HAL_TIM_OnePulse_Init>:
{
 8009388:	b538      	push	{r3, r4, r5, lr}
 800938a:	460d      	mov	r5, r1
  if(htim == NULL)
 800938c:	4604      	mov	r4, r0
 800938e:	b1e0      	cbz	r0, 80093ca <HAL_TIM_OnePulse_Init+0x42>
  if(htim->State == HAL_TIM_STATE_RESET)
 8009390:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009394:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009398:	b91b      	cbnz	r3, 80093a2 <HAL_TIM_OnePulse_Init+0x1a>
    htim->Lock = HAL_UNLOCKED;
 800939a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_OnePulse_MspInit(htim);
 800939e:	f7ff fe26 	bl	8008fee <HAL_TIM_OnePulse_MspInit>
  htim->State= HAL_TIM_STATE_BUSY;
 80093a2:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80093a4:	1d21      	adds	r1, r4, #4
  htim->State= HAL_TIM_STATE_BUSY;
 80093a6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80093aa:	6820      	ldr	r0, [r4, #0]
 80093ac:	f7ff ff80 	bl	80092b0 <TIM_Base_SetConfig>
  htim->Instance->CR1 &= ~TIM_CR1_OPM;
 80093b0:	6823      	ldr	r3, [r4, #0]
  return HAL_OK;
 80093b2:	2000      	movs	r0, #0
  htim->Instance->CR1 &= ~TIM_CR1_OPM;
 80093b4:	681a      	ldr	r2, [r3, #0]
 80093b6:	f022 0208 	bic.w	r2, r2, #8
 80093ba:	601a      	str	r2, [r3, #0]
  htim->Instance->CR1 |= OnePulseMode;
 80093bc:	6819      	ldr	r1, [r3, #0]
 80093be:	4329      	orrs	r1, r5
 80093c0:	6019      	str	r1, [r3, #0]
  htim->State= HAL_TIM_STATE_READY;
 80093c2:	2301      	movs	r3, #1
 80093c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80093c8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80093ca:	2001      	movs	r0, #1
}
 80093cc:	bd38      	pop	{r3, r4, r5, pc}
	...

080093d0 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80093d0:	6a03      	ldr	r3, [r0, #32]
{
 80093d2:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80093d4:	f023 0310 	bic.w	r3, r3, #16
 80093d8:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 80093da:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 80093dc:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 80093de:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80093e0:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80093e2:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80093e6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80093ea:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 80093ec:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80093f0:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80093f4:	4d0b      	ldr	r5, [pc, #44]	; (8009424 <TIM_OC2_SetConfig+0x54>)
 80093f6:	42a8      	cmp	r0, r5
 80093f8:	d10d      	bne.n	8009416 <TIM_OC2_SetConfig+0x46>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80093fa:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 80093fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8009400:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2);
 8009404:	698e      	ldr	r6, [r1, #24]
    tmpcr2 |= (OC_Config->OCIdleState << 2);
 8009406:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8009408:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2);
 800940c:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 800940e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2);
 8009412:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8009416:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8009418:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800941a:	684a      	ldr	r2, [r1, #4]
 800941c:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800941e:	6203      	str	r3, [r0, #32]
 8009420:	bd70      	pop	{r4, r5, r6, pc}
 8009422:	bf00      	nop
 8009424:	40012c00 	.word	0x40012c00

08009428 <HAL_TIM_PWM_ConfigChannel>:
{
 8009428:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 800942a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
{
 800942e:	4604      	mov	r4, r0
  __HAL_LOCK(htim);
 8009430:	2b01      	cmp	r3, #1
 8009432:	f04f 0002 	mov.w	r0, #2
 8009436:	d025      	beq.n	8009484 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8009438:	2301      	movs	r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
 800943a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  __HAL_LOCK(htim);
 800943e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  switch (Channel)
 8009442:	2a0c      	cmp	r2, #12
 8009444:	d818      	bhi.n	8009478 <HAL_TIM_PWM_ConfigChannel+0x50>
 8009446:	e8df f002 	tbb	[pc, r2]
 800944a:	1707      	.short	0x1707
 800944c:	171e1717 	.word	0x171e1717
 8009450:	172f1717 	.word	0x172f1717
 8009454:	1717      	.short	0x1717
 8009456:	40          	.byte	0x40
 8009457:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8009458:	6820      	ldr	r0, [r4, #0]
 800945a:	f7ff fd33 	bl	8008ec4 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800945e:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8009460:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8009462:	699a      	ldr	r2, [r3, #24]
 8009464:	f042 0208 	orr.w	r2, r2, #8
 8009468:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800946a:	699a      	ldr	r2, [r3, #24]
 800946c:	f022 0204 	bic.w	r2, r2, #4
 8009470:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8009472:	699a      	ldr	r2, [r3, #24]
 8009474:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8;
 8009476:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 8009478:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800947a:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800947c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8009480:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8009484:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8009486:	6820      	ldr	r0, [r4, #0]
 8009488:	f7ff ffa2 	bl	80093d0 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800948c:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8;
 800948e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8009490:	699a      	ldr	r2, [r3, #24]
 8009492:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009496:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8009498:	699a      	ldr	r2, [r3, #24]
 800949a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800949e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8;
 80094a0:	699a      	ldr	r2, [r3, #24]
 80094a2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80094a6:	e7e6      	b.n	8009476 <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80094a8:	6820      	ldr	r0, [r4, #0]
 80094aa:	f7ff fd33 	bl	8008f14 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80094ae:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80094b0:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80094b2:	69da      	ldr	r2, [r3, #28]
 80094b4:	f042 0208 	orr.w	r2, r2, #8
 80094b8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80094ba:	69da      	ldr	r2, [r3, #28]
 80094bc:	f022 0204 	bic.w	r2, r2, #4
 80094c0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80094c2:	69da      	ldr	r2, [r3, #28]
 80094c4:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8;
 80094c6:	61da      	str	r2, [r3, #28]
    break;
 80094c8:	e7d6      	b.n	8009478 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80094ca:	6820      	ldr	r0, [r4, #0]
 80094cc:	f7ff fd4c 	bl	8008f68 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80094d0:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8;
 80094d2:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80094d4:	69da      	ldr	r2, [r3, #28]
 80094d6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80094da:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80094dc:	69da      	ldr	r2, [r3, #28]
 80094de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80094e2:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8;
 80094e4:	69da      	ldr	r2, [r3, #28]
 80094e6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80094ea:	e7ec      	b.n	80094c6 <HAL_TIM_PWM_ConfigChannel+0x9e>

080094ec <TIM_CCxChannelCmd>:
  * @param  ChannelState : specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_Disable.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef* TIMx, uint32_t Channel, uint32_t ChannelState)
{
 80094ec:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << Channel;
 80094ee:	2401      	movs	r4, #1

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 80094f0:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << Channel;
 80094f2:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 80094f4:	ea23 0304 	bic.w	r3, r3, r4
 80094f8:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |=  (uint32_t)(ChannelState << Channel);
 80094fa:	6a03      	ldr	r3, [r0, #32]
 80094fc:	408a      	lsls	r2, r1
 80094fe:	431a      	orrs	r2, r3
 8009500:	6202      	str	r2, [r0, #32]
 8009502:	bd10      	pop	{r4, pc}

08009504 <HAL_TIM_PWM_Start>:
{
 8009504:	b510      	push	{r4, lr}
 8009506:	4604      	mov	r4, r0
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8009508:	2201      	movs	r2, #1
 800950a:	6800      	ldr	r0, [r0, #0]
 800950c:	f7ff ffee 	bl	80094ec <TIM_CCxChannelCmd>
  if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8009510:	6823      	ldr	r3, [r4, #0]
 8009512:	4a06      	ldr	r2, [pc, #24]	; (800952c <HAL_TIM_PWM_Start+0x28>)
}
 8009514:	2000      	movs	r0, #0
  if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8009516:	4293      	cmp	r3, r2
    __HAL_TIM_MOE_ENABLE(htim);
 8009518:	bf02      	ittt	eq
 800951a:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 800951c:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 8009520:	645a      	streq	r2, [r3, #68]	; 0x44
  __HAL_TIM_ENABLE(htim);
 8009522:	681a      	ldr	r2, [r3, #0]
 8009524:	f042 0201 	orr.w	r2, r2, #1
 8009528:	601a      	str	r2, [r3, #0]
}
 800952a:	bd10      	pop	{r4, pc}
 800952c:	40012c00 	.word	0x40012c00

08009530 <HAL_TIMEx_MasterConfigSynchronization>:
  /* Check the parameters */
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  __HAL_LOCK(htim);
 8009530:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
{
 8009534:	b510      	push	{r4, lr}
  __HAL_LOCK(htim);
 8009536:	2b01      	cmp	r3, #1
 8009538:	f04f 0302 	mov.w	r3, #2
 800953c:	d018      	beq.n	8009570 <HAL_TIMEx_MasterConfigSynchronization+0x40>

  htim->State = HAL_TIM_STATE_BUSY;
 800953e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Reset the MMS Bits */
  htim->Instance->CR2 &= ~TIM_CR2_MMS;
 8009542:	6803      	ldr	r3, [r0, #0]
  /* Select the TRGO source */
  htim->Instance->CR2 |=  sMasterConfig->MasterOutputTrigger;
 8009544:	680c      	ldr	r4, [r1, #0]
  htim->Instance->CR2 &= ~TIM_CR2_MMS;
 8009546:	685a      	ldr	r2, [r3, #4]

  /* Reset the MSM Bit */
  htim->Instance->SMCR &= ~TIM_SMCR_MSM;
  /* Set or Reset the MSM Bit */
  htim->Instance->SMCR |= sMasterConfig->MasterSlaveMode;
 8009548:	6849      	ldr	r1, [r1, #4]
  htim->Instance->CR2 &= ~TIM_CR2_MMS;
 800954a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800954e:	605a      	str	r2, [r3, #4]
  htim->Instance->CR2 |=  sMasterConfig->MasterOutputTrigger;
 8009550:	685a      	ldr	r2, [r3, #4]
 8009552:	4322      	orrs	r2, r4
 8009554:	605a      	str	r2, [r3, #4]
  htim->Instance->SMCR &= ~TIM_SMCR_MSM;
 8009556:	689a      	ldr	r2, [r3, #8]
 8009558:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800955c:	609a      	str	r2, [r3, #8]
  htim->Instance->SMCR |= sMasterConfig->MasterSlaveMode;
 800955e:	689a      	ldr	r2, [r3, #8]
 8009560:	430a      	orrs	r2, r1
 8009562:	609a      	str	r2, [r3, #8]

  htim->State = HAL_TIM_STATE_READY;
 8009564:	2301      	movs	r3, #1
 8009566:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800956a:	2300      	movs	r3, #0
 800956c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8009570:	4618      	mov	r0, r3

  return HAL_OK;
}
 8009572:	bd10      	pop	{r4, pc}

08009574 <HAL_TIMEx_CommutationCallback>:
 8009574:	4770      	bx	lr

08009576 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non blocking mode
  * @param  htim : TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8009576:	4770      	bx	lr

08009578 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8009578:	6803      	ldr	r3, [r0, #0]
 800957a:	68da      	ldr	r2, [r3, #12]
 800957c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8009580:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009582:	695a      	ldr	r2, [r3, #20]
 8009584:	f022 0201 	bic.w	r2, r2, #1
 8009588:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800958a:	2320      	movs	r3, #32
 800958c:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
 8009590:	4770      	bx	lr
	...

08009594 <UART_SetConfig>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8009594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*------- UART-associated USART registers setting : CR2 Configuration ------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
   * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8009598:	6805      	ldr	r5, [r0, #0]
 800959a:	68c2      	ldr	r2, [r0, #12]
 800959c:	692b      	ldr	r3, [r5, #16]
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
  MODIFY_REG(huart->Instance->CR1, 
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8), 
             tmpreg);
#else
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 800959e:	6901      	ldr	r1, [r0, #16]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80095a0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80095a4:	4313      	orrs	r3, r2
 80095a6:	612b      	str	r3, [r5, #16]
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 80095a8:	6883      	ldr	r3, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, 
 80095aa:	68ea      	ldr	r2, [r5, #12]
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 80095ac:	430b      	orrs	r3, r1
 80095ae:	6941      	ldr	r1, [r0, #20]
  MODIFY_REG(huart->Instance->CR1, 
 80095b0:	f422 52b0 	bic.w	r2, r2, #5632	; 0x1600
 80095b4:	f022 020c 	bic.w	r2, r2, #12
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 80095b8:	430b      	orrs	r3, r1
  MODIFY_REG(huart->Instance->CR1, 
 80095ba:	4313      	orrs	r3, r2
 80095bc:	60eb      	str	r3, [r5, #12]
             tmpreg);
#endif /* USART_CR1_OVER8 */

  /*------- UART-associated USART registers setting : CR3 Configuration ------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80095be:	696b      	ldr	r3, [r5, #20]
 80095c0:	6982      	ldr	r2, [r0, #24]
 80095c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80095c6:	4313      	orrs	r3, r2
 80095c8:	616b      	str	r3, [r5, #20]
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
    }
  }
#else
  /*-------------------------- USART BRR Configuration ---------------------*/
  if(huart->Instance == USART1)
 80095ca:	4b40      	ldr	r3, [pc, #256]	; (80096cc <UART_SetConfig+0x138>)
{
 80095cc:	4681      	mov	r9, r0
  if(huart->Instance == USART1)
 80095ce:	429d      	cmp	r5, r3
 80095d0:	f04f 0419 	mov.w	r4, #25
 80095d4:	d146      	bne.n	8009664 <UART_SetConfig+0xd0>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 80095d6:	f7ff fc65 	bl	8008ea4 <HAL_RCC_GetPCLK2Freq>
 80095da:	fb04 f300 	mul.w	r3, r4, r0
 80095de:	f8d9 6004 	ldr.w	r6, [r9, #4]
 80095e2:	f04f 0864 	mov.w	r8, #100	; 0x64
 80095e6:	00b6      	lsls	r6, r6, #2
 80095e8:	fbb3 f3f6 	udiv	r3, r3, r6
 80095ec:	fbb3 f3f8 	udiv	r3, r3, r8
 80095f0:	011e      	lsls	r6, r3, #4
 80095f2:	f7ff fc57 	bl	8008ea4 <HAL_RCC_GetPCLK2Freq>
 80095f6:	4360      	muls	r0, r4
 80095f8:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80095fc:	009b      	lsls	r3, r3, #2
 80095fe:	fbb0 f7f3 	udiv	r7, r0, r3
 8009602:	f7ff fc4f 	bl	8008ea4 <HAL_RCC_GetPCLK2Freq>
 8009606:	4360      	muls	r0, r4
 8009608:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800960c:	009b      	lsls	r3, r3, #2
 800960e:	fbb0 f3f3 	udiv	r3, r0, r3
 8009612:	fbb3 f3f8 	udiv	r3, r3, r8
 8009616:	fb08 7313 	mls	r3, r8, r3, r7
 800961a:	011b      	lsls	r3, r3, #4
 800961c:	3332      	adds	r3, #50	; 0x32
 800961e:	fbb3 f3f8 	udiv	r3, r3, r8
 8009622:	f003 07f0 	and.w	r7, r3, #240	; 0xf0
 8009626:	f7ff fc3d 	bl	8008ea4 <HAL_RCC_GetPCLK2Freq>
 800962a:	4360      	muls	r0, r4
 800962c:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8009630:	0092      	lsls	r2, r2, #2
 8009632:	fbb0 faf2 	udiv	sl, r0, r2
 8009636:	f7ff fc35 	bl	8008ea4 <HAL_RCC_GetPCLK2Freq>
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800963a:	4360      	muls	r0, r4
 800963c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8009640:	009b      	lsls	r3, r3, #2
 8009642:	fbb0 f3f3 	udiv	r3, r0, r3
 8009646:	fbb3 f3f8 	udiv	r3, r3, r8
 800964a:	fb08 a313 	mls	r3, r8, r3, sl
 800964e:	011b      	lsls	r3, r3, #4
 8009650:	3332      	adds	r3, #50	; 0x32
 8009652:	fbb3 f3f8 	udiv	r3, r3, r8
 8009656:	f003 030f 	and.w	r3, r3, #15
 800965a:	433b      	orrs	r3, r7
 800965c:	4433      	add	r3, r6
 800965e:	60ab      	str	r3, [r5, #8]
 8009660:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009664:	f7ff fc0e 	bl	8008e84 <HAL_RCC_GetPCLK1Freq>
 8009668:	fb04 f300 	mul.w	r3, r4, r0
 800966c:	f8d9 6004 	ldr.w	r6, [r9, #4]
 8009670:	f04f 0864 	mov.w	r8, #100	; 0x64
 8009674:	00b6      	lsls	r6, r6, #2
 8009676:	fbb3 f3f6 	udiv	r3, r3, r6
 800967a:	fbb3 f3f8 	udiv	r3, r3, r8
 800967e:	011e      	lsls	r6, r3, #4
 8009680:	f7ff fc00 	bl	8008e84 <HAL_RCC_GetPCLK1Freq>
 8009684:	4360      	muls	r0, r4
 8009686:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800968a:	009b      	lsls	r3, r3, #2
 800968c:	fbb0 f7f3 	udiv	r7, r0, r3
 8009690:	f7ff fbf8 	bl	8008e84 <HAL_RCC_GetPCLK1Freq>
 8009694:	4360      	muls	r0, r4
 8009696:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800969a:	009b      	lsls	r3, r3, #2
 800969c:	fbb0 f3f3 	udiv	r3, r0, r3
 80096a0:	fbb3 f3f8 	udiv	r3, r3, r8
 80096a4:	fb08 7313 	mls	r3, r8, r3, r7
 80096a8:	011b      	lsls	r3, r3, #4
 80096aa:	3332      	adds	r3, #50	; 0x32
 80096ac:	fbb3 f3f8 	udiv	r3, r3, r8
 80096b0:	f003 07f0 	and.w	r7, r3, #240	; 0xf0
 80096b4:	f7ff fbe6 	bl	8008e84 <HAL_RCC_GetPCLK1Freq>
 80096b8:	4360      	muls	r0, r4
 80096ba:	f8d9 2004 	ldr.w	r2, [r9, #4]
 80096be:	0092      	lsls	r2, r2, #2
 80096c0:	fbb0 faf2 	udiv	sl, r0, r2
 80096c4:	f7ff fbde 	bl	8008e84 <HAL_RCC_GetPCLK1Freq>
 80096c8:	e7b7      	b.n	800963a <UART_SetConfig+0xa6>
 80096ca:	bf00      	nop
 80096cc:	40013800 	.word	0x40013800

080096d0 <HAL_UART_Init>:
{
 80096d0:	b510      	push	{r4, lr}
  if(huart == NULL)
 80096d2:	4604      	mov	r4, r0
 80096d4:	b340      	cbz	r0, 8009728 <HAL_UART_Init+0x58>
  if(huart->gState == HAL_UART_STATE_RESET)
 80096d6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80096da:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80096de:	b91b      	cbnz	r3, 80096e8 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 80096e0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 80096e4:	f001 ffae 	bl	800b644 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 80096e8:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 80096ea:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80096ec:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 80096f0:	68d3      	ldr	r3, [r2, #12]
  UART_SetConfig(huart);
 80096f2:	4620      	mov	r0, r4
  __HAL_UART_DISABLE(huart);
 80096f4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80096f8:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 80096fa:	f7ff ff4b 	bl	8009594 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80096fe:	6823      	ldr	r3, [r4, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009700:	2000      	movs	r0, #0
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8009702:	691a      	ldr	r2, [r3, #16]
 8009704:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8009708:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800970a:	695a      	ldr	r2, [r3, #20]
 800970c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8009710:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8009712:	68da      	ldr	r2, [r3, #12]
 8009714:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009718:	60da      	str	r2, [r3, #12]
  huart->gState= HAL_UART_STATE_READY;
 800971a:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800971c:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState= HAL_UART_STATE_READY;
 800971e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState= HAL_UART_STATE_READY;
 8009722:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
  return HAL_OK;
 8009726:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009728:	2001      	movs	r0, #1
}
 800972a:	bd10      	pop	{r4, pc}

0800972c <HAL_UART_Transmit_DMA>:
{
 800972c:	b538      	push	{r3, r4, r5, lr}
 800972e:	4604      	mov	r4, r0
 8009730:	4613      	mov	r3, r2
  if(huart->gState == HAL_UART_STATE_READY)
 8009732:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8009736:	2a20      	cmp	r2, #32
 8009738:	d12a      	bne.n	8009790 <HAL_UART_Transmit_DMA+0x64>
    if((pData == NULL) || (Size == 0U))
 800973a:	b339      	cbz	r1, 800978c <HAL_UART_Transmit_DMA+0x60>
 800973c:	b333      	cbz	r3, 800978c <HAL_UART_Transmit_DMA+0x60>
    __HAL_LOCK(huart);
 800973e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8009742:	2a01      	cmp	r2, #1
 8009744:	d024      	beq.n	8009790 <HAL_UART_Transmit_DMA+0x64>
 8009746:	2201      	movs	r2, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009748:	2500      	movs	r5, #0
    __HAL_LOCK(huart);
 800974a:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800974e:	2221      	movs	r2, #33	; 0x21
    huart->TxXferCount = Size;
 8009750:	84e3      	strh	r3, [r4, #38]	; 0x26
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 8009752:	6b20      	ldr	r0, [r4, #48]	; 0x30
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009754:	63e5      	str	r5, [r4, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8009756:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 800975a:	4a0e      	ldr	r2, [pc, #56]	; (8009794 <HAL_UART_Transmit_DMA+0x68>)
    huart->TxXferSize = Size;
 800975c:	84a3      	strh	r3, [r4, #36]	; 0x24
    huart->pTxBuffPtr = pData;
 800975e:	6221      	str	r1, [r4, #32]
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 8009760:	6282      	str	r2, [r0, #40]	; 0x28
    huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 8009762:	4a0d      	ldr	r2, [pc, #52]	; (8009798 <HAL_UART_Transmit_DMA+0x6c>)
    huart->hdmatx->XferAbortCallback = NULL;
 8009764:	6345      	str	r5, [r0, #52]	; 0x34
    huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 8009766:	62c2      	str	r2, [r0, #44]	; 0x2c
    huart->hdmatx->XferErrorCallback = UART_DMAError;
 8009768:	4a0c      	ldr	r2, [pc, #48]	; (800979c <HAL_UART_Transmit_DMA+0x70>)
 800976a:	6302      	str	r2, [r0, #48]	; 0x30
    HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 800976c:	6822      	ldr	r2, [r4, #0]
 800976e:	3204      	adds	r2, #4
 8009770:	f7fe ff00 	bl	8008574 <HAL_DMA_Start_IT>
    __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 8009774:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009778:	6823      	ldr	r3, [r4, #0]
    return HAL_OK;
 800977a:	4628      	mov	r0, r5
    __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 800977c:	601a      	str	r2, [r3, #0]
    SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 800977e:	695a      	ldr	r2, [r3, #20]
    __HAL_UNLOCK(huart);
 8009780:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
    SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8009784:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8009788:	615a      	str	r2, [r3, #20]
    return HAL_OK;
 800978a:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
 800978c:	2001      	movs	r0, #1
 800978e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_BUSY;
 8009790:	2002      	movs	r0, #2
}
 8009792:	bd38      	pop	{r3, r4, r5, pc}
 8009794:	08009831 	.word	0x08009831
 8009798:	0800985f 	.word	0x0800985f
 800979c:	0800992b 	.word	0x0800992b

080097a0 <HAL_UART_Receive_DMA>:
{
 80097a0:	4613      	mov	r3, r2
  if(huart->RxState == HAL_UART_STATE_READY) 
 80097a2:	f890 203a 	ldrb.w	r2, [r0, #58]	; 0x3a
{
 80097a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(huart->RxState == HAL_UART_STATE_READY) 
 80097a8:	2a20      	cmp	r2, #32
{
 80097aa:	4605      	mov	r5, r0
  if(huart->RxState == HAL_UART_STATE_READY) 
 80097ac:	d138      	bne.n	8009820 <HAL_UART_Receive_DMA+0x80>
    if((pData == NULL) || (Size == 0U))
 80097ae:	2900      	cmp	r1, #0
 80097b0:	d034      	beq.n	800981c <HAL_UART_Receive_DMA+0x7c>
 80097b2:	2b00      	cmp	r3, #0
 80097b4:	d032      	beq.n	800981c <HAL_UART_Receive_DMA+0x7c>
    __HAL_LOCK(huart);
 80097b6:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 80097ba:	2a01      	cmp	r2, #1
 80097bc:	d030      	beq.n	8009820 <HAL_UART_Receive_DMA+0x80>
 80097be:	2201      	movs	r2, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80097c0:	2400      	movs	r4, #0
    __HAL_LOCK(huart);
 80097c2:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 80097c6:	2222      	movs	r2, #34	; 0x22
    huart->pRxBuffPtr = pData;
 80097c8:	6281      	str	r1, [r0, #40]	; 0x28
    huart->RxXferSize = Size;
 80097ca:	8583      	strh	r3, [r0, #44]	; 0x2c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80097cc:	63c4      	str	r4, [r0, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 80097ce:	f880 203a 	strb.w	r2, [r0, #58]	; 0x3a
    huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 80097d2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80097d4:	4a13      	ldr	r2, [pc, #76]	; (8009824 <HAL_UART_Receive_DMA+0x84>)
    HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 80097d6:	682e      	ldr	r6, [r5, #0]
    huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 80097d8:	6282      	str	r2, [r0, #40]	; 0x28
    huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 80097da:	4a13      	ldr	r2, [pc, #76]	; (8009828 <HAL_UART_Receive_DMA+0x88>)
    huart->hdmarx->XferAbortCallback = NULL;
 80097dc:	6344      	str	r4, [r0, #52]	; 0x34
    huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 80097de:	62c2      	str	r2, [r0, #44]	; 0x2c
    huart->hdmarx->XferErrorCallback = UART_DMAError;
 80097e0:	4a12      	ldr	r2, [pc, #72]	; (800982c <HAL_UART_Receive_DMA+0x8c>)
 80097e2:	6302      	str	r2, [r0, #48]	; 0x30
    HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 80097e4:	460a      	mov	r2, r1
 80097e6:	1d31      	adds	r1, r6, #4
 80097e8:	f7fe fec4 	bl	8008574 <HAL_DMA_Start_IT>
    return HAL_OK;
 80097ec:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_OREFLAG(huart);
 80097ee:	682b      	ldr	r3, [r5, #0]
 80097f0:	9401      	str	r4, [sp, #4]
 80097f2:	681a      	ldr	r2, [r3, #0]
 80097f4:	9201      	str	r2, [sp, #4]
 80097f6:	685a      	ldr	r2, [r3, #4]
    __HAL_UNLOCK(huart);
 80097f8:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
    __HAL_UART_CLEAR_OREFLAG(huart);
 80097fc:	9201      	str	r2, [sp, #4]
 80097fe:	9a01      	ldr	r2, [sp, #4]
    SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009800:	68da      	ldr	r2, [r3, #12]
 8009802:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009806:	60da      	str	r2, [r3, #12]
    SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009808:	695a      	ldr	r2, [r3, #20]
 800980a:	f042 0201 	orr.w	r2, r2, #1
 800980e:	615a      	str	r2, [r3, #20]
    SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009810:	695a      	ldr	r2, [r3, #20]
 8009812:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009816:	615a      	str	r2, [r3, #20]
}
 8009818:	b002      	add	sp, #8
 800981a:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_ERROR;
 800981c:	2001      	movs	r0, #1
 800981e:	e7fb      	b.n	8009818 <HAL_UART_Receive_DMA+0x78>
    return HAL_BUSY;
 8009820:	2002      	movs	r0, #2
 8009822:	e7f9      	b.n	8009818 <HAL_UART_Receive_DMA+0x78>
 8009824:	08009869 	.word	0x08009869
 8009828:	0800991f 	.word	0x0800991f
 800982c:	0800992b 	.word	0x0800992b

08009830 <UART_DMATransmitCplt>:
{
 8009830:	b508      	push	{r3, lr}
  if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8009832:	6803      	ldr	r3, [r0, #0]
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8009834:	6a42      	ldr	r2, [r0, #36]	; 0x24
  if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8009836:	681b      	ldr	r3, [r3, #0]
 8009838:	f013 0320 	ands.w	r3, r3, #32
 800983c:	d10a      	bne.n	8009854 <UART_DMATransmitCplt+0x24>
    huart->TxXferCount = 0U;
 800983e:	84d3      	strh	r3, [r2, #38]	; 0x26
    CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8009840:	6813      	ldr	r3, [r2, #0]
 8009842:	695a      	ldr	r2, [r3, #20]
 8009844:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009848:	615a      	str	r2, [r3, #20]
    SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800984a:	68da      	ldr	r2, [r3, #12]
 800984c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009850:	60da      	str	r2, [r3, #12]
 8009852:	bd08      	pop	{r3, pc}
    HAL_UART_TxCpltCallback(huart);
 8009854:	4610      	mov	r0, r2
 8009856:	f001 fb1f 	bl	800ae98 <HAL_UART_TxCpltCallback>
 800985a:	bd08      	pop	{r3, pc}

0800985c <HAL_UART_TxHalfCpltCallback>:
 800985c:	4770      	bx	lr

0800985e <UART_DMATxHalfCplt>:
{
 800985e:	b508      	push	{r3, lr}
  HAL_UART_TxHalfCpltCallback(huart);
 8009860:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8009862:	f7ff fffb 	bl	800985c <HAL_UART_TxHalfCpltCallback>
 8009866:	bd08      	pop	{r3, pc}

08009868 <UART_DMAReceiveCplt>:
{
 8009868:	b508      	push	{r3, lr}
  if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 800986a:	6803      	ldr	r3, [r0, #0]
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 800986c:	6a42      	ldr	r2, [r0, #36]	; 0x24
  if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 800986e:	681b      	ldr	r3, [r3, #0]
 8009870:	f013 0320 	ands.w	r3, r3, #32
 8009874:	d110      	bne.n	8009898 <UART_DMAReceiveCplt+0x30>
    huart->RxXferCount = 0U;
 8009876:	85d3      	strh	r3, [r2, #46]	; 0x2e
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009878:	6813      	ldr	r3, [r2, #0]
 800987a:	68d9      	ldr	r1, [r3, #12]
 800987c:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8009880:	60d9      	str	r1, [r3, #12]
    CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009882:	6959      	ldr	r1, [r3, #20]
 8009884:	f021 0101 	bic.w	r1, r1, #1
 8009888:	6159      	str	r1, [r3, #20]
    CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800988a:	6959      	ldr	r1, [r3, #20]
 800988c:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8009890:	6159      	str	r1, [r3, #20]
    huart->RxState = HAL_UART_STATE_READY;
 8009892:	2320      	movs	r3, #32
 8009894:	f882 303a 	strb.w	r3, [r2, #58]	; 0x3a
  HAL_UART_RxCpltCallback(huart);
 8009898:	4610      	mov	r0, r2
 800989a:	f001 fae9 	bl	800ae70 <HAL_UART_RxCpltCallback>
 800989e:	bd08      	pop	{r3, pc}

080098a0 <UART_Receive_IT>:
  if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
 80098a0:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
{
 80098a4:	b510      	push	{r4, lr}
  if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
 80098a6:	2b22      	cmp	r3, #34	; 0x22
 80098a8:	d136      	bne.n	8009918 <UART_Receive_IT+0x78>
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 80098aa:	6883      	ldr	r3, [r0, #8]
 80098ac:	6901      	ldr	r1, [r0, #16]
 80098ae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80098b2:	6802      	ldr	r2, [r0, #0]
 80098b4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80098b6:	d123      	bne.n	8009900 <UART_Receive_IT+0x60>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80098b8:	6852      	ldr	r2, [r2, #4]
      if(huart->Init.Parity == UART_PARITY_NONE)
 80098ba:	b9e9      	cbnz	r1, 80098f8 <UART_Receive_IT+0x58>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80098bc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80098c0:	f823 2b02 	strh.w	r2, [r3], #2
        huart->pRxBuffPtr += 1U;
 80098c4:	6283      	str	r3, [r0, #40]	; 0x28
    if(--huart->RxXferCount == 0U)
 80098c6:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 80098c8:	3c01      	subs	r4, #1
 80098ca:	b2a4      	uxth	r4, r4
 80098cc:	85c4      	strh	r4, [r0, #46]	; 0x2e
 80098ce:	b98c      	cbnz	r4, 80098f4 <UART_Receive_IT+0x54>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 80098d0:	6803      	ldr	r3, [r0, #0]
 80098d2:	68da      	ldr	r2, [r3, #12]
 80098d4:	f022 0220 	bic.w	r2, r2, #32
 80098d8:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 80098da:	68da      	ldr	r2, [r3, #12]
 80098dc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80098e0:	60da      	str	r2, [r3, #12]
        __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 80098e2:	695a      	ldr	r2, [r3, #20]
 80098e4:	f022 0201 	bic.w	r2, r2, #1
 80098e8:	615a      	str	r2, [r3, #20]
      huart->RxState = HAL_UART_STATE_READY;
 80098ea:	2320      	movs	r3, #32
 80098ec:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
      HAL_UART_RxCpltCallback(huart);
 80098f0:	f001 fabe 	bl	800ae70 <HAL_UART_RxCpltCallback>
    if(--huart->RxXferCount == 0U)
 80098f4:	2000      	movs	r0, #0
}
 80098f6:	bd10      	pop	{r4, pc}
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 80098f8:	b2d2      	uxtb	r2, r2
 80098fa:	f823 2b01 	strh.w	r2, [r3], #1
 80098fe:	e7e1      	b.n	80098c4 <UART_Receive_IT+0x24>
      if(huart->Init.Parity == UART_PARITY_NONE)
 8009900:	b921      	cbnz	r1, 800990c <UART_Receive_IT+0x6c>
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8009902:	1c59      	adds	r1, r3, #1
 8009904:	6852      	ldr	r2, [r2, #4]
 8009906:	6281      	str	r1, [r0, #40]	; 0x28
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8009908:	701a      	strb	r2, [r3, #0]
 800990a:	e7dc      	b.n	80098c6 <UART_Receive_IT+0x26>
 800990c:	6852      	ldr	r2, [r2, #4]
 800990e:	1c59      	adds	r1, r3, #1
 8009910:	6281      	str	r1, [r0, #40]	; 0x28
 8009912:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8009916:	e7f7      	b.n	8009908 <UART_Receive_IT+0x68>
    return HAL_BUSY;
 8009918:	2002      	movs	r0, #2
 800991a:	bd10      	pop	{r4, pc}

0800991c <HAL_UART_RxHalfCpltCallback>:
 800991c:	4770      	bx	lr

0800991e <UART_DMARxHalfCplt>:
{
 800991e:	b508      	push	{r3, lr}
  HAL_UART_RxHalfCpltCallback(huart); 
 8009920:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8009922:	f7ff fffb 	bl	800991c <HAL_UART_RxHalfCpltCallback>
 8009926:	bd08      	pop	{r3, pc}

08009928 <HAL_UART_ErrorCallback>:
 8009928:	4770      	bx	lr

0800992a <UART_DMAError>:
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 800992a:	6a41      	ldr	r1, [r0, #36]	; 0x24
{
 800992c:	b508      	push	{r3, lr}
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 800992e:	680b      	ldr	r3, [r1, #0]
 8009930:	695a      	ldr	r2, [r3, #20]
  if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 8009932:	f891 0039 	ldrb.w	r0, [r1, #57]	; 0x39
 8009936:	2821      	cmp	r0, #33	; 0x21
 8009938:	d10a      	bne.n	8009950 <UART_DMAError+0x26>
 800993a:	0612      	lsls	r2, r2, #24
 800993c:	d508      	bpl.n	8009950 <UART_DMAError+0x26>
    huart->TxXferCount = 0U;
 800993e:	2200      	movs	r2, #0
 8009940:	84ca      	strh	r2, [r1, #38]	; 0x26
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8009942:	68da      	ldr	r2, [r3, #12]
 8009944:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8009948:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 800994a:	2220      	movs	r2, #32
 800994c:	f881 2039 	strb.w	r2, [r1, #57]	; 0x39
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
 8009950:	695b      	ldr	r3, [r3, #20]
  if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 8009952:	f891 203a 	ldrb.w	r2, [r1, #58]	; 0x3a
 8009956:	2a22      	cmp	r2, #34	; 0x22
 8009958:	d106      	bne.n	8009968 <UART_DMAError+0x3e>
 800995a:	065b      	lsls	r3, r3, #25
 800995c:	d504      	bpl.n	8009968 <UART_DMAError+0x3e>
    huart->RxXferCount = 0U;
 800995e:	2300      	movs	r3, #0
    UART_EndRxTransfer(huart);
 8009960:	4608      	mov	r0, r1
    huart->RxXferCount = 0U;
 8009962:	85cb      	strh	r3, [r1, #46]	; 0x2e
    UART_EndRxTransfer(huart);
 8009964:	f7ff fe08 	bl	8009578 <UART_EndRxTransfer>
  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 8009968:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  HAL_UART_ErrorCallback(huart);
 800996a:	4608      	mov	r0, r1
  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 800996c:	f043 0310 	orr.w	r3, r3, #16
 8009970:	63cb      	str	r3, [r1, #60]	; 0x3c
  HAL_UART_ErrorCallback(huart);
 8009972:	f7ff ffd9 	bl	8009928 <HAL_UART_ErrorCallback>
 8009976:	bd08      	pop	{r3, pc}

08009978 <HAL_UART_IRQHandler>:
   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8009978:	6803      	ldr	r3, [r0, #0]
{
 800997a:	b570      	push	{r4, r5, r6, lr}
   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 800997c:	681a      	ldr	r2, [r3, #0]
{
 800997e:	4604      	mov	r4, r0
  if(errorflags == RESET)
 8009980:	0716      	lsls	r6, r2, #28
   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8009982:	68d9      	ldr	r1, [r3, #12]
   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8009984:	695d      	ldr	r5, [r3, #20]
  if(errorflags == RESET)
 8009986:	d107      	bne.n	8009998 <HAL_UART_IRQHandler+0x20>
    if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8009988:	0696      	lsls	r6, r2, #26
 800998a:	d55a      	bpl.n	8009a42 <HAL_UART_IRQHandler+0xca>
 800998c:	068d      	lsls	r5, r1, #26
 800998e:	d558      	bpl.n	8009a42 <HAL_UART_IRQHandler+0xca>
}
 8009990:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      UART_Receive_IT(huart);
 8009994:	f7ff bf84 	b.w	80098a0 <UART_Receive_IT>
  if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8009998:	f015 0501 	ands.w	r5, r5, #1
 800999c:	d102      	bne.n	80099a4 <HAL_UART_IRQHandler+0x2c>
 800999e:	f411 7f90 	tst.w	r1, #288	; 0x120
 80099a2:	d04e      	beq.n	8009a42 <HAL_UART_IRQHandler+0xca>
    if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 80099a4:	07d3      	lsls	r3, r2, #31
 80099a6:	d505      	bpl.n	80099b4 <HAL_UART_IRQHandler+0x3c>
 80099a8:	05ce      	lsls	r6, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 80099aa:	bf42      	ittt	mi
 80099ac:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 80099ae:	f043 0301 	orrmi.w	r3, r3, #1
 80099b2:	63e3      	strmi	r3, [r4, #60]	; 0x3c
    if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 80099b4:	0750      	lsls	r0, r2, #29
 80099b6:	d504      	bpl.n	80099c2 <HAL_UART_IRQHandler+0x4a>
 80099b8:	b11d      	cbz	r5, 80099c2 <HAL_UART_IRQHandler+0x4a>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80099ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099bc:	f043 0302 	orr.w	r3, r3, #2
 80099c0:	63e3      	str	r3, [r4, #60]	; 0x3c
    if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 80099c2:	0793      	lsls	r3, r2, #30
 80099c4:	d504      	bpl.n	80099d0 <HAL_UART_IRQHandler+0x58>
 80099c6:	b11d      	cbz	r5, 80099d0 <HAL_UART_IRQHandler+0x58>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80099c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099ca:	f043 0304 	orr.w	r3, r3, #4
 80099ce:	63e3      	str	r3, [r4, #60]	; 0x3c
    if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 80099d0:	0716      	lsls	r6, r2, #28
 80099d2:	d504      	bpl.n	80099de <HAL_UART_IRQHandler+0x66>
 80099d4:	b11d      	cbz	r5, 80099de <HAL_UART_IRQHandler+0x66>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80099d6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099d8:	f043 0308 	orr.w	r3, r3, #8
 80099dc:	63e3      	str	r3, [r4, #60]	; 0x3c
    if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 80099de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099e0:	2b00      	cmp	r3, #0
 80099e2:	d066      	beq.n	8009ab2 <HAL_UART_IRQHandler+0x13a>
      if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 80099e4:	0695      	lsls	r5, r2, #26
 80099e6:	d504      	bpl.n	80099f2 <HAL_UART_IRQHandler+0x7a>
 80099e8:	0688      	lsls	r0, r1, #26
 80099ea:	d502      	bpl.n	80099f2 <HAL_UART_IRQHandler+0x7a>
        UART_Receive_IT(huart);
 80099ec:	4620      	mov	r0, r4
 80099ee:	f7ff ff57 	bl	80098a0 <UART_Receive_IT>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80099f2:	6823      	ldr	r3, [r4, #0]
        UART_EndRxTransfer(huart);
 80099f4:	4620      	mov	r0, r4
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80099f6:	695d      	ldr	r5, [r3, #20]
      if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80099f8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80099fa:	0711      	lsls	r1, r2, #28
 80099fc:	d402      	bmi.n	8009a04 <HAL_UART_IRQHandler+0x8c>
 80099fe:	f015 0540 	ands.w	r5, r5, #64	; 0x40
 8009a02:	d01a      	beq.n	8009a3a <HAL_UART_IRQHandler+0xc2>
        UART_EndRxTransfer(huart);
 8009a04:	f7ff fdb8 	bl	8009578 <UART_EndRxTransfer>
        if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009a08:	6823      	ldr	r3, [r4, #0]
 8009a0a:	695a      	ldr	r2, [r3, #20]
 8009a0c:	0652      	lsls	r2, r2, #25
 8009a0e:	d510      	bpl.n	8009a32 <HAL_UART_IRQHandler+0xba>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009a10:	695a      	ldr	r2, [r3, #20]
          if(huart->hdmarx != NULL)
 8009a12:	6b60      	ldr	r0, [r4, #52]	; 0x34
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009a14:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009a18:	615a      	str	r2, [r3, #20]
          if(huart->hdmarx != NULL)
 8009a1a:	b150      	cbz	r0, 8009a32 <HAL_UART_IRQHandler+0xba>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8009a1c:	4b25      	ldr	r3, [pc, #148]	; (8009ab4 <HAL_UART_IRQHandler+0x13c>)
 8009a1e:	6343      	str	r3, [r0, #52]	; 0x34
            if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8009a20:	f7fe fde6 	bl	80085f0 <HAL_DMA_Abort_IT>
 8009a24:	2800      	cmp	r0, #0
 8009a26:	d044      	beq.n	8009ab2 <HAL_UART_IRQHandler+0x13a>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009a28:	6b60      	ldr	r0, [r4, #52]	; 0x34
}
 8009a2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009a2e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8009a30:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 8009a32:	4620      	mov	r0, r4
 8009a34:	f7ff ff78 	bl	8009928 <HAL_UART_ErrorCallback>
 8009a38:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8009a3a:	f7ff ff75 	bl	8009928 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009a3e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009a40:	bd70      	pop	{r4, r5, r6, pc}
  if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8009a42:	0616      	lsls	r6, r2, #24
 8009a44:	d527      	bpl.n	8009a96 <HAL_UART_IRQHandler+0x11e>
 8009a46:	060d      	lsls	r5, r1, #24
 8009a48:	d525      	bpl.n	8009a96 <HAL_UART_IRQHandler+0x11e>
  if(huart->gState == HAL_UART_STATE_BUSY_TX)
 8009a4a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8009a4e:	2a21      	cmp	r2, #33	; 0x21
 8009a50:	d12f      	bne.n	8009ab2 <HAL_UART_IRQHandler+0x13a>
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 8009a52:	68a2      	ldr	r2, [r4, #8]
 8009a54:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8009a58:	6a22      	ldr	r2, [r4, #32]
 8009a5a:	d117      	bne.n	8009a8c <HAL_UART_IRQHandler+0x114>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8009a5c:	8811      	ldrh	r1, [r2, #0]
 8009a5e:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8009a62:	6059      	str	r1, [r3, #4]
      if(huart->Init.Parity == UART_PARITY_NONE)
 8009a64:	6921      	ldr	r1, [r4, #16]
 8009a66:	b979      	cbnz	r1, 8009a88 <HAL_UART_IRQHandler+0x110>
        huart->pTxBuffPtr += 2U;
 8009a68:	3202      	adds	r2, #2
        huart->pTxBuffPtr += 1U;
 8009a6a:	6222      	str	r2, [r4, #32]
    if(--huart->TxXferCount == 0U)
 8009a6c:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8009a6e:	3a01      	subs	r2, #1
 8009a70:	b292      	uxth	r2, r2
 8009a72:	84e2      	strh	r2, [r4, #38]	; 0x26
 8009a74:	b9ea      	cbnz	r2, 8009ab2 <HAL_UART_IRQHandler+0x13a>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8009a76:	68da      	ldr	r2, [r3, #12]
 8009a78:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009a7c:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8009a7e:	68da      	ldr	r2, [r3, #12]
 8009a80:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009a84:	60da      	str	r2, [r3, #12]
 8009a86:	bd70      	pop	{r4, r5, r6, pc}
        huart->pTxBuffPtr += 1U;
 8009a88:	3201      	adds	r2, #1
 8009a8a:	e7ee      	b.n	8009a6a <HAL_UART_IRQHandler+0xf2>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8009a8c:	1c51      	adds	r1, r2, #1
 8009a8e:	6221      	str	r1, [r4, #32]
 8009a90:	7812      	ldrb	r2, [r2, #0]
 8009a92:	605a      	str	r2, [r3, #4]
 8009a94:	e7ea      	b.n	8009a6c <HAL_UART_IRQHandler+0xf4>
  if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8009a96:	0650      	lsls	r0, r2, #25
 8009a98:	d50b      	bpl.n	8009ab2 <HAL_UART_IRQHandler+0x13a>
 8009a9a:	064a      	lsls	r2, r1, #25
 8009a9c:	d509      	bpl.n	8009ab2 <HAL_UART_IRQHandler+0x13a>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8009a9e:	68da      	ldr	r2, [r3, #12]
  HAL_UART_TxCpltCallback(huart);
 8009aa0:	4620      	mov	r0, r4
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8009aa2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009aa6:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 8009aa8:	2320      	movs	r3, #32
 8009aaa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  HAL_UART_TxCpltCallback(huart);
 8009aae:	f001 f9f3 	bl	800ae98 <HAL_UART_TxCpltCallback>
 8009ab2:	bd70      	pop	{r4, r5, r6, pc}
 8009ab4:	08009ab9 	.word	0x08009ab9

08009ab8 <UART_DMAAbortOnError>:
{
 8009ab8:	b508      	push	{r3, lr}
  huart->RxXferCount = 0x00U;
 8009aba:	2300      	movs	r3, #0
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8009abc:	6a40      	ldr	r0, [r0, #36]	; 0x24
  huart->RxXferCount = 0x00U;
 8009abe:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8009ac0:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8009ac2:	f7ff ff31 	bl	8009928 <HAL_UART_ErrorCallback>
 8009ac6:	bd08      	pop	{r3, pc}

08009ac8 <_ZnwjPv>:
  __attribute__((__externally_visible__));
#endif

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8009ac8:	b480      	push	{r7}
 8009aca:	b083      	sub	sp, #12
 8009acc:	af00      	add	r7, sp, #0
 8009ace:	6078      	str	r0, [r7, #4]
 8009ad0:	6039      	str	r1, [r7, #0]
 8009ad2:	683b      	ldr	r3, [r7, #0]
 8009ad4:	4618      	mov	r0, r3
 8009ad6:	370c      	adds	r7, #12
 8009ad8:	46bd      	mov	sp, r7
 8009ada:	bc80      	pop	{r7}
 8009adc:	4770      	bx	lr

08009ade <_ZneRK14servoAngleDataS1_>:
		if (el_1.angle[i] != el_2.angle[i]) return false;
	}
	return true;
}

bool operator!=(const servoAngleData& el_1, const servoAngleData& el_2){
 8009ade:	b480      	push	{r7}
 8009ae0:	b085      	sub	sp, #20
 8009ae2:	af00      	add	r7, sp, #0
 8009ae4:	6078      	str	r0, [r7, #4]
 8009ae6:	6039      	str	r1, [r7, #0]
	for(uint16_t i = 0; i < AMOUNT_OF_SERVO; i++){
 8009ae8:	2300      	movs	r3, #0
 8009aea:	81fb      	strh	r3, [r7, #14]
 8009aec:	89fb      	ldrh	r3, [r7, #14]
 8009aee:	2b03      	cmp	r3, #3
 8009af0:	dc11      	bgt.n	8009b16 <_ZneRK14servoAngleDataS1_+0x38>
		if (el_1.angle[i] != el_2.angle[i]) return true;
 8009af2:	89fa      	ldrh	r2, [r7, #14]
 8009af4:	687b      	ldr	r3, [r7, #4]
 8009af6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8009afa:	b29a      	uxth	r2, r3
 8009afc:	89f9      	ldrh	r1, [r7, #14]
 8009afe:	683b      	ldr	r3, [r7, #0]
 8009b00:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
 8009b04:	b29b      	uxth	r3, r3
 8009b06:	429a      	cmp	r2, r3
 8009b08:	d001      	beq.n	8009b0e <_ZneRK14servoAngleDataS1_+0x30>
 8009b0a:	2301      	movs	r3, #1
 8009b0c:	e004      	b.n	8009b18 <_ZneRK14servoAngleDataS1_+0x3a>
	for(uint16_t i = 0; i < AMOUNT_OF_SERVO; i++){
 8009b0e:	89fb      	ldrh	r3, [r7, #14]
 8009b10:	3301      	adds	r3, #1
 8009b12:	81fb      	strh	r3, [r7, #14]
 8009b14:	e7ea      	b.n	8009aec <_ZneRK14servoAngleDataS1_+0xe>
	}
	return false;
 8009b16:	2300      	movs	r3, #0
}
 8009b18:	4618      	mov	r0, r3
 8009b1a:	3714      	adds	r7, #20
 8009b1c:	46bd      	mov	sp, r7
 8009b1e:	bc80      	pop	{r7}
 8009b20:	4770      	bx	lr

08009b22 <_ZN5Robot4initEPVmS1_S1_S1_P17TIM_HandleTypeDef>:

void Robot::init(volatile uint32_t* PWM_0, volatile uint32_t* PWM_1, volatile uint32_t* PWM_2,volatile uint32_t* PWM_3, TIM_HandleTypeDef *points_timer){
 8009b22:	b590      	push	{r4, r7, lr}
 8009b24:	b085      	sub	sp, #20
 8009b26:	af00      	add	r7, sp, #0
 8009b28:	60f8      	str	r0, [r7, #12]
 8009b2a:	60b9      	str	r1, [r7, #8]
 8009b2c:	607a      	str	r2, [r7, #4]
 8009b2e:	603b      	str	r3, [r7, #0]
	servo[0] = new Servo(PWM_0);
 8009b30:	200c      	movs	r0, #12
 8009b32:	f001 ff9f 	bl	800ba74 <_Znwj>
 8009b36:	4603      	mov	r3, r0
 8009b38:	461c      	mov	r4, r3
 8009b3a:	68b9      	ldr	r1, [r7, #8]
 8009b3c:	4620      	mov	r0, r4
 8009b3e:	f000 ffb1 	bl	800aaa4 <_ZN5ServoC1EPVm>
 8009b42:	68fb      	ldr	r3, [r7, #12]
 8009b44:	611c      	str	r4, [r3, #16]
	servo[1] = new Servo(PWM_1);
 8009b46:	200c      	movs	r0, #12
 8009b48:	f001 ff94 	bl	800ba74 <_Znwj>
 8009b4c:	4603      	mov	r3, r0
 8009b4e:	461c      	mov	r4, r3
 8009b50:	6879      	ldr	r1, [r7, #4]
 8009b52:	4620      	mov	r0, r4
 8009b54:	f000 ffa6 	bl	800aaa4 <_ZN5ServoC1EPVm>
 8009b58:	68fb      	ldr	r3, [r7, #12]
 8009b5a:	615c      	str	r4, [r3, #20]
	servo[2] = new Servo(PWM_2);
 8009b5c:	200c      	movs	r0, #12
 8009b5e:	f001 ff89 	bl	800ba74 <_Znwj>
 8009b62:	4603      	mov	r3, r0
 8009b64:	461c      	mov	r4, r3
 8009b66:	6839      	ldr	r1, [r7, #0]
 8009b68:	4620      	mov	r0, r4
 8009b6a:	f000 ff9b 	bl	800aaa4 <_ZN5ServoC1EPVm>
 8009b6e:	68fb      	ldr	r3, [r7, #12]
 8009b70:	619c      	str	r4, [r3, #24]
	servo[3] = new Servo(PWM_3);
 8009b72:	200c      	movs	r0, #12
 8009b74:	f001 ff7e 	bl	800ba74 <_Znwj>
 8009b78:	4603      	mov	r3, r0
 8009b7a:	461c      	mov	r4, r3
 8009b7c:	6a39      	ldr	r1, [r7, #32]
 8009b7e:	4620      	mov	r0, r4
 8009b80:	f000 ff90 	bl	800aaa4 <_ZN5ServoC1EPVm>
 8009b84:	68fb      	ldr	r3, [r7, #12]
 8009b86:	61dc      	str	r4, [r3, #28]

	this->pc = NULL;
 8009b88:	68fb      	ldr	r3, [r7, #12]
 8009b8a:	2200      	movs	r2, #0
 8009b8c:	635a      	str	r2, [r3, #52]	; 0x34
	this->points_timer = points_timer;
 8009b8e:	68fb      	ldr	r3, [r7, #12]
 8009b90:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009b92:	609a      	str	r2, [r3, #8]
	this->points_timer_speed_register = &points_timer->Instance->ARR;
 8009b94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b96:	681b      	ldr	r3, [r3, #0]
 8009b98:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8009b9c:	68fb      	ldr	r3, [r7, #12]
 8009b9e:	60da      	str	r2, [r3, #12]

	//CLEAR ANGLE VALUE
	current_angle_servo.angle[0] = 0;
 8009ba0:	68fb      	ldr	r3, [r7, #12]
 8009ba2:	2200      	movs	r2, #0
 8009ba4:	841a      	strh	r2, [r3, #32]
	current_angle_servo.angle[1] = 0;
 8009ba6:	68fb      	ldr	r3, [r7, #12]
 8009ba8:	2200      	movs	r2, #0
 8009baa:	845a      	strh	r2, [r3, #34]	; 0x22
	current_angle_servo.angle[2] = 0;
 8009bac:	68fb      	ldr	r3, [r7, #12]
 8009bae:	2200      	movs	r2, #0
 8009bb0:	849a      	strh	r2, [r3, #36]	; 0x24
	current_angle_servo.angle[3] = 0;
 8009bb2:	68fb      	ldr	r3, [r7, #12]
 8009bb4:	2200      	movs	r2, #0
 8009bb6:	84da      	strh	r2, [r3, #38]	; 0x26

	updatedData(current_angle_servo);
 8009bb8:	68fb      	ldr	r3, [r7, #12]
 8009bba:	3320      	adds	r3, #32
 8009bbc:	e893 0006 	ldmia.w	r3, {r1, r2}
 8009bc0:	68f8      	ldr	r0, [r7, #12]
 8009bc2:	f000 f8b1 	bl	8009d28 <_ZN5Robot11updatedDataE14servoAngleData>

	current_saved_point = 0;
 8009bc6:	68fb      	ldr	r3, [r7, #12]
 8009bc8:	2200      	movs	r2, #0
 8009bca:	80da      	strh	r2, [r3, #6]
	resetSavedPointsMode();
 8009bcc:	68f8      	ldr	r0, [r7, #12]
 8009bce:	f000 f926 	bl	8009e1e <_ZN5Robot20resetSavedPointsModeEv>
	setOnePulseMode(points_timer);
 8009bd2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009bd4:	68f8      	ldr	r0, [r7, #12]
 8009bd6:	f000 f8e3 	bl	8009da0 <_ZN5Robot15setOnePulseModeEP17TIM_HandleTypeDef>
	HAL_TIM_Base_Start_IT(points_timer);
 8009bda:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8009bdc:	f7ff f9e6 	bl	8008fac <HAL_TIM_Base_Start_IT>
	resetTimer(points_timer);
 8009be0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009be2:	68f8      	ldr	r0, [r7, #12]
 8009be4:	f000 f900 	bl	8009de8 <_ZN5Robot10resetTimerEP17TIM_HandleTypeDef>
}
 8009be8:	e013      	b.n	8009c12 <_ZN5Robot4initEPVmS1_S1_S1_P17TIM_HandleTypeDef+0xf0>
	servo[0] = new Servo(PWM_0);
 8009bea:	4620      	mov	r0, r4
 8009bec:	f001 fe7e 	bl	800b8ec <_ZdlPv>
 8009bf0:	f002 f8ca 	bl	800bd88 <__cxa_end_cleanup>
	servo[1] = new Servo(PWM_1);
 8009bf4:	4620      	mov	r0, r4
 8009bf6:	f001 fe79 	bl	800b8ec <_ZdlPv>
 8009bfa:	f002 f8c5 	bl	800bd88 <__cxa_end_cleanup>
	servo[2] = new Servo(PWM_2);
 8009bfe:	4620      	mov	r0, r4
 8009c00:	f001 fe74 	bl	800b8ec <_ZdlPv>
 8009c04:	f002 f8c0 	bl	800bd88 <__cxa_end_cleanup>
	servo[3] = new Servo(PWM_3);
 8009c08:	4620      	mov	r0, r4
 8009c0a:	f001 fe6f 	bl	800b8ec <_ZdlPv>
 8009c0e:	f002 f8bb 	bl	800bd88 <__cxa_end_cleanup>
}
 8009c12:	3714      	adds	r7, #20
 8009c14:	46bd      	mov	sp, r7
 8009c16:	bd90      	pop	{r4, r7, pc}

08009c18 <_ZN5RobotC1EPVmS1_S1_S1_P17TIM_HandleTypeDef>:

Robot::Robot(volatile uint32_t* PWM_0, volatile uint32_t* PWM_1, volatile uint32_t* PWM_2,volatile uint32_t* PWM_3, TIM_HandleTypeDef *points_timer) {
 8009c18:	b580      	push	{r7, lr}
 8009c1a:	b086      	sub	sp, #24
 8009c1c:	af02      	add	r7, sp, #8
 8009c1e:	60f8      	str	r0, [r7, #12]
 8009c20:	60b9      	str	r1, [r7, #8]
 8009c22:	607a      	str	r2, [r7, #4]
 8009c24:	603b      	str	r3, [r7, #0]
 8009c26:	4a0f      	ldr	r2, [pc, #60]	; (8009c64 <_ZN5RobotC1EPVmS1_S1_S1_P17TIM_HandleTypeDef+0x4c>)
 8009c28:	68fb      	ldr	r3, [r7, #12]
 8009c2a:	601a      	str	r2, [r3, #0]
 8009c2c:	68fb      	ldr	r3, [r7, #12]
 8009c2e:	3328      	adds	r3, #40	; 0x28
 8009c30:	4618      	mov	r0, r3
 8009c32:	f000 f9cd 	bl	8009fd0 <_ZNSt6vectorI14servoAngleDataSaIS0_EEC1Ev>
	init(PWM_0, PWM_1, PWM_2, PWM_3, points_timer);
 8009c36:	69fb      	ldr	r3, [r7, #28]
 8009c38:	9301      	str	r3, [sp, #4]
 8009c3a:	69bb      	ldr	r3, [r7, #24]
 8009c3c:	9300      	str	r3, [sp, #0]
 8009c3e:	683b      	ldr	r3, [r7, #0]
 8009c40:	687a      	ldr	r2, [r7, #4]
 8009c42:	68b9      	ldr	r1, [r7, #8]
 8009c44:	68f8      	ldr	r0, [r7, #12]
 8009c46:	f7ff ff6c 	bl	8009b22 <_ZN5Robot4initEPVmS1_S1_S1_P17TIM_HandleTypeDef>
}
 8009c4a:	68fb      	ldr	r3, [r7, #12]
 8009c4c:	e006      	b.n	8009c5c <_ZN5RobotC1EPVmS1_S1_S1_P17TIM_HandleTypeDef+0x44>
Robot::Robot(volatile uint32_t* PWM_0, volatile uint32_t* PWM_1, volatile uint32_t* PWM_2,volatile uint32_t* PWM_3, TIM_HandleTypeDef *points_timer) {
 8009c4e:	68fb      	ldr	r3, [r7, #12]
 8009c50:	3328      	adds	r3, #40	; 0x28
 8009c52:	4618      	mov	r0, r3
 8009c54:	f000 f9c9 	bl	8009fea <_ZNSt6vectorI14servoAngleDataSaIS0_EED1Ev>
 8009c58:	f002 f896 	bl	800bd88 <__cxa_end_cleanup>
}
 8009c5c:	4618      	mov	r0, r3
 8009c5e:	3710      	adds	r7, #16
 8009c60:	46bd      	mov	sp, r7
 8009c62:	bd80      	pop	{r7, pc}
 8009c64:	080113b8 	.word	0x080113b8

08009c68 <_ZN5RobotD1Ev>:

Robot::~Robot() {
 8009c68:	b580      	push	{r7, lr}
 8009c6a:	b082      	sub	sp, #8
 8009c6c:	af00      	add	r7, sp, #0
 8009c6e:	6078      	str	r0, [r7, #4]
 8009c70:	4a06      	ldr	r2, [pc, #24]	; (8009c8c <_ZN5RobotD1Ev+0x24>)
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	601a      	str	r2, [r3, #0]
 8009c76:	687b      	ldr	r3, [r7, #4]
 8009c78:	3328      	adds	r3, #40	; 0x28
 8009c7a:	4618      	mov	r0, r3
 8009c7c:	f000 f9b5 	bl	8009fea <_ZNSt6vectorI14servoAngleDataSaIS0_EED1Ev>
	// TODO Auto-generated destructor stub
}
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	4618      	mov	r0, r3
 8009c84:	3708      	adds	r7, #8
 8009c86:	46bd      	mov	sp, r7
 8009c88:	bd80      	pop	{r7, pc}
 8009c8a:	bf00      	nop
 8009c8c:	080113b8 	.word	0x080113b8

08009c90 <_ZN5RobotD0Ev>:
Robot::~Robot() {
 8009c90:	b580      	push	{r7, lr}
 8009c92:	b082      	sub	sp, #8
 8009c94:	af00      	add	r7, sp, #0
 8009c96:	6078      	str	r0, [r7, #4]
}
 8009c98:	6878      	ldr	r0, [r7, #4]
 8009c9a:	f7ff ffe5 	bl	8009c68 <_ZN5RobotD1Ev>
 8009c9e:	6878      	ldr	r0, [r7, #4]
 8009ca0:	f001 fe24 	bl	800b8ec <_ZdlPv>
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	4618      	mov	r0, r3
 8009ca8:	3708      	adds	r7, #8
 8009caa:	46bd      	mov	sp, r7
 8009cac:	bd80      	pop	{r7, pc}

08009cae <_ZN5Robot5addPCEP11UART_PC_COM>:

void Robot::addPC(UART_PC_COM *pc_handler){
 8009cae:	b480      	push	{r7}
 8009cb0:	b083      	sub	sp, #12
 8009cb2:	af00      	add	r7, sp, #0
 8009cb4:	6078      	str	r0, [r7, #4]
 8009cb6:	6039      	str	r1, [r7, #0]
	this->pc = pc_handler;
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	683a      	ldr	r2, [r7, #0]
 8009cbc:	635a      	str	r2, [r3, #52]	; 0x34
}
 8009cbe:	bf00      	nop
 8009cc0:	370c      	adds	r7, #12
 8009cc2:	46bd      	mov	sp, r7
 8009cc4:	bc80      	pop	{r7}
 8009cc6:	4770      	bx	lr

08009cc8 <_ZN5Robot8addPointE14servoAngleData>:
	current_saved_point = 0;
	//	moveToNextPoint();
	//	HAL_TIM_Base_Start_IT(points_timer);
}

void Robot::addPoint(servoAngleData servoData){
 8009cc8:	b580      	push	{r7, lr}
 8009cca:	b084      	sub	sp, #16
 8009ccc:	af00      	add	r7, sp, #0
 8009cce:	60f8      	str	r0, [r7, #12]
 8009cd0:	1d3b      	adds	r3, r7, #4
 8009cd2:	e883 0006 	stmia.w	r3, {r1, r2}
	if(saved_points_vector.empty())
 8009cd6:	68fb      	ldr	r3, [r7, #12]
 8009cd8:	3328      	adds	r3, #40	; 0x28
 8009cda:	4618      	mov	r0, r3
 8009cdc:	f000 f9c6 	bl	800a06c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE5emptyEv>
 8009ce0:	4603      	mov	r3, r0
 8009ce2:	2b00      	cmp	r3, #0
 8009ce4:	d007      	beq.n	8009cf6 <_ZN5Robot8addPointE14servoAngleData+0x2e>
		saved_points_vector.push_back(servoData);
 8009ce6:	68fb      	ldr	r3, [r7, #12]
 8009ce8:	3328      	adds	r3, #40	; 0x28
 8009cea:	1d3a      	adds	r2, r7, #4
 8009cec:	4611      	mov	r1, r2
 8009cee:	4618      	mov	r0, r3
 8009cf0:	f000 f9d7 	bl	800a0a2 <_ZNSt6vectorI14servoAngleDataSaIS0_EE9push_backERKS0_>
	else if(servoData != saved_points_vector.back())
		saved_points_vector.push_back(servoData);
}
 8009cf4:	e014      	b.n	8009d20 <_ZN5Robot8addPointE14servoAngleData+0x58>
	else if(servoData != saved_points_vector.back())
 8009cf6:	68fb      	ldr	r3, [r7, #12]
 8009cf8:	3328      	adds	r3, #40	; 0x28
 8009cfa:	4618      	mov	r0, r3
 8009cfc:	f000 f9f7 	bl	800a0ee <_ZNSt6vectorI14servoAngleDataSaIS0_EE4backEv>
 8009d00:	4602      	mov	r2, r0
 8009d02:	1d3b      	adds	r3, r7, #4
 8009d04:	4611      	mov	r1, r2
 8009d06:	4618      	mov	r0, r3
 8009d08:	f7ff fee9 	bl	8009ade <_ZneRK14servoAngleDataS1_>
 8009d0c:	4603      	mov	r3, r0
 8009d0e:	2b00      	cmp	r3, #0
 8009d10:	d006      	beq.n	8009d20 <_ZN5Robot8addPointE14servoAngleData+0x58>
		saved_points_vector.push_back(servoData);
 8009d12:	68fb      	ldr	r3, [r7, #12]
 8009d14:	3328      	adds	r3, #40	; 0x28
 8009d16:	1d3a      	adds	r2, r7, #4
 8009d18:	4611      	mov	r1, r2
 8009d1a:	4618      	mov	r0, r3
 8009d1c:	f000 f9c1 	bl	800a0a2 <_ZNSt6vectorI14servoAngleDataSaIS0_EE9push_backERKS0_>
}
 8009d20:	bf00      	nop
 8009d22:	3710      	adds	r7, #16
 8009d24:	46bd      	mov	sp, r7
 8009d26:	bd80      	pop	{r7, pc}

08009d28 <_ZN5Robot11updatedDataE14servoAngleData>:

void Robot::updatedData(servoAngleData servoData){
 8009d28:	b580      	push	{r7, lr}
 8009d2a:	b086      	sub	sp, #24
 8009d2c:	af00      	add	r7, sp, #0
 8009d2e:	60f8      	str	r0, [r7, #12]
 8009d30:	1d3b      	adds	r3, r7, #4
 8009d32:	e883 0006 	stmia.w	r3, {r1, r2}
	current_angle_servo = servoData;
 8009d36:	68fb      	ldr	r3, [r7, #12]
 8009d38:	3320      	adds	r3, #32
 8009d3a:	1d3a      	adds	r2, r7, #4
 8009d3c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009d40:	e883 0003 	stmia.w	r3, {r0, r1}
	for(unsigned int i = 0; i < AMOUNT_OF_SERVO; i++){
 8009d44:	2300      	movs	r3, #0
 8009d46:	617b      	str	r3, [r7, #20]
 8009d48:	697b      	ldr	r3, [r7, #20]
 8009d4a:	2b03      	cmp	r3, #3
 8009d4c:	d814      	bhi.n	8009d78 <_ZN5Robot11updatedDataE14servoAngleData+0x50>
		servo[i]->setAngle(servoData.angle[i]);
 8009d4e:	68fb      	ldr	r3, [r7, #12]
 8009d50:	697a      	ldr	r2, [r7, #20]
 8009d52:	3204      	adds	r2, #4
 8009d54:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8009d58:	697b      	ldr	r3, [r7, #20]
 8009d5a:	005b      	lsls	r3, r3, #1
 8009d5c:	f107 0118 	add.w	r1, r7, #24
 8009d60:	440b      	add	r3, r1
 8009d62:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 8009d66:	b2db      	uxtb	r3, r3
 8009d68:	4619      	mov	r1, r3
 8009d6a:	4610      	mov	r0, r2
 8009d6c:	f000 fed4 	bl	800ab18 <_ZN5Servo8setAngleEh>
	for(unsigned int i = 0; i < AMOUNT_OF_SERVO; i++){
 8009d70:	697b      	ldr	r3, [r7, #20]
 8009d72:	3301      	adds	r3, #1
 8009d74:	617b      	str	r3, [r7, #20]
 8009d76:	e7e7      	b.n	8009d48 <_ZN5Robot11updatedDataE14servoAngleData+0x20>
	}
}
 8009d78:	bf00      	nop
 8009d7a:	3718      	adds	r7, #24
 8009d7c:	46bd      	mov	sp, r7
 8009d7e:	bd80      	pop	{r7, pc}

08009d80 <_ZN5Robot19getCurrentServoDataEv>:

servoAngleData Robot::getCurrentServoData(){
 8009d80:	b480      	push	{r7}
 8009d82:	b083      	sub	sp, #12
 8009d84:	af00      	add	r7, sp, #0
 8009d86:	6078      	str	r0, [r7, #4]
 8009d88:	6039      	str	r1, [r7, #0]
	return current_angle_servo;
 8009d8a:	687a      	ldr	r2, [r7, #4]
 8009d8c:	683b      	ldr	r3, [r7, #0]
 8009d8e:	3320      	adds	r3, #32
 8009d90:	cb03      	ldmia	r3!, {r0, r1}
 8009d92:	6010      	str	r0, [r2, #0]
 8009d94:	6051      	str	r1, [r2, #4]
}
 8009d96:	6878      	ldr	r0, [r7, #4]
 8009d98:	370c      	adds	r7, #12
 8009d9a:	46bd      	mov	sp, r7
 8009d9c:	bc80      	pop	{r7}
 8009d9e:	4770      	bx	lr

08009da0 <_ZN5Robot15setOnePulseModeEP17TIM_HandleTypeDef>:

void Robot::setOnePulseMode(TIM_HandleTypeDef *htim){
 8009da0:	b480      	push	{r7}
 8009da2:	b083      	sub	sp, #12
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
 8009da8:	6039      	str	r1, [r7, #0]
	htim->Instance->CR1 |= TIM_OPMODE_SINGLE;
 8009daa:	683b      	ldr	r3, [r7, #0]
 8009dac:	681b      	ldr	r3, [r3, #0]
 8009dae:	683a      	ldr	r2, [r7, #0]
 8009db0:	6812      	ldr	r2, [r2, #0]
 8009db2:	6812      	ldr	r2, [r2, #0]
 8009db4:	f042 0208 	orr.w	r2, r2, #8
 8009db8:	601a      	str	r2, [r3, #0]
}
 8009dba:	bf00      	nop
 8009dbc:	370c      	adds	r7, #12
 8009dbe:	46bd      	mov	sp, r7
 8009dc0:	bc80      	pop	{r7}
 8009dc2:	4770      	bx	lr

08009dc4 <_ZN5Robot17resetOnePulseModeEP17TIM_HandleTypeDef>:

void Robot::resetOnePulseMode(TIM_HandleTypeDef *htim){
 8009dc4:	b480      	push	{r7}
 8009dc6:	b083      	sub	sp, #12
 8009dc8:	af00      	add	r7, sp, #0
 8009dca:	6078      	str	r0, [r7, #4]
 8009dcc:	6039      	str	r1, [r7, #0]
	htim->Instance->CR1 &= ~TIM_OPMODE_SINGLE;
 8009dce:	683b      	ldr	r3, [r7, #0]
 8009dd0:	681b      	ldr	r3, [r3, #0]
 8009dd2:	683a      	ldr	r2, [r7, #0]
 8009dd4:	6812      	ldr	r2, [r2, #0]
 8009dd6:	6812      	ldr	r2, [r2, #0]
 8009dd8:	f022 0208 	bic.w	r2, r2, #8
 8009ddc:	601a      	str	r2, [r3, #0]
}
 8009dde:	bf00      	nop
 8009de0:	370c      	adds	r7, #12
 8009de2:	46bd      	mov	sp, r7
 8009de4:	bc80      	pop	{r7}
 8009de6:	4770      	bx	lr

08009de8 <_ZN5Robot10resetTimerEP17TIM_HandleTypeDef>:

void Robot::resetTimer(TIM_HandleTypeDef *htim){
 8009de8:	b580      	push	{r7, lr}
 8009dea:	b082      	sub	sp, #8
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
 8009df0:	6039      	str	r1, [r7, #0]
	HAL_TIM_Base_Stop_IT(htim);
 8009df2:	6838      	ldr	r0, [r7, #0]
 8009df4:	f7ff f8e5 	bl	8008fc2 <HAL_TIM_Base_Stop_IT>
	__HAL_TIM_SET_COUNTER(htim, 0);
 8009df8:	683b      	ldr	r3, [r7, #0]
 8009dfa:	681b      	ldr	r3, [r3, #0]
 8009dfc:	2200      	movs	r2, #0
 8009dfe:	625a      	str	r2, [r3, #36]	; 0x24
}
 8009e00:	bf00      	nop
 8009e02:	3708      	adds	r7, #8
 8009e04:	46bd      	mov	sp, r7
 8009e06:	bd80      	pop	{r7, pc}

08009e08 <_ZN5Robot17isSavedPointsModeEv>:

uint8_t Robot::isSavedPointsMode(){
 8009e08:	b480      	push	{r7}
 8009e0a:	b083      	sub	sp, #12
 8009e0c:	af00      	add	r7, sp, #0
 8009e0e:	6078      	str	r0, [r7, #4]
	return saved_points_mode;
 8009e10:	687b      	ldr	r3, [r7, #4]
 8009e12:	791b      	ldrb	r3, [r3, #4]
}
 8009e14:	4618      	mov	r0, r3
 8009e16:	370c      	adds	r7, #12
 8009e18:	46bd      	mov	sp, r7
 8009e1a:	bc80      	pop	{r7}
 8009e1c:	4770      	bx	lr

08009e1e <_ZN5Robot20resetSavedPointsModeEv>:

void Robot::setSavedPointsMode(){
	saved_points_mode = true;
}

void Robot::resetSavedPointsMode(){
 8009e1e:	b480      	push	{r7}
 8009e20:	b083      	sub	sp, #12
 8009e22:	af00      	add	r7, sp, #0
 8009e24:	6078      	str	r0, [r7, #4]
	this->saved_points_mode = false;
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	2200      	movs	r2, #0
 8009e2a:	711a      	strb	r2, [r3, #4]
}
 8009e2c:	bf00      	nop
 8009e2e:	370c      	adds	r7, #12
 8009e30:	46bd      	mov	sp, r7
 8009e32:	bc80      	pop	{r7}
 8009e34:	4770      	bx	lr

08009e36 <_ZN5Robot10shortClickEv>:

void Robot::shortClick(){ //ADD POINT
 8009e36:	b580      	push	{r7, lr}
 8009e38:	b084      	sub	sp, #16
 8009e3a:	af00      	add	r7, sp, #0
 8009e3c:	6078      	str	r0, [r7, #4]
	resetTimer(points_timer);
 8009e3e:	687b      	ldr	r3, [r7, #4]
 8009e40:	689b      	ldr	r3, [r3, #8]
 8009e42:	4619      	mov	r1, r3
 8009e44:	6878      	ldr	r0, [r7, #4]
 8009e46:	f7ff ffcf 	bl	8009de8 <_ZN5Robot10resetTimerEP17TIM_HandleTypeDef>
	addPoint(getCurrentServoData());
 8009e4a:	f107 0308 	add.w	r3, r7, #8
 8009e4e:	6879      	ldr	r1, [r7, #4]
 8009e50:	4618      	mov	r0, r3
 8009e52:	f7ff ff95 	bl	8009d80 <_ZN5Robot19getCurrentServoDataEv>
 8009e56:	f107 0308 	add.w	r3, r7, #8
 8009e5a:	e893 0006 	ldmia.w	r3, {r1, r2}
 8009e5e:	6878      	ldr	r0, [r7, #4]
 8009e60:	f7ff ff32 	bl	8009cc8 <_ZN5Robot8addPointE14servoAngleData>
}
 8009e64:	bf00      	nop
 8009e66:	3710      	adds	r7, #16
 8009e68:	46bd      	mov	sp, r7
 8009e6a:	bd80      	pop	{r7, pc}

08009e6c <_ZN5Robot9longClickEv>:

void Robot::longClick(){ //MOVE TO SAVED POINTS
 8009e6c:	b580      	push	{r7, lr}
 8009e6e:	b082      	sub	sp, #8
 8009e70:	af00      	add	r7, sp, #0
 8009e72:	6078      	str	r0, [r7, #4]
	saved_points_mode = true;
 8009e74:	687b      	ldr	r3, [r7, #4]
 8009e76:	2201      	movs	r2, #1
 8009e78:	711a      	strb	r2, [r3, #4]
	//robot->moveToSavedPoints();
	if(pc != NULL) pc->stopUpdatingData();
 8009e7a:	687b      	ldr	r3, [r7, #4]
 8009e7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009e7e:	2b00      	cmp	r3, #0
 8009e80:	d004      	beq.n	8009e8c <_ZN5Robot9longClickEv+0x20>
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009e86:	4618      	mov	r0, r3
 8009e88:	f000 ffe5 	bl	800ae56 <_ZN11UART_PC_COM16stopUpdatingDataEv>
	resetOnePulseMode(points_timer);
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	689b      	ldr	r3, [r3, #8]
 8009e90:	4619      	mov	r1, r3
 8009e92:	6878      	ldr	r0, [r7, #4]
 8009e94:	f7ff ff96 	bl	8009dc4 <_ZN5Robot17resetOnePulseModeEP17TIM_HandleTypeDef>
	*points_timer_speed_register = TIME_BETWEEN_POINTS;
 8009e98:	687b      	ldr	r3, [r7, #4]
 8009e9a:	68db      	ldr	r3, [r3, #12]
 8009e9c:	f44f 7216 	mov.w	r2, #600	; 0x258
 8009ea0:	601a      	str	r2, [r3, #0]
	HAL_TIM_Base_Start_IT(points_timer);
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	689b      	ldr	r3, [r3, #8]
 8009ea6:	4618      	mov	r0, r3
 8009ea8:	f7ff f880 	bl	8008fac <HAL_TIM_Base_Start_IT>
}
 8009eac:	bf00      	nop
 8009eae:	3708      	adds	r7, #8
 8009eb0:	46bd      	mov	sp, r7
 8009eb2:	bd80      	pop	{r7, pc}

08009eb4 <_ZN5Robot8buttonITEh>:

void Robot::buttonIT(uint8_t button_state){
 8009eb4:	b580      	push	{r7, lr}
 8009eb6:	b082      	sub	sp, #8
 8009eb8:	af00      	add	r7, sp, #0
 8009eba:	6078      	str	r0, [r7, #4]
 8009ebc:	460b      	mov	r3, r1
 8009ebe:	70fb      	strb	r3, [r7, #3]
	if(button_state == 0){
 8009ec0:	78fb      	ldrb	r3, [r7, #3]
 8009ec2:	2b00      	cmp	r3, #0
 8009ec4:	d10a      	bne.n	8009edc <_ZN5Robot8buttonITEh+0x28>
		*points_timer_speed_register = LONG_CLICK_TIME;
 8009ec6:	687b      	ldr	r3, [r7, #4]
 8009ec8:	68db      	ldr	r3, [r3, #12]
 8009eca:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8009ece:	601a      	str	r2, [r3, #0]
		HAL_TIM_Base_Start_IT(points_timer);
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	689b      	ldr	r3, [r3, #8]
 8009ed4:	4618      	mov	r0, r3
 8009ed6:	f7ff f869 	bl	8008fac <HAL_TIM_Base_Start_IT>
	} else {
		if(saved_points_mode == false){
			shortClick();
		}
	}
}
 8009eda:	e006      	b.n	8009eea <_ZN5Robot8buttonITEh+0x36>
		if(saved_points_mode == false){
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	791b      	ldrb	r3, [r3, #4]
 8009ee0:	2b00      	cmp	r3, #0
 8009ee2:	d102      	bne.n	8009eea <_ZN5Robot8buttonITEh+0x36>
			shortClick();
 8009ee4:	6878      	ldr	r0, [r7, #4]
 8009ee6:	f7ff ffa6 	bl	8009e36 <_ZN5Robot10shortClickEv>
}
 8009eea:	bf00      	nop
 8009eec:	3708      	adds	r7, #8
 8009eee:	46bd      	mov	sp, r7
 8009ef0:	bd80      	pop	{r7, pc}
	...

08009ef4 <_ZN5Robot7timerITEv>:

void Robot::timerIT(){
 8009ef4:	b590      	push	{r4, r7, lr}
 8009ef6:	b083      	sub	sp, #12
 8009ef8:	af00      	add	r7, sp, #0
 8009efa:	6078      	str	r0, [r7, #4]
	if(isSavedPointsMode()){
 8009efc:	6878      	ldr	r0, [r7, #4]
 8009efe:	f7ff ff83 	bl	8009e08 <_ZN5Robot17isSavedPointsModeEv>
 8009f02:	4603      	mov	r3, r0
 8009f04:	2b00      	cmp	r3, #0
 8009f06:	bf14      	ite	ne
 8009f08:	2301      	movne	r3, #1
 8009f0a:	2300      	moveq	r3, #0
 8009f0c:	b2db      	uxtb	r3, r3
 8009f0e:	2b00      	cmp	r3, #0
 8009f10:	d046      	beq.n	8009fa0 <_ZN5Robot7timerITEv+0xac>
		HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 8009f12:	2120      	movs	r1, #32
 8009f14:	482c      	ldr	r0, [pc, #176]	; (8009fc8 <_ZN5Robot7timerITEv+0xd4>)
 8009f16:	f7fe fd32 	bl	800897e <HAL_GPIO_TogglePin>
		updatedData(saved_points_vector[current_saved_point]);
 8009f1a:	687b      	ldr	r3, [r7, #4]
 8009f1c:	f103 0228 	add.w	r2, r3, #40	; 0x28
 8009f20:	687b      	ldr	r3, [r7, #4]
 8009f22:	88db      	ldrh	r3, [r3, #6]
 8009f24:	4619      	mov	r1, r3
 8009f26:	4610      	mov	r0, r2
 8009f28:	f000 f881 	bl	800a02e <_ZNSt6vectorI14servoAngleDataSaIS0_EEixEj>
 8009f2c:	4603      	mov	r3, r0
 8009f2e:	681a      	ldr	r2, [r3, #0]
 8009f30:	4611      	mov	r1, r2
 8009f32:	685b      	ldr	r3, [r3, #4]
 8009f34:	461a      	mov	r2, r3
 8009f36:	6878      	ldr	r0, [r7, #4]
 8009f38:	f7ff fef6 	bl	8009d28 <_ZN5Robot11updatedDataE14servoAngleData>
		current_saved_point++;
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	88db      	ldrh	r3, [r3, #6]
 8009f40:	3301      	adds	r3, #1
 8009f42:	b29a      	uxth	r2, r3
 8009f44:	687b      	ldr	r3, [r7, #4]
 8009f46:	80da      	strh	r2, [r3, #6]
		if(current_saved_point >= saved_points_vector.size()){
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	88db      	ldrh	r3, [r3, #6]
 8009f4c:	461c      	mov	r4, r3
 8009f4e:	687b      	ldr	r3, [r7, #4]
 8009f50:	3328      	adds	r3, #40	; 0x28
 8009f52:	4618      	mov	r0, r3
 8009f54:	f000 f87a 	bl	800a04c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE4sizeEv>
 8009f58:	4603      	mov	r3, r0
 8009f5a:	429c      	cmp	r4, r3
 8009f5c:	bf2c      	ite	cs
 8009f5e:	2301      	movcs	r3, #1
 8009f60:	2300      	movcc	r3, #0
 8009f62:	b2db      	uxtb	r3, r3
 8009f64:	2b00      	cmp	r3, #0
 8009f66:	d02b      	beq.n	8009fc0 <_ZN5Robot7timerITEv+0xcc>
			resetTimer(points_timer);
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	689b      	ldr	r3, [r3, #8]
 8009f6c:	4619      	mov	r1, r3
 8009f6e:	6878      	ldr	r0, [r7, #4]
 8009f70:	f7ff ff3a 	bl	8009de8 <_ZN5Robot10resetTimerEP17TIM_HandleTypeDef>
			setOnePulseMode(points_timer);
 8009f74:	687b      	ldr	r3, [r7, #4]
 8009f76:	689b      	ldr	r3, [r3, #8]
 8009f78:	4619      	mov	r1, r3
 8009f7a:	6878      	ldr	r0, [r7, #4]
 8009f7c:	f7ff ff10 	bl	8009da0 <_ZN5Robot15setOnePulseModeEP17TIM_HandleTypeDef>
			saved_points_mode = false;
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	2200      	movs	r2, #0
 8009f84:	711a      	strb	r2, [r3, #4]
			if(pc != NULL) pc->startUpdatingData();
 8009f86:	687b      	ldr	r3, [r7, #4]
 8009f88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f8a:	2b00      	cmp	r3, #0
 8009f8c:	d004      	beq.n	8009f98 <_ZN5Robot7timerITEv+0xa4>
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f92:	4618      	mov	r0, r3
 8009f94:	f000 ff53 	bl	800ae3e <_ZN11UART_PC_COM17startUpdatingDataEv>
			current_saved_point = 0;
 8009f98:	687b      	ldr	r3, [r7, #4]
 8009f9a:	2200      	movs	r2, #0
 8009f9c:	80da      	strh	r2, [r3, #6]
		}
	} else if(	HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == 0){
		longClick();
	}
}
 8009f9e:	e00f      	b.n	8009fc0 <_ZN5Robot7timerITEv+0xcc>
	} else if(	HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == 0){
 8009fa0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8009fa4:	4809      	ldr	r0, [pc, #36]	; (8009fcc <_ZN5Robot7timerITEv+0xd8>)
 8009fa6:	f7fe fcdf 	bl	8008968 <HAL_GPIO_ReadPin>
 8009faa:	4603      	mov	r3, r0
 8009fac:	2b00      	cmp	r3, #0
 8009fae:	bf0c      	ite	eq
 8009fb0:	2301      	moveq	r3, #1
 8009fb2:	2300      	movne	r3, #0
 8009fb4:	b2db      	uxtb	r3, r3
 8009fb6:	2b00      	cmp	r3, #0
 8009fb8:	d002      	beq.n	8009fc0 <_ZN5Robot7timerITEv+0xcc>
		longClick();
 8009fba:	6878      	ldr	r0, [r7, #4]
 8009fbc:	f7ff ff56 	bl	8009e6c <_ZN5Robot9longClickEv>
}
 8009fc0:	bf00      	nop
 8009fc2:	370c      	adds	r7, #12
 8009fc4:	46bd      	mov	sp, r7
 8009fc6:	bd90      	pop	{r4, r7, pc}
 8009fc8:	40010800 	.word	0x40010800
 8009fcc:	40011000 	.word	0x40011000

08009fd0 <_ZNSt6vectorI14servoAngleDataSaIS0_EEC1Ev>:
      // (assign() and get_allocator() are also listed in this section)

      /**
       *  @brief  Creates a %vector with no elements.
       */
      vector()
 8009fd0:	b580      	push	{r7, lr}
 8009fd2:	b082      	sub	sp, #8
 8009fd4:	af00      	add	r7, sp, #0
 8009fd6:	6078      	str	r0, [r7, #4]
#if __cplusplus >= 201103L
      noexcept(is_nothrow_default_constructible<_Alloc>::value)
#endif
      : _Base() { }
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	4618      	mov	r0, r3
 8009fdc:	f000 f8ae 	bl	800a13c <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EEC1Ev>
 8009fe0:	687b      	ldr	r3, [r7, #4]
 8009fe2:	4618      	mov	r0, r3
 8009fe4:	3708      	adds	r7, #8
 8009fe6:	46bd      	mov	sp, r7
 8009fe8:	bd80      	pop	{r7, pc}

08009fea <_ZNSt6vectorI14servoAngleDataSaIS0_EED1Ev>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
 8009fea:	b5b0      	push	{r4, r5, r7, lr}
 8009fec:	b082      	sub	sp, #8
 8009fee:	af00      	add	r7, sp, #0
 8009ff0:	6078      	str	r0, [r7, #4]
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009ff2:	687b      	ldr	r3, [r7, #4]
 8009ff4:	681c      	ldr	r4, [r3, #0]
 8009ff6:	687b      	ldr	r3, [r7, #4]
 8009ff8:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator()); }
 8009ffa:	687b      	ldr	r3, [r7, #4]
 8009ffc:	4618      	mov	r0, r3
 8009ffe:	f000 f8cb 	bl	800a198 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>
 800a002:	4603      	mov	r3, r0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a004:	461a      	mov	r2, r3
 800a006:	4629      	mov	r1, r5
 800a008:	4620      	mov	r0, r4
 800a00a:	f000 f8cf 	bl	800a1ac <_ZSt8_DestroyIP14servoAngleDataS0_EvT_S2_RSaIT0_E>
		      _M_get_Tp_allocator()); }
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	4618      	mov	r0, r3
 800a012:	f000 f8a0 	bl	800a156 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EED1Ev>
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	e005      	b.n	800a026 <_ZNSt6vectorI14servoAngleDataSaIS0_EED1Ev+0x3c>
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	4618      	mov	r0, r3
 800a01e:	f000 f89a 	bl	800a156 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EED1Ev>
 800a022:	f001 feb1 	bl	800bd88 <__cxa_end_cleanup>
 800a026:	4618      	mov	r0, r3
 800a028:	3708      	adds	r7, #8
 800a02a:	46bd      	mov	sp, r7
 800a02c:	bdb0      	pop	{r4, r5, r7, pc}

0800a02e <_ZNSt6vectorI14servoAngleDataSaIS0_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800a02e:	b480      	push	{r7}
 800a030:	b083      	sub	sp, #12
 800a032:	af00      	add	r7, sp, #0
 800a034:	6078      	str	r0, [r7, #4]
 800a036:	6039      	str	r1, [r7, #0]
      { return *(this->_M_impl._M_start + __n); }
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	681a      	ldr	r2, [r3, #0]
 800a03c:	683b      	ldr	r3, [r7, #0]
 800a03e:	00db      	lsls	r3, r3, #3
 800a040:	4413      	add	r3, r2
 800a042:	4618      	mov	r0, r3
 800a044:	370c      	adds	r7, #12
 800a046:	46bd      	mov	sp, r7
 800a048:	bc80      	pop	{r7}
 800a04a:	4770      	bx	lr

0800a04c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800a04c:	b480      	push	{r7}
 800a04e:	b083      	sub	sp, #12
 800a050:	af00      	add	r7, sp, #0
 800a052:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800a054:	687b      	ldr	r3, [r7, #4]
 800a056:	685b      	ldr	r3, [r3, #4]
 800a058:	461a      	mov	r2, r3
 800a05a:	687b      	ldr	r3, [r7, #4]
 800a05c:	681b      	ldr	r3, [r3, #0]
 800a05e:	1ad3      	subs	r3, r2, r3
 800a060:	10db      	asrs	r3, r3, #3
 800a062:	4618      	mov	r0, r3
 800a064:	370c      	adds	r7, #12
 800a066:	46bd      	mov	sp, r7
 800a068:	bc80      	pop	{r7}
 800a06a:	4770      	bx	lr

0800a06c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
 800a06c:	b580      	push	{r7, lr}
 800a06e:	b084      	sub	sp, #16
 800a070:	af00      	add	r7, sp, #0
 800a072:	6078      	str	r0, [r7, #4]
      { return begin() == end(); }
 800a074:	6878      	ldr	r0, [r7, #4]
 800a076:	f000 f8a7 	bl	800a1c8 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE5beginEv>
 800a07a:	4603      	mov	r3, r0
 800a07c:	60bb      	str	r3, [r7, #8]
 800a07e:	6878      	ldr	r0, [r7, #4]
 800a080:	f000 f8b6 	bl	800a1f0 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE3endEv>
 800a084:	4603      	mov	r3, r0
 800a086:	60fb      	str	r3, [r7, #12]
 800a088:	f107 020c 	add.w	r2, r7, #12
 800a08c:	f107 0308 	add.w	r3, r7, #8
 800a090:	4611      	mov	r1, r2
 800a092:	4618      	mov	r0, r3
 800a094:	f000 f8c0 	bl	800a218 <_ZN9__gnu_cxxeqIPK14servoAngleDataSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800a098:	4603      	mov	r3, r0
 800a09a:	4618      	mov	r0, r3
 800a09c:	3710      	adds	r7, #16
 800a09e:	46bd      	mov	sp, r7
 800a0a0:	bd80      	pop	{r7, pc}

0800a0a2 <_ZNSt6vectorI14servoAngleDataSaIS0_EE9push_backERKS0_>:
       *  to it.  Due to the nature of a %vector this operation can be
       *  done in constant time if the %vector has preallocated space
       *  available.
       */
      void
      push_back(const value_type& __x)
 800a0a2:	b580      	push	{r7, lr}
 800a0a4:	b082      	sub	sp, #8
 800a0a6:	af00      	add	r7, sp, #0
 800a0a8:	6078      	str	r0, [r7, #4]
 800a0aa:	6039      	str	r1, [r7, #0]
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	685a      	ldr	r2, [r3, #4]
 800a0b0:	687b      	ldr	r3, [r7, #4]
 800a0b2:	689b      	ldr	r3, [r3, #8]
 800a0b4:	429a      	cmp	r2, r3
 800a0b6:	d00d      	beq.n	800a0d4 <_ZNSt6vectorI14servoAngleDataSaIS0_EE9push_backERKS0_+0x32>
	  {
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 800a0b8:	6878      	ldr	r0, [r7, #4]
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	685b      	ldr	r3, [r3, #4]
 800a0be:	683a      	ldr	r2, [r7, #0]
 800a0c0:	4619      	mov	r1, r3
 800a0c2:	f000 f8c1 	bl	800a248 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE9constructIS1_EEvRS2_PS1_RKT_>
	                             __x);
	    ++this->_M_impl._M_finish;
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	685b      	ldr	r3, [r3, #4]
 800a0ca:	f103 0208 	add.w	r2, r3, #8
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	605a      	str	r2, [r3, #4]
#if __cplusplus >= 201103L
	  _M_emplace_back_aux(__x);
#else
	  _M_insert_aux(end(), __x);
#endif
      }
 800a0d2:	e008      	b.n	800a0e6 <_ZNSt6vectorI14servoAngleDataSaIS0_EE9push_backERKS0_+0x44>
	  _M_insert_aux(end(), __x);
 800a0d4:	6878      	ldr	r0, [r7, #4]
 800a0d6:	f000 f9b1 	bl	800a43c <_ZNSt6vectorI14servoAngleDataSaIS0_EE3endEv>
 800a0da:	4603      	mov	r3, r0
 800a0dc:	683a      	ldr	r2, [r7, #0]
 800a0de:	4619      	mov	r1, r3
 800a0e0:	6878      	ldr	r0, [r7, #4]
 800a0e2:	f000 f8c1 	bl	800a268 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
      }
 800a0e6:	bf00      	nop
 800a0e8:	3708      	adds	r7, #8
 800a0ea:	46bd      	mov	sp, r7
 800a0ec:	bd80      	pop	{r7, pc}

0800a0ee <_ZNSt6vectorI14servoAngleDataSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 800a0ee:	b580      	push	{r7, lr}
 800a0f0:	b084      	sub	sp, #16
 800a0f2:	af00      	add	r7, sp, #0
 800a0f4:	6078      	str	r0, [r7, #4]
      { return *(end() - 1); }
 800a0f6:	6878      	ldr	r0, [r7, #4]
 800a0f8:	f000 f9a0 	bl	800a43c <_ZNSt6vectorI14servoAngleDataSaIS0_EE3endEv>
 800a0fc:	4603      	mov	r3, r0
 800a0fe:	60fb      	str	r3, [r7, #12]
 800a100:	f107 030c 	add.w	r3, r7, #12
 800a104:	2101      	movs	r1, #1
 800a106:	4618      	mov	r0, r3
 800a108:	f000 f9a9 	bl	800a45e <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEmiEi>
 800a10c:	4603      	mov	r3, r0
 800a10e:	60bb      	str	r3, [r7, #8]
 800a110:	f107 0308 	add.w	r3, r7, #8
 800a114:	4618      	mov	r0, r3
 800a116:	f000 f9bb 	bl	800a490 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEdeEv>
 800a11a:	4603      	mov	r3, r0
 800a11c:	4618      	mov	r0, r3
 800a11e:	3710      	adds	r7, #16
 800a120:	46bd      	mov	sp, r7
 800a122:	bd80      	pop	{r7, pc}

0800a124 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl 
 800a124:	b580      	push	{r7, lr}
 800a126:	b082      	sub	sp, #8
 800a128:	af00      	add	r7, sp, #0
 800a12a:	6078      	str	r0, [r7, #4]
 800a12c:	6878      	ldr	r0, [r7, #4]
 800a12e:	f000 f9cf 	bl	800a4d0 <_ZNSaI14servoAngleDataED1Ev>
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	4618      	mov	r0, r3
 800a136:	3708      	adds	r7, #8
 800a138:	46bd      	mov	sp, r7
 800a13a:	bd80      	pop	{r7, pc}

0800a13c <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EEC1Ev>:
      _Vector_base()
 800a13c:	b580      	push	{r7, lr}
 800a13e:	b082      	sub	sp, #8
 800a140:	af00      	add	r7, sp, #0
 800a142:	6078      	str	r0, [r7, #4]
      : _M_impl() { }
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	4618      	mov	r0, r3
 800a148:	f000 f9ad 	bl	800a4a6 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE12_Vector_implC1Ev>
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	4618      	mov	r0, r3
 800a150:	3708      	adds	r7, #8
 800a152:	46bd      	mov	sp, r7
 800a154:	bd80      	pop	{r7, pc}

0800a156 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a156:	b580      	push	{r7, lr}
 800a158:	b082      	sub	sp, #8
 800a15a:	af00      	add	r7, sp, #0
 800a15c:	6078      	str	r0, [r7, #4]
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 800a15e:	687b      	ldr	r3, [r7, #4]
 800a160:	6819      	ldr	r1, [r3, #0]
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	689b      	ldr	r3, [r3, #8]
		      - this->_M_impl._M_start); }
 800a166:	461a      	mov	r2, r3
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	1ad3      	subs	r3, r2, r3
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 800a16e:	10db      	asrs	r3, r3, #3
 800a170:	461a      	mov	r2, r3
 800a172:	6878      	ldr	r0, [r7, #4]
 800a174:	f000 f9b8 	bl	800a4e8 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE13_M_deallocateEPS0_j>
		      - this->_M_impl._M_start); }
 800a178:	687b      	ldr	r3, [r7, #4]
 800a17a:	4618      	mov	r0, r3
 800a17c:	f7ff ffd2 	bl	800a124 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE12_Vector_implD1Ev>
 800a180:	687b      	ldr	r3, [r7, #4]
 800a182:	e005      	b.n	800a190 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EED1Ev+0x3a>
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	4618      	mov	r0, r3
 800a188:	f7ff ffcc 	bl	800a124 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE12_Vector_implD1Ev>
 800a18c:	f001 fdfc 	bl	800bd88 <__cxa_end_cleanup>
 800a190:	4618      	mov	r0, r3
 800a192:	3708      	adds	r7, #8
 800a194:	46bd      	mov	sp, r7
 800a196:	bd80      	pop	{r7, pc}

0800a198 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a198:	b480      	push	{r7}
 800a19a:	b083      	sub	sp, #12
 800a19c:	af00      	add	r7, sp, #0
 800a19e:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 800a1a0:	687b      	ldr	r3, [r7, #4]
 800a1a2:	4618      	mov	r0, r3
 800a1a4:	370c      	adds	r7, #12
 800a1a6:	46bd      	mov	sp, r7
 800a1a8:	bc80      	pop	{r7}
 800a1aa:	4770      	bx	lr

0800a1ac <_ZSt8_DestroyIP14servoAngleDataS0_EvT_S2_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a1ac:	b580      	push	{r7, lr}
 800a1ae:	b084      	sub	sp, #16
 800a1b0:	af00      	add	r7, sp, #0
 800a1b2:	60f8      	str	r0, [r7, #12]
 800a1b4:	60b9      	str	r1, [r7, #8]
 800a1b6:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 800a1b8:	68b9      	ldr	r1, [r7, #8]
 800a1ba:	68f8      	ldr	r0, [r7, #12]
 800a1bc:	f000 f9a7 	bl	800a50e <_ZSt8_DestroyIP14servoAngleDataEvT_S2_>
    }
 800a1c0:	bf00      	nop
 800a1c2:	3710      	adds	r7, #16
 800a1c4:	46bd      	mov	sp, r7
 800a1c6:	bd80      	pop	{r7, pc}

0800a1c8 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800a1c8:	b580      	push	{r7, lr}
 800a1ca:	b084      	sub	sp, #16
 800a1cc:	af00      	add	r7, sp, #0
 800a1ce:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	681b      	ldr	r3, [r3, #0]
 800a1d4:	60fb      	str	r3, [r7, #12]
 800a1d6:	f107 020c 	add.w	r2, r7, #12
 800a1da:	f107 0308 	add.w	r3, r7, #8
 800a1de:	4611      	mov	r1, r2
 800a1e0:	4618      	mov	r0, r3
 800a1e2:	f000 f9a1 	bl	800a528 <_ZN9__gnu_cxx17__normal_iteratorIPK14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 800a1e6:	68bb      	ldr	r3, [r7, #8]
 800a1e8:	4618      	mov	r0, r3
 800a1ea:	3710      	adds	r7, #16
 800a1ec:	46bd      	mov	sp, r7
 800a1ee:	bd80      	pop	{r7, pc}

0800a1f0 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800a1f0:	b580      	push	{r7, lr}
 800a1f2:	b084      	sub	sp, #16
 800a1f4:	af00      	add	r7, sp, #0
 800a1f6:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800a1f8:	687b      	ldr	r3, [r7, #4]
 800a1fa:	685b      	ldr	r3, [r3, #4]
 800a1fc:	60fb      	str	r3, [r7, #12]
 800a1fe:	f107 020c 	add.w	r2, r7, #12
 800a202:	f107 0308 	add.w	r3, r7, #8
 800a206:	4611      	mov	r1, r2
 800a208:	4618      	mov	r0, r3
 800a20a:	f000 f98d 	bl	800a528 <_ZN9__gnu_cxx17__normal_iteratorIPK14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 800a20e:	68bb      	ldr	r3, [r7, #8]
 800a210:	4618      	mov	r0, r3
 800a212:	3710      	adds	r7, #16
 800a214:	46bd      	mov	sp, r7
 800a216:	bd80      	pop	{r7, pc}

0800a218 <_ZN9__gnu_cxxeqIPK14servoAngleDataSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() == __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a218:	b590      	push	{r4, r7, lr}
 800a21a:	b083      	sub	sp, #12
 800a21c:	af00      	add	r7, sp, #0
 800a21e:	6078      	str	r0, [r7, #4]
 800a220:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() == __rhs.base(); }
 800a222:	6878      	ldr	r0, [r7, #4]
 800a224:	f000 f98f 	bl	800a546 <_ZNK9__gnu_cxx17__normal_iteratorIPK14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a228:	4603      	mov	r3, r0
 800a22a:	681c      	ldr	r4, [r3, #0]
 800a22c:	6838      	ldr	r0, [r7, #0]
 800a22e:	f000 f98a 	bl	800a546 <_ZNK9__gnu_cxx17__normal_iteratorIPK14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a232:	4603      	mov	r3, r0
 800a234:	681b      	ldr	r3, [r3, #0]
 800a236:	429c      	cmp	r4, r3
 800a238:	bf0c      	ite	eq
 800a23a:	2301      	moveq	r3, #1
 800a23c:	2300      	movne	r3, #0
 800a23e:	b2db      	uxtb	r3, r3
 800a240:	4618      	mov	r0, r3
 800a242:	370c      	adds	r7, #12
 800a244:	46bd      	mov	sp, r7
 800a246:	bd90      	pop	{r4, r7, pc}

0800a248 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE9constructIS1_EEvRS2_PS1_RKT_>:

    static void deallocate(_Alloc& __a, pointer __p, size_type __n)
    { __a.deallocate(__p, __n); }

    template<typename _Tp>
      static void construct(_Alloc& __a, pointer __p, const _Tp& __arg)
 800a248:	b580      	push	{r7, lr}
 800a24a:	b084      	sub	sp, #16
 800a24c:	af00      	add	r7, sp, #0
 800a24e:	60f8      	str	r0, [r7, #12]
 800a250:	60b9      	str	r1, [r7, #8]
 800a252:	607a      	str	r2, [r7, #4]
      { __a.construct(__p, __arg); }
 800a254:	687a      	ldr	r2, [r7, #4]
 800a256:	68b9      	ldr	r1, [r7, #8]
 800a258:	68f8      	ldr	r0, [r7, #12]
 800a25a:	f000 f97e 	bl	800a55a <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE9constructEPS1_RKS1_>
 800a25e:	bf00      	nop
 800a260:	3710      	adds	r7, #16
 800a262:	46bd      	mov	sp, r7
 800a264:	bd80      	pop	{r7, pc}
	...

0800a268 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>:
      vector<_Tp, _Alloc>::
      _M_insert_aux(iterator __position, _Args&&... __args)
#else
  template<typename _Tp, typename _Alloc>
    void
    vector<_Tp, _Alloc>::
 800a268:	b5b0      	push	{r4, r5, r7, lr}
 800a26a:	b08c      	sub	sp, #48	; 0x30
 800a26c:	af00      	add	r7, sp, #0
 800a26e:	60f8      	str	r0, [r7, #12]
 800a270:	60b9      	str	r1, [r7, #8]
 800a272:	607a      	str	r2, [r7, #4]
    _M_insert_aux(iterator __position, const _Tp& __x)
#endif
    {
      if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 800a274:	68fb      	ldr	r3, [r7, #12]
 800a276:	685a      	ldr	r2, [r3, #4]
 800a278:	68fb      	ldr	r3, [r7, #12]
 800a27a:	689b      	ldr	r3, [r3, #8]
 800a27c:	429a      	cmp	r2, r3
 800a27e:	d032      	beq.n	800a2e6 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x7e>
	{
	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 800a280:	68f8      	ldr	r0, [r7, #12]
 800a282:	68fb      	ldr	r3, [r7, #12]
 800a284:	6859      	ldr	r1, [r3, #4]
			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 800a286:	68fb      	ldr	r3, [r7, #12]
 800a288:	685b      	ldr	r3, [r3, #4]
 800a28a:	3b08      	subs	r3, #8
	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 800a28c:	461a      	mov	r2, r3
 800a28e:	f7ff ffdb 	bl	800a248 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE9constructIS1_EEvRS2_PS1_RKT_>
				                   - 1)));
	  ++this->_M_impl._M_finish;
 800a292:	68fb      	ldr	r3, [r7, #12]
 800a294:	685b      	ldr	r3, [r3, #4]
 800a296:	f103 0208 	add.w	r2, r3, #8
 800a29a:	68fb      	ldr	r3, [r7, #12]
 800a29c:	605a      	str	r2, [r3, #4]
#if __cplusplus < 201103L
	  _Tp __x_copy = __x;
 800a29e:	687a      	ldr	r2, [r7, #4]
 800a2a0:	f107 0314 	add.w	r3, r7, #20
 800a2a4:	6810      	ldr	r0, [r2, #0]
 800a2a6:	6851      	ldr	r1, [r2, #4]
 800a2a8:	c303      	stmia	r3!, {r0, r1}
#endif
	  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 800a2aa:	f107 0308 	add.w	r3, r7, #8
 800a2ae:	4618      	mov	r0, r3
 800a2b0:	f000 f96a 	bl	800a588 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a2b4:	4603      	mov	r3, r0
 800a2b6:	6818      	ldr	r0, [r3, #0]
 800a2b8:	68fb      	ldr	r3, [r7, #12]
 800a2ba:	685b      	ldr	r3, [r3, #4]
 800a2bc:	f1a3 0110 	sub.w	r1, r3, #16
 800a2c0:	68fb      	ldr	r3, [r7, #12]
 800a2c2:	685b      	ldr	r3, [r3, #4]
 800a2c4:	3b08      	subs	r3, #8
 800a2c6:	461a      	mov	r2, r3
 800a2c8:	f000 f968 	bl	800a59c <_ZSt13copy_backwardIP14servoAngleDataS1_ET0_T_S3_S2_>
				  this->_M_impl._M_finish - 2,
				  this->_M_impl._M_finish - 1);
#if __cplusplus < 201103L
	  *__position = __x_copy;
 800a2cc:	f107 0308 	add.w	r3, r7, #8
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	f000 f8dd 	bl	800a490 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEdeEv>
 800a2d6:	4603      	mov	r3, r0
 800a2d8:	461a      	mov	r2, r3
 800a2da:	f107 0314 	add.w	r3, r7, #20
 800a2de:	cb03      	ldmia	r3!, {r0, r1}
 800a2e0:	6010      	str	r0, [r2, #0]
 800a2e2:	6051      	str	r1, [r2, #4]
			- this->_M_impl._M_start);
	  this->_M_impl._M_start = __new_start;
	  this->_M_impl._M_finish = __new_finish;
	  this->_M_impl._M_end_of_storage = __new_start + __len;
	}
    }
 800a2e4:	e0a4      	b.n	800a430 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x1c8>
	    _M_check_len(size_type(1), "vector::_M_insert_aux");
 800a2e6:	4a54      	ldr	r2, [pc, #336]	; (800a438 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x1d0>)
 800a2e8:	2101      	movs	r1, #1
 800a2ea:	68f8      	ldr	r0, [r7, #12]
 800a2ec:	f000 f96e 	bl	800a5cc <_ZNKSt6vectorI14servoAngleDataSaIS0_EE12_M_check_lenEjPKc>
 800a2f0:	4603      	mov	r3, r0
 800a2f2:	62bb      	str	r3, [r7, #40]	; 0x28
	  const size_type __elems_before = __position - begin();
 800a2f4:	68f8      	ldr	r0, [r7, #12]
 800a2f6:	f000 f9b0 	bl	800a65a <_ZNSt6vectorI14servoAngleDataSaIS0_EE5beginEv>
 800a2fa:	4603      	mov	r3, r0
 800a2fc:	61fb      	str	r3, [r7, #28]
 800a2fe:	f107 021c 	add.w	r2, r7, #28
 800a302:	f107 0308 	add.w	r3, r7, #8
 800a306:	4611      	mov	r1, r2
 800a308:	4618      	mov	r0, r3
 800a30a:	f000 f9b6 	bl	800a67a <_ZN9__gnu_cxxmiIP14servoAngleDataSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 800a30e:	4603      	mov	r3, r0
 800a310:	627b      	str	r3, [r7, #36]	; 0x24
	  pointer __new_start(this->_M_allocate(__len));
 800a312:	68fb      	ldr	r3, [r7, #12]
 800a314:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800a316:	4618      	mov	r0, r3
 800a318:	f000 f9c5 	bl	800a6a6 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE11_M_allocateEj>
 800a31c:	4603      	mov	r3, r0
 800a31e:	623b      	str	r3, [r7, #32]
	  pointer __new_finish(__new_start);
 800a320:	6a3b      	ldr	r3, [r7, #32]
 800a322:	62fb      	str	r3, [r7, #44]	; 0x2c
	      _Alloc_traits::construct(this->_M_impl,
 800a324:	68f8      	ldr	r0, [r7, #12]
		                       __new_start + __elems_before,
 800a326:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a328:	00db      	lsls	r3, r3, #3
	      _Alloc_traits::construct(this->_M_impl,
 800a32a:	6a3a      	ldr	r2, [r7, #32]
 800a32c:	4413      	add	r3, r2
 800a32e:	687a      	ldr	r2, [r7, #4]
 800a330:	4619      	mov	r1, r3
 800a332:	f7ff ff89 	bl	800a248 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE9constructIS1_EEvRS2_PS1_RKT_>
	      __new_finish = pointer();
 800a336:	2300      	movs	r3, #0
 800a338:	62fb      	str	r3, [r7, #44]	; 0x2c
		(this->_M_impl._M_start, __position.base(),
 800a33a:	68fb      	ldr	r3, [r7, #12]
 800a33c:	681c      	ldr	r4, [r3, #0]
 800a33e:	f107 0308 	add.w	r3, r7, #8
 800a342:	4618      	mov	r0, r3
 800a344:	f000 f920 	bl	800a588 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a348:	4603      	mov	r3, r0
 800a34a:	681d      	ldr	r5, [r3, #0]
		 __new_start, _M_get_Tp_allocator());
 800a34c:	68fb      	ldr	r3, [r7, #12]
 800a34e:	4618      	mov	r0, r3
 800a350:	f7ff ff22 	bl	800a198 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>
 800a354:	4603      	mov	r3, r0
	      __new_finish
 800a356:	6a3a      	ldr	r2, [r7, #32]
 800a358:	4629      	mov	r1, r5
 800a35a:	4620      	mov	r0, r4
 800a35c:	f000 f9b7 	bl	800a6ce <_ZSt34__uninitialized_move_if_noexcept_aIP14servoAngleDataS1_SaIS0_EET0_T_S4_S3_RT1_>
 800a360:	4603      	mov	r3, r0
 800a362:	62fb      	str	r3, [r7, #44]	; 0x2c
	      ++__new_finish;
 800a364:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a366:	3308      	adds	r3, #8
 800a368:	62fb      	str	r3, [r7, #44]	; 0x2c
		(__position.base(), this->_M_impl._M_finish,
 800a36a:	f107 0308 	add.w	r3, r7, #8
 800a36e:	4618      	mov	r0, r3
 800a370:	f000 f90a 	bl	800a588 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a374:	4603      	mov	r3, r0
 800a376:	681c      	ldr	r4, [r3, #0]
 800a378:	68fb      	ldr	r3, [r7, #12]
 800a37a:	685d      	ldr	r5, [r3, #4]
		 __new_finish, _M_get_Tp_allocator());
 800a37c:	68fb      	ldr	r3, [r7, #12]
 800a37e:	4618      	mov	r0, r3
 800a380:	f7ff ff0a 	bl	800a198 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>
 800a384:	4603      	mov	r3, r0
	      __new_finish
 800a386:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a388:	4629      	mov	r1, r5
 800a38a:	4620      	mov	r0, r4
 800a38c:	f000 f99f 	bl	800a6ce <_ZSt34__uninitialized_move_if_noexcept_aIP14servoAngleDataS1_SaIS0_EET0_T_S4_S3_RT1_>
 800a390:	4603      	mov	r3, r0
 800a392:	62fb      	str	r3, [r7, #44]	; 0x2c
	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a394:	68fb      	ldr	r3, [r7, #12]
 800a396:	681c      	ldr	r4, [r3, #0]
 800a398:	68fb      	ldr	r3, [r7, #12]
 800a39a:	685d      	ldr	r5, [r3, #4]
			_M_get_Tp_allocator());
 800a39c:	68fb      	ldr	r3, [r7, #12]
 800a39e:	4618      	mov	r0, r3
 800a3a0:	f7ff fefa 	bl	800a198 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>
 800a3a4:	4603      	mov	r3, r0
	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a3a6:	461a      	mov	r2, r3
 800a3a8:	4629      	mov	r1, r5
 800a3aa:	4620      	mov	r0, r4
 800a3ac:	f7ff fefe 	bl	800a1ac <_ZSt8_DestroyIP14servoAngleDataS0_EvT_S2_RSaIT0_E>
	  _M_deallocate(this->_M_impl._M_start,
 800a3b0:	68f8      	ldr	r0, [r7, #12]
 800a3b2:	68fb      	ldr	r3, [r7, #12]
 800a3b4:	6819      	ldr	r1, [r3, #0]
			this->_M_impl._M_end_of_storage
 800a3b6:	68fb      	ldr	r3, [r7, #12]
 800a3b8:	689b      	ldr	r3, [r3, #8]
			- this->_M_impl._M_start);
 800a3ba:	461a      	mov	r2, r3
 800a3bc:	68fb      	ldr	r3, [r7, #12]
 800a3be:	681b      	ldr	r3, [r3, #0]
 800a3c0:	1ad3      	subs	r3, r2, r3
	  _M_deallocate(this->_M_impl._M_start,
 800a3c2:	10db      	asrs	r3, r3, #3
 800a3c4:	461a      	mov	r2, r3
 800a3c6:	f000 f88f 	bl	800a4e8 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE13_M_deallocateEPS0_j>
	  this->_M_impl._M_start = __new_start;
 800a3ca:	68fb      	ldr	r3, [r7, #12]
 800a3cc:	6a3a      	ldr	r2, [r7, #32]
 800a3ce:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_finish = __new_finish;
 800a3d0:	68fb      	ldr	r3, [r7, #12]
 800a3d2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a3d4:	605a      	str	r2, [r3, #4]
	  this->_M_impl._M_end_of_storage = __new_start + __len;
 800a3d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a3d8:	00db      	lsls	r3, r3, #3
 800a3da:	6a3a      	ldr	r2, [r7, #32]
 800a3dc:	441a      	add	r2, r3
 800a3de:	68fb      	ldr	r3, [r7, #12]
 800a3e0:	609a      	str	r2, [r3, #8]
    }
 800a3e2:	e025      	b.n	800a430 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x1c8>
 800a3e4:	4603      	mov	r3, r0
          __catch(...)
 800a3e6:	4618      	mov	r0, r3
 800a3e8:	f001 fa82 	bl	800b8f0 <__cxa_begin_catch>
	      if (!__new_finish)
 800a3ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a3ee:	2b00      	cmp	r3, #0
 800a3f0:	d108      	bne.n	800a404 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x19c>
		_Alloc_traits::destroy(this->_M_impl,
 800a3f2:	68f8      	ldr	r0, [r7, #12]
		                       __new_start + __elems_before);
 800a3f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a3f6:	00db      	lsls	r3, r3, #3
		_Alloc_traits::destroy(this->_M_impl,
 800a3f8:	6a3a      	ldr	r2, [r7, #32]
 800a3fa:	4413      	add	r3, r2
 800a3fc:	4619      	mov	r1, r3
 800a3fe:	f000 f978 	bl	800a6f2 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE7destroyERS2_PS1_>
 800a402:	e009      	b.n	800a418 <_ZNSt6vectorI14servoAngleDataSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x1b0>
		std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 800a404:	68fb      	ldr	r3, [r7, #12]
 800a406:	4618      	mov	r0, r3
 800a408:	f7ff fec6 	bl	800a198 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>
 800a40c:	4603      	mov	r3, r0
 800a40e:	461a      	mov	r2, r3
 800a410:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a412:	6a38      	ldr	r0, [r7, #32]
 800a414:	f7ff feca 	bl	800a1ac <_ZSt8_DestroyIP14servoAngleDataS0_EvT_S2_RSaIT0_E>
	      _M_deallocate(__new_start, __len);
 800a418:	68fb      	ldr	r3, [r7, #12]
 800a41a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a41c:	6a39      	ldr	r1, [r7, #32]
 800a41e:	4618      	mov	r0, r3
 800a420:	f000 f862 	bl	800a4e8 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE13_M_deallocateEPS0_j>
	      __throw_exception_again;
 800a424:	f001 fc54 	bl	800bcd0 <__cxa_rethrow>
          __catch(...)
 800a428:	f001 faa2 	bl	800b970 <__cxa_end_catch>
 800a42c:	f001 fcac 	bl	800bd88 <__cxa_end_cleanup>
    }
 800a430:	3730      	adds	r7, #48	; 0x30
 800a432:	46bd      	mov	sp, r7
 800a434:	bdb0      	pop	{r4, r5, r7, pc}
 800a436:	bf00      	nop
 800a438:	08011398 	.word	0x08011398

0800a43c <_ZNSt6vectorI14servoAngleDataSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a43c:	b580      	push	{r7, lr}
 800a43e:	b084      	sub	sp, #16
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	1d1a      	adds	r2, r3, #4
 800a448:	f107 030c 	add.w	r3, r7, #12
 800a44c:	4611      	mov	r1, r2
 800a44e:	4618      	mov	r0, r3
 800a450:	f000 f95c 	bl	800a70c <_ZN9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800a454:	68fb      	ldr	r3, [r7, #12]
 800a456:	4618      	mov	r0, r3
 800a458:	3710      	adds	r7, #16
 800a45a:	46bd      	mov	sp, r7
 800a45c:	bd80      	pop	{r7, pc}

0800a45e <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 800a45e:	b580      	push	{r7, lr}
 800a460:	b084      	sub	sp, #16
 800a462:	af00      	add	r7, sp, #0
 800a464:	6078      	str	r0, [r7, #4]
 800a466:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 800a468:	687b      	ldr	r3, [r7, #4]
 800a46a:	681a      	ldr	r2, [r3, #0]
 800a46c:	683b      	ldr	r3, [r7, #0]
 800a46e:	00db      	lsls	r3, r3, #3
 800a470:	425b      	negs	r3, r3
 800a472:	4413      	add	r3, r2
 800a474:	60fb      	str	r3, [r7, #12]
 800a476:	f107 020c 	add.w	r2, r7, #12
 800a47a:	f107 0308 	add.w	r3, r7, #8
 800a47e:	4611      	mov	r1, r2
 800a480:	4618      	mov	r0, r3
 800a482:	f000 f943 	bl	800a70c <_ZN9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800a486:	68bb      	ldr	r3, [r7, #8]
 800a488:	4618      	mov	r0, r3
 800a48a:	3710      	adds	r7, #16
 800a48c:	46bd      	mov	sp, r7
 800a48e:	bd80      	pop	{r7, pc}

0800a490 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a490:	b480      	push	{r7}
 800a492:	b083      	sub	sp, #12
 800a494:	af00      	add	r7, sp, #0
 800a496:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a498:	687b      	ldr	r3, [r7, #4]
 800a49a:	681b      	ldr	r3, [r3, #0]
 800a49c:	4618      	mov	r0, r3
 800a49e:	370c      	adds	r7, #12
 800a4a0:	46bd      	mov	sp, r7
 800a4a2:	bc80      	pop	{r7}
 800a4a4:	4770      	bx	lr

0800a4a6 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl()
 800a4a6:	b580      	push	{r7, lr}
 800a4a8:	b082      	sub	sp, #8
 800a4aa:	af00      	add	r7, sp, #0
 800a4ac:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 800a4ae:	6878      	ldr	r0, [r7, #4]
 800a4b0:	f000 f93b 	bl	800a72a <_ZNSaI14servoAngleDataEC1Ev>
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	2200      	movs	r2, #0
 800a4b8:	601a      	str	r2, [r3, #0]
 800a4ba:	687b      	ldr	r3, [r7, #4]
 800a4bc:	2200      	movs	r2, #0
 800a4be:	605a      	str	r2, [r3, #4]
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	2200      	movs	r2, #0
 800a4c4:	609a      	str	r2, [r3, #8]
	{ }
 800a4c6:	687b      	ldr	r3, [r7, #4]
 800a4c8:	4618      	mov	r0, r3
 800a4ca:	3708      	adds	r7, #8
 800a4cc:	46bd      	mov	sp, r7
 800a4ce:	bd80      	pop	{r7, pc}

0800a4d0 <_ZNSaI14servoAngleDataED1Ev>:
      : __allocator_base<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
 800a4d0:	b580      	push	{r7, lr}
 800a4d2:	b082      	sub	sp, #8
 800a4d4:	af00      	add	r7, sp, #0
 800a4d6:	6078      	str	r0, [r7, #4]
 800a4d8:	6878      	ldr	r0, [r7, #4]
 800a4da:	f000 f932 	bl	800a742 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataED1Ev>
 800a4de:	687b      	ldr	r3, [r7, #4]
 800a4e0:	4618      	mov	r0, r3
 800a4e2:	3708      	adds	r7, #8
 800a4e4:	46bd      	mov	sp, r7
 800a4e6:	bd80      	pop	{r7, pc}

0800a4e8 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800a4e8:	b580      	push	{r7, lr}
 800a4ea:	b084      	sub	sp, #16
 800a4ec:	af00      	add	r7, sp, #0
 800a4ee:	60f8      	str	r0, [r7, #12]
 800a4f0:	60b9      	str	r1, [r7, #8]
 800a4f2:	607a      	str	r2, [r7, #4]
	if (__p)
 800a4f4:	68bb      	ldr	r3, [r7, #8]
 800a4f6:	2b00      	cmp	r3, #0
 800a4f8:	d005      	beq.n	800a506 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800a4fa:	68fb      	ldr	r3, [r7, #12]
 800a4fc:	687a      	ldr	r2, [r7, #4]
 800a4fe:	68b9      	ldr	r1, [r7, #8]
 800a500:	4618      	mov	r0, r3
 800a502:	f000 f928 	bl	800a756 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE10deallocateERS2_PS1_j>
      }
 800a506:	bf00      	nop
 800a508:	3710      	adds	r7, #16
 800a50a:	46bd      	mov	sp, r7
 800a50c:	bd80      	pop	{r7, pc}

0800a50e <_ZSt8_DestroyIP14servoAngleDataEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800a50e:	b580      	push	{r7, lr}
 800a510:	b082      	sub	sp, #8
 800a512:	af00      	add	r7, sp, #0
 800a514:	6078      	str	r0, [r7, #4]
 800a516:	6039      	str	r1, [r7, #0]
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 800a518:	6839      	ldr	r1, [r7, #0]
 800a51a:	6878      	ldr	r0, [r7, #4]
 800a51c:	f000 f92a 	bl	800a774 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14servoAngleDataEEvT_S4_>
    }
 800a520:	bf00      	nop
 800a522:	3708      	adds	r7, #8
 800a524:	46bd      	mov	sp, r7
 800a526:	bd80      	pop	{r7, pc}

0800a528 <_ZN9__gnu_cxx17__normal_iteratorIPK14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a528:	b480      	push	{r7}
 800a52a:	b083      	sub	sp, #12
 800a52c:	af00      	add	r7, sp, #0
 800a52e:	6078      	str	r0, [r7, #4]
 800a530:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a532:	683b      	ldr	r3, [r7, #0]
 800a534:	681a      	ldr	r2, [r3, #0]
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	601a      	str	r2, [r3, #0]
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	4618      	mov	r0, r3
 800a53e:	370c      	adds	r7, #12
 800a540:	46bd      	mov	sp, r7
 800a542:	bc80      	pop	{r7}
 800a544:	4770      	bx	lr

0800a546 <_ZNK9__gnu_cxx17__normal_iteratorIPK14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a546:	b480      	push	{r7}
 800a548:	b083      	sub	sp, #12
 800a54a:	af00      	add	r7, sp, #0
 800a54c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a54e:	687b      	ldr	r3, [r7, #4]
 800a550:	4618      	mov	r0, r3
 800a552:	370c      	adds	r7, #12
 800a554:	46bd      	mov	sp, r7
 800a556:	bc80      	pop	{r7}
 800a558:	4770      	bx	lr

0800a55a <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE9constructEPS1_RKS1_>:
        destroy(_Up* __p) { __p->~_Up(); }
#else
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 402. wrong new expression in [some_] allocator::construct
      void 
      construct(pointer __p, const _Tp& __val) 
 800a55a:	b580      	push	{r7, lr}
 800a55c:	b084      	sub	sp, #16
 800a55e:	af00      	add	r7, sp, #0
 800a560:	60f8      	str	r0, [r7, #12]
 800a562:	60b9      	str	r1, [r7, #8]
 800a564:	607a      	str	r2, [r7, #4]
      { ::new((void *)__p) _Tp(__val); }
 800a566:	68bb      	ldr	r3, [r7, #8]
 800a568:	4619      	mov	r1, r3
 800a56a:	2008      	movs	r0, #8
 800a56c:	f7ff faac 	bl	8009ac8 <_ZnwjPv>
 800a570:	4603      	mov	r3, r0
 800a572:	2b00      	cmp	r3, #0
 800a574:	d004      	beq.n	800a580 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE9constructEPS1_RKS1_+0x26>
 800a576:	687a      	ldr	r2, [r7, #4]
 800a578:	6811      	ldr	r1, [r2, #0]
 800a57a:	6852      	ldr	r2, [r2, #4]
 800a57c:	6019      	str	r1, [r3, #0]
 800a57e:	605a      	str	r2, [r3, #4]
 800a580:	bf00      	nop
 800a582:	3710      	adds	r7, #16
 800a584:	46bd      	mov	sp, r7
 800a586:	bd80      	pop	{r7, pc}

0800a588 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a588:	b480      	push	{r7}
 800a58a:	b083      	sub	sp, #12
 800a58c:	af00      	add	r7, sp, #0
 800a58e:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a590:	687b      	ldr	r3, [r7, #4]
 800a592:	4618      	mov	r0, r3
 800a594:	370c      	adds	r7, #12
 800a596:	46bd      	mov	sp, r7
 800a598:	bc80      	pop	{r7}
 800a59a:	4770      	bx	lr

0800a59c <_ZSt13copy_backwardIP14servoAngleDataS1_ET0_T_S3_S2_>:
   *  Result may not be in the range (first,last].  Use copy instead.  Note
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 800a59c:	b590      	push	{r4, r7, lr}
 800a59e:	b085      	sub	sp, #20
 800a5a0:	af00      	add	r7, sp, #0
 800a5a2:	60f8      	str	r0, [r7, #12]
 800a5a4:	60b9      	str	r1, [r7, #8]
 800a5a6:	607a      	str	r2, [r7, #4]
	    typename iterator_traits<_BI1>::value_type,
	    typename iterator_traits<_BI2>::value_type>)
      __glibcxx_requires_valid_range(__first, __last);

      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
	      (std::__miter_base(__first), std::__miter_base(__last),
 800a5a8:	68f8      	ldr	r0, [r7, #12]
 800a5aa:	f000 f8ed 	bl	800a788 <_ZSt12__miter_baseIP14servoAngleDataET_S2_>
 800a5ae:	4604      	mov	r4, r0
 800a5b0:	68b8      	ldr	r0, [r7, #8]
 800a5b2:	f000 f8e9 	bl	800a788 <_ZSt12__miter_baseIP14servoAngleDataET_S2_>
 800a5b6:	4603      	mov	r3, r0
	       __result));
 800a5b8:	687a      	ldr	r2, [r7, #4]
 800a5ba:	4619      	mov	r1, r3
 800a5bc:	4620      	mov	r0, r4
 800a5be:	f000 f8ed 	bl	800a79c <_ZSt23__copy_move_backward_a2ILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>
 800a5c2:	4603      	mov	r3, r0
    }
 800a5c4:	4618      	mov	r0, r3
 800a5c6:	3714      	adds	r7, #20
 800a5c8:	46bd      	mov	sp, r7
 800a5ca:	bd90      	pop	{r4, r7, pc}

0800a5cc <_ZNKSt6vectorI14servoAngleDataSaIS0_EE12_M_check_lenEjPKc>:
        _M_emplace_back_aux(_Args&&... __args);
#endif

      // Called by the latter.
      size_type
      _M_check_len(size_type __n, const char* __s) const
 800a5cc:	b590      	push	{r4, r7, lr}
 800a5ce:	b087      	sub	sp, #28
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	60f8      	str	r0, [r7, #12]
 800a5d4:	60b9      	str	r1, [r7, #8]
 800a5d6:	607a      	str	r2, [r7, #4]
      {
	if (max_size() - size() < __n)
 800a5d8:	68f8      	ldr	r0, [r7, #12]
 800a5da:	f000 f8fb 	bl	800a7d4 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE8max_sizeEv>
 800a5de:	4604      	mov	r4, r0
 800a5e0:	68f8      	ldr	r0, [r7, #12]
 800a5e2:	f7ff fd33 	bl	800a04c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE4sizeEv>
 800a5e6:	4603      	mov	r3, r0
 800a5e8:	1ae2      	subs	r2, r4, r3
 800a5ea:	68bb      	ldr	r3, [r7, #8]
 800a5ec:	429a      	cmp	r2, r3
 800a5ee:	bf34      	ite	cc
 800a5f0:	2301      	movcc	r3, #1
 800a5f2:	2300      	movcs	r3, #0
 800a5f4:	b2db      	uxtb	r3, r3
 800a5f6:	2b00      	cmp	r3, #0
 800a5f8:	d002      	beq.n	800a600 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 800a5fa:	6878      	ldr	r0, [r7, #4]
 800a5fc:	f002 f880 	bl	800c700 <_ZSt20__throw_length_errorPKc>

	const size_type __len = size() + std::max(size(), __n);
 800a600:	68f8      	ldr	r0, [r7, #12]
 800a602:	f7ff fd23 	bl	800a04c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE4sizeEv>
 800a606:	4604      	mov	r4, r0
 800a608:	68f8      	ldr	r0, [r7, #12]
 800a60a:	f7ff fd1f 	bl	800a04c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE4sizeEv>
 800a60e:	4603      	mov	r3, r0
 800a610:	613b      	str	r3, [r7, #16]
 800a612:	f107 0208 	add.w	r2, r7, #8
 800a616:	f107 0310 	add.w	r3, r7, #16
 800a61a:	4611      	mov	r1, r2
 800a61c:	4618      	mov	r0, r3
 800a61e:	f000 f8ea 	bl	800a7f6 <_ZSt3maxIjERKT_S2_S2_>
 800a622:	4603      	mov	r3, r0
 800a624:	681b      	ldr	r3, [r3, #0]
 800a626:	4423      	add	r3, r4
 800a628:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 800a62a:	68f8      	ldr	r0, [r7, #12]
 800a62c:	f7ff fd0e 	bl	800a04c <_ZNKSt6vectorI14servoAngleDataSaIS0_EE4sizeEv>
 800a630:	4602      	mov	r2, r0
 800a632:	697b      	ldr	r3, [r7, #20]
 800a634:	429a      	cmp	r2, r3
 800a636:	d806      	bhi.n	800a646 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE12_M_check_lenEjPKc+0x7a>
 800a638:	68f8      	ldr	r0, [r7, #12]
 800a63a:	f000 f8cb 	bl	800a7d4 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE8max_sizeEv>
 800a63e:	4602      	mov	r2, r0
 800a640:	697b      	ldr	r3, [r7, #20]
 800a642:	429a      	cmp	r2, r3
 800a644:	d204      	bcs.n	800a650 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE12_M_check_lenEjPKc+0x84>
 800a646:	68f8      	ldr	r0, [r7, #12]
 800a648:	f000 f8c4 	bl	800a7d4 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE8max_sizeEv>
 800a64c:	4603      	mov	r3, r0
 800a64e:	e000      	b.n	800a652 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE12_M_check_lenEjPKc+0x86>
 800a650:	697b      	ldr	r3, [r7, #20]
      }
 800a652:	4618      	mov	r0, r3
 800a654:	371c      	adds	r7, #28
 800a656:	46bd      	mov	sp, r7
 800a658:	bd90      	pop	{r4, r7, pc}

0800a65a <_ZNSt6vectorI14servoAngleDataSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a65a:	b580      	push	{r7, lr}
 800a65c:	b084      	sub	sp, #16
 800a65e:	af00      	add	r7, sp, #0
 800a660:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a662:	687a      	ldr	r2, [r7, #4]
 800a664:	f107 030c 	add.w	r3, r7, #12
 800a668:	4611      	mov	r1, r2
 800a66a:	4618      	mov	r0, r3
 800a66c:	f000 f84e 	bl	800a70c <_ZN9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800a670:	68fb      	ldr	r3, [r7, #12]
 800a672:	4618      	mov	r0, r3
 800a674:	3710      	adds	r7, #16
 800a676:	46bd      	mov	sp, r7
 800a678:	bd80      	pop	{r7, pc}

0800a67a <_ZN9__gnu_cxxmiIP14servoAngleDataSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
#endif
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a67a:	b590      	push	{r4, r7, lr}
 800a67c:	b083      	sub	sp, #12
 800a67e:	af00      	add	r7, sp, #0
 800a680:	6078      	str	r0, [r7, #4]
 800a682:	6039      	str	r1, [r7, #0]
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
 800a684:	6878      	ldr	r0, [r7, #4]
 800a686:	f7ff ff7f 	bl	800a588 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a68a:	4603      	mov	r3, r0
 800a68c:	681b      	ldr	r3, [r3, #0]
 800a68e:	461c      	mov	r4, r3
 800a690:	6838      	ldr	r0, [r7, #0]
 800a692:	f7ff ff79 	bl	800a588 <_ZNK9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEE4baseEv>
 800a696:	4603      	mov	r3, r0
 800a698:	681b      	ldr	r3, [r3, #0]
 800a69a:	1ae3      	subs	r3, r4, r3
 800a69c:	10db      	asrs	r3, r3, #3
 800a69e:	4618      	mov	r0, r3
 800a6a0:	370c      	adds	r7, #12
 800a6a2:	46bd      	mov	sp, r7
 800a6a4:	bd90      	pop	{r4, r7, pc}

0800a6a6 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800a6a6:	b580      	push	{r7, lr}
 800a6a8:	b082      	sub	sp, #8
 800a6aa:	af00      	add	r7, sp, #0
 800a6ac:	6078      	str	r0, [r7, #4]
 800a6ae:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800a6b0:	683b      	ldr	r3, [r7, #0]
 800a6b2:	2b00      	cmp	r3, #0
 800a6b4:	d006      	beq.n	800a6c4 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE11_M_allocateEj+0x1e>
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	6839      	ldr	r1, [r7, #0]
 800a6ba:	4618      	mov	r0, r3
 800a6bc:	f000 f8ae 	bl	800a81c <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE8allocateERS2_j>
 800a6c0:	4603      	mov	r3, r0
 800a6c2:	e000      	b.n	800a6c6 <_ZNSt12_Vector_baseI14servoAngleDataSaIS0_EE11_M_allocateEj+0x20>
 800a6c4:	2300      	movs	r3, #0
      }
 800a6c6:	4618      	mov	r0, r3
 800a6c8:	3708      	adds	r7, #8
 800a6ca:	46bd      	mov	sp, r7
 800a6cc:	bd80      	pop	{r7, pc}

0800a6ce <_ZSt34__uninitialized_move_if_noexcept_aIP14servoAngleDataS1_SaIS0_EET0_T_S4_S3_RT1_>:
    }

  template<typename _InputIterator, typename _ForwardIterator,
	   typename _Allocator>
    inline _ForwardIterator
    __uninitialized_move_if_noexcept_a(_InputIterator __first,
 800a6ce:	b580      	push	{r7, lr}
 800a6d0:	b084      	sub	sp, #16
 800a6d2:	af00      	add	r7, sp, #0
 800a6d4:	60f8      	str	r0, [r7, #12]
 800a6d6:	60b9      	str	r1, [r7, #8]
 800a6d8:	607a      	str	r2, [r7, #4]
 800a6da:	603b      	str	r3, [r7, #0]
				       _ForwardIterator __result,
				       _Allocator& __alloc)
    {
      return std::__uninitialized_copy_a
	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 800a6dc:	683b      	ldr	r3, [r7, #0]
 800a6de:	687a      	ldr	r2, [r7, #4]
 800a6e0:	68b9      	ldr	r1, [r7, #8]
 800a6e2:	68f8      	ldr	r0, [r7, #12]
 800a6e4:	f000 f8a9 	bl	800a83a <_ZSt22__uninitialized_copy_aIP14servoAngleDataS1_S0_ET0_T_S3_S2_RSaIT1_E>
 800a6e8:	4603      	mov	r3, r0
    }
 800a6ea:	4618      	mov	r0, r3
 800a6ec:	3710      	adds	r7, #16
 800a6ee:	46bd      	mov	sp, r7
 800a6f0:	bd80      	pop	{r7, pc}

0800a6f2 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE7destroyERS2_PS1_>:

    static void destroy(_Alloc& __a, pointer __p)
 800a6f2:	b580      	push	{r7, lr}
 800a6f4:	b082      	sub	sp, #8
 800a6f6:	af00      	add	r7, sp, #0
 800a6f8:	6078      	str	r0, [r7, #4]
 800a6fa:	6039      	str	r1, [r7, #0]
    { __a.destroy(__p); }
 800a6fc:	6839      	ldr	r1, [r7, #0]
 800a6fe:	6878      	ldr	r0, [r7, #4]
 800a700:	f000 f8ac 	bl	800a85c <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE7destroyEPS1_>
 800a704:	bf00      	nop
 800a706:	3708      	adds	r7, #8
 800a708:	46bd      	mov	sp, r7
 800a70a:	bd80      	pop	{r7, pc}

0800a70c <_ZN9__gnu_cxx17__normal_iteratorIP14servoAngleDataSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a70c:	b480      	push	{r7}
 800a70e:	b083      	sub	sp, #12
 800a710:	af00      	add	r7, sp, #0
 800a712:	6078      	str	r0, [r7, #4]
 800a714:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a716:	683b      	ldr	r3, [r7, #0]
 800a718:	681a      	ldr	r2, [r3, #0]
 800a71a:	687b      	ldr	r3, [r7, #4]
 800a71c:	601a      	str	r2, [r3, #0]
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	4618      	mov	r0, r3
 800a722:	370c      	adds	r7, #12
 800a724:	46bd      	mov	sp, r7
 800a726:	bc80      	pop	{r7}
 800a728:	4770      	bx	lr

0800a72a <_ZNSaI14servoAngleDataEC1Ev>:
      allocator() throw() { }
 800a72a:	b580      	push	{r7, lr}
 800a72c:	b082      	sub	sp, #8
 800a72e:	af00      	add	r7, sp, #0
 800a730:	6078      	str	r0, [r7, #4]
 800a732:	6878      	ldr	r0, [r7, #4]
 800a734:	f000 f89c 	bl	800a870 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataEC1Ev>
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	4618      	mov	r0, r3
 800a73c:	3708      	adds	r7, #8
 800a73e:	46bd      	mov	sp, r7
 800a740:	bd80      	pop	{r7, pc}

0800a742 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800a742:	b480      	push	{r7}
 800a744:	b083      	sub	sp, #12
 800a746:	af00      	add	r7, sp, #0
 800a748:	6078      	str	r0, [r7, #4]
 800a74a:	687b      	ldr	r3, [r7, #4]
 800a74c:	4618      	mov	r0, r3
 800a74e:	370c      	adds	r7, #12
 800a750:	46bd      	mov	sp, r7
 800a752:	bc80      	pop	{r7}
 800a754:	4770      	bx	lr

0800a756 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE10deallocateERS2_PS1_j>:
    static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 800a756:	b580      	push	{r7, lr}
 800a758:	b084      	sub	sp, #16
 800a75a:	af00      	add	r7, sp, #0
 800a75c:	60f8      	str	r0, [r7, #12]
 800a75e:	60b9      	str	r1, [r7, #8]
 800a760:	607a      	str	r2, [r7, #4]
    { __a.deallocate(__p, __n); }
 800a762:	687a      	ldr	r2, [r7, #4]
 800a764:	68b9      	ldr	r1, [r7, #8]
 800a766:	68f8      	ldr	r0, [r7, #12]
 800a768:	f000 f88c 	bl	800a884 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE10deallocateEPS1_j>
 800a76c:	bf00      	nop
 800a76e:	3710      	adds	r7, #16
 800a770:	46bd      	mov	sp, r7
 800a772:	bd80      	pop	{r7, pc}

0800a774 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14servoAngleDataEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800a774:	b480      	push	{r7}
 800a776:	b083      	sub	sp, #12
 800a778:	af00      	add	r7, sp, #0
 800a77a:	6078      	str	r0, [r7, #4]
 800a77c:	6039      	str	r1, [r7, #0]
 800a77e:	bf00      	nop
 800a780:	370c      	adds	r7, #12
 800a782:	46bd      	mov	sp, r7
 800a784:	bc80      	pop	{r7}
 800a786:	4770      	bx	lr

0800a788 <_ZSt12__miter_baseIP14servoAngleDataET_S2_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 800a788:	b480      	push	{r7}
 800a78a:	b083      	sub	sp, #12
 800a78c:	af00      	add	r7, sp, #0
 800a78e:	6078      	str	r0, [r7, #4]
    { return __it; }
 800a790:	687b      	ldr	r3, [r7, #4]
 800a792:	4618      	mov	r0, r3
 800a794:	370c      	adds	r7, #12
 800a796:	46bd      	mov	sp, r7
 800a798:	bc80      	pop	{r7}
 800a79a:	4770      	bx	lr

0800a79c <_ZSt23__copy_move_backward_a2ILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 800a79c:	b5b0      	push	{r4, r5, r7, lr}
 800a79e:	b084      	sub	sp, #16
 800a7a0:	af00      	add	r7, sp, #0
 800a7a2:	60f8      	str	r0, [r7, #12]
 800a7a4:	60b9      	str	r1, [r7, #8]
 800a7a6:	607a      	str	r2, [r7, #4]
		  (std::__niter_base(__first), std::__niter_base(__last),
 800a7a8:	68f8      	ldr	r0, [r7, #12]
 800a7aa:	f000 f878 	bl	800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>
 800a7ae:	4604      	mov	r4, r0
 800a7b0:	68b8      	ldr	r0, [r7, #8]
 800a7b2:	f000 f874 	bl	800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>
 800a7b6:	4605      	mov	r5, r0
 800a7b8:	6878      	ldr	r0, [r7, #4]
 800a7ba:	f000 f870 	bl	800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>
 800a7be:	4603      	mov	r3, r0
		   std::__niter_base(__result)));
 800a7c0:	461a      	mov	r2, r3
 800a7c2:	4629      	mov	r1, r5
 800a7c4:	4620      	mov	r0, r4
 800a7c6:	f000 f874 	bl	800a8b2 <_ZSt22__copy_move_backward_aILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>
 800a7ca:	4603      	mov	r3, r0
    }
 800a7cc:	4618      	mov	r0, r3
 800a7ce:	3710      	adds	r7, #16
 800a7d0:	46bd      	mov	sp, r7
 800a7d2:	bdb0      	pop	{r4, r5, r7, pc}

0800a7d4 <_ZNKSt6vectorI14servoAngleDataSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 800a7d4:	b580      	push	{r7, lr}
 800a7d6:	b082      	sub	sp, #8
 800a7d8:	af00      	add	r7, sp, #0
 800a7da:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 800a7dc:	687b      	ldr	r3, [r7, #4]
 800a7de:	4618      	mov	r0, r3
 800a7e0:	f000 f885 	bl	800a8ee <_ZNKSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>
 800a7e4:	4603      	mov	r3, r0
 800a7e6:	4618      	mov	r0, r3
 800a7e8:	f000 f875 	bl	800a8d6 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE8max_sizeERKS2_>
 800a7ec:	4603      	mov	r3, r0
 800a7ee:	4618      	mov	r0, r3
 800a7f0:	3708      	adds	r7, #8
 800a7f2:	46bd      	mov	sp, r7
 800a7f4:	bd80      	pop	{r7, pc}

0800a7f6 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 800a7f6:	b480      	push	{r7}
 800a7f8:	b083      	sub	sp, #12
 800a7fa:	af00      	add	r7, sp, #0
 800a7fc:	6078      	str	r0, [r7, #4]
 800a7fe:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 800a800:	687b      	ldr	r3, [r7, #4]
 800a802:	681a      	ldr	r2, [r3, #0]
 800a804:	683b      	ldr	r3, [r7, #0]
 800a806:	681b      	ldr	r3, [r3, #0]
 800a808:	429a      	cmp	r2, r3
 800a80a:	d201      	bcs.n	800a810 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 800a80c:	683b      	ldr	r3, [r7, #0]
 800a80e:	e000      	b.n	800a812 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 800a810:	687b      	ldr	r3, [r7, #4]
    }
 800a812:	4618      	mov	r0, r3
 800a814:	370c      	adds	r7, #12
 800a816:	46bd      	mov	sp, r7
 800a818:	bc80      	pop	{r7}
 800a81a:	4770      	bx	lr

0800a81c <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE8allocateERS2_j>:
    allocate(_Alloc& __a, size_type __n)
 800a81c:	b580      	push	{r7, lr}
 800a81e:	b082      	sub	sp, #8
 800a820:	af00      	add	r7, sp, #0
 800a822:	6078      	str	r0, [r7, #4]
 800a824:	6039      	str	r1, [r7, #0]
    { return __a.allocate(__n); }
 800a826:	2200      	movs	r2, #0
 800a828:	6839      	ldr	r1, [r7, #0]
 800a82a:	6878      	ldr	r0, [r7, #4]
 800a82c:	f000 f869 	bl	800a902 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE8allocateEjPKv>
 800a830:	4603      	mov	r3, r0
 800a832:	4618      	mov	r0, r3
 800a834:	3708      	adds	r7, #8
 800a836:	46bd      	mov	sp, r7
 800a838:	bd80      	pop	{r7, pc}

0800a83a <_ZSt22__uninitialized_copy_aIP14servoAngleDataS1_S0_ET0_T_S3_S2_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800a83a:	b580      	push	{r7, lr}
 800a83c:	b084      	sub	sp, #16
 800a83e:	af00      	add	r7, sp, #0
 800a840:	60f8      	str	r0, [r7, #12]
 800a842:	60b9      	str	r1, [r7, #8]
 800a844:	607a      	str	r2, [r7, #4]
 800a846:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800a848:	687a      	ldr	r2, [r7, #4]
 800a84a:	68b9      	ldr	r1, [r7, #8]
 800a84c:	68f8      	ldr	r0, [r7, #12]
 800a84e:	f000 f876 	bl	800a93e <_ZSt18uninitialized_copyIP14servoAngleDataS1_ET0_T_S3_S2_>
 800a852:	4603      	mov	r3, r0
 800a854:	4618      	mov	r0, r3
 800a856:	3710      	adds	r7, #16
 800a858:	46bd      	mov	sp, r7
 800a85a:	bd80      	pop	{r7, pc}

0800a85c <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE7destroyEPS1_>:

      void 
      destroy(pointer __p) { __p->~_Tp(); }
 800a85c:	b480      	push	{r7}
 800a85e:	b083      	sub	sp, #12
 800a860:	af00      	add	r7, sp, #0
 800a862:	6078      	str	r0, [r7, #4]
 800a864:	6039      	str	r1, [r7, #0]
 800a866:	bf00      	nop
 800a868:	370c      	adds	r7, #12
 800a86a:	46bd      	mov	sp, r7
 800a86c:	bc80      	pop	{r7}
 800a86e:	4770      	bx	lr

0800a870 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800a870:	b480      	push	{r7}
 800a872:	b083      	sub	sp, #12
 800a874:	af00      	add	r7, sp, #0
 800a876:	6078      	str	r0, [r7, #4]
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	4618      	mov	r0, r3
 800a87c:	370c      	adds	r7, #12
 800a87e:	46bd      	mov	sp, r7
 800a880:	bc80      	pop	{r7}
 800a882:	4770      	bx	lr

0800a884 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800a884:	b580      	push	{r7, lr}
 800a886:	b084      	sub	sp, #16
 800a888:	af00      	add	r7, sp, #0
 800a88a:	60f8      	str	r0, [r7, #12]
 800a88c:	60b9      	str	r1, [r7, #8]
 800a88e:	607a      	str	r2, [r7, #4]
      { ::operator delete(__p); }
 800a890:	68b8      	ldr	r0, [r7, #8]
 800a892:	f001 f82b 	bl	800b8ec <_ZdlPv>
 800a896:	bf00      	nop
 800a898:	3710      	adds	r7, #16
 800a89a:	46bd      	mov	sp, r7
 800a89c:	bd80      	pop	{r7, pc}

0800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>:
    __niter_base(_Iterator __it)
 800a89e:	b480      	push	{r7}
 800a8a0:	b083      	sub	sp, #12
 800a8a2:	af00      	add	r7, sp, #0
 800a8a4:	6078      	str	r0, [r7, #4]
    { return __it; }
 800a8a6:	687b      	ldr	r3, [r7, #4]
 800a8a8:	4618      	mov	r0, r3
 800a8aa:	370c      	adds	r7, #12
 800a8ac:	46bd      	mov	sp, r7
 800a8ae:	bc80      	pop	{r7}
 800a8b0:	4770      	bx	lr

0800a8b2 <_ZSt22__copy_move_backward_aILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>:
    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 800a8b2:	b580      	push	{r7, lr}
 800a8b4:	b086      	sub	sp, #24
 800a8b6:	af00      	add	r7, sp, #0
 800a8b8:	60f8      	str	r0, [r7, #12]
 800a8ba:	60b9      	str	r1, [r7, #8]
 800a8bc:	607a      	str	r2, [r7, #4]
			     && __are_same<_ValueType1, _ValueType2>::__value);
 800a8be:	2301      	movs	r3, #1
 800a8c0:	75fb      	strb	r3, [r7, #23]
								 __result);
 800a8c2:	687a      	ldr	r2, [r7, #4]
 800a8c4:	68b9      	ldr	r1, [r7, #8]
 800a8c6:	68f8      	ldr	r0, [r7, #12]
 800a8c8:	f000 f84b 	bl	800a962 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI14servoAngleDataEEPT_PKS4_S7_S5_>
 800a8cc:	4603      	mov	r3, r0
    }
 800a8ce:	4618      	mov	r0, r3
 800a8d0:	3718      	adds	r7, #24
 800a8d2:	46bd      	mov	sp, r7
 800a8d4:	bd80      	pop	{r7, pc}

0800a8d6 <_ZN9__gnu_cxx14__alloc_traitsISaI14servoAngleDataEE8max_sizeERKS2_>:

    static size_type max_size(const _Alloc& __a)
 800a8d6:	b580      	push	{r7, lr}
 800a8d8:	b082      	sub	sp, #8
 800a8da:	af00      	add	r7, sp, #0
 800a8dc:	6078      	str	r0, [r7, #4]
    { return __a.max_size(); }
 800a8de:	6878      	ldr	r0, [r7, #4]
 800a8e0:	f000 f861 	bl	800a9a6 <_ZNK9__gnu_cxx13new_allocatorI14servoAngleDataE8max_sizeEv>
 800a8e4:	4603      	mov	r3, r0
 800a8e6:	4618      	mov	r0, r3
 800a8e8:	3708      	adds	r7, #8
 800a8ea:	46bd      	mov	sp, r7
 800a8ec:	bd80      	pop	{r7, pc}

0800a8ee <_ZNKSt12_Vector_baseI14servoAngleDataSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800a8ee:	b480      	push	{r7}
 800a8f0:	b083      	sub	sp, #12
 800a8f2:	af00      	add	r7, sp, #0
 800a8f4:	6078      	str	r0, [r7, #4]
      { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	370c      	adds	r7, #12
 800a8fc:	46bd      	mov	sp, r7
 800a8fe:	bc80      	pop	{r7}
 800a900:	4770      	bx	lr

0800a902 <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE8allocateEjPKv>:
      allocate(size_type __n, const void* = 0)
 800a902:	b580      	push	{r7, lr}
 800a904:	b084      	sub	sp, #16
 800a906:	af00      	add	r7, sp, #0
 800a908:	60f8      	str	r0, [r7, #12]
 800a90a:	60b9      	str	r1, [r7, #8]
 800a90c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800a90e:	68f8      	ldr	r0, [r7, #12]
 800a910:	f000 f849 	bl	800a9a6 <_ZNK9__gnu_cxx13new_allocatorI14servoAngleDataE8max_sizeEv>
 800a914:	4602      	mov	r2, r0
 800a916:	68bb      	ldr	r3, [r7, #8]
 800a918:	429a      	cmp	r2, r3
 800a91a:	bf34      	ite	cc
 800a91c:	2301      	movcc	r3, #1
 800a91e:	2300      	movcs	r3, #0
 800a920:	b2db      	uxtb	r3, r3
 800a922:	2b00      	cmp	r3, #0
 800a924:	d001      	beq.n	800a92a <_ZN9__gnu_cxx13new_allocatorI14servoAngleDataE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800a926:	f001 fec3 	bl	800c6b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800a92a:	68bb      	ldr	r3, [r7, #8]
 800a92c:	00db      	lsls	r3, r3, #3
 800a92e:	4618      	mov	r0, r3
 800a930:	f001 f8a0 	bl	800ba74 <_Znwj>
 800a934:	4603      	mov	r3, r0
      }
 800a936:	4618      	mov	r0, r3
 800a938:	3710      	adds	r7, #16
 800a93a:	46bd      	mov	sp, r7
 800a93c:	bd80      	pop	{r7, pc}

0800a93e <_ZSt18uninitialized_copyIP14servoAngleDataS1_ET0_T_S3_S2_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800a93e:	b580      	push	{r7, lr}
 800a940:	b086      	sub	sp, #24
 800a942:	af00      	add	r7, sp, #0
 800a944:	60f8      	str	r0, [r7, #12]
 800a946:	60b9      	str	r1, [r7, #8]
 800a948:	607a      	str	r2, [r7, #4]
      const bool __assignable = true;
 800a94a:	2301      	movs	r3, #1
 800a94c:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800a94e:	687a      	ldr	r2, [r7, #4]
 800a950:	68b9      	ldr	r1, [r7, #8]
 800a952:	68f8      	ldr	r0, [r7, #12]
 800a954:	f000 f832 	bl	800a9bc <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP14servoAngleDataS3_EET0_T_S5_S4_>
 800a958:	4603      	mov	r3, r0
    }
 800a95a:	4618      	mov	r0, r3
 800a95c:	3718      	adds	r7, #24
 800a95e:	46bd      	mov	sp, r7
 800a960:	bd80      	pop	{r7, pc}

0800a962 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI14servoAngleDataEEPT_PKS4_S7_S5_>:
        __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800a962:	b580      	push	{r7, lr}
 800a964:	b086      	sub	sp, #24
 800a966:	af00      	add	r7, sp, #0
 800a968:	60f8      	str	r0, [r7, #12]
 800a96a:	60b9      	str	r1, [r7, #8]
 800a96c:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800a96e:	68ba      	ldr	r2, [r7, #8]
 800a970:	68fb      	ldr	r3, [r7, #12]
 800a972:	1ad3      	subs	r3, r2, r3
 800a974:	10db      	asrs	r3, r3, #3
 800a976:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800a978:	697b      	ldr	r3, [r7, #20]
 800a97a:	2b00      	cmp	r3, #0
 800a97c:	d00a      	beq.n	800a994 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI14servoAngleDataEEPT_PKS4_S7_S5_+0x32>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 800a97e:	697b      	ldr	r3, [r7, #20]
 800a980:	00db      	lsls	r3, r3, #3
 800a982:	425b      	negs	r3, r3
 800a984:	687a      	ldr	r2, [r7, #4]
 800a986:	18d0      	adds	r0, r2, r3
 800a988:	697b      	ldr	r3, [r7, #20]
 800a98a:	00db      	lsls	r3, r3, #3
 800a98c:	461a      	mov	r2, r3
 800a98e:	68f9      	ldr	r1, [r7, #12]
 800a990:	f003 f936 	bl	800dc00 <memmove>
	  return __result - _Num;
 800a994:	697b      	ldr	r3, [r7, #20]
 800a996:	00db      	lsls	r3, r3, #3
 800a998:	425b      	negs	r3, r3
 800a99a:	687a      	ldr	r2, [r7, #4]
 800a99c:	4413      	add	r3, r2
	}
 800a99e:	4618      	mov	r0, r3
 800a9a0:	3718      	adds	r7, #24
 800a9a2:	46bd      	mov	sp, r7
 800a9a4:	bd80      	pop	{r7, pc}

0800a9a6 <_ZNK9__gnu_cxx13new_allocatorI14servoAngleDataE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800a9a6:	b480      	push	{r7}
 800a9a8:	b083      	sub	sp, #12
 800a9aa:	af00      	add	r7, sp, #0
 800a9ac:	6078      	str	r0, [r7, #4]
      { return size_t(-1) / sizeof(_Tp); }
 800a9ae:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800a9b2:	4618      	mov	r0, r3
 800a9b4:	370c      	adds	r7, #12
 800a9b6:	46bd      	mov	sp, r7
 800a9b8:	bc80      	pop	{r7}
 800a9ba:	4770      	bx	lr

0800a9bc <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP14servoAngleDataS3_EET0_T_S5_S4_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b084      	sub	sp, #16
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	60f8      	str	r0, [r7, #12]
 800a9c4:	60b9      	str	r1, [r7, #8]
 800a9c6:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800a9c8:	687a      	ldr	r2, [r7, #4]
 800a9ca:	68b9      	ldr	r1, [r7, #8]
 800a9cc:	68f8      	ldr	r0, [r7, #12]
 800a9ce:	f000 f805 	bl	800a9dc <_ZSt4copyIP14servoAngleDataS1_ET0_T_S3_S2_>
 800a9d2:	4603      	mov	r3, r0
 800a9d4:	4618      	mov	r0, r3
 800a9d6:	3710      	adds	r7, #16
 800a9d8:	46bd      	mov	sp, r7
 800a9da:	bd80      	pop	{r7, pc}

0800a9dc <_ZSt4copyIP14servoAngleDataS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 800a9dc:	b590      	push	{r4, r7, lr}
 800a9de:	b085      	sub	sp, #20
 800a9e0:	af00      	add	r7, sp, #0
 800a9e2:	60f8      	str	r0, [r7, #12]
 800a9e4:	60b9      	str	r1, [r7, #8]
 800a9e6:	607a      	str	r2, [r7, #4]
	      (std::__miter_base(__first), std::__miter_base(__last),
 800a9e8:	68f8      	ldr	r0, [r7, #12]
 800a9ea:	f7ff fecd 	bl	800a788 <_ZSt12__miter_baseIP14servoAngleDataET_S2_>
 800a9ee:	4604      	mov	r4, r0
 800a9f0:	68b8      	ldr	r0, [r7, #8]
 800a9f2:	f7ff fec9 	bl	800a788 <_ZSt12__miter_baseIP14servoAngleDataET_S2_>
 800a9f6:	4603      	mov	r3, r0
	       __result));
 800a9f8:	687a      	ldr	r2, [r7, #4]
 800a9fa:	4619      	mov	r1, r3
 800a9fc:	4620      	mov	r0, r4
 800a9fe:	f000 f805 	bl	800aa0c <_ZSt14__copy_move_a2ILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>
 800aa02:	4603      	mov	r3, r0
    }
 800aa04:	4618      	mov	r0, r3
 800aa06:	3714      	adds	r7, #20
 800aa08:	46bd      	mov	sp, r7
 800aa0a:	bd90      	pop	{r4, r7, pc}

0800aa0c <_ZSt14__copy_move_a2ILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800aa0c:	b5b0      	push	{r4, r5, r7, lr}
 800aa0e:	b084      	sub	sp, #16
 800aa10:	af00      	add	r7, sp, #0
 800aa12:	60f8      	str	r0, [r7, #12]
 800aa14:	60b9      	str	r1, [r7, #8]
 800aa16:	607a      	str	r2, [r7, #4]
      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 800aa18:	68f8      	ldr	r0, [r7, #12]
 800aa1a:	f7ff ff40 	bl	800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>
 800aa1e:	4604      	mov	r4, r0
 800aa20:	68b8      	ldr	r0, [r7, #8]
 800aa22:	f7ff ff3c 	bl	800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>
 800aa26:	4605      	mov	r5, r0
 800aa28:	6878      	ldr	r0, [r7, #4]
 800aa2a:	f7ff ff38 	bl	800a89e <_ZSt12__niter_baseIP14servoAngleDataET_S2_>
 800aa2e:	4603      	mov	r3, r0
					     std::__niter_base(__result)));
 800aa30:	461a      	mov	r2, r3
 800aa32:	4629      	mov	r1, r5
 800aa34:	4620      	mov	r0, r4
 800aa36:	f000 f805 	bl	800aa44 <_ZSt13__copy_move_aILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>
 800aa3a:	4603      	mov	r3, r0
    }
 800aa3c:	4618      	mov	r0, r3
 800aa3e:	3710      	adds	r7, #16
 800aa40:	46bd      	mov	sp, r7
 800aa42:	bdb0      	pop	{r4, r5, r7, pc}

0800aa44 <_ZSt13__copy_move_aILb0EP14servoAngleDataS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800aa44:	b580      	push	{r7, lr}
 800aa46:	b086      	sub	sp, #24
 800aa48:	af00      	add	r7, sp, #0
 800aa4a:	60f8      	str	r0, [r7, #12]
 800aa4c:	60b9      	str	r1, [r7, #8]
 800aa4e:	607a      	str	r2, [r7, #4]
			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 800aa50:	2301      	movs	r3, #1
 800aa52:	75fb      	strb	r3, [r7, #23]
	                      _Category>::__copy_m(__first, __last, __result);
 800aa54:	687a      	ldr	r2, [r7, #4]
 800aa56:	68b9      	ldr	r1, [r7, #8]
 800aa58:	68f8      	ldr	r0, [r7, #12]
 800aa5a:	f000 f805 	bl	800aa68 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14servoAngleDataEEPT_PKS4_S7_S5_>
 800aa5e:	4603      	mov	r3, r0
    }
 800aa60:	4618      	mov	r0, r3
 800aa62:	3718      	adds	r7, #24
 800aa64:	46bd      	mov	sp, r7
 800aa66:	bd80      	pop	{r7, pc}

0800aa68 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14servoAngleDataEEPT_PKS4_S7_S5_>:
        __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800aa68:	b580      	push	{r7, lr}
 800aa6a:	b086      	sub	sp, #24
 800aa6c:	af00      	add	r7, sp, #0
 800aa6e:	60f8      	str	r0, [r7, #12]
 800aa70:	60b9      	str	r1, [r7, #8]
 800aa72:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800aa74:	68ba      	ldr	r2, [r7, #8]
 800aa76:	68fb      	ldr	r3, [r7, #12]
 800aa78:	1ad3      	subs	r3, r2, r3
 800aa7a:	10db      	asrs	r3, r3, #3
 800aa7c:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800aa7e:	697b      	ldr	r3, [r7, #20]
 800aa80:	2b00      	cmp	r3, #0
 800aa82:	d006      	beq.n	800aa92 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14servoAngleDataEEPT_PKS4_S7_S5_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800aa84:	697b      	ldr	r3, [r7, #20]
 800aa86:	00db      	lsls	r3, r3, #3
 800aa88:	461a      	mov	r2, r3
 800aa8a:	68f9      	ldr	r1, [r7, #12]
 800aa8c:	6878      	ldr	r0, [r7, #4]
 800aa8e:	f003 f8b7 	bl	800dc00 <memmove>
	  return __result + _Num;
 800aa92:	697b      	ldr	r3, [r7, #20]
 800aa94:	00db      	lsls	r3, r3, #3
 800aa96:	687a      	ldr	r2, [r7, #4]
 800aa98:	4413      	add	r3, r2
	}
 800aa9a:	4618      	mov	r0, r3
 800aa9c:	3718      	adds	r7, #24
 800aa9e:	46bd      	mov	sp, r7
 800aaa0:	bd80      	pop	{r7, pc}
	...

0800aaa4 <_ZN5ServoC1EPVm>:
 *      Author: rvbc-
 */

#include "Servo.h"

Servo::Servo(volatile uint32_t* PWM_Register) {
 800aaa4:	b480      	push	{r7}
 800aaa6:	b083      	sub	sp, #12
 800aaa8:	af00      	add	r7, sp, #0
 800aaaa:	6078      	str	r0, [r7, #4]
 800aaac:	6039      	str	r1, [r7, #0]
 800aaae:	4a09      	ldr	r2, [pc, #36]	; (800aad4 <_ZN5ServoC1EPVm+0x30>)
 800aab0:	687b      	ldr	r3, [r7, #4]
 800aab2:	601a      	str	r2, [r3, #0]
	this->PWM_Register = PWM_Register;
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	683a      	ldr	r2, [r7, #0]
 800aab8:	605a      	str	r2, [r3, #4]
	this->max_angle = DEFAULT_MAX_ANGLE;
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	22b4      	movs	r2, #180	; 0xb4
 800aabe:	725a      	strb	r2, [r3, #9]
	this->min_angle = DEFAULT_MIN_ANGLE;
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	2200      	movs	r2, #0
 800aac4:	721a      	strb	r2, [r3, #8]
}
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	4618      	mov	r0, r3
 800aaca:	370c      	adds	r7, #12
 800aacc:	46bd      	mov	sp, r7
 800aace:	bc80      	pop	{r7}
 800aad0:	4770      	bx	lr
 800aad2:	bf00      	nop
 800aad4:	080113d8 	.word	0x080113d8

0800aad8 <_ZN5Servo8setPulseEt>:

void Servo::setPulse(uint16_t pulse){
 800aad8:	b480      	push	{r7}
 800aada:	b083      	sub	sp, #12
 800aadc:	af00      	add	r7, sp, #0
 800aade:	6078      	str	r0, [r7, #4]
 800aae0:	460b      	mov	r3, r1
 800aae2:	807b      	strh	r3, [r7, #2]
	if(pulse < MIN_PULSE_WIDTH) pulse = MIN_PULSE_WIDTH;
 800aae4:	887b      	ldrh	r3, [r7, #2]
 800aae6:	f240 2289 	movw	r2, #649	; 0x289
 800aaea:	4293      	cmp	r3, r2
 800aaec:	dc02      	bgt.n	800aaf4 <_ZN5Servo8setPulseEt+0x1c>
 800aaee:	f240 238a 	movw	r3, #650	; 0x28a
 800aaf2:	807b      	strh	r3, [r7, #2]
	if(pulse > MAX_PULSE_WIDTH) pulse = MAX_PULSE_WIDTH;
 800aaf4:	887b      	ldrh	r3, [r7, #2]
 800aaf6:	f640 2228 	movw	r2, #2600	; 0xa28
 800aafa:	4293      	cmp	r3, r2
 800aafc:	dd02      	ble.n	800ab04 <_ZN5Servo8setPulseEt+0x2c>
 800aafe:	f640 2328 	movw	r3, #2600	; 0xa28
 800ab02:	807b      	strh	r3, [r7, #2]
	*PWM_Register = pulse;
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	685b      	ldr	r3, [r3, #4]
 800ab08:	887a      	ldrh	r2, [r7, #2]
 800ab0a:	601a      	str	r2, [r3, #0]
}
 800ab0c:	bf00      	nop
 800ab0e:	370c      	adds	r7, #12
 800ab10:	46bd      	mov	sp, r7
 800ab12:	bc80      	pop	{r7}
 800ab14:	4770      	bx	lr
	...

0800ab18 <_ZN5Servo8setAngleEh>:

void Servo::setAngle(uint8_t angle){
 800ab18:	b590      	push	{r4, r7, lr}
 800ab1a:	b085      	sub	sp, #20
 800ab1c:	af00      	add	r7, sp, #0
 800ab1e:	6078      	str	r0, [r7, #4]
 800ab20:	460b      	mov	r3, r1
 800ab22:	70fb      	strb	r3, [r7, #3]
	if(angle < min_angle) angle = min_angle;
 800ab24:	78fb      	ldrb	r3, [r7, #3]
 800ab26:	687a      	ldr	r2, [r7, #4]
 800ab28:	7a12      	ldrb	r2, [r2, #8]
 800ab2a:	4293      	cmp	r3, r2
 800ab2c:	da02      	bge.n	800ab34 <_ZN5Servo8setAngleEh+0x1c>
 800ab2e:	687b      	ldr	r3, [r7, #4]
 800ab30:	7a1b      	ldrb	r3, [r3, #8]
 800ab32:	70fb      	strb	r3, [r7, #3]
	if(angle > max_angle) angle = max_angle;
 800ab34:	78fb      	ldrb	r3, [r7, #3]
 800ab36:	687a      	ldr	r2, [r7, #4]
 800ab38:	7a52      	ldrb	r2, [r2, #9]
 800ab3a:	4293      	cmp	r3, r2
 800ab3c:	dd02      	ble.n	800ab44 <_ZN5Servo8setAngleEh+0x2c>
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	7a5b      	ldrb	r3, [r3, #9]
 800ab42:	70fb      	strb	r3, [r7, #3]
	double pulse = (MAX_PULSE_WIDTH - MIN_PULSE_WIDTH) * (angle / 180.0) + MIN_PULSE_WIDTH;
 800ab44:	78fb      	ldrb	r3, [r7, #3]
 800ab46:	4618      	mov	r0, r3
 800ab48:	f7fb ffb2 	bl	8006ab0 <__aeabi_i2d>
 800ab4c:	f04f 0200 	mov.w	r2, #0
 800ab50:	4b15      	ldr	r3, [pc, #84]	; (800aba8 <_ZN5Servo8setAngleEh+0x90>)
 800ab52:	f7fc f93d 	bl	8006dd0 <__aeabi_ddiv>
 800ab56:	4603      	mov	r3, r0
 800ab58:	460c      	mov	r4, r1
 800ab5a:	4618      	mov	r0, r3
 800ab5c:	4621      	mov	r1, r4
 800ab5e:	a310      	add	r3, pc, #64	; (adr r3, 800aba0 <_ZN5Servo8setAngleEh+0x88>)
 800ab60:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab64:	f7fc f80a 	bl	8006b7c <__aeabi_dmul>
 800ab68:	4603      	mov	r3, r0
 800ab6a:	460c      	mov	r4, r1
 800ab6c:	4618      	mov	r0, r3
 800ab6e:	4621      	mov	r1, r4
 800ab70:	f04f 0200 	mov.w	r2, #0
 800ab74:	4b0d      	ldr	r3, [pc, #52]	; (800abac <_ZN5Servo8setAngleEh+0x94>)
 800ab76:	f7fb fe4f 	bl	8006818 <__adddf3>
 800ab7a:	4603      	mov	r3, r0
 800ab7c:	460c      	mov	r4, r1
 800ab7e:	e9c7 3402 	strd	r3, r4, [r7, #8]
	setPulse(pulse);
 800ab82:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ab86:	f7fc fad1 	bl	800712c <__aeabi_d2uiz>
 800ab8a:	4603      	mov	r3, r0
 800ab8c:	b29b      	uxth	r3, r3
 800ab8e:	4619      	mov	r1, r3
 800ab90:	6878      	ldr	r0, [r7, #4]
 800ab92:	f7ff ffa1 	bl	800aad8 <_ZN5Servo8setPulseEt>
}
 800ab96:	bf00      	nop
 800ab98:	3714      	adds	r7, #20
 800ab9a:	46bd      	mov	sp, r7
 800ab9c:	bd90      	pop	{r4, r7, pc}
 800ab9e:	bf00      	nop
 800aba0:	00000000 	.word	0x00000000
 800aba4:	409e7800 	.word	0x409e7800
 800aba8:	40668000 	.word	0x40668000
 800abac:	40845000 	.word	0x40845000

0800abb0 <_ZN5ServoD1Ev>:

void Servo::setMaxAngle(uint8_t max_angle){
	this->max_angle = max_angle;
}

Servo::~Servo() {
 800abb0:	b480      	push	{r7}
 800abb2:	b083      	sub	sp, #12
 800abb4:	af00      	add	r7, sp, #0
 800abb6:	6078      	str	r0, [r7, #4]
 800abb8:	4a04      	ldr	r2, [pc, #16]	; (800abcc <_ZN5ServoD1Ev+0x1c>)
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	601a      	str	r2, [r3, #0]
	// TODO Auto-generated destructor stub
}
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	4618      	mov	r0, r3
 800abc2:	370c      	adds	r7, #12
 800abc4:	46bd      	mov	sp, r7
 800abc6:	bc80      	pop	{r7}
 800abc8:	4770      	bx	lr
 800abca:	bf00      	nop
 800abcc:	080113d8 	.word	0x080113d8

0800abd0 <_ZN5ServoD0Ev>:
Servo::~Servo() {
 800abd0:	b580      	push	{r7, lr}
 800abd2:	b082      	sub	sp, #8
 800abd4:	af00      	add	r7, sp, #0
 800abd6:	6078      	str	r0, [r7, #4]
}
 800abd8:	6878      	ldr	r0, [r7, #4]
 800abda:	f7ff ffe9 	bl	800abb0 <_ZN5ServoD1Ev>
 800abde:	6878      	ldr	r0, [r7, #4]
 800abe0:	f000 fe84 	bl	800b8ec <_ZdlPv>
 800abe4:	687b      	ldr	r3, [r7, #4]
 800abe6:	4618      	mov	r0, r3
 800abe8:	3708      	adds	r7, #8
 800abea:	46bd      	mov	sp, r7
 800abec:	bd80      	pop	{r7, pc}

0800abee <_ZN11UART_PC_COM4initEP18UART_HandleTypeDefP5Robot>:
 *      Author: rvbc-
 */

#include "UARTPCCOM.h"

void UART_PC_COM::init(UART_HandleTypeDef *uart_handler, Robot *robot){
 800abee:	b580      	push	{r7, lr}
 800abf0:	b084      	sub	sp, #16
 800abf2:	af00      	add	r7, sp, #0
 800abf4:	60f8      	str	r0, [r7, #12]
 800abf6:	60b9      	str	r1, [r7, #8]
 800abf8:	607a      	str	r2, [r7, #4]
	this->uart_handler = uart_handler;
 800abfa:	68fb      	ldr	r3, [r7, #12]
 800abfc:	68ba      	ldr	r2, [r7, #8]
 800abfe:	61da      	str	r2, [r3, #28]

	this->robot = robot;
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	687a      	ldr	r2, [r7, #4]
 800ac04:	621a      	str	r2, [r3, #32]
	robot->addPC(this);
 800ac06:	68f9      	ldr	r1, [r7, #12]
 800ac08:	6878      	ldr	r0, [r7, #4]
 800ac0a:	f7ff f850 	bl	8009cae <_ZN5Robot5addPCEP11UART_PC_COM>

	initFrameTX();
 800ac0e:	68f8      	ldr	r0, [r7, #12]
 800ac10:	f000 f8e6 	bl	800ade0 <_ZN11UART_PC_COM11initFrameTXEv>
	startUpdatingData();
 800ac14:	68f8      	ldr	r0, [r7, #12]
 800ac16:	f000 f912 	bl	800ae3e <_ZN11UART_PC_COM17startUpdatingDataEv>

	HAL_UART_Receive_DMA(uart_handler, frameRX.bytes, DATA_FRAME_RX_SIZE);
 800ac1a:	68fb      	ldr	r3, [r7, #12]
 800ac1c:	3304      	adds	r3, #4
 800ac1e:	220a      	movs	r2, #10
 800ac20:	4619      	mov	r1, r3
 800ac22:	68b8      	ldr	r0, [r7, #8]
 800ac24:	f7fe fdbc 	bl	80097a0 <HAL_UART_Receive_DMA>
	sendData();
 800ac28:	68f8      	ldr	r0, [r7, #12]
 800ac2a:	f000 f83a 	bl	800aca2 <_ZN11UART_PC_COM8sendDataEv>
}
 800ac2e:	bf00      	nop
 800ac30:	3710      	adds	r7, #16
 800ac32:	46bd      	mov	sp, r7
 800ac34:	bd80      	pop	{r7, pc}
	...

0800ac38 <_ZN11UART_PC_COMC1EP18UART_HandleTypeDefP5Robot>:

UART_PC_COM::UART_PC_COM(UART_HandleTypeDef *uart_handler, Robot *robot) {
 800ac38:	b580      	push	{r7, lr}
 800ac3a:	b084      	sub	sp, #16
 800ac3c:	af00      	add	r7, sp, #0
 800ac3e:	60f8      	str	r0, [r7, #12]
 800ac40:	60b9      	str	r1, [r7, #8]
 800ac42:	607a      	str	r2, [r7, #4]
 800ac44:	4a06      	ldr	r2, [pc, #24]	; (800ac60 <_ZN11UART_PC_COMC1EP18UART_HandleTypeDefP5Robot+0x28>)
 800ac46:	68fb      	ldr	r3, [r7, #12]
 800ac48:	601a      	str	r2, [r3, #0]
	init(uart_handler, robot);
 800ac4a:	687a      	ldr	r2, [r7, #4]
 800ac4c:	68b9      	ldr	r1, [r7, #8]
 800ac4e:	68f8      	ldr	r0, [r7, #12]
 800ac50:	f7ff ffcd 	bl	800abee <_ZN11UART_PC_COM4initEP18UART_HandleTypeDefP5Robot>
}
 800ac54:	68fb      	ldr	r3, [r7, #12]
 800ac56:	4618      	mov	r0, r3
 800ac58:	3710      	adds	r7, #16
 800ac5a:	46bd      	mov	sp, r7
 800ac5c:	bd80      	pop	{r7, pc}
 800ac5e:	bf00      	nop
 800ac60:	080113f8 	.word	0x080113f8

0800ac64 <_ZN11UART_PC_COMD1Ev>:

UART_PC_COM::~UART_PC_COM() {
 800ac64:	b480      	push	{r7}
 800ac66:	b083      	sub	sp, #12
 800ac68:	af00      	add	r7, sp, #0
 800ac6a:	6078      	str	r0, [r7, #4]
 800ac6c:	4a04      	ldr	r2, [pc, #16]	; (800ac80 <_ZN11UART_PC_COMD1Ev+0x1c>)
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	601a      	str	r2, [r3, #0]
	// TODO Auto-generated destructor stub
}
 800ac72:	687b      	ldr	r3, [r7, #4]
 800ac74:	4618      	mov	r0, r3
 800ac76:	370c      	adds	r7, #12
 800ac78:	46bd      	mov	sp, r7
 800ac7a:	bc80      	pop	{r7}
 800ac7c:	4770      	bx	lr
 800ac7e:	bf00      	nop
 800ac80:	080113f8 	.word	0x080113f8

0800ac84 <_ZN11UART_PC_COMD0Ev>:
UART_PC_COM::~UART_PC_COM() {
 800ac84:	b580      	push	{r7, lr}
 800ac86:	b082      	sub	sp, #8
 800ac88:	af00      	add	r7, sp, #0
 800ac8a:	6078      	str	r0, [r7, #4]
}
 800ac8c:	6878      	ldr	r0, [r7, #4]
 800ac8e:	f7ff ffe9 	bl	800ac64 <_ZN11UART_PC_COMD1Ev>
 800ac92:	6878      	ldr	r0, [r7, #4]
 800ac94:	f000 fe2a 	bl	800b8ec <_ZdlPv>
 800ac98:	687b      	ldr	r3, [r7, #4]
 800ac9a:	4618      	mov	r0, r3
 800ac9c:	3708      	adds	r7, #8
 800ac9e:	46bd      	mov	sp, r7
 800aca0:	bd80      	pop	{r7, pc}

0800aca2 <_ZN11UART_PC_COM8sendDataEv>:

void UART_PC_COM::sendData(){
 800aca2:	b580      	push	{r7, lr}
 800aca4:	b082      	sub	sp, #8
 800aca6:	af00      	add	r7, sp, #0
 800aca8:	6078      	str	r0, [r7, #4]
	updateFrameTX();
 800acaa:	6878      	ldr	r0, [r7, #4]
 800acac:	f000 f8a7 	bl	800adfe <_ZN11UART_PC_COM13updateFrameTXEv>
	HAL_UART_Transmit_DMA(uart_handler, frameTX.bytes, DATA_FRAME_TX_SIZE);
 800acb0:	687b      	ldr	r3, [r7, #4]
 800acb2:	69d8      	ldr	r0, [r3, #28]
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	330e      	adds	r3, #14
 800acb8:	220a      	movs	r2, #10
 800acba:	4619      	mov	r1, r3
 800acbc:	f7fe fd36 	bl	800972c <HAL_UART_Transmit_DMA>
}
 800acc0:	bf00      	nop
 800acc2:	3708      	adds	r7, #8
 800acc4:	46bd      	mov	sp, r7
 800acc6:	bd80      	pop	{r7, pc}

0800acc8 <_ZN11UART_PC_COM15recieveNextDataEv>:

void UART_PC_COM::recieveNextData(){
 800acc8:	b580      	push	{r7, lr}
 800acca:	b084      	sub	sp, #16
 800accc:	af00      	add	r7, sp, #0
 800acce:	6078      	str	r0, [r7, #4]
	if((frameRX.data.start_code == START_CODE) && (frameRX.data.end_code == END_CODE)){
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	791b      	ldrb	r3, [r3, #4]
 800acd4:	2b40      	cmp	r3, #64	; 0x40
 800acd6:	d10f      	bne.n	800acf8 <_ZN11UART_PC_COM15recieveNextDataEv+0x30>
 800acd8:	687b      	ldr	r3, [r7, #4]
 800acda:	7b5b      	ldrb	r3, [r3, #13]
 800acdc:	2b80      	cmp	r3, #128	; 0x80
 800acde:	d10b      	bne.n	800acf8 <_ZN11UART_PC_COM15recieveNextDataEv+0x30>
		goodDataLoad();
 800ace0:	6878      	ldr	r0, [r7, #4]
 800ace2:	f000 f84e 	bl	800ad82 <_ZN11UART_PC_COM12goodDataLoadEv>
		HAL_UART_Receive_DMA(uart_handler, frameRX.bytes, DATA_FRAME_RX_SIZE);
 800ace6:	687b      	ldr	r3, [r7, #4]
 800ace8:	69d8      	ldr	r0, [r3, #28]
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	3304      	adds	r3, #4
 800acee:	220a      	movs	r2, #10
 800acf0:	4619      	mov	r1, r3
 800acf2:	f7fe fd55 	bl	80097a0 <HAL_UART_Receive_DMA>
 800acf6:	e040      	b.n	800ad7a <_ZN11UART_PC_COM15recieveNextDataEv+0xb2>
	} else {
		badDataLoad();
 800acf8:	6878      	ldr	r0, [r7, #4]
 800acfa:	f000 f85d 	bl	800adb8 <_ZN11UART_PC_COM11badDataLoadEv>
		for(int i = 1; i < DATA_FRAME_RX_SIZE; i++){
 800acfe:	2301      	movs	r3, #1
 800ad00:	60fb      	str	r3, [r7, #12]
 800ad02:	68fb      	ldr	r3, [r7, #12]
 800ad04:	2b09      	cmp	r3, #9
 800ad06:	dc30      	bgt.n	800ad6a <_ZN11UART_PC_COM15recieveNextDataEv+0xa2>
			if(frameRX.bytes[i] == START_CODE){
 800ad08:	687a      	ldr	r2, [r7, #4]
 800ad0a:	68fb      	ldr	r3, [r7, #12]
 800ad0c:	4413      	add	r3, r2
 800ad0e:	3304      	adds	r3, #4
 800ad10:	781b      	ldrb	r3, [r3, #0]
 800ad12:	2b40      	cmp	r3, #64	; 0x40
 800ad14:	d125      	bne.n	800ad62 <_ZN11UART_PC_COM15recieveNextDataEv+0x9a>
				for(int j = 0; j < DATA_FRAME_RX_SIZE - i; j++){
 800ad16:	2300      	movs	r3, #0
 800ad18:	60bb      	str	r3, [r7, #8]
 800ad1a:	68fb      	ldr	r3, [r7, #12]
 800ad1c:	f1c3 020a 	rsb	r2, r3, #10
 800ad20:	68bb      	ldr	r3, [r7, #8]
 800ad22:	429a      	cmp	r2, r3
 800ad24:	dd0f      	ble.n	800ad46 <_ZN11UART_PC_COM15recieveNextDataEv+0x7e>
					frameRX.bytes[j] = frameRX.bytes[j + i];
 800ad26:	68ba      	ldr	r2, [r7, #8]
 800ad28:	68fb      	ldr	r3, [r7, #12]
 800ad2a:	4413      	add	r3, r2
 800ad2c:	687a      	ldr	r2, [r7, #4]
 800ad2e:	4413      	add	r3, r2
 800ad30:	7919      	ldrb	r1, [r3, #4]
 800ad32:	687a      	ldr	r2, [r7, #4]
 800ad34:	68bb      	ldr	r3, [r7, #8]
 800ad36:	4413      	add	r3, r2
 800ad38:	3304      	adds	r3, #4
 800ad3a:	460a      	mov	r2, r1
 800ad3c:	701a      	strb	r2, [r3, #0]
				for(int j = 0; j < DATA_FRAME_RX_SIZE - i; j++){
 800ad3e:	68bb      	ldr	r3, [r7, #8]
 800ad40:	3301      	adds	r3, #1
 800ad42:	60bb      	str	r3, [r7, #8]
 800ad44:	e7e9      	b.n	800ad1a <_ZN11UART_PC_COM15recieveNextDataEv+0x52>
				}
				HAL_UART_Receive_DMA(uart_handler, frameRX.bytes + DATA_FRAME_RX_SIZE - i, i);
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	69d8      	ldr	r0, [r3, #28]
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	1d1a      	adds	r2, r3, #4
 800ad4e:	68fb      	ldr	r3, [r7, #12]
 800ad50:	f1c3 030a 	rsb	r3, r3, #10
 800ad54:	4413      	add	r3, r2
 800ad56:	68fa      	ldr	r2, [r7, #12]
 800ad58:	b292      	uxth	r2, r2
 800ad5a:	4619      	mov	r1, r3
 800ad5c:	f7fe fd20 	bl	80097a0 <HAL_UART_Receive_DMA>
				goto loop_end;
 800ad60:	e00b      	b.n	800ad7a <_ZN11UART_PC_COM15recieveNextDataEv+0xb2>
		for(int i = 1; i < DATA_FRAME_RX_SIZE; i++){
 800ad62:	68fb      	ldr	r3, [r7, #12]
 800ad64:	3301      	adds	r3, #1
 800ad66:	60fb      	str	r3, [r7, #12]
 800ad68:	e7cb      	b.n	800ad02 <_ZN11UART_PC_COM15recieveNextDataEv+0x3a>
			}
		}
		HAL_UART_Receive_DMA(uart_handler, frameRX.bytes, DATA_FRAME_RX_SIZE);
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	69d8      	ldr	r0, [r3, #28]
 800ad6e:	687b      	ldr	r3, [r7, #4]
 800ad70:	3304      	adds	r3, #4
 800ad72:	220a      	movs	r2, #10
 800ad74:	4619      	mov	r1, r3
 800ad76:	f7fe fd13 	bl	80097a0 <HAL_UART_Receive_DMA>
	}
	loop_end:;
}
 800ad7a:	bf00      	nop
 800ad7c:	3710      	adds	r7, #16
 800ad7e:	46bd      	mov	sp, r7
 800ad80:	bd80      	pop	{r7, pc}

0800ad82 <_ZN11UART_PC_COM12goodDataLoadEv>:

void UART_PC_COM::goodDataLoad(){
 800ad82:	b590      	push	{r4, r7, lr}
 800ad84:	b083      	sub	sp, #12
 800ad86:	af00      	add	r7, sp, #0
 800ad88:	6078      	str	r0, [r7, #4]
	if(is_updating_data) robot->updatedData(this->getRecievedData()->servo);
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	7e5b      	ldrb	r3, [r3, #25]
 800ad8e:	2b00      	cmp	r3, #0
 800ad90:	d00e      	beq.n	800adb0 <_ZN11UART_PC_COM12goodDataLoadEv+0x2e>
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	6a1c      	ldr	r4, [r3, #32]
 800ad96:	6878      	ldr	r0, [r7, #4]
 800ad98:	f000 f817 	bl	800adca <_ZN11UART_PC_COM15getRecievedDataEv>
 800ad9c:	4603      	mov	r3, r0
 800ad9e:	f8d3 2001 	ldr.w	r2, [r3, #1]
 800ada2:	4611      	mov	r1, r2
 800ada4:	f8d3 3005 	ldr.w	r3, [r3, #5]
 800ada8:	461a      	mov	r2, r3
 800adaa:	4620      	mov	r0, r4
 800adac:	f7fe ffbc 	bl	8009d28 <_ZN5Robot11updatedDataE14servoAngleData>
}
 800adb0:	bf00      	nop
 800adb2:	370c      	adds	r7, #12
 800adb4:	46bd      	mov	sp, r7
 800adb6:	bd90      	pop	{r4, r7, pc}

0800adb8 <_ZN11UART_PC_COM11badDataLoadEv>:
void UART_PC_COM::badDataLoad(){
 800adb8:	b480      	push	{r7}
 800adba:	b083      	sub	sp, #12
 800adbc:	af00      	add	r7, sp, #0
 800adbe:	6078      	str	r0, [r7, #4]

}
 800adc0:	bf00      	nop
 800adc2:	370c      	adds	r7, #12
 800adc4:	46bd      	mov	sp, r7
 800adc6:	bc80      	pop	{r7}
 800adc8:	4770      	bx	lr

0800adca <_ZN11UART_PC_COM15getRecievedDataEv>:
		return true;
	}
	return false;
}

dataFrameRX * UART_PC_COM::getRecievedData(){
 800adca:	b480      	push	{r7}
 800adcc:	b083      	sub	sp, #12
 800adce:	af00      	add	r7, sp, #0
 800add0:	6078      	str	r0, [r7, #4]
	return &frameRX.data;
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	3304      	adds	r3, #4
}
 800add6:	4618      	mov	r0, r3
 800add8:	370c      	adds	r7, #12
 800adda:	46bd      	mov	sp, r7
 800addc:	bc80      	pop	{r7}
 800adde:	4770      	bx	lr

0800ade0 <_ZN11UART_PC_COM11initFrameTXEv>:

UART_HandleTypeDef * UART_PC_COM::getUartHandler(){
	return uart_handler;
}

void UART_PC_COM::initFrameTX(){
 800ade0:	b480      	push	{r7}
 800ade2:	b083      	sub	sp, #12
 800ade4:	af00      	add	r7, sp, #0
 800ade6:	6078      	str	r0, [r7, #4]
	frameTX.data.start_code = START_CODE;
 800ade8:	687b      	ldr	r3, [r7, #4]
 800adea:	2240      	movs	r2, #64	; 0x40
 800adec:	739a      	strb	r2, [r3, #14]
	frameTX.data.end_code = END_CODE;
 800adee:	687b      	ldr	r3, [r7, #4]
 800adf0:	2280      	movs	r2, #128	; 0x80
 800adf2:	75da      	strb	r2, [r3, #23]
}
 800adf4:	bf00      	nop
 800adf6:	370c      	adds	r7, #12
 800adf8:	46bd      	mov	sp, r7
 800adfa:	bc80      	pop	{r7}
 800adfc:	4770      	bx	lr

0800adfe <_ZN11UART_PC_COM13updateFrameTXEv>:

void UART_PC_COM::updateFrameTX(){
 800adfe:	b590      	push	{r4, r7, lr}
 800ae00:	b087      	sub	sp, #28
 800ae02:	af00      	add	r7, sp, #0
 800ae04:	60f8      	str	r0, [r7, #12]
	for(uint16_t i = 0; i < AMOUNT_OF_SERVO; i++){
 800ae06:	2300      	movs	r3, #0
 800ae08:	82fb      	strh	r3, [r7, #22]
 800ae0a:	8afb      	ldrh	r3, [r7, #22]
 800ae0c:	2b03      	cmp	r3, #3
 800ae0e:	dc12      	bgt.n	800ae36 <_ZN11UART_PC_COM13updateFrameTXEv+0x38>
		frameTX.data.servo = robot->getCurrentServoData();
 800ae10:	68fb      	ldr	r3, [r7, #12]
 800ae12:	6a1a      	ldr	r2, [r3, #32]
 800ae14:	68fc      	ldr	r4, [r7, #12]
 800ae16:	463b      	mov	r3, r7
 800ae18:	4611      	mov	r1, r2
 800ae1a:	4618      	mov	r0, r3
 800ae1c:	f7fe ffb0 	bl	8009d80 <_ZN5Robot19getCurrentServoDataEv>
 800ae20:	f104 030f 	add.w	r3, r4, #15
 800ae24:	463a      	mov	r2, r7
 800ae26:	6811      	ldr	r1, [r2, #0]
 800ae28:	6852      	ldr	r2, [r2, #4]
 800ae2a:	6019      	str	r1, [r3, #0]
 800ae2c:	605a      	str	r2, [r3, #4]
	for(uint16_t i = 0; i < AMOUNT_OF_SERVO; i++){
 800ae2e:	8afb      	ldrh	r3, [r7, #22]
 800ae30:	3301      	adds	r3, #1
 800ae32:	82fb      	strh	r3, [r7, #22]
 800ae34:	e7e9      	b.n	800ae0a <_ZN11UART_PC_COM13updateFrameTXEv+0xc>
	}
}
 800ae36:	bf00      	nop
 800ae38:	371c      	adds	r7, #28
 800ae3a:	46bd      	mov	sp, r7
 800ae3c:	bd90      	pop	{r4, r7, pc}

0800ae3e <_ZN11UART_PC_COM17startUpdatingDataEv>:

void UART_PC_COM::stopSendingData(){
	is_sending_data = false;
}

void UART_PC_COM::startUpdatingData(){
 800ae3e:	b480      	push	{r7}
 800ae40:	b083      	sub	sp, #12
 800ae42:	af00      	add	r7, sp, #0
 800ae44:	6078      	str	r0, [r7, #4]
	is_updating_data = true;
 800ae46:	687b      	ldr	r3, [r7, #4]
 800ae48:	2201      	movs	r2, #1
 800ae4a:	765a      	strb	r2, [r3, #25]
}
 800ae4c:	bf00      	nop
 800ae4e:	370c      	adds	r7, #12
 800ae50:	46bd      	mov	sp, r7
 800ae52:	bc80      	pop	{r7}
 800ae54:	4770      	bx	lr

0800ae56 <_ZN11UART_PC_COM16stopUpdatingDataEv>:

void UART_PC_COM::stopUpdatingData(){
 800ae56:	b480      	push	{r7}
 800ae58:	b083      	sub	sp, #12
 800ae5a:	af00      	add	r7, sp, #0
 800ae5c:	6078      	str	r0, [r7, #4]
	is_updating_data = false;
 800ae5e:	687b      	ldr	r3, [r7, #4]
 800ae60:	2200      	movs	r2, #0
 800ae62:	765a      	strb	r2, [r3, #25]
}
 800ae64:	bf00      	nop
 800ae66:	370c      	adds	r7, #12
 800ae68:	46bd      	mov	sp, r7
 800ae6a:	bc80      	pop	{r7}
 800ae6c:	4770      	bx	lr
	...

0800ae70 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN PFP */
/* Private function prototypes -----------------------------------------------*/
extern "C" void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 800ae70:	b580      	push	{r7, lr}
 800ae72:	b082      	sub	sp, #8
 800ae74:	af00      	add	r7, sp, #0
 800ae76:	6078      	str	r0, [r7, #4]
	if(pc != NULL) pc->recieveNextData();
 800ae78:	4b06      	ldr	r3, [pc, #24]	; (800ae94 <HAL_UART_RxCpltCallback+0x24>)
 800ae7a:	681b      	ldr	r3, [r3, #0]
 800ae7c:	2b00      	cmp	r3, #0
 800ae7e:	d004      	beq.n	800ae8a <HAL_UART_RxCpltCallback+0x1a>
 800ae80:	4b04      	ldr	r3, [pc, #16]	; (800ae94 <HAL_UART_RxCpltCallback+0x24>)
 800ae82:	681b      	ldr	r3, [r3, #0]
 800ae84:	4618      	mov	r0, r3
 800ae86:	f7ff ff1f 	bl	800acc8 <_ZN11UART_PC_COM15recieveNextDataEv>
}
 800ae8a:	bf00      	nop
 800ae8c:	3708      	adds	r7, #8
 800ae8e:	46bd      	mov	sp, r7
 800ae90:	bd80      	pop	{r7, pc}
 800ae92:	bf00      	nop
 800ae94:	200008c4 	.word	0x200008c4

0800ae98 <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 800ae98:	b580      	push	{r7, lr}
 800ae9a:	b082      	sub	sp, #8
 800ae9c:	af00      	add	r7, sp, #0
 800ae9e:	6078      	str	r0, [r7, #4]
	if(pc != NULL) pc->sendData();
 800aea0:	4b06      	ldr	r3, [pc, #24]	; (800aebc <HAL_UART_TxCpltCallback+0x24>)
 800aea2:	681b      	ldr	r3, [r3, #0]
 800aea4:	2b00      	cmp	r3, #0
 800aea6:	d004      	beq.n	800aeb2 <HAL_UART_TxCpltCallback+0x1a>
 800aea8:	4b04      	ldr	r3, [pc, #16]	; (800aebc <HAL_UART_TxCpltCallback+0x24>)
 800aeaa:	681b      	ldr	r3, [r3, #0]
 800aeac:	4618      	mov	r0, r3
 800aeae:	f7ff fef8 	bl	800aca2 <_ZN11UART_PC_COM8sendDataEv>
}
 800aeb2:	bf00      	nop
 800aeb4:	3708      	adds	r7, #8
 800aeb6:	46bd      	mov	sp, r7
 800aeb8:	bd80      	pop	{r7, pc}
 800aeba:	bf00      	nop
 800aebc:	200008c4 	.word	0x200008c4

0800aec0 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 800aec0:	b590      	push	{r4, r7, lr}
 800aec2:	b083      	sub	sp, #12
 800aec4:	af00      	add	r7, sp, #0
 800aec6:	4603      	mov	r3, r0
 800aec8:	80fb      	strh	r3, [r7, #6]
	if(robot != NULL) robot->buttonIT(HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin));
 800aeca:	4b0a      	ldr	r3, [pc, #40]	; (800aef4 <HAL_GPIO_EXTI_Callback+0x34>)
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	2b00      	cmp	r3, #0
 800aed0:	d00b      	beq.n	800aeea <HAL_GPIO_EXTI_Callback+0x2a>
 800aed2:	4b08      	ldr	r3, [pc, #32]	; (800aef4 <HAL_GPIO_EXTI_Callback+0x34>)
 800aed4:	681c      	ldr	r4, [r3, #0]
 800aed6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800aeda:	4807      	ldr	r0, [pc, #28]	; (800aef8 <HAL_GPIO_EXTI_Callback+0x38>)
 800aedc:	f7fd fd44 	bl	8008968 <HAL_GPIO_ReadPin>
 800aee0:	4603      	mov	r3, r0
 800aee2:	4619      	mov	r1, r3
 800aee4:	4620      	mov	r0, r4
 800aee6:	f7fe ffe5 	bl	8009eb4 <_ZN5Robot8buttonITEh>
}
 800aeea:	bf00      	nop
 800aeec:	370c      	adds	r7, #12
 800aeee:	46bd      	mov	sp, r7
 800aef0:	bd90      	pop	{r4, r7, pc}
 800aef2:	bf00      	nop
 800aef4:	200008c0 	.word	0x200008c0
 800aef8:	40011000 	.word	0x40011000

0800aefc <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 800aefc:	b580      	push	{r7, lr}
 800aefe:	b082      	sub	sp, #8
 800af00:	af00      	add	r7, sp, #0
 800af02:	6078      	str	r0, [r7, #4]
	if(robot != NULL) robot->timerIT();
 800af04:	4b06      	ldr	r3, [pc, #24]	; (800af20 <HAL_TIM_PeriodElapsedCallback+0x24>)
 800af06:	681b      	ldr	r3, [r3, #0]
 800af08:	2b00      	cmp	r3, #0
 800af0a:	d004      	beq.n	800af16 <HAL_TIM_PeriodElapsedCallback+0x1a>
 800af0c:	4b04      	ldr	r3, [pc, #16]	; (800af20 <HAL_TIM_PeriodElapsedCallback+0x24>)
 800af0e:	681b      	ldr	r3, [r3, #0]
 800af10:	4618      	mov	r0, r3
 800af12:	f7fe ffef 	bl	8009ef4 <_ZN5Robot7timerITEv>
}
 800af16:	bf00      	nop
 800af18:	3708      	adds	r7, #8
 800af1a:	46bd      	mov	sp, r7
 800af1c:	bd80      	pop	{r7, pc}
 800af1e:	bf00      	nop
 800af20:	200008c0 	.word	0x200008c0

0800af24 <main>:
 * @brief  The application entry point.
 *
 * @retval None
 */
int main(void)
{
 800af24:	b590      	push	{r4, r7, lr}
 800af26:	b083      	sub	sp, #12
 800af28:	af02      	add	r7, sp, #8
	/* USER CODE END 1 */

	/* MCU Configuration----------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800af2a:	f7fd fa51 	bl	80083d0 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 800af2e:	f000 f859 	bl	800afe4 <_Z18SystemClock_Configv>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800af32:	f000 fa83 	bl	800b43c <_ZL12MX_GPIO_Initv>
	MX_DMA_Init();
 800af36:	f000 fa4b 	bl	800b3d0 <_ZL11MX_DMA_Initv>
	MX_USART2_UART_Init();
 800af3a:	f000 f9e1 	bl	800b300 <_ZL19MX_USART2_UART_Initv>
	MX_TIM4_Init();
 800af3e:	f000 f917 	bl	800b170 <_ZL12MX_TIM4_Initv>
	MX_USART3_UART_Init();
 800af42:	f000 fa11 	bl	800b368 <_ZL19MX_USART3_UART_Initv>
	MX_TIM2_Init();
 800af46:	f000 f8a5 	bl	800b094 <_ZL12MX_TIM2_Initv>
	/* USER CODE BEGIN 2 */
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 800af4a:	2100      	movs	r1, #0
 800af4c:	481c      	ldr	r0, [pc, #112]	; (800afc0 <main+0x9c>)
 800af4e:	f7fe fad9 	bl	8009504 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 800af52:	2104      	movs	r1, #4
 800af54:	481a      	ldr	r0, [pc, #104]	; (800afc0 <main+0x9c>)
 800af56:	f7fe fad5 	bl	8009504 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 800af5a:	2108      	movs	r1, #8
 800af5c:	4818      	ldr	r0, [pc, #96]	; (800afc0 <main+0x9c>)
 800af5e:	f7fe fad1 	bl	8009504 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 800af62:	210c      	movs	r1, #12
 800af64:	4816      	ldr	r0, [pc, #88]	; (800afc0 <main+0x9c>)
 800af66:	f7fe facd 	bl	8009504 <HAL_TIM_PWM_Start>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */

	robot = new Robot(&TIM4->CCR1, &TIM4->CCR2, &TIM4->CCR3, &TIM4->CCR4, &htim2);
 800af6a:	2038      	movs	r0, #56	; 0x38
 800af6c:	f000 fd82 	bl	800ba74 <_Znwj>
 800af70:	4603      	mov	r3, r0
 800af72:	461c      	mov	r4, r3
 800af74:	4b13      	ldr	r3, [pc, #76]	; (800afc4 <main+0xa0>)
 800af76:	9301      	str	r3, [sp, #4]
 800af78:	4b13      	ldr	r3, [pc, #76]	; (800afc8 <main+0xa4>)
 800af7a:	9300      	str	r3, [sp, #0]
 800af7c:	4b13      	ldr	r3, [pc, #76]	; (800afcc <main+0xa8>)
 800af7e:	4a14      	ldr	r2, [pc, #80]	; (800afd0 <main+0xac>)
 800af80:	4914      	ldr	r1, [pc, #80]	; (800afd4 <main+0xb0>)
 800af82:	4620      	mov	r0, r4
 800af84:	f7fe fe48 	bl	8009c18 <_ZN5RobotC1EPVmS1_S1_S1_P17TIM_HandleTypeDef>
 800af88:	4b13      	ldr	r3, [pc, #76]	; (800afd8 <main+0xb4>)
 800af8a:	601c      	str	r4, [r3, #0]
	pc = new UART_PC_COM(&huart3, robot);
 800af8c:	2030      	movs	r0, #48	; 0x30
 800af8e:	f000 fd71 	bl	800ba74 <_Znwj>
 800af92:	4603      	mov	r3, r0
 800af94:	461c      	mov	r4, r3
 800af96:	4b10      	ldr	r3, [pc, #64]	; (800afd8 <main+0xb4>)
 800af98:	681b      	ldr	r3, [r3, #0]
 800af9a:	461a      	mov	r2, r3
 800af9c:	490f      	ldr	r1, [pc, #60]	; (800afdc <main+0xb8>)
 800af9e:	4620      	mov	r0, r4
 800afa0:	f7ff fe4a 	bl	800ac38 <_ZN11UART_PC_COMC1EP18UART_HandleTypeDefP5Robot>
 800afa4:	4b0e      	ldr	r3, [pc, #56]	; (800afe0 <main+0xbc>)
 800afa6:	601c      	str	r4, [r3, #0]





	while (1){
 800afa8:	e7fe      	b.n	800afa8 <main+0x84>
	robot = new Robot(&TIM4->CCR1, &TIM4->CCR2, &TIM4->CCR3, &TIM4->CCR4, &htim2);
 800afaa:	4620      	mov	r0, r4
 800afac:	f000 fc9e 	bl	800b8ec <_ZdlPv>
 800afb0:	f000 feea 	bl	800bd88 <__cxa_end_cleanup>
	pc = new UART_PC_COM(&huart3, robot);
 800afb4:	4620      	mov	r0, r4
 800afb6:	f000 fc99 	bl	800b8ec <_ZdlPv>
 800afba:	f000 fee5 	bl	800bd88 <__cxa_end_cleanup>
 800afbe:	bf00      	nop
 800afc0:	200006f0 	.word	0x200006f0
 800afc4:	200006b0 	.word	0x200006b0
 800afc8:	40000840 	.word	0x40000840
 800afcc:	4000083c 	.word	0x4000083c
 800afd0:	40000838 	.word	0x40000838
 800afd4:	40000834 	.word	0x40000834
 800afd8:	200008c0 	.word	0x200008c0
 800afdc:	20000770 	.word	0x20000770
 800afe0:	200008c4 	.word	0x200008c4

0800afe4 <_Z18SystemClock_Configv>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 800afe4:	b580      	push	{r7, lr}
 800afe6:	b090      	sub	sp, #64	; 0x40
 800afe8:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct;
	RCC_ClkInitTypeDef RCC_ClkInitStruct;

	/**Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800afea:	2302      	movs	r3, #2
 800afec:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800afee:	2301      	movs	r3, #1
 800aff0:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.HSICalibrationValue = 16;
 800aff2:	2310      	movs	r3, #16
 800aff4:	62fb      	str	r3, [r7, #44]	; 0x2c
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800aff6:	2302      	movs	r3, #2
 800aff8:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 800affa:	2300      	movs	r3, #0
 800affc:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 800affe:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 800b002:	63fb      	str	r3, [r7, #60]	; 0x3c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800b004:	f107 0318 	add.w	r3, r7, #24
 800b008:	4618      	mov	r0, r3
 800b00a:	f7fd fcc9 	bl	80089a0 <HAL_RCC_OscConfig>
 800b00e:	4603      	mov	r3, r0
 800b010:	2b00      	cmp	r3, #0
 800b012:	bf14      	ite	ne
 800b014:	2301      	movne	r3, #1
 800b016:	2300      	moveq	r3, #0
 800b018:	b2db      	uxtb	r3, r3
 800b01a:	2b00      	cmp	r3, #0
 800b01c:	d003      	beq.n	800b026 <_Z18SystemClock_Configv+0x42>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b01e:	21d5      	movs	r1, #213	; 0xd5
 800b020:	481a      	ldr	r0, [pc, #104]	; (800b08c <_Z18SystemClock_Configv+0xa8>)
 800b022:	f000 fa73 	bl	800b50c <_Error_Handler>
	}

	/**Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800b026:	230f      	movs	r3, #15
 800b028:	607b      	str	r3, [r7, #4]
			|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800b02a:	2302      	movs	r3, #2
 800b02c:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800b02e:	2300      	movs	r3, #0
 800b030:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800b032:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b036:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800b038:	2300      	movs	r3, #0
 800b03a:	617b      	str	r3, [r7, #20]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800b03c:	1d3b      	adds	r3, r7, #4
 800b03e:	2102      	movs	r1, #2
 800b040:	4618      	mov	r0, r3
 800b042:	f7fd fe75 	bl	8008d30 <HAL_RCC_ClockConfig>
 800b046:	4603      	mov	r3, r0
 800b048:	2b00      	cmp	r3, #0
 800b04a:	bf14      	ite	ne
 800b04c:	2301      	movne	r3, #1
 800b04e:	2300      	moveq	r3, #0
 800b050:	b2db      	uxtb	r3, r3
 800b052:	2b00      	cmp	r3, #0
 800b054:	d003      	beq.n	800b05e <_Z18SystemClock_Configv+0x7a>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b056:	21e3      	movs	r1, #227	; 0xe3
 800b058:	480c      	ldr	r0, [pc, #48]	; (800b08c <_Z18SystemClock_Configv+0xa8>)
 800b05a:	f000 fa57 	bl	800b50c <_Error_Handler>
	}

	/**Configure the Systick interrupt time
	 */
	HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 800b05e:	f7fd ff0b 	bl	8008e78 <HAL_RCC_GetHCLKFreq>
 800b062:	4602      	mov	r2, r0
 800b064:	4b0a      	ldr	r3, [pc, #40]	; (800b090 <_Z18SystemClock_Configv+0xac>)
 800b066:	fba3 2302 	umull	r2, r3, r3, r2
 800b06a:	099b      	lsrs	r3, r3, #6
 800b06c:	4618      	mov	r0, r3
 800b06e:	f7fd fa25 	bl	80084bc <HAL_SYSTICK_Config>

	/**Configure the Systick
	 */
	HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 800b072:	2004      	movs	r0, #4
 800b074:	f7fd fa38 	bl	80084e8 <HAL_SYSTICK_CLKSourceConfig>

	/* SysTick_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 800b078:	2200      	movs	r2, #0
 800b07a:	2100      	movs	r1, #0
 800b07c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b080:	f7fd f9dc 	bl	800843c <HAL_NVIC_SetPriority>
}
 800b084:	bf00      	nop
 800b086:	3740      	adds	r7, #64	; 0x40
 800b088:	46bd      	mov	sp, r7
 800b08a:	bd80      	pop	{r7, pc}
 800b08c:	08011418 	.word	0x08011418
 800b090:	10624dd3 	.word	0x10624dd3

0800b094 <_ZL12MX_TIM2_Initv>:

/* TIM2 init function */
static void MX_TIM2_Init(void)
{
 800b094:	b580      	push	{r7, lr}
 800b096:	b086      	sub	sp, #24
 800b098:	af00      	add	r7, sp, #0

	TIM_ClockConfigTypeDef sClockSourceConfig;
	TIM_MasterConfigTypeDef sMasterConfig;

	htim2.Instance = TIM2;
 800b09a:	4b33      	ldr	r3, [pc, #204]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b09c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b0a0:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 64000 - 1;
 800b0a2:	4b31      	ldr	r3, [pc, #196]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0a4:	f64f 12ff 	movw	r2, #63999	; 0xf9ff
 800b0a8:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800b0aa:	4b2f      	ldr	r3, [pc, #188]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0ac:	2200      	movs	r2, #0
 800b0ae:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 1000;
 800b0b0:	4b2d      	ldr	r3, [pc, #180]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0b2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b0b6:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800b0b8:	4b2b      	ldr	r3, [pc, #172]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0ba:	2200      	movs	r2, #0
 800b0bc:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800b0be:	4b2a      	ldr	r3, [pc, #168]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0c0:	2280      	movs	r2, #128	; 0x80
 800b0c2:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800b0c4:	4828      	ldr	r0, [pc, #160]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0c6:	f7fe f92b 	bl	8009320 <HAL_TIM_Base_Init>
 800b0ca:	4603      	mov	r3, r0
 800b0cc:	2b00      	cmp	r3, #0
 800b0ce:	bf14      	ite	ne
 800b0d0:	2301      	movne	r3, #1
 800b0d2:	2300      	moveq	r3, #0
 800b0d4:	b2db      	uxtb	r3, r3
 800b0d6:	2b00      	cmp	r3, #0
 800b0d8:	d004      	beq.n	800b0e4 <_ZL12MX_TIM2_Initv+0x50>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b0da:	f240 1101 	movw	r1, #257	; 0x101
 800b0de:	4823      	ldr	r0, [pc, #140]	; (800b16c <_ZL12MX_TIM2_Initv+0xd8>)
 800b0e0:	f000 fa14 	bl	800b50c <_Error_Handler>
	}

	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800b0e4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b0e8:	60bb      	str	r3, [r7, #8]
	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800b0ea:	f107 0308 	add.w	r3, r7, #8
 800b0ee:	4619      	mov	r1, r3
 800b0f0:	481d      	ldr	r0, [pc, #116]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b0f2:	f7fd ff7d 	bl	8008ff0 <HAL_TIM_ConfigClockSource>
 800b0f6:	4603      	mov	r3, r0
 800b0f8:	2b00      	cmp	r3, #0
 800b0fa:	bf14      	ite	ne
 800b0fc:	2301      	movne	r3, #1
 800b0fe:	2300      	moveq	r3, #0
 800b100:	b2db      	uxtb	r3, r3
 800b102:	2b00      	cmp	r3, #0
 800b104:	d004      	beq.n	800b110 <_ZL12MX_TIM2_Initv+0x7c>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b106:	f240 1107 	movw	r1, #263	; 0x107
 800b10a:	4818      	ldr	r0, [pc, #96]	; (800b16c <_ZL12MX_TIM2_Initv+0xd8>)
 800b10c:	f000 f9fe 	bl	800b50c <_Error_Handler>
	}

	if (HAL_TIM_OnePulse_Init(&htim2, TIM_OPMODE_SINGLE) != HAL_OK)
 800b110:	2108      	movs	r1, #8
 800b112:	4815      	ldr	r0, [pc, #84]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b114:	f7fe f938 	bl	8009388 <HAL_TIM_OnePulse_Init>
 800b118:	4603      	mov	r3, r0
 800b11a:	2b00      	cmp	r3, #0
 800b11c:	bf14      	ite	ne
 800b11e:	2301      	movne	r3, #1
 800b120:	2300      	moveq	r3, #0
 800b122:	b2db      	uxtb	r3, r3
 800b124:	2b00      	cmp	r3, #0
 800b126:	d004      	beq.n	800b132 <_ZL12MX_TIM2_Initv+0x9e>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b128:	f44f 7186 	mov.w	r1, #268	; 0x10c
 800b12c:	480f      	ldr	r0, [pc, #60]	; (800b16c <_ZL12MX_TIM2_Initv+0xd8>)
 800b12e:	f000 f9ed 	bl	800b50c <_Error_Handler>
	}

	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800b132:	2300      	movs	r3, #0
 800b134:	603b      	str	r3, [r7, #0]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800b136:	2300      	movs	r3, #0
 800b138:	607b      	str	r3, [r7, #4]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800b13a:	463b      	mov	r3, r7
 800b13c:	4619      	mov	r1, r3
 800b13e:	480a      	ldr	r0, [pc, #40]	; (800b168 <_ZL12MX_TIM2_Initv+0xd4>)
 800b140:	f7fe f9f6 	bl	8009530 <HAL_TIMEx_MasterConfigSynchronization>
 800b144:	4603      	mov	r3, r0
 800b146:	2b00      	cmp	r3, #0
 800b148:	bf14      	ite	ne
 800b14a:	2301      	movne	r3, #1
 800b14c:	2300      	moveq	r3, #0
 800b14e:	b2db      	uxtb	r3, r3
 800b150:	2b00      	cmp	r3, #0
 800b152:	d004      	beq.n	800b15e <_ZL12MX_TIM2_Initv+0xca>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b154:	f240 1113 	movw	r1, #275	; 0x113
 800b158:	4804      	ldr	r0, [pc, #16]	; (800b16c <_ZL12MX_TIM2_Initv+0xd8>)
 800b15a:	f000 f9d7 	bl	800b50c <_Error_Handler>
	}

}
 800b15e:	bf00      	nop
 800b160:	3718      	adds	r7, #24
 800b162:	46bd      	mov	sp, r7
 800b164:	bd80      	pop	{r7, pc}
 800b166:	bf00      	nop
 800b168:	200006b0 	.word	0x200006b0
 800b16c:	08011418 	.word	0x08011418

0800b170 <_ZL12MX_TIM4_Initv>:

/* TIM4 init function */
static void MX_TIM4_Init(void)
{
 800b170:	b580      	push	{r7, lr}
 800b172:	b08e      	sub	sp, #56	; 0x38
 800b174:	af00      	add	r7, sp, #0

	TIM_ClockConfigTypeDef sClockSourceConfig;
	TIM_MasterConfigTypeDef sMasterConfig;
	TIM_OC_InitTypeDef sConfigOC;

	htim4.Instance = TIM4;
 800b176:	4b5f      	ldr	r3, [pc, #380]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b178:	4a5f      	ldr	r2, [pc, #380]	; (800b2f8 <_ZL12MX_TIM4_Initv+0x188>)
 800b17a:	601a      	str	r2, [r3, #0]
	htim4.Init.Prescaler = 64 - 1;
 800b17c:	4b5d      	ldr	r3, [pc, #372]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b17e:	223f      	movs	r2, #63	; 0x3f
 800b180:	605a      	str	r2, [r3, #4]
	htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800b182:	4b5c      	ldr	r3, [pc, #368]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b184:	2200      	movs	r2, #0
 800b186:	609a      	str	r2, [r3, #8]
	htim4.Init.Period = 20000 - 1;
 800b188:	4b5a      	ldr	r3, [pc, #360]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b18a:	f644 621f 	movw	r2, #19999	; 0x4e1f
 800b18e:	60da      	str	r2, [r3, #12]
	htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800b190:	4b58      	ldr	r3, [pc, #352]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b192:	2200      	movs	r2, #0
 800b194:	611a      	str	r2, [r3, #16]
	htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800b196:	4b57      	ldr	r3, [pc, #348]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b198:	2280      	movs	r2, #128	; 0x80
 800b19a:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800b19c:	4855      	ldr	r0, [pc, #340]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b19e:	f7fe f8bf 	bl	8009320 <HAL_TIM_Base_Init>
 800b1a2:	4603      	mov	r3, r0
 800b1a4:	2b00      	cmp	r3, #0
 800b1a6:	bf14      	ite	ne
 800b1a8:	2301      	movne	r3, #1
 800b1aa:	2300      	moveq	r3, #0
 800b1ac:	b2db      	uxtb	r3, r3
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d004      	beq.n	800b1bc <_ZL12MX_TIM4_Initv+0x4c>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b1b2:	f44f 7194 	mov.w	r1, #296	; 0x128
 800b1b6:	4851      	ldr	r0, [pc, #324]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b1b8:	f000 f9a8 	bl	800b50c <_Error_Handler>
	}

	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800b1bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b1c0:	62bb      	str	r3, [r7, #40]	; 0x28
	if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800b1c2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b1c6:	4619      	mov	r1, r3
 800b1c8:	484a      	ldr	r0, [pc, #296]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b1ca:	f7fd ff11 	bl	8008ff0 <HAL_TIM_ConfigClockSource>
 800b1ce:	4603      	mov	r3, r0
 800b1d0:	2b00      	cmp	r3, #0
 800b1d2:	bf14      	ite	ne
 800b1d4:	2301      	movne	r3, #1
 800b1d6:	2300      	moveq	r3, #0
 800b1d8:	b2db      	uxtb	r3, r3
 800b1da:	2b00      	cmp	r3, #0
 800b1dc:	d004      	beq.n	800b1e8 <_ZL12MX_TIM4_Initv+0x78>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b1de:	f44f 7197 	mov.w	r1, #302	; 0x12e
 800b1e2:	4846      	ldr	r0, [pc, #280]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b1e4:	f000 f992 	bl	800b50c <_Error_Handler>
	}

	if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800b1e8:	4842      	ldr	r0, [pc, #264]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b1ea:	f7fe f8b3 	bl	8009354 <HAL_TIM_PWM_Init>
 800b1ee:	4603      	mov	r3, r0
 800b1f0:	2b00      	cmp	r3, #0
 800b1f2:	bf14      	ite	ne
 800b1f4:	2301      	movne	r3, #1
 800b1f6:	2300      	moveq	r3, #0
 800b1f8:	b2db      	uxtb	r3, r3
 800b1fa:	2b00      	cmp	r3, #0
 800b1fc:	d004      	beq.n	800b208 <_ZL12MX_TIM4_Initv+0x98>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b1fe:	f240 1133 	movw	r1, #307	; 0x133
 800b202:	483e      	ldr	r0, [pc, #248]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b204:	f000 f982 	bl	800b50c <_Error_Handler>
	}

	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800b208:	2300      	movs	r3, #0
 800b20a:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800b20c:	2300      	movs	r3, #0
 800b20e:	627b      	str	r3, [r7, #36]	; 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800b210:	f107 0320 	add.w	r3, r7, #32
 800b214:	4619      	mov	r1, r3
 800b216:	4837      	ldr	r0, [pc, #220]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b218:	f7fe f98a 	bl	8009530 <HAL_TIMEx_MasterConfigSynchronization>
 800b21c:	4603      	mov	r3, r0
 800b21e:	2b00      	cmp	r3, #0
 800b220:	bf14      	ite	ne
 800b222:	2301      	movne	r3, #1
 800b224:	2300      	moveq	r3, #0
 800b226:	b2db      	uxtb	r3, r3
 800b228:	2b00      	cmp	r3, #0
 800b22a:	d004      	beq.n	800b236 <_ZL12MX_TIM4_Initv+0xc6>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b22c:	f44f 719d 	mov.w	r1, #314	; 0x13a
 800b230:	4832      	ldr	r0, [pc, #200]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b232:	f000 f96b 	bl	800b50c <_Error_Handler>
	}

	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800b236:	2360      	movs	r3, #96	; 0x60
 800b238:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 1500;
 800b23a:	f240 53dc 	movw	r3, #1500	; 0x5dc
 800b23e:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800b240:	2300      	movs	r3, #0
 800b242:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800b244:	2300      	movs	r3, #0
 800b246:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800b248:	1d3b      	adds	r3, r7, #4
 800b24a:	2200      	movs	r2, #0
 800b24c:	4619      	mov	r1, r3
 800b24e:	4829      	ldr	r0, [pc, #164]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b250:	f7fe f8ea 	bl	8009428 <HAL_TIM_PWM_ConfigChannel>
 800b254:	4603      	mov	r3, r0
 800b256:	2b00      	cmp	r3, #0
 800b258:	bf14      	ite	ne
 800b25a:	2301      	movne	r3, #1
 800b25c:	2300      	moveq	r3, #0
 800b25e:	b2db      	uxtb	r3, r3
 800b260:	2b00      	cmp	r3, #0
 800b262:	d004      	beq.n	800b26e <_ZL12MX_TIM4_Initv+0xfe>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b264:	f240 1143 	movw	r1, #323	; 0x143
 800b268:	4824      	ldr	r0, [pc, #144]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b26a:	f000 f94f 	bl	800b50c <_Error_Handler>
	}

	sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 800b26e:	2304      	movs	r3, #4
 800b270:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800b272:	1d3b      	adds	r3, r7, #4
 800b274:	2204      	movs	r2, #4
 800b276:	4619      	mov	r1, r3
 800b278:	481e      	ldr	r0, [pc, #120]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b27a:	f7fe f8d5 	bl	8009428 <HAL_TIM_PWM_ConfigChannel>
 800b27e:	4603      	mov	r3, r0
 800b280:	2b00      	cmp	r3, #0
 800b282:	bf14      	ite	ne
 800b284:	2301      	movne	r3, #1
 800b286:	2300      	moveq	r3, #0
 800b288:	b2db      	uxtb	r3, r3
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	d004      	beq.n	800b298 <_ZL12MX_TIM4_Initv+0x128>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b28e:	f240 1149 	movw	r1, #329	; 0x149
 800b292:	481a      	ldr	r0, [pc, #104]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b294:	f000 f93a 	bl	800b50c <_Error_Handler>
	}

	if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 800b298:	1d3b      	adds	r3, r7, #4
 800b29a:	2208      	movs	r2, #8
 800b29c:	4619      	mov	r1, r3
 800b29e:	4815      	ldr	r0, [pc, #84]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b2a0:	f7fe f8c2 	bl	8009428 <HAL_TIM_PWM_ConfigChannel>
 800b2a4:	4603      	mov	r3, r0
 800b2a6:	2b00      	cmp	r3, #0
 800b2a8:	bf14      	ite	ne
 800b2aa:	2301      	movne	r3, #1
 800b2ac:	2300      	moveq	r3, #0
 800b2ae:	b2db      	uxtb	r3, r3
 800b2b0:	2b00      	cmp	r3, #0
 800b2b2:	d004      	beq.n	800b2be <_ZL12MX_TIM4_Initv+0x14e>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b2b4:	f44f 71a7 	mov.w	r1, #334	; 0x14e
 800b2b8:	4810      	ldr	r0, [pc, #64]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b2ba:	f000 f927 	bl	800b50c <_Error_Handler>
	}

	if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800b2be:	1d3b      	adds	r3, r7, #4
 800b2c0:	220c      	movs	r2, #12
 800b2c2:	4619      	mov	r1, r3
 800b2c4:	480b      	ldr	r0, [pc, #44]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b2c6:	f7fe f8af 	bl	8009428 <HAL_TIM_PWM_ConfigChannel>
 800b2ca:	4603      	mov	r3, r0
 800b2cc:	2b00      	cmp	r3, #0
 800b2ce:	bf14      	ite	ne
 800b2d0:	2301      	movne	r3, #1
 800b2d2:	2300      	moveq	r3, #0
 800b2d4:	b2db      	uxtb	r3, r3
 800b2d6:	2b00      	cmp	r3, #0
 800b2d8:	d004      	beq.n	800b2e4 <_ZL12MX_TIM4_Initv+0x174>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b2da:	f240 1153 	movw	r1, #339	; 0x153
 800b2de:	4807      	ldr	r0, [pc, #28]	; (800b2fc <_ZL12MX_TIM4_Initv+0x18c>)
 800b2e0:	f000 f914 	bl	800b50c <_Error_Handler>
	}

	HAL_TIM_MspPostInit(&htim4);
 800b2e4:	4803      	ldr	r0, [pc, #12]	; (800b2f4 <_ZL12MX_TIM4_Initv+0x184>)
 800b2e6:	f000 f995 	bl	800b614 <HAL_TIM_MspPostInit>

}
 800b2ea:	bf00      	nop
 800b2ec:	3738      	adds	r7, #56	; 0x38
 800b2ee:	46bd      	mov	sp, r7
 800b2f0:	bd80      	pop	{r7, pc}
 800b2f2:	bf00      	nop
 800b2f4:	200006f0 	.word	0x200006f0
 800b2f8:	40000800 	.word	0x40000800
 800b2fc:	08011418 	.word	0x08011418

0800b300 <_ZL19MX_USART2_UART_Initv>:

/* USART2 init function */
static void MX_USART2_UART_Init(void)
{
 800b300:	b580      	push	{r7, lr}
 800b302:	af00      	add	r7, sp, #0

	huart2.Instance = USART2;
 800b304:	4b15      	ldr	r3, [pc, #84]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b306:	4a16      	ldr	r2, [pc, #88]	; (800b360 <_ZL19MX_USART2_UART_Initv+0x60>)
 800b308:	601a      	str	r2, [r3, #0]
	huart2.Init.BaudRate = 115200;
 800b30a:	4b14      	ldr	r3, [pc, #80]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b30c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800b310:	605a      	str	r2, [r3, #4]
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800b312:	4b12      	ldr	r3, [pc, #72]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b314:	2200      	movs	r2, #0
 800b316:	609a      	str	r2, [r3, #8]
	huart2.Init.StopBits = UART_STOPBITS_1;
 800b318:	4b10      	ldr	r3, [pc, #64]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b31a:	2200      	movs	r2, #0
 800b31c:	60da      	str	r2, [r3, #12]
	huart2.Init.Parity = UART_PARITY_NONE;
 800b31e:	4b0f      	ldr	r3, [pc, #60]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b320:	2200      	movs	r2, #0
 800b322:	611a      	str	r2, [r3, #16]
	huart2.Init.Mode = UART_MODE_TX_RX;
 800b324:	4b0d      	ldr	r3, [pc, #52]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b326:	220c      	movs	r2, #12
 800b328:	615a      	str	r2, [r3, #20]
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800b32a:	4b0c      	ldr	r3, [pc, #48]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b32c:	2200      	movs	r2, #0
 800b32e:	619a      	str	r2, [r3, #24]
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800b330:	4b0a      	ldr	r3, [pc, #40]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b332:	2200      	movs	r2, #0
 800b334:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart2) != HAL_OK)
 800b336:	4809      	ldr	r0, [pc, #36]	; (800b35c <_ZL19MX_USART2_UART_Initv+0x5c>)
 800b338:	f7fe f9ca 	bl	80096d0 <HAL_UART_Init>
 800b33c:	4603      	mov	r3, r0
 800b33e:	2b00      	cmp	r3, #0
 800b340:	bf14      	ite	ne
 800b342:	2301      	movne	r3, #1
 800b344:	2300      	moveq	r3, #0
 800b346:	b2db      	uxtb	r3, r3
 800b348:	2b00      	cmp	r3, #0
 800b34a:	d004      	beq.n	800b356 <_ZL19MX_USART2_UART_Initv+0x56>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b34c:	f44f 71b4 	mov.w	r1, #360	; 0x168
 800b350:	4804      	ldr	r0, [pc, #16]	; (800b364 <_ZL19MX_USART2_UART_Initv+0x64>)
 800b352:	f000 f8db 	bl	800b50c <_Error_Handler>
	}

}
 800b356:	bf00      	nop
 800b358:	bd80      	pop	{r7, pc}
 800b35a:	bf00      	nop
 800b35c:	20000730 	.word	0x20000730
 800b360:	40004400 	.word	0x40004400
 800b364:	08011418 	.word	0x08011418

0800b368 <_ZL19MX_USART3_UART_Initv>:

/* USART3 init function */
static void MX_USART3_UART_Init(void)
{
 800b368:	b580      	push	{r7, lr}
 800b36a:	af00      	add	r7, sp, #0

	huart3.Instance = USART3;
 800b36c:	4b15      	ldr	r3, [pc, #84]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b36e:	4a16      	ldr	r2, [pc, #88]	; (800b3c8 <_ZL19MX_USART3_UART_Initv+0x60>)
 800b370:	601a      	str	r2, [r3, #0]
	huart3.Init.BaudRate = 115200;
 800b372:	4b14      	ldr	r3, [pc, #80]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b374:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800b378:	605a      	str	r2, [r3, #4]
	huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800b37a:	4b12      	ldr	r3, [pc, #72]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b37c:	2200      	movs	r2, #0
 800b37e:	609a      	str	r2, [r3, #8]
	huart3.Init.StopBits = UART_STOPBITS_1;
 800b380:	4b10      	ldr	r3, [pc, #64]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b382:	2200      	movs	r2, #0
 800b384:	60da      	str	r2, [r3, #12]
	huart3.Init.Parity = UART_PARITY_NONE;
 800b386:	4b0f      	ldr	r3, [pc, #60]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b388:	2200      	movs	r2, #0
 800b38a:	611a      	str	r2, [r3, #16]
	huart3.Init.Mode = UART_MODE_TX_RX;
 800b38c:	4b0d      	ldr	r3, [pc, #52]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b38e:	220c      	movs	r2, #12
 800b390:	615a      	str	r2, [r3, #20]
	huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800b392:	4b0c      	ldr	r3, [pc, #48]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b394:	2200      	movs	r2, #0
 800b396:	619a      	str	r2, [r3, #24]
	huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 800b398:	4b0a      	ldr	r3, [pc, #40]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b39a:	2200      	movs	r2, #0
 800b39c:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart3) != HAL_OK)
 800b39e:	4809      	ldr	r0, [pc, #36]	; (800b3c4 <_ZL19MX_USART3_UART_Initv+0x5c>)
 800b3a0:	f7fe f996 	bl	80096d0 <HAL_UART_Init>
 800b3a4:	4603      	mov	r3, r0
 800b3a6:	2b00      	cmp	r3, #0
 800b3a8:	bf14      	ite	ne
 800b3aa:	2301      	movne	r3, #1
 800b3ac:	2300      	moveq	r3, #0
 800b3ae:	b2db      	uxtb	r3, r3
 800b3b0:	2b00      	cmp	r3, #0
 800b3b2:	d004      	beq.n	800b3be <_ZL19MX_USART3_UART_Initv+0x56>
	{
		_Error_Handler(__FILE__, __LINE__);
 800b3b4:	f240 117b 	movw	r1, #379	; 0x17b
 800b3b8:	4804      	ldr	r0, [pc, #16]	; (800b3cc <_ZL19MX_USART3_UART_Initv+0x64>)
 800b3ba:	f000 f8a7 	bl	800b50c <_Error_Handler>
	}

}
 800b3be:	bf00      	nop
 800b3c0:	bd80      	pop	{r7, pc}
 800b3c2:	bf00      	nop
 800b3c4:	20000770 	.word	0x20000770
 800b3c8:	40004800 	.word	0x40004800
 800b3cc:	08011418 	.word	0x08011418

0800b3d0 <_ZL11MX_DMA_Initv>:

/** 
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) 
{
 800b3d0:	b580      	push	{r7, lr}
 800b3d2:	b082      	sub	sp, #8
 800b3d4:	af00      	add	r7, sp, #0
	/* DMA controller clock enable */
	__HAL_RCC_DMA1_CLK_ENABLE();
 800b3d6:	4a18      	ldr	r2, [pc, #96]	; (800b438 <_ZL11MX_DMA_Initv+0x68>)
 800b3d8:	4b17      	ldr	r3, [pc, #92]	; (800b438 <_ZL11MX_DMA_Initv+0x68>)
 800b3da:	695b      	ldr	r3, [r3, #20]
 800b3dc:	f043 0301 	orr.w	r3, r3, #1
 800b3e0:	6153      	str	r3, [r2, #20]
 800b3e2:	4b15      	ldr	r3, [pc, #84]	; (800b438 <_ZL11MX_DMA_Initv+0x68>)
 800b3e4:	695b      	ldr	r3, [r3, #20]
 800b3e6:	f003 0301 	and.w	r3, r3, #1
 800b3ea:	607b      	str	r3, [r7, #4]
 800b3ec:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA1_Channel2_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 800b3ee:	2200      	movs	r2, #0
 800b3f0:	2100      	movs	r1, #0
 800b3f2:	200c      	movs	r0, #12
 800b3f4:	f7fd f822 	bl	800843c <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 800b3f8:	200c      	movs	r0, #12
 800b3fa:	f7fd f853 	bl	80084a4 <HAL_NVIC_EnableIRQ>
	/* DMA1_Channel3_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 800b3fe:	2200      	movs	r2, #0
 800b400:	2100      	movs	r1, #0
 800b402:	200d      	movs	r0, #13
 800b404:	f7fd f81a 	bl	800843c <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 800b408:	200d      	movs	r0, #13
 800b40a:	f7fd f84b 	bl	80084a4 <HAL_NVIC_EnableIRQ>
	/* DMA1_Channel6_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 0, 0);
 800b40e:	2200      	movs	r2, #0
 800b410:	2100      	movs	r1, #0
 800b412:	2010      	movs	r0, #16
 800b414:	f7fd f812 	bl	800843c <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
 800b418:	2010      	movs	r0, #16
 800b41a:	f7fd f843 	bl	80084a4 <HAL_NVIC_EnableIRQ>
	/* DMA1_Channel7_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 800b41e:	2200      	movs	r2, #0
 800b420:	2100      	movs	r1, #0
 800b422:	2011      	movs	r0, #17
 800b424:	f7fd f80a 	bl	800843c <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
 800b428:	2011      	movs	r0, #17
 800b42a:	f7fd f83b 	bl	80084a4 <HAL_NVIC_EnableIRQ>

}
 800b42e:	bf00      	nop
 800b430:	3708      	adds	r7, #8
 800b432:	46bd      	mov	sp, r7
 800b434:	bd80      	pop	{r7, pc}
 800b436:	bf00      	nop
 800b438:	40021000 	.word	0x40021000

0800b43c <_ZL12MX_GPIO_Initv>:
 * Output
 * EVENT_OUT
 * EXTI
 */
static void MX_GPIO_Init(void)
{
 800b43c:	b580      	push	{r7, lr}
 800b43e:	b088      	sub	sp, #32
 800b440:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef GPIO_InitStruct;

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 800b442:	4a2e      	ldr	r2, [pc, #184]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b444:	4b2d      	ldr	r3, [pc, #180]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b446:	699b      	ldr	r3, [r3, #24]
 800b448:	f043 0310 	orr.w	r3, r3, #16
 800b44c:	6193      	str	r3, [r2, #24]
 800b44e:	4b2b      	ldr	r3, [pc, #172]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b450:	699b      	ldr	r3, [r3, #24]
 800b452:	f003 0310 	and.w	r3, r3, #16
 800b456:	60fb      	str	r3, [r7, #12]
 800b458:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 800b45a:	4a28      	ldr	r2, [pc, #160]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b45c:	4b27      	ldr	r3, [pc, #156]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b45e:	699b      	ldr	r3, [r3, #24]
 800b460:	f043 0320 	orr.w	r3, r3, #32
 800b464:	6193      	str	r3, [r2, #24]
 800b466:	4b25      	ldr	r3, [pc, #148]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b468:	699b      	ldr	r3, [r3, #24]
 800b46a:	f003 0320 	and.w	r3, r3, #32
 800b46e:	60bb      	str	r3, [r7, #8]
 800b470:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 800b472:	4a22      	ldr	r2, [pc, #136]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b474:	4b21      	ldr	r3, [pc, #132]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b476:	699b      	ldr	r3, [r3, #24]
 800b478:	f043 0304 	orr.w	r3, r3, #4
 800b47c:	6193      	str	r3, [r2, #24]
 800b47e:	4b1f      	ldr	r3, [pc, #124]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b480:	699b      	ldr	r3, [r3, #24]
 800b482:	f003 0304 	and.w	r3, r3, #4
 800b486:	607b      	str	r3, [r7, #4]
 800b488:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 800b48a:	4a1c      	ldr	r2, [pc, #112]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b48c:	4b1b      	ldr	r3, [pc, #108]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b48e:	699b      	ldr	r3, [r3, #24]
 800b490:	f043 0308 	orr.w	r3, r3, #8
 800b494:	6193      	str	r3, [r2, #24]
 800b496:	4b19      	ldr	r3, [pc, #100]	; (800b4fc <_ZL12MX_GPIO_Initv+0xc0>)
 800b498:	699b      	ldr	r3, [r3, #24]
 800b49a:	f003 0308 	and.w	r3, r3, #8
 800b49e:	603b      	str	r3, [r7, #0]
 800b4a0:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 800b4a2:	2200      	movs	r2, #0
 800b4a4:	2120      	movs	r1, #32
 800b4a6:	4816      	ldr	r0, [pc, #88]	; (800b500 <_ZL12MX_GPIO_Initv+0xc4>)
 800b4a8:	f7fd fa64 	bl	8008974 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : B1_Pin */
	GPIO_InitStruct.Pin = B1_Pin;
 800b4ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800b4b0:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800b4b2:	4b14      	ldr	r3, [pc, #80]	; (800b504 <_ZL12MX_GPIO_Initv+0xc8>)
 800b4b4:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800b4b6:	2302      	movs	r3, #2
 800b4b8:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800b4ba:	f107 0310 	add.w	r3, r7, #16
 800b4be:	4619      	mov	r1, r3
 800b4c0:	4811      	ldr	r0, [pc, #68]	; (800b508 <_ZL12MX_GPIO_Initv+0xcc>)
 800b4c2:	f7fd f971 	bl	80087a8 <HAL_GPIO_Init>

	/*Configure GPIO pin : LD2_Pin */
	GPIO_InitStruct.Pin = LD2_Pin;
 800b4c6:	2320      	movs	r3, #32
 800b4c8:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800b4ca:	2301      	movs	r3, #1
 800b4cc:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b4ce:	2300      	movs	r3, #0
 800b4d0:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800b4d2:	2302      	movs	r3, #2
 800b4d4:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 800b4d6:	f107 0310 	add.w	r3, r7, #16
 800b4da:	4619      	mov	r1, r3
 800b4dc:	4808      	ldr	r0, [pc, #32]	; (800b500 <_ZL12MX_GPIO_Initv+0xc4>)
 800b4de:	f7fd f963 	bl	80087a8 <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800b4e2:	2200      	movs	r2, #0
 800b4e4:	2100      	movs	r1, #0
 800b4e6:	2028      	movs	r0, #40	; 0x28
 800b4e8:	f7fc ffa8 	bl	800843c <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800b4ec:	2028      	movs	r0, #40	; 0x28
 800b4ee:	f7fc ffd9 	bl	80084a4 <HAL_NVIC_EnableIRQ>

}
 800b4f2:	bf00      	nop
 800b4f4:	3720      	adds	r7, #32
 800b4f6:	46bd      	mov	sp, r7
 800b4f8:	bd80      	pop	{r7, pc}
 800b4fa:	bf00      	nop
 800b4fc:	40021000 	.word	0x40021000
 800b500:	40010800 	.word	0x40010800
 800b504:	10310000 	.word	0x10310000
 800b508:	40011000 	.word	0x40011000

0800b50c <_Error_Handler>:
 * @param  file: The file name as string.
 * @param  line: The line in file as a number.
 * @retval None
 */
void _Error_Handler(char *file, int line)
{
 800b50c:	b480      	push	{r7}
 800b50e:	b083      	sub	sp, #12
 800b510:	af00      	add	r7, sp, #0
 800b512:	6078      	str	r0, [r7, #4]
 800b514:	6039      	str	r1, [r7, #0]
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	while(1)
 800b516:	e7fe      	b.n	800b516 <_Error_Handler+0xa>

0800b518 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800b518:	4b25      	ldr	r3, [pc, #148]	; (800b5b0 <HAL_MspInit+0x98>)
{
 800b51a:	b507      	push	{r0, r1, r2, lr}
  __HAL_RCC_AFIO_CLK_ENABLE();
 800b51c:	699a      	ldr	r2, [r3, #24]
  __HAL_RCC_PWR_CLK_ENABLE();

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b51e:	2003      	movs	r0, #3
  __HAL_RCC_AFIO_CLK_ENABLE();
 800b520:	f042 0201 	orr.w	r2, r2, #1
 800b524:	619a      	str	r2, [r3, #24]
 800b526:	699a      	ldr	r2, [r3, #24]
 800b528:	f002 0201 	and.w	r2, r2, #1
 800b52c:	9200      	str	r2, [sp, #0]
 800b52e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800b530:	69da      	ldr	r2, [r3, #28]
 800b532:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b536:	61da      	str	r2, [r3, #28]
 800b538:	69db      	ldr	r3, [r3, #28]
 800b53a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b53e:	9301      	str	r3, [sp, #4]
 800b540:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b542:	f7fc ff69 	bl	8008418 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
 800b546:	2200      	movs	r2, #0
 800b548:	f06f 000b 	mvn.w	r0, #11
 800b54c:	4611      	mov	r1, r2
 800b54e:	f7fc ff75 	bl	800843c <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
 800b552:	2200      	movs	r2, #0
 800b554:	f06f 000a 	mvn.w	r0, #10
 800b558:	4611      	mov	r1, r2
 800b55a:	f7fc ff6f 	bl	800843c <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
 800b55e:	2200      	movs	r2, #0
 800b560:	f06f 0009 	mvn.w	r0, #9
 800b564:	4611      	mov	r1, r2
 800b566:	f7fc ff69 	bl	800843c <HAL_NVIC_SetPriority>
  /* SVCall_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
 800b56a:	2200      	movs	r2, #0
 800b56c:	f06f 0004 	mvn.w	r0, #4
 800b570:	4611      	mov	r1, r2
 800b572:	f7fc ff63 	bl	800843c <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
 800b576:	2200      	movs	r2, #0
 800b578:	f06f 0003 	mvn.w	r0, #3
 800b57c:	4611      	mov	r1, r2
 800b57e:	f7fc ff5d 	bl	800843c <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
 800b582:	2200      	movs	r2, #0
 800b584:	f06f 0001 	mvn.w	r0, #1
 800b588:	4611      	mov	r1, r2
 800b58a:	f7fc ff57 	bl	800843c <HAL_NVIC_SetPriority>
  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 800b58e:	2200      	movs	r2, #0
 800b590:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b594:	4611      	mov	r1, r2
 800b596:	f7fc ff51 	bl	800843c <HAL_NVIC_SetPriority>

    /**NOJTAG: JTAG-DP Disabled and SW-DP Enabled 
    */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800b59a:	4a06      	ldr	r2, [pc, #24]	; (800b5b4 <HAL_MspInit+0x9c>)
 800b59c:	6853      	ldr	r3, [r2, #4]
 800b59e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 800b5a2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800b5a6:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800b5a8:	b003      	add	sp, #12
 800b5aa:	f85d fb04 	ldr.w	pc, [sp], #4
 800b5ae:	bf00      	nop
 800b5b0:	40021000 	.word	0x40021000
 800b5b4:	40010000 	.word	0x40010000

0800b5b8 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{

  if(htim_base->Instance==TIM2)
 800b5b8:	6803      	ldr	r3, [r0, #0]
{
 800b5ba:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM2)
 800b5bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b5c0:	d115      	bne.n	800b5ee <HAL_TIM_Base_MspInit+0x36>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800b5c2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800b5c6:	69da      	ldr	r2, [r3, #28]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800b5c8:	201c      	movs	r0, #28
    __HAL_RCC_TIM2_CLK_ENABLE();
 800b5ca:	f042 0201 	orr.w	r2, r2, #1
 800b5ce:	61da      	str	r2, [r3, #28]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800b5d0:	2200      	movs	r2, #0
    __HAL_RCC_TIM2_CLK_ENABLE();
 800b5d2:	69db      	ldr	r3, [r3, #28]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800b5d4:	4611      	mov	r1, r2
    __HAL_RCC_TIM2_CLK_ENABLE();
 800b5d6:	f003 0301 	and.w	r3, r3, #1
 800b5da:	9300      	str	r3, [sp, #0]
 800b5dc:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800b5de:	f7fc ff2d 	bl	800843c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800b5e2:	201c      	movs	r0, #28
 800b5e4:	f7fc ff5e 	bl	80084a4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 800b5e8:	b003      	add	sp, #12
 800b5ea:	f85d fb04 	ldr.w	pc, [sp], #4
  else if(htim_base->Instance==TIM4)
 800b5ee:	4a07      	ldr	r2, [pc, #28]	; (800b60c <HAL_TIM_Base_MspInit+0x54>)
 800b5f0:	4293      	cmp	r3, r2
 800b5f2:	d1f9      	bne.n	800b5e8 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM4_CLK_ENABLE();
 800b5f4:	4b06      	ldr	r3, [pc, #24]	; (800b610 <HAL_TIM_Base_MspInit+0x58>)
 800b5f6:	69da      	ldr	r2, [r3, #28]
 800b5f8:	f042 0204 	orr.w	r2, r2, #4
 800b5fc:	61da      	str	r2, [r3, #28]
 800b5fe:	69db      	ldr	r3, [r3, #28]
 800b600:	f003 0304 	and.w	r3, r3, #4
 800b604:	9301      	str	r3, [sp, #4]
 800b606:	9b01      	ldr	r3, [sp, #4]
}
 800b608:	e7ee      	b.n	800b5e8 <HAL_TIM_Base_MspInit+0x30>
 800b60a:	bf00      	nop
 800b60c:	40000800 	.word	0x40000800
 800b610:	40021000 	.word	0x40021000

0800b614 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800b614:	b51f      	push	{r0, r1, r2, r3, r4, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(htim->Instance==TIM4)
 800b616:	6802      	ldr	r2, [r0, #0]
 800b618:	4b08      	ldr	r3, [pc, #32]	; (800b63c <HAL_TIM_MspPostInit+0x28>)
 800b61a:	429a      	cmp	r2, r3
 800b61c:	d10a      	bne.n	800b634 <HAL_TIM_MspPostInit+0x20>
    PB7     ------> TIM4_CH2
    PB8     ------> TIM4_CH3
    PB9     ------> TIM4_CH4 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800b61e:	2302      	movs	r3, #2
 800b620:	f44f 7270 	mov.w	r2, #960	; 0x3c0
 800b624:	e88d 000c 	stmia.w	sp, {r2, r3}
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800b628:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800b62a:	4669      	mov	r1, sp
 800b62c:	4804      	ldr	r0, [pc, #16]	; (800b640 <HAL_TIM_MspPostInit+0x2c>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800b62e:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800b630:	f7fd f8ba 	bl	80087a8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 800b634:	b005      	add	sp, #20
 800b636:	f85d fb04 	ldr.w	pc, [sp], #4
 800b63a:	bf00      	nop
 800b63c:	40000800 	.word	0x40000800
 800b640:	40010c00 	.word	0x40010c00

0800b644 <HAL_UART_MspInit>:
  }

}

void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800b644:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(huart->Instance==USART2)
 800b646:	6803      	ldr	r3, [r0, #0]
 800b648:	4a58      	ldr	r2, [pc, #352]	; (800b7ac <HAL_UART_MspInit+0x168>)
{
 800b64a:	b086      	sub	sp, #24
  if(huart->Instance==USART2)
 800b64c:	4293      	cmp	r3, r2
{
 800b64e:	4605      	mov	r5, r0
  if(huart->Instance==USART2)
 800b650:	d14a      	bne.n	800b6e8 <HAL_UART_MspInit+0xa4>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800b652:	4b57      	ldr	r3, [pc, #348]	; (800b7b0 <HAL_UART_MspInit+0x16c>)
    PA3     ------> USART2_RX 
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800b654:	4857      	ldr	r0, [pc, #348]	; (800b7b4 <HAL_UART_MspInit+0x170>)
    __HAL_RCC_USART2_CLK_ENABLE();
 800b656:	69da      	ldr	r2, [r3, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800b658:	a902      	add	r1, sp, #8
    __HAL_RCC_USART2_CLK_ENABLE();
 800b65a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800b65e:	61da      	str	r2, [r3, #28]
 800b660:	69db      	ldr	r3, [r3, #28]

    /* USART2 DMA Init */
    /* USART2_RX Init */
    hdma_usart2_rx.Instance = DMA1_Channel6;
 800b662:	4c55      	ldr	r4, [pc, #340]	; (800b7b8 <HAL_UART_MspInit+0x174>)
    __HAL_RCC_USART2_CLK_ENABLE();
 800b664:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b668:	9300      	str	r3, [sp, #0]
 800b66a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800b66c:	230c      	movs	r3, #12
 800b66e:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800b670:	2302      	movs	r3, #2
 800b672:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800b674:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800b676:	f7fd f897 	bl	80087a8 <HAL_GPIO_Init>
    hdma_usart2_rx.Instance = DMA1_Channel6;
 800b67a:	4b50      	ldr	r3, [pc, #320]	; (800b7bc <HAL_UART_MspInit+0x178>)
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 800b67c:	2280      	movs	r2, #128	; 0x80
    hdma_usart2_rx.Instance = DMA1_Channel6;
 800b67e:	6023      	str	r3, [r4, #0]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800b680:	2300      	movs	r3, #0
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
    hdma_usart2_rx.Init.Mode = DMA_NORMAL;
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 800b682:	4620      	mov	r0, r4
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800b684:	6063      	str	r3, [r4, #4]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800b686:	60a3      	str	r3, [r4, #8]
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 800b688:	60e2      	str	r2, [r4, #12]
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800b68a:	6123      	str	r3, [r4, #16]
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800b68c:	6163      	str	r3, [r4, #20]
    hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 800b68e:	61a3      	str	r3, [r4, #24]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 800b690:	61e3      	str	r3, [r4, #28]
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 800b692:	f7fc ff3b 	bl	800850c <HAL_DMA_Init>
 800b696:	b118      	cbz	r0, 800b6a0 <HAL_UART_MspInit+0x5c>
    {
      _Error_Handler(__FILE__, __LINE__);
 800b698:	21d9      	movs	r1, #217	; 0xd9
 800b69a:	4849      	ldr	r0, [pc, #292]	; (800b7c0 <HAL_UART_MspInit+0x17c>)
 800b69c:	f7ff ff36 	bl	800b50c <_Error_Handler>

    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);

    /* USART2_TX Init */
    hdma_usart2_tx.Instance = DMA1_Channel7;
    hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800b6a0:	f04f 0c10 	mov.w	ip, #16
 800b6a4:	4b47      	ldr	r3, [pc, #284]	; (800b7c4 <HAL_UART_MspInit+0x180>)
    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 800b6a6:	636c      	str	r4, [r5, #52]	; 0x34
 800b6a8:	6265      	str	r5, [r4, #36]	; 0x24
    hdma_usart2_tx.Instance = DMA1_Channel7;
 800b6aa:	4c47      	ldr	r4, [pc, #284]	; (800b7c8 <HAL_UART_MspInit+0x184>)
    hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 800b6ac:	2280      	movs	r2, #128	; 0x80
    hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800b6ae:	e884 1008 	stmia.w	r4, {r3, ip}
    hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800b6b2:	2300      	movs	r3, #0
    hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
    hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
    hdma_usart2_tx.Init.Mode = DMA_NORMAL;
    hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
    if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 800b6b4:	4620      	mov	r0, r4
    hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800b6b6:	60a3      	str	r3, [r4, #8]
    hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 800b6b8:	60e2      	str	r2, [r4, #12]
    hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800b6ba:	6123      	str	r3, [r4, #16]
    hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800b6bc:	6163      	str	r3, [r4, #20]
    hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 800b6be:	61a3      	str	r3, [r4, #24]
    hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 800b6c0:	61e3      	str	r3, [r4, #28]
    if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 800b6c2:	f7fc ff23 	bl	800850c <HAL_DMA_Init>
 800b6c6:	b118      	cbz	r0, 800b6d0 <HAL_UART_MspInit+0x8c>
    {
      _Error_Handler(__FILE__, __LINE__);
 800b6c8:	21e9      	movs	r1, #233	; 0xe9
 800b6ca:	483d      	ldr	r0, [pc, #244]	; (800b7c0 <HAL_UART_MspInit+0x17c>)
 800b6cc:	f7ff ff1e 	bl	800b50c <_Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart2_tx);

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800b6d0:	2200      	movs	r2, #0
 800b6d2:	2026      	movs	r0, #38	; 0x26
    __HAL_LINKDMA(huart,hdmatx,hdma_usart2_tx);
 800b6d4:	632c      	str	r4, [r5, #48]	; 0x30
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800b6d6:	4611      	mov	r1, r2
    __HAL_LINKDMA(huart,hdmatx,hdma_usart2_tx);
 800b6d8:	6265      	str	r5, [r4, #36]	; 0x24
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800b6da:	f7fc feaf 	bl	800843c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800b6de:	2026      	movs	r0, #38	; 0x26

    __HAL_LINKDMA(huart,hdmatx,hdma_usart3_tx);

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 800b6e0:	f7fc fee0 	bl	80084a4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 800b6e4:	b006      	add	sp, #24
 800b6e6:	bd70      	pop	{r4, r5, r6, pc}
  else if(huart->Instance==USART3)
 800b6e8:	4a38      	ldr	r2, [pc, #224]	; (800b7cc <HAL_UART_MspInit+0x188>)
 800b6ea:	4293      	cmp	r3, r2
 800b6ec:	d1fa      	bne.n	800b6e4 <HAL_UART_MspInit+0xa0>
    __HAL_RCC_USART3_CLK_ENABLE();
 800b6ee:	4b30      	ldr	r3, [pc, #192]	; (800b7b0 <HAL_UART_MspInit+0x16c>)
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800b6f0:	a902      	add	r1, sp, #8
    __HAL_RCC_USART3_CLK_ENABLE();
 800b6f2:	69da      	ldr	r2, [r3, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800b6f4:	4836      	ldr	r0, [pc, #216]	; (800b7d0 <HAL_UART_MspInit+0x18c>)
    __HAL_RCC_USART3_CLK_ENABLE();
 800b6f6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b6fa:	61da      	str	r2, [r3, #28]
 800b6fc:	69db      	ldr	r3, [r3, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800b6fe:	2600      	movs	r6, #0
    __HAL_RCC_USART3_CLK_ENABLE();
 800b700:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800b704:	9301      	str	r3, [sp, #4]
 800b706:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800b708:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b70c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800b70e:	2302      	movs	r3, #2
 800b710:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800b712:	2303      	movs	r3, #3
 800b714:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800b716:	f7fd f847 	bl	80087a8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 800b71a:	f44f 6300 	mov.w	r3, #2048	; 0x800
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800b71e:	482c      	ldr	r0, [pc, #176]	; (800b7d0 <HAL_UART_MspInit+0x18c>)
 800b720:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 800b722:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800b724:	9603      	str	r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800b726:	9604      	str	r6, [sp, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800b728:	f7fd f83e 	bl	80087a8 <HAL_GPIO_Init>
    __HAL_AFIO_REMAP_USART3_PARTIAL();
 800b72c:	4a29      	ldr	r2, [pc, #164]	; (800b7d4 <HAL_UART_MspInit+0x190>)
    hdma_usart3_rx.Instance = DMA1_Channel3;
 800b72e:	4c2a      	ldr	r4, [pc, #168]	; (800b7d8 <HAL_UART_MspInit+0x194>)
    __HAL_AFIO_REMAP_USART3_PARTIAL();
 800b730:	6853      	ldr	r3, [r2, #4]
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 800b732:	4620      	mov	r0, r4
    __HAL_AFIO_REMAP_USART3_PARTIAL();
 800b734:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800b738:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 800b73c:	f043 0310 	orr.w	r3, r3, #16
 800b740:	6053      	str	r3, [r2, #4]
    hdma_usart3_rx.Instance = DMA1_Channel3;
 800b742:	4b26      	ldr	r3, [pc, #152]	; (800b7dc <HAL_UART_MspInit+0x198>)
    hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800b744:	60a6      	str	r6, [r4, #8]
    hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800b746:	e884 0048 	stmia.w	r4, {r3, r6}
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 800b74a:	2380      	movs	r3, #128	; 0x80
    hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800b74c:	6126      	str	r6, [r4, #16]
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 800b74e:	60e3      	str	r3, [r4, #12]
    hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800b750:	6166      	str	r6, [r4, #20]
    hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 800b752:	61a6      	str	r6, [r4, #24]
    hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 800b754:	61e6      	str	r6, [r4, #28]
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 800b756:	f7fc fed9 	bl	800850c <HAL_DMA_Init>
 800b75a:	b120      	cbz	r0, 800b766 <HAL_UART_MspInit+0x122>
      _Error_Handler(__FILE__, __LINE__);
 800b75c:	f240 1119 	movw	r1, #281	; 0x119
 800b760:	4817      	ldr	r0, [pc, #92]	; (800b7c0 <HAL_UART_MspInit+0x17c>)
 800b762:	f7ff fed3 	bl	800b50c <_Error_Handler>
    hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800b766:	f04f 0c10 	mov.w	ip, #16
 800b76a:	4b1d      	ldr	r3, [pc, #116]	; (800b7e0 <HAL_UART_MspInit+0x19c>)
    __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 800b76c:	636c      	str	r4, [r5, #52]	; 0x34
 800b76e:	6265      	str	r5, [r4, #36]	; 0x24
    hdma_usart3_tx.Instance = DMA1_Channel2;
 800b770:	4c1c      	ldr	r4, [pc, #112]	; (800b7e4 <HAL_UART_MspInit+0x1a0>)
    hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 800b772:	2280      	movs	r2, #128	; 0x80
    hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800b774:	e884 1008 	stmia.w	r4, {r3, ip}
    hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800b778:	2300      	movs	r3, #0
    if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 800b77a:	4620      	mov	r0, r4
    hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800b77c:	60a3      	str	r3, [r4, #8]
    hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 800b77e:	60e2      	str	r2, [r4, #12]
    hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800b780:	6123      	str	r3, [r4, #16]
    hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800b782:	6163      	str	r3, [r4, #20]
    hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 800b784:	61a3      	str	r3, [r4, #24]
    hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 800b786:	61e3      	str	r3, [r4, #28]
    if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 800b788:	f7fc fec0 	bl	800850c <HAL_DMA_Init>
 800b78c:	b120      	cbz	r0, 800b798 <HAL_UART_MspInit+0x154>
      _Error_Handler(__FILE__, __LINE__);
 800b78e:	f240 1129 	movw	r1, #297	; 0x129
 800b792:	480b      	ldr	r0, [pc, #44]	; (800b7c0 <HAL_UART_MspInit+0x17c>)
 800b794:	f7ff feba 	bl	800b50c <_Error_Handler>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 800b798:	2200      	movs	r2, #0
 800b79a:	2027      	movs	r0, #39	; 0x27
    __HAL_LINKDMA(huart,hdmatx,hdma_usart3_tx);
 800b79c:	632c      	str	r4, [r5, #48]	; 0x30
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 800b79e:	4611      	mov	r1, r2
    __HAL_LINKDMA(huart,hdmatx,hdma_usart3_tx);
 800b7a0:	6265      	str	r5, [r4, #36]	; 0x24
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 800b7a2:	f7fc fe4b 	bl	800843c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 800b7a6:	2027      	movs	r0, #39	; 0x27
 800b7a8:	e79a      	b.n	800b6e0 <HAL_UART_MspInit+0x9c>
 800b7aa:	bf00      	nop
 800b7ac:	40004400 	.word	0x40004400
 800b7b0:	40021000 	.word	0x40021000
 800b7b4:	40010800 	.word	0x40010800
 800b7b8:	200007b0 	.word	0x200007b0
 800b7bc:	4002006c 	.word	0x4002006c
 800b7c0:	08011bc0 	.word	0x08011bc0
 800b7c4:	40020080 	.word	0x40020080
 800b7c8:	200007f4 	.word	0x200007f4
 800b7cc:	40004800 	.word	0x40004800
 800b7d0:	40011000 	.word	0x40011000
 800b7d4:	40010000 	.word	0x40010000
 800b7d8:	20000838 	.word	0x20000838
 800b7dc:	40020030 	.word	0x40020030
 800b7e0:	4002001c 	.word	0x4002001c
 800b7e4:	2000087c 	.word	0x2000087c

0800b7e8 <SysTick_Handler>:

/**
* @brief This function handles System tick timer.
*/
void SysTick_Handler(void)
{
 800b7e8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800b7ea:	f7fc fe03 	bl	80083f4 <HAL_IncTick>
  HAL_SYSTICK_IRQHandler();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800b7ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_SYSTICK_IRQHandler();
 800b7f2:	f7fc be86 	b.w	8008502 <HAL_SYSTICK_IRQHandler>
	...

0800b7f8 <DMA1_Channel2_IRQHandler>:
void DMA1_Channel2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_tx);
 800b7f8:	4801      	ldr	r0, [pc, #4]	; (800b800 <DMA1_Channel2_IRQHandler+0x8>)
 800b7fa:	f7fc bf41 	b.w	8008680 <HAL_DMA_IRQHandler>
 800b7fe:	bf00      	nop
 800b800:	2000087c 	.word	0x2000087c

0800b804 <DMA1_Channel3_IRQHandler>:
void DMA1_Channel3_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */

  /* USER CODE END DMA1_Channel3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
 800b804:	4801      	ldr	r0, [pc, #4]	; (800b80c <DMA1_Channel3_IRQHandler+0x8>)
 800b806:	f7fc bf3b 	b.w	8008680 <HAL_DMA_IRQHandler>
 800b80a:	bf00      	nop
 800b80c:	20000838 	.word	0x20000838

0800b810 <DMA1_Channel6_IRQHandler>:
void DMA1_Channel6_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */

  /* USER CODE END DMA1_Channel6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
 800b810:	4801      	ldr	r0, [pc, #4]	; (800b818 <DMA1_Channel6_IRQHandler+0x8>)
 800b812:	f7fc bf35 	b.w	8008680 <HAL_DMA_IRQHandler>
 800b816:	bf00      	nop
 800b818:	200007b0 	.word	0x200007b0

0800b81c <DMA1_Channel7_IRQHandler>:
void DMA1_Channel7_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel7_IRQn 0 */

  /* USER CODE END DMA1_Channel7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_tx);
 800b81c:	4801      	ldr	r0, [pc, #4]	; (800b824 <DMA1_Channel7_IRQHandler+0x8>)
 800b81e:	f7fc bf2f 	b.w	8008680 <HAL_DMA_IRQHandler>
 800b822:	bf00      	nop
 800b824:	200007f4 	.word	0x200007f4

0800b828 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800b828:	4801      	ldr	r0, [pc, #4]	; (800b830 <TIM2_IRQHandler+0x8>)
 800b82a:	f7fd bc9e 	b.w	800916a <HAL_TIM_IRQHandler>
 800b82e:	bf00      	nop
 800b830:	200006b0 	.word	0x200006b0

0800b834 <USART2_IRQHandler>:
void USART2_IRQHandler(void)
{
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 800b834:	4801      	ldr	r0, [pc, #4]	; (800b83c <USART2_IRQHandler+0x8>)
 800b836:	f7fe b89f 	b.w	8009978 <HAL_UART_IRQHandler>
 800b83a:	bf00      	nop
 800b83c:	20000730 	.word	0x20000730

0800b840 <USART3_IRQHandler>:
void USART3_IRQHandler(void)
{
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 800b840:	4801      	ldr	r0, [pc, #4]	; (800b848 <USART3_IRQHandler+0x8>)
 800b842:	f7fe b899 	b.w	8009978 <HAL_UART_IRQHandler>
 800b846:	bf00      	nop
 800b848:	20000770 	.word	0x20000770

0800b84c <EXTI15_10_IRQHandler>:
void EXTI15_10_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 800b84c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800b850:	f7fd b89a 	b.w	8008988 <HAL_GPIO_EXTI_IRQHandler>

0800b854 <SystemInit>:
  */
void SystemInit (void)
{
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= 0x00000001U;
 800b854:	4b0f      	ldr	r3, [pc, #60]	; (800b894 <SystemInit+0x40>)
 800b856:	681a      	ldr	r2, [r3, #0]
 800b858:	f042 0201 	orr.w	r2, r2, #1
 800b85c:	601a      	str	r2, [r3, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#if !defined(STM32F105xC) && !defined(STM32F107xC)
  RCC->CFGR &= 0xF8FF0000U;
 800b85e:	6859      	ldr	r1, [r3, #4]
 800b860:	4a0d      	ldr	r2, [pc, #52]	; (800b898 <SystemInit+0x44>)
 800b862:	400a      	ands	r2, r1
 800b864:	605a      	str	r2, [r3, #4]
#else
  RCC->CFGR &= 0xF0FF0000U;
#endif /* STM32F105xC */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= 0xFEF6FFFFU;
 800b866:	681a      	ldr	r2, [r3, #0]
 800b868:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800b86c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b870:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800b872:	681a      	ldr	r2, [r3, #0]
 800b874:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b878:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= 0xFF80FFFFU;
 800b87a:	685a      	ldr	r2, [r3, #4]
 800b87c:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 800b880:	605a      	str	r2, [r3, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000U;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000U;
 800b882:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800b886:	609a      	str	r2, [r3, #8]
#endif 

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 800b888:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800b88c:	4b03      	ldr	r3, [pc, #12]	; (800b89c <SystemInit+0x48>)
 800b88e:	609a      	str	r2, [r3, #8]
 800b890:	4770      	bx	lr
 800b892:	bf00      	nop
 800b894:	40021000 	.word	0x40021000
 800b898:	f8ff0000 	.word	0xf8ff0000
 800b89c:	e000ed00 	.word	0xe000ed00

0800b8a0 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 800b8a0:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800b8a2:	e003      	b.n	800b8ac <LoopCopyDataInit>

0800b8a4 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 800b8a4:	4b0b      	ldr	r3, [pc, #44]	; (800b8d4 <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 800b8a6:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 800b8a8:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 800b8aa:	3104      	adds	r1, #4

0800b8ac <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 800b8ac:	480a      	ldr	r0, [pc, #40]	; (800b8d8 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 800b8ae:	4b0b      	ldr	r3, [pc, #44]	; (800b8dc <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 800b8b0:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800b8b2:	429a      	cmp	r2, r3
  bcc CopyDataInit
 800b8b4:	d3f6      	bcc.n	800b8a4 <CopyDataInit>
  ldr r2, =_sbss
 800b8b6:	4a0a      	ldr	r2, [pc, #40]	; (800b8e0 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 800b8b8:	e002      	b.n	800b8c0 <LoopFillZerobss>

0800b8ba <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 800b8ba:	2300      	movs	r3, #0
  str r3, [r2], #4
 800b8bc:	f842 3b04 	str.w	r3, [r2], #4

0800b8c0 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 800b8c0:	4b08      	ldr	r3, [pc, #32]	; (800b8e4 <LoopFillZerobss+0x24>)
  cmp r2, r3
 800b8c2:	429a      	cmp	r2, r3
  bcc FillZerobss
 800b8c4:	d3f9      	bcc.n	800b8ba <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800b8c6:	f7ff ffc5 	bl	800b854 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800b8ca:	f001 feaf 	bl	800d62c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800b8ce:	f7ff fb29 	bl	800af24 <main>
  bx lr
 800b8d2:	4770      	bx	lr
  ldr r3, =_sidata
 800b8d4:	08013aa4 	.word	0x08013aa4
  ldr r0, =_sdata
 800b8d8:	20000000 	.word	0x20000000
  ldr r3, =_edata
 800b8dc:	20000694 	.word	0x20000694
  ldr r2, =_sbss
 800b8e0:	20000694 	.word	0x20000694
  ldr r3, = _ebss
 800b8e4:	20000b24 	.word	0x20000b24

0800b8e8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800b8e8:	e7fe      	b.n	800b8e8 <ADC1_2_IRQHandler>
	...

0800b8ec <_ZdlPv>:
 800b8ec:	f001 bf3a 	b.w	800d764 <free>

0800b8f0 <__cxa_begin_catch>:
 800b8f0:	b538      	push	{r3, r4, r5, lr}
 800b8f2:	4604      	mov	r4, r0
 800b8f4:	f000 fa44 	bl	800bd80 <__cxa_get_globals>
 800b8f8:	7822      	ldrb	r2, [r4, #0]
 800b8fa:	6803      	ldr	r3, [r0, #0]
 800b8fc:	2a47      	cmp	r2, #71	; 0x47
 800b8fe:	f1a4 0120 	sub.w	r1, r4, #32
 800b902:	d005      	beq.n	800b910 <__cxa_begin_catch+0x20>
 800b904:	2b00      	cmp	r3, #0
 800b906:	d131      	bne.n	800b96c <__cxa_begin_catch+0x7c>
 800b908:	461c      	mov	r4, r3
 800b90a:	6001      	str	r1, [r0, #0]
 800b90c:	4620      	mov	r0, r4
 800b90e:	bd38      	pop	{r3, r4, r5, pc}
 800b910:	7862      	ldrb	r2, [r4, #1]
 800b912:	2a4e      	cmp	r2, #78	; 0x4e
 800b914:	d1f6      	bne.n	800b904 <__cxa_begin_catch+0x14>
 800b916:	78a2      	ldrb	r2, [r4, #2]
 800b918:	2a55      	cmp	r2, #85	; 0x55
 800b91a:	d1f3      	bne.n	800b904 <__cxa_begin_catch+0x14>
 800b91c:	78e2      	ldrb	r2, [r4, #3]
 800b91e:	2a43      	cmp	r2, #67	; 0x43
 800b920:	d1f0      	bne.n	800b904 <__cxa_begin_catch+0x14>
 800b922:	7922      	ldrb	r2, [r4, #4]
 800b924:	2a43      	cmp	r2, #67	; 0x43
 800b926:	d1ed      	bne.n	800b904 <__cxa_begin_catch+0x14>
 800b928:	7962      	ldrb	r2, [r4, #5]
 800b92a:	2a2b      	cmp	r2, #43	; 0x2b
 800b92c:	d1ea      	bne.n	800b904 <__cxa_begin_catch+0x14>
 800b92e:	79a2      	ldrb	r2, [r4, #6]
 800b930:	2a2b      	cmp	r2, #43	; 0x2b
 800b932:	d1e7      	bne.n	800b904 <__cxa_begin_catch+0x14>
 800b934:	79e2      	ldrb	r2, [r4, #7]
 800b936:	2a01      	cmp	r2, #1
 800b938:	d8e4      	bhi.n	800b904 <__cxa_begin_catch+0x14>
 800b93a:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800b93e:	2a00      	cmp	r2, #0
 800b940:	db11      	blt.n	800b966 <__cxa_begin_catch+0x76>
 800b942:	3201      	adds	r2, #1
 800b944:	6845      	ldr	r5, [r0, #4]
 800b946:	428b      	cmp	r3, r1
 800b948:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 800b94c:	f844 2c0c 	str.w	r2, [r4, #-12]
 800b950:	6045      	str	r5, [r0, #4]
 800b952:	bf1c      	itt	ne
 800b954:	f844 3c10 	strne.w	r3, [r4, #-16]
 800b958:	6001      	strne	r1, [r0, #0]
 800b95a:	4620      	mov	r0, r4
 800b95c:	6a64      	ldr	r4, [r4, #36]	; 0x24
 800b95e:	f7fb ff55 	bl	800780c <_Unwind_Complete>
 800b962:	4620      	mov	r0, r4
 800b964:	bd38      	pop	{r3, r4, r5, pc}
 800b966:	f1c2 0201 	rsb	r2, r2, #1
 800b96a:	e7eb      	b.n	800b944 <__cxa_begin_catch+0x54>
 800b96c:	f000 f85a 	bl	800ba24 <_ZSt9terminatev>

0800b970 <__cxa_end_catch>:
 800b970:	b508      	push	{r3, lr}
 800b972:	f000 fa01 	bl	800bd78 <__cxa_get_globals_fast>
 800b976:	4602      	mov	r2, r0
 800b978:	6800      	ldr	r0, [r0, #0]
 800b97a:	2800      	cmp	r0, #0
 800b97c:	d03d      	beq.n	800b9fa <__cxa_end_catch+0x8a>
 800b97e:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b982:	2b47      	cmp	r3, #71	; 0x47
 800b984:	d006      	beq.n	800b994 <__cxa_end_catch+0x24>
 800b986:	2300      	movs	r3, #0
 800b988:	3020      	adds	r0, #32
 800b98a:	6013      	str	r3, [r2, #0]
 800b98c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b990:	f7fb bf3e 	b.w	8007810 <_Unwind_DeleteException>
 800b994:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800b998:	2b4e      	cmp	r3, #78	; 0x4e
 800b99a:	d1f4      	bne.n	800b986 <__cxa_end_catch+0x16>
 800b99c:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800b9a0:	2b55      	cmp	r3, #85	; 0x55
 800b9a2:	d1f0      	bne.n	800b986 <__cxa_end_catch+0x16>
 800b9a4:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800b9a8:	2b43      	cmp	r3, #67	; 0x43
 800b9aa:	d1ec      	bne.n	800b986 <__cxa_end_catch+0x16>
 800b9ac:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800b9b0:	2b43      	cmp	r3, #67	; 0x43
 800b9b2:	d1e8      	bne.n	800b986 <__cxa_end_catch+0x16>
 800b9b4:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b9b8:	2b2b      	cmp	r3, #43	; 0x2b
 800b9ba:	d1e4      	bne.n	800b986 <__cxa_end_catch+0x16>
 800b9bc:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800b9c0:	2b2b      	cmp	r3, #43	; 0x2b
 800b9c2:	d1e0      	bne.n	800b986 <__cxa_end_catch+0x16>
 800b9c4:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800b9c8:	2b01      	cmp	r3, #1
 800b9ca:	d8dc      	bhi.n	800b986 <__cxa_end_catch+0x16>
 800b9cc:	6943      	ldr	r3, [r0, #20]
 800b9ce:	2b00      	cmp	r3, #0
 800b9d0:	db05      	blt.n	800b9de <__cxa_end_catch+0x6e>
 800b9d2:	3b01      	subs	r3, #1
 800b9d4:	d008      	beq.n	800b9e8 <__cxa_end_catch+0x78>
 800b9d6:	1c5a      	adds	r2, r3, #1
 800b9d8:	d00d      	beq.n	800b9f6 <__cxa_end_catch+0x86>
 800b9da:	6143      	str	r3, [r0, #20]
 800b9dc:	bd08      	pop	{r3, pc}
 800b9de:	3301      	adds	r3, #1
 800b9e0:	d1fb      	bne.n	800b9da <__cxa_end_catch+0x6a>
 800b9e2:	6901      	ldr	r1, [r0, #16]
 800b9e4:	6011      	str	r1, [r2, #0]
 800b9e6:	e7f8      	b.n	800b9da <__cxa_end_catch+0x6a>
 800b9e8:	6903      	ldr	r3, [r0, #16]
 800b9ea:	3020      	adds	r0, #32
 800b9ec:	6013      	str	r3, [r2, #0]
 800b9ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b9f2:	f7fb bf0d 	b.w	8007810 <_Unwind_DeleteException>
 800b9f6:	f000 f815 	bl	800ba24 <_ZSt9terminatev>
 800b9fa:	bd08      	pop	{r3, pc}

0800b9fc <_ZN10__cxxabiv111__terminateEPFvvE>:
 800b9fc:	b508      	push	{r3, lr}
 800b9fe:	4780      	blx	r0
 800ba00:	f001 fba4 	bl	800d14c <abort>
 800ba04:	f7ff ff74 	bl	800b8f0 <__cxa_begin_catch>
 800ba08:	f001 fba0 	bl	800d14c <abort>
 800ba0c:	460d      	mov	r5, r1
 800ba0e:	4604      	mov	r4, r0
 800ba10:	f7ff ffae 	bl	800b970 <__cxa_end_catch>
 800ba14:	3501      	adds	r5, #1
 800ba16:	d001      	beq.n	800ba1c <_ZN10__cxxabiv111__terminateEPFvvE+0x20>
 800ba18:	f000 f9b6 	bl	800bd88 <__cxa_end_cleanup>
 800ba1c:	4620      	mov	r0, r4
 800ba1e:	f000 ffe5 	bl	800c9ec <__cxa_call_unexpected>
 800ba22:	bf00      	nop

0800ba24 <_ZSt9terminatev>:
 800ba24:	b508      	push	{r3, lr}
 800ba26:	4b03      	ldr	r3, [pc, #12]	; (800ba34 <_ZSt9terminatev+0x10>)
 800ba28:	6818      	ldr	r0, [r3, #0]
 800ba2a:	f3bf 8f5b 	dmb	ish
 800ba2e:	f7ff ffe5 	bl	800b9fc <_ZN10__cxxabiv111__terminateEPFvvE>
 800ba32:	bf00      	nop
 800ba34:	20000010 	.word	0x20000010

0800ba38 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800ba38:	b508      	push	{r3, lr}
 800ba3a:	4780      	blx	r0
 800ba3c:	f7ff fff2 	bl	800ba24 <_ZSt9terminatev>

0800ba40 <_ZSt10unexpectedv>:
 800ba40:	b508      	push	{r3, lr}
 800ba42:	4b03      	ldr	r3, [pc, #12]	; (800ba50 <_ZSt10unexpectedv+0x10>)
 800ba44:	6818      	ldr	r0, [r3, #0]
 800ba46:	f3bf 8f5b 	dmb	ish
 800ba4a:	f7ff fff5 	bl	800ba38 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800ba4e:	bf00      	nop
 800ba50:	20000014 	.word	0x20000014

0800ba54 <_ZSt13get_terminatev>:
 800ba54:	4b02      	ldr	r3, [pc, #8]	; (800ba60 <_ZSt13get_terminatev+0xc>)
 800ba56:	6818      	ldr	r0, [r3, #0]
 800ba58:	f3bf 8f5b 	dmb	ish
 800ba5c:	4770      	bx	lr
 800ba5e:	bf00      	nop
 800ba60:	20000010 	.word	0x20000010

0800ba64 <_ZSt14get_unexpectedv>:
 800ba64:	4b02      	ldr	r3, [pc, #8]	; (800ba70 <_ZSt14get_unexpectedv+0xc>)
 800ba66:	6818      	ldr	r0, [r3, #0]
 800ba68:	f3bf 8f5b 	dmb	ish
 800ba6c:	4770      	bx	lr
 800ba6e:	bf00      	nop
 800ba70:	20000014 	.word	0x20000014

0800ba74 <_Znwj>:
 800ba74:	b510      	push	{r4, lr}
 800ba76:	2800      	cmp	r0, #0
 800ba78:	bf14      	ite	ne
 800ba7a:	4604      	movne	r4, r0
 800ba7c:	2401      	moveq	r4, #1
 800ba7e:	4620      	mov	r0, r4
 800ba80:	f001 fe68 	bl	800d754 <malloc>
 800ba84:	b100      	cbz	r0, 800ba88 <_Znwj+0x14>
 800ba86:	bd10      	pop	{r4, pc}
 800ba88:	f000 fd74 	bl	800c574 <_ZSt15get_new_handlerv>
 800ba8c:	b108      	cbz	r0, 800ba92 <_Znwj+0x1e>
 800ba8e:	4780      	blx	r0
 800ba90:	e7f5      	b.n	800ba7e <_Znwj+0xa>
 800ba92:	2004      	movs	r0, #4
 800ba94:	f000 f87e 	bl	800bb94 <__cxa_allocate_exception>
 800ba98:	4b02      	ldr	r3, [pc, #8]	; (800baa4 <_Znwj+0x30>)
 800ba9a:	4a03      	ldr	r2, [pc, #12]	; (800baa8 <_Znwj+0x34>)
 800ba9c:	6003      	str	r3, [r0, #0]
 800ba9e:	4903      	ldr	r1, [pc, #12]	; (800baac <_Znwj+0x38>)
 800baa0:	f000 f8d6 	bl	800bc50 <__cxa_throw>
 800baa4:	08011c28 	.word	0x08011c28
 800baa8:	0800bd49 	.word	0x0800bd49
 800baac:	08011c04 	.word	0x08011c04

0800bab0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 800bab0:	b4f0      	push	{r4, r5, r6, r7}
 800bab2:	4c1d      	ldr	r4, [pc, #116]	; (800bb28 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x78>)
 800bab4:	f1a0 0608 	sub.w	r6, r0, #8
 800bab8:	6861      	ldr	r1, [r4, #4]
 800baba:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800babe:	b1c9      	cbz	r1, 800baf4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x44>
 800bac0:	19f5      	adds	r5, r6, r7
 800bac2:	42a9      	cmp	r1, r5
 800bac4:	d01b      	beq.n	800bafe <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x4e>
 800bac6:	684a      	ldr	r2, [r1, #4]
 800bac8:	b32a      	cbz	r2, 800bb16 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x66>
 800baca:	4295      	cmp	r5, r2
 800bacc:	d304      	bcc.n	800bad8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x28>
 800bace:	e026      	b.n	800bb1e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x6e>
 800bad0:	429d      	cmp	r5, r3
 800bad2:	4611      	mov	r1, r2
 800bad4:	d204      	bcs.n	800bae0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x30>
 800bad6:	461a      	mov	r2, r3
 800bad8:	6853      	ldr	r3, [r2, #4]
 800bada:	1d0c      	adds	r4, r1, #4
 800badc:	2b00      	cmp	r3, #0
 800bade:	d1f7      	bne.n	800bad0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x20>
 800bae0:	6811      	ldr	r1, [r2, #0]
 800bae2:	1855      	adds	r5, r2, r1
 800bae4:	42ae      	cmp	r6, r5
 800bae6:	d013      	beq.n	800bb10 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x60>
 800bae8:	f840 3c04 	str.w	r3, [r0, #-4]
 800baec:	6823      	ldr	r3, [r4, #0]
 800baee:	605e      	str	r6, [r3, #4]
 800baf0:	bcf0      	pop	{r4, r5, r6, r7}
 800baf2:	4770      	bx	lr
 800baf4:	f840 1c04 	str.w	r1, [r0, #-4]
 800baf8:	6066      	str	r6, [r4, #4]
 800bafa:	bcf0      	pop	{r4, r5, r6, r7}
 800bafc:	4770      	bx	lr
 800bafe:	680b      	ldr	r3, [r1, #0]
 800bb00:	684a      	ldr	r2, [r1, #4]
 800bb02:	441f      	add	r7, r3
 800bb04:	f840 7c08 	str.w	r7, [r0, #-8]
 800bb08:	f840 2c04 	str.w	r2, [r0, #-4]
 800bb0c:	6066      	str	r6, [r4, #4]
 800bb0e:	e7ef      	b.n	800baf0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x40>
 800bb10:	440f      	add	r7, r1
 800bb12:	6017      	str	r7, [r2, #0]
 800bb14:	e7ec      	b.n	800baf0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x40>
 800bb16:	4613      	mov	r3, r2
 800bb18:	3404      	adds	r4, #4
 800bb1a:	460a      	mov	r2, r1
 800bb1c:	e7e0      	b.n	800bae0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x30>
 800bb1e:	4613      	mov	r3, r2
 800bb20:	3404      	adds	r4, #4
 800bb22:	460a      	mov	r2, r1
 800bb24:	e7dc      	b.n	800bae0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x30>
 800bb26:	bf00      	nop
 800bb28:	200008fc 	.word	0x200008fc

0800bb2c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 800bb2c:	b430      	push	{r4, r5}
 800bb2e:	4c18      	ldr	r4, [pc, #96]	; (800bb90 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x64>)
 800bb30:	f100 0108 	add.w	r1, r0, #8
 800bb34:	6863      	ldr	r3, [r4, #4]
 800bb36:	2908      	cmp	r1, #8
 800bb38:	bf38      	it	cc
 800bb3a:	2108      	movcc	r1, #8
 800bb3c:	b313      	cbz	r3, 800bb84 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 800bb3e:	3107      	adds	r1, #7
 800bb40:	681a      	ldr	r2, [r3, #0]
 800bb42:	f021 0107 	bic.w	r1, r1, #7
 800bb46:	4291      	cmp	r1, r2
 800bb48:	d804      	bhi.n	800bb54 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x28>
 800bb4a:	e01d      	b.n	800bb88 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x5c>
 800bb4c:	6802      	ldr	r2, [r0, #0]
 800bb4e:	4291      	cmp	r1, r2
 800bb50:	d905      	bls.n	800bb5e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x32>
 800bb52:	4603      	mov	r3, r0
 800bb54:	6858      	ldr	r0, [r3, #4]
 800bb56:	2800      	cmp	r0, #0
 800bb58:	d1f8      	bne.n	800bb4c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x20>
 800bb5a:	bc30      	pop	{r4, r5}
 800bb5c:	4770      	bx	lr
 800bb5e:	3304      	adds	r3, #4
 800bb60:	1a52      	subs	r2, r2, r1
 800bb62:	2a07      	cmp	r2, #7
 800bb64:	d90a      	bls.n	800bb7c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>
 800bb66:	6844      	ldr	r4, [r0, #4]
 800bb68:	1845      	adds	r5, r0, r1
 800bb6a:	606c      	str	r4, [r5, #4]
 800bb6c:	681c      	ldr	r4, [r3, #0]
 800bb6e:	5042      	str	r2, [r0, r1]
 800bb70:	6021      	str	r1, [r4, #0]
 800bb72:	601d      	str	r5, [r3, #0]
 800bb74:	f104 0008 	add.w	r0, r4, #8
 800bb78:	bc30      	pop	{r4, r5}
 800bb7a:	4770      	bx	lr
 800bb7c:	6842      	ldr	r2, [r0, #4]
 800bb7e:	4604      	mov	r4, r0
 800bb80:	601a      	str	r2, [r3, #0]
 800bb82:	e7f7      	b.n	800bb74 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 800bb84:	4618      	mov	r0, r3
 800bb86:	e7e8      	b.n	800bb5a <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x2e>
 800bb88:	4618      	mov	r0, r3
 800bb8a:	1d23      	adds	r3, r4, #4
 800bb8c:	e7e8      	b.n	800bb60 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
 800bb8e:	bf00      	nop
 800bb90:	200008fc 	.word	0x200008fc

0800bb94 <__cxa_allocate_exception>:
 800bb94:	b538      	push	{r3, r4, r5, lr}
 800bb96:	f100 0580 	add.w	r5, r0, #128	; 0x80
 800bb9a:	4628      	mov	r0, r5
 800bb9c:	f001 fdda 	bl	800d754 <malloc>
 800bba0:	4604      	mov	r4, r0
 800bba2:	b138      	cbz	r0, 800bbb4 <__cxa_allocate_exception+0x20>
 800bba4:	2280      	movs	r2, #128	; 0x80
 800bba6:	2100      	movs	r1, #0
 800bba8:	4620      	mov	r0, r4
 800bbaa:	f002 f843 	bl	800dc34 <memset>
 800bbae:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800bbb2:	bd38      	pop	{r3, r4, r5, pc}
 800bbb4:	4628      	mov	r0, r5
 800bbb6:	f7ff ffb9 	bl	800bb2c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800bbba:	4604      	mov	r4, r0
 800bbbc:	2800      	cmp	r0, #0
 800bbbe:	d1f1      	bne.n	800bba4 <__cxa_allocate_exception+0x10>
 800bbc0:	f7ff ff30 	bl	800ba24 <_ZSt9terminatev>

0800bbc4 <__cxa_free_exception>:
 800bbc4:	4a06      	ldr	r2, [pc, #24]	; (800bbe0 <__cxa_free_exception+0x1c>)
 800bbc6:	3880      	subs	r0, #128	; 0x80
 800bbc8:	6893      	ldr	r3, [r2, #8]
 800bbca:	4298      	cmp	r0, r3
 800bbcc:	d905      	bls.n	800bbda <__cxa_free_exception+0x16>
 800bbce:	68d2      	ldr	r2, [r2, #12]
 800bbd0:	4413      	add	r3, r2
 800bbd2:	4298      	cmp	r0, r3
 800bbd4:	d201      	bcs.n	800bbda <__cxa_free_exception+0x16>
 800bbd6:	f7ff bf6b 	b.w	800bab0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800bbda:	f001 bdc3 	b.w	800d764 <free>
 800bbde:	bf00      	nop
 800bbe0:	200008fc 	.word	0x200008fc

0800bbe4 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800bbe4:	b538      	push	{r3, r4, r5, lr}
 800bbe6:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800bbea:	4c07      	ldr	r4, [pc, #28]	; (800bc08 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 800bbec:	4628      	mov	r0, r5
 800bbee:	60e5      	str	r5, [r4, #12]
 800bbf0:	f001 fdb0 	bl	800d754 <malloc>
 800bbf4:	60a0      	str	r0, [r4, #8]
 800bbf6:	b120      	cbz	r0, 800bc02 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800bbf8:	2300      	movs	r3, #0
 800bbfa:	6060      	str	r0, [r4, #4]
 800bbfc:	6005      	str	r5, [r0, #0]
 800bbfe:	6043      	str	r3, [r0, #4]
 800bc00:	bd38      	pop	{r3, r4, r5, pc}
 800bc02:	60e0      	str	r0, [r4, #12]
 800bc04:	6060      	str	r0, [r4, #4]
 800bc06:	bd38      	pop	{r3, r4, r5, pc}
 800bc08:	200008fc 	.word	0x200008fc

0800bc0c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800bc0c:	2801      	cmp	r0, #1
 800bc0e:	b510      	push	{r4, lr}
 800bc10:	d81a      	bhi.n	800bc48 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3c>
 800bc12:	f3bf 8f5b 	dmb	ish
 800bc16:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800bc1a:	e853 2f00 	ldrex	r2, [r3]
 800bc1e:	3a01      	subs	r2, #1
 800bc20:	e843 2000 	strex	r0, r2, [r3]
 800bc24:	2800      	cmp	r0, #0
 800bc26:	d1f8      	bne.n	800bc1a <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0xe>
 800bc28:	f3bf 8f5b 	dmb	ish
 800bc2c:	b95a      	cbnz	r2, 800bc46 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3a>
 800bc2e:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800bc32:	f101 0458 	add.w	r4, r1, #88	; 0x58
 800bc36:	b10b      	cbz	r3, 800bc3c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x30>
 800bc38:	4620      	mov	r0, r4
 800bc3a:	4798      	blx	r3
 800bc3c:	4620      	mov	r0, r4
 800bc3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc42:	f7ff bfbf 	b.w	800bbc4 <__cxa_free_exception>
 800bc46:	bd10      	pop	{r4, pc}
 800bc48:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800bc4c:	f7ff fed6 	bl	800b9fc <_ZN10__cxxabiv111__terminateEPFvvE>

0800bc50 <__cxa_throw>:
 800bc50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc54:	4604      	mov	r4, r0
 800bc56:	4617      	mov	r7, r2
 800bc58:	4688      	mov	r8, r1
 800bc5a:	f000 f891 	bl	800bd80 <__cxa_get_globals>
 800bc5e:	2601      	movs	r6, #1
 800bc60:	6843      	ldr	r3, [r0, #4]
 800bc62:	f1a4 0558 	sub.w	r5, r4, #88	; 0x58
 800bc66:	4433      	add	r3, r6
 800bc68:	6043      	str	r3, [r0, #4]
 800bc6a:	f844 7c74 	str.w	r7, [r4, #-116]
 800bc6e:	f844 6c80 	str.w	r6, [r4, #-128]
 800bc72:	f844 8c78 	str.w	r8, [r4, #-120]
 800bc76:	f7ff fef5 	bl	800ba64 <_ZSt14get_unexpectedv>
 800bc7a:	f844 0c70 	str.w	r0, [r4, #-112]
 800bc7e:	f7ff fee9 	bl	800ba54 <_ZSt13get_terminatev>
 800bc82:	2147      	movs	r1, #71	; 0x47
 800bc84:	2243      	movs	r2, #67	; 0x43
 800bc86:	232b      	movs	r3, #43	; 0x2b
 800bc88:	f04f 0e4e 	mov.w	lr, #78	; 0x4e
 800bc8c:	2755      	movs	r7, #85	; 0x55
 800bc8e:	2600      	movs	r6, #0
 800bc90:	f804 1c58 	strb.w	r1, [r4, #-88]
 800bc94:	490d      	ldr	r1, [pc, #52]	; (800bccc <__cxa_throw+0x7c>)
 800bc96:	f844 0c6c 	str.w	r0, [r4, #-108]
 800bc9a:	f804 ec57 	strb.w	lr, [r4, #-87]
 800bc9e:	f844 1c50 	str.w	r1, [r4, #-80]
 800bca2:	f804 2c55 	strb.w	r2, [r4, #-85]
 800bca6:	f804 2c54 	strb.w	r2, [r4, #-84]
 800bcaa:	f804 3c53 	strb.w	r3, [r4, #-83]
 800bcae:	f804 3c52 	strb.w	r3, [r4, #-82]
 800bcb2:	f804 7c56 	strb.w	r7, [r4, #-86]
 800bcb6:	f804 6c51 	strb.w	r6, [r4, #-81]
 800bcba:	4628      	mov	r0, r5
 800bcbc:	f7fc f946 	bl	8007f4c <_Unwind_RaiseException>
 800bcc0:	4628      	mov	r0, r5
 800bcc2:	f7ff fe15 	bl	800b8f0 <__cxa_begin_catch>
 800bcc6:	f7ff fead 	bl	800ba24 <_ZSt9terminatev>
 800bcca:	bf00      	nop
 800bccc:	0800bc0d 	.word	0x0800bc0d

0800bcd0 <__cxa_rethrow>:
 800bcd0:	b510      	push	{r4, lr}
 800bcd2:	f000 f855 	bl	800bd80 <__cxa_get_globals>
 800bcd6:	6842      	ldr	r2, [r0, #4]
 800bcd8:	6804      	ldr	r4, [r0, #0]
 800bcda:	3201      	adds	r2, #1
 800bcdc:	6042      	str	r2, [r0, #4]
 800bcde:	b164      	cbz	r4, 800bcfa <__cxa_rethrow+0x2a>
 800bce0:	f894 2020 	ldrb.w	r2, [r4, #32]
 800bce4:	2a47      	cmp	r2, #71	; 0x47
 800bce6:	d00a      	beq.n	800bcfe <__cxa_rethrow+0x2e>
 800bce8:	2200      	movs	r2, #0
 800bcea:	6002      	str	r2, [r0, #0]
 800bcec:	3420      	adds	r4, #32
 800bcee:	4620      	mov	r0, r4
 800bcf0:	f7fc f950 	bl	8007f94 <_Unwind_Resume_or_Rethrow>
 800bcf4:	4620      	mov	r0, r4
 800bcf6:	f7ff fdfb 	bl	800b8f0 <__cxa_begin_catch>
 800bcfa:	f7ff fe93 	bl	800ba24 <_ZSt9terminatev>
 800bcfe:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
 800bd02:	2a4e      	cmp	r2, #78	; 0x4e
 800bd04:	d1f0      	bne.n	800bce8 <__cxa_rethrow+0x18>
 800bd06:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 800bd0a:	2a55      	cmp	r2, #85	; 0x55
 800bd0c:	d1ec      	bne.n	800bce8 <__cxa_rethrow+0x18>
 800bd0e:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
 800bd12:	2a43      	cmp	r2, #67	; 0x43
 800bd14:	d1e8      	bne.n	800bce8 <__cxa_rethrow+0x18>
 800bd16:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800bd1a:	2a43      	cmp	r2, #67	; 0x43
 800bd1c:	d1e4      	bne.n	800bce8 <__cxa_rethrow+0x18>
 800bd1e:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800bd22:	2a2b      	cmp	r2, #43	; 0x2b
 800bd24:	d1e0      	bne.n	800bce8 <__cxa_rethrow+0x18>
 800bd26:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 800bd2a:	2a2b      	cmp	r2, #43	; 0x2b
 800bd2c:	d1dc      	bne.n	800bce8 <__cxa_rethrow+0x18>
 800bd2e:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800bd32:	2a01      	cmp	r2, #1
 800bd34:	d8d8      	bhi.n	800bce8 <__cxa_rethrow+0x18>
 800bd36:	6962      	ldr	r2, [r4, #20]
 800bd38:	4252      	negs	r2, r2
 800bd3a:	6162      	str	r2, [r4, #20]
 800bd3c:	e7d6      	b.n	800bcec <__cxa_rethrow+0x1c>
 800bd3e:	bf00      	nop

0800bd40 <_ZNKSt9bad_alloc4whatEv>:
 800bd40:	4800      	ldr	r0, [pc, #0]	; (800bd44 <_ZNKSt9bad_alloc4whatEv+0x4>)
 800bd42:	4770      	bx	lr
 800bd44:	08011bf4 	.word	0x08011bf4

0800bd48 <_ZNSt9bad_allocD1Ev>:
 800bd48:	b510      	push	{r4, lr}
 800bd4a:	4604      	mov	r4, r0
 800bd4c:	4b02      	ldr	r3, [pc, #8]	; (800bd58 <_ZNSt9bad_allocD1Ev+0x10>)
 800bd4e:	6003      	str	r3, [r0, #0]
 800bd50:	f000 fcee 	bl	800c730 <_ZNSt9exceptionD1Ev>
 800bd54:	4620      	mov	r0, r4
 800bd56:	bd10      	pop	{r4, pc}
 800bd58:	08011c28 	.word	0x08011c28

0800bd5c <_ZNSt9bad_allocD0Ev>:
 800bd5c:	b510      	push	{r4, lr}
 800bd5e:	4604      	mov	r4, r0
 800bd60:	4b04      	ldr	r3, [pc, #16]	; (800bd74 <_ZNSt9bad_allocD0Ev+0x18>)
 800bd62:	6003      	str	r3, [r0, #0]
 800bd64:	f000 fce4 	bl	800c730 <_ZNSt9exceptionD1Ev>
 800bd68:	4620      	mov	r0, r4
 800bd6a:	2104      	movs	r1, #4
 800bd6c:	f000 fc00 	bl	800c570 <_ZdlPvj>
 800bd70:	4620      	mov	r0, r4
 800bd72:	bd10      	pop	{r4, pc}
 800bd74:	08011c28 	.word	0x08011c28

0800bd78 <__cxa_get_globals_fast>:
 800bd78:	4800      	ldr	r0, [pc, #0]	; (800bd7c <__cxa_get_globals_fast+0x4>)
 800bd7a:	4770      	bx	lr
 800bd7c:	2000090c 	.word	0x2000090c

0800bd80 <__cxa_get_globals>:
 800bd80:	4800      	ldr	r0, [pc, #0]	; (800bd84 <__cxa_get_globals+0x4>)
 800bd82:	4770      	bx	lr
 800bd84:	2000090c 	.word	0x2000090c

0800bd88 <__cxa_end_cleanup>:
 800bd88:	b41e      	push	{r1, r2, r3, r4}
 800bd8a:	f000 f891 	bl	800beb0 <__gnu_end_cleanup>
 800bd8e:	bc1e      	pop	{r1, r2, r3, r4}
 800bd90:	f7fc f8ee 	bl	8007f70 <_Unwind_Resume>

0800bd94 <__cxa_type_match>:
 800bd94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd96:	7802      	ldrb	r2, [r0, #0]
 800bd98:	b083      	sub	sp, #12
 800bd9a:	2a47      	cmp	r2, #71	; 0x47
 800bd9c:	460d      	mov	r5, r1
 800bd9e:	461f      	mov	r7, r3
 800bda0:	d01e      	beq.n	800bde0 <__cxa_type_match+0x4c>
 800bda2:	2300      	movs	r3, #0
 800bda4:	4c27      	ldr	r4, [pc, #156]	; (800be44 <__cxa_type_match+0xb0>)
 800bda6:	9301      	str	r3, [sp, #4]
 800bda8:	6823      	ldr	r3, [r4, #0]
 800bdaa:	4620      	mov	r0, r4
 800bdac:	689b      	ldr	r3, [r3, #8]
 800bdae:	4798      	blx	r3
 800bdb0:	b180      	cbz	r0, 800bdd4 <__cxa_type_match+0x40>
 800bdb2:	2602      	movs	r6, #2
 800bdb4:	9b01      	ldr	r3, [sp, #4]
 800bdb6:	681b      	ldr	r3, [r3, #0]
 800bdb8:	9301      	str	r3, [sp, #4]
 800bdba:	682b      	ldr	r3, [r5, #0]
 800bdbc:	4621      	mov	r1, r4
 800bdbe:	4628      	mov	r0, r5
 800bdc0:	691c      	ldr	r4, [r3, #16]
 800bdc2:	aa01      	add	r2, sp, #4
 800bdc4:	2301      	movs	r3, #1
 800bdc6:	47a0      	blx	r4
 800bdc8:	b130      	cbz	r0, 800bdd8 <__cxa_type_match+0x44>
 800bdca:	4630      	mov	r0, r6
 800bdcc:	9b01      	ldr	r3, [sp, #4]
 800bdce:	603b      	str	r3, [r7, #0]
 800bdd0:	b003      	add	sp, #12
 800bdd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bdd4:	2601      	movs	r6, #1
 800bdd6:	e7f0      	b.n	800bdba <__cxa_type_match+0x26>
 800bdd8:	4606      	mov	r6, r0
 800bdda:	4630      	mov	r0, r6
 800bddc:	b003      	add	sp, #12
 800bdde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bde0:	7843      	ldrb	r3, [r0, #1]
 800bde2:	2b4e      	cmp	r3, #78	; 0x4e
 800bde4:	d1dd      	bne.n	800bda2 <__cxa_type_match+0xe>
 800bde6:	7883      	ldrb	r3, [r0, #2]
 800bde8:	2b55      	cmp	r3, #85	; 0x55
 800bdea:	d1da      	bne.n	800bda2 <__cxa_type_match+0xe>
 800bdec:	78c3      	ldrb	r3, [r0, #3]
 800bdee:	2b43      	cmp	r3, #67	; 0x43
 800bdf0:	d019      	beq.n	800be26 <__cxa_type_match+0x92>
 800bdf2:	78c3      	ldrb	r3, [r0, #3]
 800bdf4:	2b43      	cmp	r3, #67	; 0x43
 800bdf6:	d1d4      	bne.n	800bda2 <__cxa_type_match+0xe>
 800bdf8:	7903      	ldrb	r3, [r0, #4]
 800bdfa:	2b43      	cmp	r3, #67	; 0x43
 800bdfc:	d1d1      	bne.n	800bda2 <__cxa_type_match+0xe>
 800bdfe:	7943      	ldrb	r3, [r0, #5]
 800be00:	2b2b      	cmp	r3, #43	; 0x2b
 800be02:	d1ce      	bne.n	800bda2 <__cxa_type_match+0xe>
 800be04:	7983      	ldrb	r3, [r0, #6]
 800be06:	2b2b      	cmp	r3, #43	; 0x2b
 800be08:	d1cb      	bne.n	800bda2 <__cxa_type_match+0xe>
 800be0a:	79c3      	ldrb	r3, [r0, #7]
 800be0c:	2b01      	cmp	r3, #1
 800be0e:	d8c8      	bhi.n	800bda2 <__cxa_type_match+0xe>
 800be10:	d004      	beq.n	800be1c <__cxa_type_match+0x88>
 800be12:	f850 4c20 	ldr.w	r4, [r0, #-32]
 800be16:	3058      	adds	r0, #88	; 0x58
 800be18:	9001      	str	r0, [sp, #4]
 800be1a:	e7c5      	b.n	800bda8 <__cxa_type_match+0x14>
 800be1c:	f850 0c20 	ldr.w	r0, [r0, #-32]
 800be20:	f850 4c78 	ldr.w	r4, [r0, #-120]
 800be24:	e7f8      	b.n	800be18 <__cxa_type_match+0x84>
 800be26:	7903      	ldrb	r3, [r0, #4]
 800be28:	2b46      	cmp	r3, #70	; 0x46
 800be2a:	d1e2      	bne.n	800bdf2 <__cxa_type_match+0x5e>
 800be2c:	7943      	ldrb	r3, [r0, #5]
 800be2e:	2b4f      	cmp	r3, #79	; 0x4f
 800be30:	d1df      	bne.n	800bdf2 <__cxa_type_match+0x5e>
 800be32:	7983      	ldrb	r3, [r0, #6]
 800be34:	2b52      	cmp	r3, #82	; 0x52
 800be36:	d1dc      	bne.n	800bdf2 <__cxa_type_match+0x5e>
 800be38:	79c3      	ldrb	r3, [r0, #7]
 800be3a:	2b00      	cmp	r3, #0
 800be3c:	d1d9      	bne.n	800bdf2 <__cxa_type_match+0x5e>
 800be3e:	9301      	str	r3, [sp, #4]
 800be40:	4c01      	ldr	r4, [pc, #4]	; (800be48 <__cxa_type_match+0xb4>)
 800be42:	e7b1      	b.n	800bda8 <__cxa_type_match+0x14>
 800be44:	08011cc4 	.word	0x08011cc4
 800be48:	08011cbc 	.word	0x08011cbc

0800be4c <__cxa_begin_cleanup>:
 800be4c:	b510      	push	{r4, lr}
 800be4e:	4604      	mov	r4, r0
 800be50:	f7ff ff96 	bl	800bd80 <__cxa_get_globals>
 800be54:	7823      	ldrb	r3, [r4, #0]
 800be56:	f1a4 0220 	sub.w	r2, r4, #32
 800be5a:	2b47      	cmp	r3, #71	; 0x47
 800be5c:	d004      	beq.n	800be68 <__cxa_begin_cleanup+0x1c>
 800be5e:	6883      	ldr	r3, [r0, #8]
 800be60:	bb23      	cbnz	r3, 800beac <__cxa_begin_cleanup+0x60>
 800be62:	6082      	str	r2, [r0, #8]
 800be64:	2001      	movs	r0, #1
 800be66:	bd10      	pop	{r4, pc}
 800be68:	7863      	ldrb	r3, [r4, #1]
 800be6a:	2b4e      	cmp	r3, #78	; 0x4e
 800be6c:	d1f7      	bne.n	800be5e <__cxa_begin_cleanup+0x12>
 800be6e:	78a3      	ldrb	r3, [r4, #2]
 800be70:	2b55      	cmp	r3, #85	; 0x55
 800be72:	d1f4      	bne.n	800be5e <__cxa_begin_cleanup+0x12>
 800be74:	78e3      	ldrb	r3, [r4, #3]
 800be76:	2b43      	cmp	r3, #67	; 0x43
 800be78:	d1f1      	bne.n	800be5e <__cxa_begin_cleanup+0x12>
 800be7a:	7923      	ldrb	r3, [r4, #4]
 800be7c:	2b43      	cmp	r3, #67	; 0x43
 800be7e:	d1ee      	bne.n	800be5e <__cxa_begin_cleanup+0x12>
 800be80:	7963      	ldrb	r3, [r4, #5]
 800be82:	2b2b      	cmp	r3, #43	; 0x2b
 800be84:	d1eb      	bne.n	800be5e <__cxa_begin_cleanup+0x12>
 800be86:	79a3      	ldrb	r3, [r4, #6]
 800be88:	2b2b      	cmp	r3, #43	; 0x2b
 800be8a:	d1e8      	bne.n	800be5e <__cxa_begin_cleanup+0x12>
 800be8c:	79e3      	ldrb	r3, [r4, #7]
 800be8e:	2b01      	cmp	r3, #1
 800be90:	d8e5      	bhi.n	800be5e <__cxa_begin_cleanup+0x12>
 800be92:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800be96:	3301      	adds	r3, #1
 800be98:	2b01      	cmp	r3, #1
 800be9a:	f844 3c04 	str.w	r3, [r4, #-4]
 800be9e:	d1e1      	bne.n	800be64 <__cxa_begin_cleanup+0x18>
 800bea0:	6883      	ldr	r3, [r0, #8]
 800bea2:	f844 3c08 	str.w	r3, [r4, #-8]
 800bea6:	6082      	str	r2, [r0, #8]
 800bea8:	2001      	movs	r0, #1
 800beaa:	bd10      	pop	{r4, pc}
 800beac:	f7ff fdba 	bl	800ba24 <_ZSt9terminatev>

0800beb0 <__gnu_end_cleanup>:
 800beb0:	b508      	push	{r3, lr}
 800beb2:	f7ff ff65 	bl	800bd80 <__cxa_get_globals>
 800beb6:	6883      	ldr	r3, [r0, #8]
 800beb8:	b383      	cbz	r3, 800bf1c <__gnu_end_cleanup+0x6c>
 800beba:	f893 2020 	ldrb.w	r2, [r3, #32]
 800bebe:	2a47      	cmp	r2, #71	; 0x47
 800bec0:	d004      	beq.n	800becc <__gnu_end_cleanup+0x1c>
 800bec2:	2200      	movs	r2, #0
 800bec4:	6082      	str	r2, [r0, #8]
 800bec6:	f103 0020 	add.w	r0, r3, #32
 800beca:	bd08      	pop	{r3, pc}
 800becc:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800bed0:	2a4e      	cmp	r2, #78	; 0x4e
 800bed2:	d1f6      	bne.n	800bec2 <__gnu_end_cleanup+0x12>
 800bed4:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800bed8:	2a55      	cmp	r2, #85	; 0x55
 800beda:	d1f2      	bne.n	800bec2 <__gnu_end_cleanup+0x12>
 800bedc:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800bee0:	2a43      	cmp	r2, #67	; 0x43
 800bee2:	d1ee      	bne.n	800bec2 <__gnu_end_cleanup+0x12>
 800bee4:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800bee8:	2a43      	cmp	r2, #67	; 0x43
 800beea:	d1ea      	bne.n	800bec2 <__gnu_end_cleanup+0x12>
 800beec:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800bef0:	2a2b      	cmp	r2, #43	; 0x2b
 800bef2:	d1e6      	bne.n	800bec2 <__gnu_end_cleanup+0x12>
 800bef4:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800bef8:	2a2b      	cmp	r2, #43	; 0x2b
 800befa:	d1e2      	bne.n	800bec2 <__gnu_end_cleanup+0x12>
 800befc:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800bf00:	2a01      	cmp	r2, #1
 800bf02:	d8de      	bhi.n	800bec2 <__gnu_end_cleanup+0x12>
 800bf04:	69da      	ldr	r2, [r3, #28]
 800bf06:	3a01      	subs	r2, #1
 800bf08:	61da      	str	r2, [r3, #28]
 800bf0a:	2a00      	cmp	r2, #0
 800bf0c:	d1db      	bne.n	800bec6 <__gnu_end_cleanup+0x16>
 800bf0e:	2200      	movs	r2, #0
 800bf10:	6999      	ldr	r1, [r3, #24]
 800bf12:	6081      	str	r1, [r0, #8]
 800bf14:	619a      	str	r2, [r3, #24]
 800bf16:	f103 0020 	add.w	r0, r3, #32
 800bf1a:	bd08      	pop	{r3, pc}
 800bf1c:	f7ff fd82 	bl	800ba24 <_ZSt9terminatev>

0800bf20 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800bf20:	2850      	cmp	r0, #80	; 0x50
 800bf22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf24:	d054      	beq.n	800bfd0 <_ZL28read_encoded_value_with_basehjPKhPj+0xb0>
 800bf26:	f000 040f 	and.w	r4, r0, #15
 800bf2a:	2c0c      	cmp	r4, #12
 800bf2c:	d84e      	bhi.n	800bfcc <_ZL28read_encoded_value_with_basehjPKhPj+0xac>
 800bf2e:	e8df f004 	tbb	[pc, r4]
 800bf32:	3907      	.short	0x3907
 800bf34:	4d170749 	.word	0x4d170749
 800bf38:	1f4d4d4d 	.word	0x1f4d4d4d
 800bf3c:	071b      	.short	0x071b
 800bf3e:	17          	.byte	0x17
 800bf3f:	00          	.byte	0x00
 800bf40:	4615      	mov	r5, r2
 800bf42:	f855 4b04 	ldr.w	r4, [r5], #4
 800bf46:	b144      	cbz	r4, 800bf5a <_ZL28read_encoded_value_with_basehjPKhPj+0x3a>
 800bf48:	f000 0670 	and.w	r6, r0, #112	; 0x70
 800bf4c:	2e10      	cmp	r6, #16
 800bf4e:	bf08      	it	eq
 800bf50:	4611      	moveq	r1, r2
 800bf52:	0602      	lsls	r2, r0, #24
 800bf54:	440c      	add	r4, r1
 800bf56:	bf48      	it	mi
 800bf58:	6824      	ldrmi	r4, [r4, #0]
 800bf5a:	601c      	str	r4, [r3, #0]
 800bf5c:	4628      	mov	r0, r5
 800bf5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bf60:	4615      	mov	r5, r2
 800bf62:	f855 4b08 	ldr.w	r4, [r5], #8
 800bf66:	e7ee      	b.n	800bf46 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bf68:	4615      	mov	r5, r2
 800bf6a:	f935 4b02 	ldrsh.w	r4, [r5], #2
 800bf6e:	e7ea      	b.n	800bf46 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bf70:	2400      	movs	r4, #0
 800bf72:	4615      	mov	r5, r2
 800bf74:	4627      	mov	r7, r4
 800bf76:	f815 eb01 	ldrb.w	lr, [r5], #1
 800bf7a:	f00e 067f 	and.w	r6, lr, #127	; 0x7f
 800bf7e:	40be      	lsls	r6, r7
 800bf80:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800bf84:	ea44 0406 	orr.w	r4, r4, r6
 800bf88:	f107 0707 	add.w	r7, r7, #7
 800bf8c:	d1f3      	bne.n	800bf76 <_ZL28read_encoded_value_with_basehjPKhPj+0x56>
 800bf8e:	2f1f      	cmp	r7, #31
 800bf90:	d8d9      	bhi.n	800bf46 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bf92:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800bf96:	d0d6      	beq.n	800bf46 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bf98:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 800bf9c:	fa06 f707 	lsl.w	r7, r6, r7
 800bfa0:	433c      	orrs	r4, r7
 800bfa2:	e7d1      	b.n	800bf48 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800bfa4:	2400      	movs	r4, #0
 800bfa6:	4615      	mov	r5, r2
 800bfa8:	4627      	mov	r7, r4
 800bfaa:	f815 eb01 	ldrb.w	lr, [r5], #1
 800bfae:	f00e 067f 	and.w	r6, lr, #127	; 0x7f
 800bfb2:	40be      	lsls	r6, r7
 800bfb4:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800bfb8:	ea44 0406 	orr.w	r4, r4, r6
 800bfbc:	f107 0707 	add.w	r7, r7, #7
 800bfc0:	d1f3      	bne.n	800bfaa <_ZL28read_encoded_value_with_basehjPKhPj+0x8a>
 800bfc2:	e7c0      	b.n	800bf46 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bfc4:	4615      	mov	r5, r2
 800bfc6:	f835 4b02 	ldrh.w	r4, [r5], #2
 800bfca:	e7bc      	b.n	800bf46 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bfcc:	f001 f8be 	bl	800d14c <abort>
 800bfd0:	3203      	adds	r2, #3
 800bfd2:	f022 0503 	bic.w	r5, r2, #3
 800bfd6:	f855 4b04 	ldr.w	r4, [r5], #4
 800bfda:	601c      	str	r4, [r3, #0]
 800bfdc:	4628      	mov	r0, r5
 800bfde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800bfe0:	28ff      	cmp	r0, #255	; 0xff
 800bfe2:	d00d      	beq.n	800c000 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 800bfe4:	f000 0070 	and.w	r0, r0, #112	; 0x70
 800bfe8:	2820      	cmp	r0, #32
 800bfea:	d015      	beq.n	800c018 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x38>
 800bfec:	d90a      	bls.n	800c004 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x24>
 800bfee:	2840      	cmp	r0, #64	; 0x40
 800bff0:	d00f      	beq.n	800c012 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x32>
 800bff2:	2850      	cmp	r0, #80	; 0x50
 800bff4:	d004      	beq.n	800c000 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 800bff6:	2830      	cmp	r0, #48	; 0x30
 800bff8:	d108      	bne.n	800c00c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 800bffa:	4608      	mov	r0, r1
 800bffc:	f7fc b9be 	b.w	800837c <_Unwind_GetDataRelBase>
 800c000:	2000      	movs	r0, #0
 800c002:	4770      	bx	lr
 800c004:	2800      	cmp	r0, #0
 800c006:	d0fb      	beq.n	800c000 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 800c008:	2810      	cmp	r0, #16
 800c00a:	d0f9      	beq.n	800c000 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 800c00c:	b508      	push	{r3, lr}
 800c00e:	f001 f89d 	bl	800d14c <abort>
 800c012:	4608      	mov	r0, r1
 800c014:	f7fc b99e 	b.w	8008354 <_Unwind_GetRegionStart>
 800c018:	4608      	mov	r0, r1
 800c01a:	f7fc b9ab 	b.w	8008374 <_Unwind_GetTextRelBase>
 800c01e:	bf00      	nop

0800c020 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800c020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c022:	460c      	mov	r4, r1
 800c024:	4615      	mov	r5, r2
 800c026:	4607      	mov	r7, r0
 800c028:	2800      	cmp	r0, #0
 800c02a:	d042      	beq.n	800c0b2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x92>
 800c02c:	f7fc f992 	bl	8008354 <_Unwind_GetRegionStart>
 800c030:	6028      	str	r0, [r5, #0]
 800c032:	7826      	ldrb	r6, [r4, #0]
 800c034:	3401      	adds	r4, #1
 800c036:	2eff      	cmp	r6, #255	; 0xff
 800c038:	d032      	beq.n	800c0a0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x80>
 800c03a:	4639      	mov	r1, r7
 800c03c:	4630      	mov	r0, r6
 800c03e:	f7ff ffcf 	bl	800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c042:	4622      	mov	r2, r4
 800c044:	4601      	mov	r1, r0
 800c046:	1d2b      	adds	r3, r5, #4
 800c048:	4630      	mov	r0, r6
 800c04a:	f7ff ff69 	bl	800bf20 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c04e:	4604      	mov	r4, r0
 800c050:	7823      	ldrb	r3, [r4, #0]
 800c052:	1c60      	adds	r0, r4, #1
 800c054:	2bff      	cmp	r3, #255	; 0xff
 800c056:	752b      	strb	r3, [r5, #20]
 800c058:	d028      	beq.n	800c0ac <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8c>
 800c05a:	2400      	movs	r4, #0
 800c05c:	2310      	movs	r3, #16
 800c05e:	4622      	mov	r2, r4
 800c060:	752b      	strb	r3, [r5, #20]
 800c062:	f810 1b01 	ldrb.w	r1, [r0], #1
 800c066:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c06a:	4093      	lsls	r3, r2
 800c06c:	0609      	lsls	r1, r1, #24
 800c06e:	ea44 0403 	orr.w	r4, r4, r3
 800c072:	f102 0207 	add.w	r2, r2, #7
 800c076:	d4f4      	bmi.n	800c062 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x42>
 800c078:	4404      	add	r4, r0
 800c07a:	60ec      	str	r4, [r5, #12]
 800c07c:	2400      	movs	r4, #0
 800c07e:	4622      	mov	r2, r4
 800c080:	7803      	ldrb	r3, [r0, #0]
 800c082:	3001      	adds	r0, #1
 800c084:	756b      	strb	r3, [r5, #21]
 800c086:	f810 1b01 	ldrb.w	r1, [r0], #1
 800c08a:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c08e:	4093      	lsls	r3, r2
 800c090:	431c      	orrs	r4, r3
 800c092:	060b      	lsls	r3, r1, #24
 800c094:	f102 0207 	add.w	r2, r2, #7
 800c098:	d4f5      	bmi.n	800c086 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x66>
 800c09a:	4404      	add	r4, r0
 800c09c:	612c      	str	r4, [r5, #16]
 800c09e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c0a0:	6068      	str	r0, [r5, #4]
 800c0a2:	7823      	ldrb	r3, [r4, #0]
 800c0a4:	1c60      	adds	r0, r4, #1
 800c0a6:	2bff      	cmp	r3, #255	; 0xff
 800c0a8:	752b      	strb	r3, [r5, #20]
 800c0aa:	d1d6      	bne.n	800c05a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x3a>
 800c0ac:	2300      	movs	r3, #0
 800c0ae:	60eb      	str	r3, [r5, #12]
 800c0b0:	e7e4      	b.n	800c07c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5c>
 800c0b2:	e7bd      	b.n	800c030 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x10>

0800c0b4 <__gxx_personality_v0>:
 800c0b4:	2300      	movs	r3, #0
 800c0b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0ba:	f000 0403 	and.w	r4, r0, #3
 800c0be:	b097      	sub	sp, #92	; 0x5c
 800c0c0:	2c01      	cmp	r4, #1
 800c0c2:	4689      	mov	r9, r1
 800c0c4:	4617      	mov	r7, r2
 800c0c6:	930a      	str	r3, [sp, #40]	; 0x28
 800c0c8:	d01e      	beq.n	800c108 <__gxx_personality_v0+0x54>
 800c0ca:	d30e      	bcc.n	800c0ea <__gxx_personality_v0+0x36>
 800c0cc:	2c02      	cmp	r4, #2
 800c0ce:	d10a      	bne.n	800c0e6 <__gxx_personality_v0+0x32>
 800c0d0:	4639      	mov	r1, r7
 800c0d2:	4648      	mov	r0, r9
 800c0d4:	f7fc f928 	bl	8008328 <__gnu_unwind_frame>
 800c0d8:	2800      	cmp	r0, #0
 800c0da:	f000 80a5 	beq.w	800c228 <__gxx_personality_v0+0x174>
 800c0de:	2009      	movs	r0, #9
 800c0e0:	b017      	add	sp, #92	; 0x5c
 800c0e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c0e6:	f001 f831 	bl	800d14c <abort>
 800c0ea:	0700      	lsls	r0, r0, #28
 800c0ec:	d4f0      	bmi.n	800c0d0 <__gxx_personality_v0+0x1c>
 800c0ee:	2301      	movs	r3, #1
 800c0f0:	9303      	str	r3, [sp, #12]
 800c0f2:	2300      	movs	r3, #0
 800c0f4:	aa16      	add	r2, sp, #88	; 0x58
 800c0f6:	f842 9d2c 	str.w	r9, [r2, #-44]!
 800c0fa:	9200      	str	r2, [sp, #0]
 800c0fc:	4619      	mov	r1, r3
 800c0fe:	220c      	movs	r2, #12
 800c100:	4638      	mov	r0, r7
 800c102:	f7fb fbb1 	bl	8007868 <_Unwind_VRS_Set>
 800c106:	e00f      	b.n	800c128 <__gxx_personality_v0+0x74>
 800c108:	f010 0408 	ands.w	r4, r0, #8
 800c10c:	f000 8090 	beq.w	800c230 <__gxx_personality_v0+0x17c>
 800c110:	aa16      	add	r2, sp, #88	; 0x58
 800c112:	f842 1d2c 	str.w	r1, [r2, #-44]!
 800c116:	9200      	str	r2, [sp, #0]
 800c118:	f044 0402 	orr.w	r4, r4, #2
 800c11c:	4619      	mov	r1, r3
 800c11e:	220c      	movs	r2, #12
 800c120:	4638      	mov	r0, r7
 800c122:	9403      	str	r4, [sp, #12]
 800c124:	f7fb fba0 	bl	8007868 <_Unwind_VRS_Set>
 800c128:	4638      	mov	r0, r7
 800c12a:	f7fc f919 	bl	8008360 <_Unwind_GetLanguageSpecificData>
 800c12e:	9005      	str	r0, [sp, #20]
 800c130:	2800      	cmp	r0, #0
 800c132:	d0cd      	beq.n	800c0d0 <__gxx_personality_v0+0x1c>
 800c134:	ab10      	add	r3, sp, #64	; 0x40
 800c136:	461a      	mov	r2, r3
 800c138:	9905      	ldr	r1, [sp, #20]
 800c13a:	4638      	mov	r0, r7
 800c13c:	9306      	str	r3, [sp, #24]
 800c13e:	f7ff ff6f 	bl	800c020 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800c142:	4639      	mov	r1, r7
 800c144:	4604      	mov	r4, r0
 800c146:	f89d 0054 	ldrb.w	r0, [sp, #84]	; 0x54
 800c14a:	f7ff ff49 	bl	800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c14e:	2300      	movs	r3, #0
 800c150:	f10d 0b3c 	add.w	fp, sp, #60	; 0x3c
 800c154:	9012      	str	r0, [sp, #72]	; 0x48
 800c156:	4619      	mov	r1, r3
 800c158:	220f      	movs	r2, #15
 800c15a:	f8cd b000 	str.w	fp, [sp]
 800c15e:	4638      	mov	r0, r7
 800c160:	f7fb fb5c 	bl	800781c <_Unwind_VRS_Get>
 800c164:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c166:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c168:	f023 0301 	bic.w	r3, r3, #1
 800c16c:	42a2      	cmp	r2, r4
 800c16e:	f103 36ff 	add.w	r6, r3, #4294967295	; 0xffffffff
 800c172:	d975      	bls.n	800c260 <__gxx_personality_v0+0x1ac>
 800c174:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 800c178:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c17c:	f89d 5055 	ldrb.w	r5, [sp, #85]	; 0x55
 800c180:	2100      	movs	r1, #0
 800c182:	4628      	mov	r0, r5
 800c184:	f7ff ff2c 	bl	800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c188:	4622      	mov	r2, r4
 800c18a:	4653      	mov	r3, sl
 800c18c:	4601      	mov	r1, r0
 800c18e:	4628      	mov	r0, r5
 800c190:	f7ff fec6 	bl	800bf20 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c194:	f89d 4055 	ldrb.w	r4, [sp, #85]	; 0x55
 800c198:	4605      	mov	r5, r0
 800c19a:	2100      	movs	r1, #0
 800c19c:	4620      	mov	r0, r4
 800c19e:	f7ff ff1f 	bl	800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c1a2:	462a      	mov	r2, r5
 800c1a4:	4643      	mov	r3, r8
 800c1a6:	4601      	mov	r1, r0
 800c1a8:	4620      	mov	r0, r4
 800c1aa:	f7ff feb9 	bl	800bf20 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c1ae:	f89d 4055 	ldrb.w	r4, [sp, #85]	; 0x55
 800c1b2:	4605      	mov	r5, r0
 800c1b4:	2100      	movs	r1, #0
 800c1b6:	4620      	mov	r0, r4
 800c1b8:	f7ff ff12 	bl	800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c1bc:	462a      	mov	r2, r5
 800c1be:	4601      	mov	r1, r0
 800c1c0:	465b      	mov	r3, fp
 800c1c2:	4620      	mov	r0, r4
 800c1c4:	f7ff feac 	bl	800bf20 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c1c8:	4604      	mov	r4, r0
 800c1ca:	2000      	movs	r0, #0
 800c1cc:	4602      	mov	r2, r0
 800c1ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c1d2:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c1d6:	4093      	lsls	r3, r2
 800c1d8:	0609      	lsls	r1, r1, #24
 800c1da:	ea40 0003 	orr.w	r0, r0, r3
 800c1de:	f102 0207 	add.w	r2, r2, #7
 800c1e2:	d4f4      	bmi.n	800c1ce <__gxx_personality_v0+0x11a>
 800c1e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c1e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c1e8:	4413      	add	r3, r2
 800c1ea:	429e      	cmp	r6, r3
 800c1ec:	d231      	bcs.n	800c252 <__gxx_personality_v0+0x19e>
 800c1ee:	9b03      	ldr	r3, [sp, #12]
 800c1f0:	07db      	lsls	r3, r3, #31
 800c1f2:	d539      	bpl.n	800c268 <__gxx_personality_v0+0x1b4>
 800c1f4:	2500      	movs	r5, #0
 800c1f6:	9504      	str	r5, [sp, #16]
 800c1f8:	2300      	movs	r3, #0
 800c1fa:	220d      	movs	r2, #13
 800c1fc:	4619      	mov	r1, r3
 800c1fe:	f8cd 8000 	str.w	r8, [sp]
 800c202:	4638      	mov	r0, r7
 800c204:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800c206:	f7fb fb09 	bl	800781c <_Unwind_VRS_Get>
 800c20a:	9a05      	ldr	r2, [sp, #20]
 800c20c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c20e:	f8c9 202c 	str.w	r2, [r9, #44]	; 0x2c
 800c212:	9a04      	ldr	r2, [sp, #16]
 800c214:	f8c9 4024 	str.w	r4, [r9, #36]	; 0x24
 800c218:	f8c9 5028 	str.w	r5, [r9, #40]	; 0x28
 800c21c:	f8c9 2030 	str.w	r2, [r9, #48]	; 0x30
 800c220:	f8c9 3020 	str.w	r3, [r9, #32]
 800c224:	2006      	movs	r0, #6
 800c226:	e75b      	b.n	800c0e0 <__gxx_personality_v0+0x2c>
 800c228:	2008      	movs	r0, #8
 800c22a:	b017      	add	sp, #92	; 0x5c
 800c22c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c230:	ab10      	add	r3, sp, #64	; 0x40
 800c232:	9300      	str	r3, [sp, #0]
 800c234:	9306      	str	r3, [sp, #24]
 800c236:	220d      	movs	r2, #13
 800c238:	4623      	mov	r3, r4
 800c23a:	4621      	mov	r1, r4
 800c23c:	4638      	mov	r0, r7
 800c23e:	f8d9 5020 	ldr.w	r5, [r9, #32]
 800c242:	f7fb faeb 	bl	800781c <_Unwind_VRS_Get>
 800c246:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c248:	429d      	cmp	r5, r3
 800c24a:	d012      	beq.n	800c272 <__gxx_personality_v0+0x1be>
 800c24c:	2302      	movs	r3, #2
 800c24e:	9303      	str	r3, [sp, #12]
 800c250:	e74f      	b.n	800c0f2 <__gxx_personality_v0+0x3e>
 800c252:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c254:	4413      	add	r3, r2
 800c256:	429e      	cmp	r6, r3
 800c258:	d359      	bcc.n	800c30e <__gxx_personality_v0+0x25a>
 800c25a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800c25c:	42a3      	cmp	r3, r4
 800c25e:	d88d      	bhi.n	800c17c <__gxx_personality_v0+0xc8>
 800c260:	2500      	movs	r5, #0
 800c262:	2401      	movs	r4, #1
 800c264:	9504      	str	r5, [sp, #16]
 800c266:	e107      	b.n	800c478 <__gxx_personality_v0+0x3c4>
 800c268:	9b03      	ldr	r3, [sp, #12]
 800c26a:	071b      	lsls	r3, r3, #28
 800c26c:	d54c      	bpl.n	800c308 <__gxx_personality_v0+0x254>
 800c26e:	f7ff fbd9 	bl	800ba24 <_ZSt9terminatev>
 800c272:	ab16      	add	r3, sp, #88	; 0x58
 800c274:	f843 9d2c 	str.w	r9, [r3, #-44]!
 800c278:	9300      	str	r3, [sp, #0]
 800c27a:	4621      	mov	r1, r4
 800c27c:	4623      	mov	r3, r4
 800c27e:	220c      	movs	r2, #12
 800c280:	4638      	mov	r0, r7
 800c282:	f7fb faf1 	bl	8007868 <_Unwind_VRS_Set>
 800c286:	f8d9 3030 	ldr.w	r3, [r9, #48]	; 0x30
 800c28a:	9304      	str	r3, [sp, #16]
 800c28c:	2b00      	cmp	r3, #0
 800c28e:	d03b      	beq.n	800c308 <__gxx_personality_v0+0x254>
 800c290:	2403      	movs	r4, #3
 800c292:	f8d9 5028 	ldr.w	r5, [r9, #40]	; 0x28
 800c296:	f8d9 102c 	ldr.w	r1, [r9, #44]	; 0x2c
 800c29a:	2d00      	cmp	r5, #0
 800c29c:	f2c0 8108 	blt.w	800c4b0 <__gxx_personality_v0+0x3fc>
 800c2a0:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 800c2a4:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c2a8:	2300      	movs	r3, #0
 800c2aa:	aa16      	add	r2, sp, #88	; 0x58
 800c2ac:	f842 9d28 	str.w	r9, [r2, #-40]!
 800c2b0:	4619      	mov	r1, r3
 800c2b2:	9200      	str	r2, [sp, #0]
 800c2b4:	4638      	mov	r0, r7
 800c2b6:	461a      	mov	r2, r3
 800c2b8:	f7fb fad6 	bl	8007868 <_Unwind_VRS_Set>
 800c2bc:	2300      	movs	r3, #0
 800c2be:	2201      	movs	r2, #1
 800c2c0:	4619      	mov	r1, r3
 800c2c2:	f8cd a000 	str.w	sl, [sp]
 800c2c6:	4638      	mov	r0, r7
 800c2c8:	950d      	str	r5, [sp, #52]	; 0x34
 800c2ca:	f7fb facd 	bl	8007868 <_Unwind_VRS_Set>
 800c2ce:	2300      	movs	r3, #0
 800c2d0:	220f      	movs	r2, #15
 800c2d2:	4619      	mov	r1, r3
 800c2d4:	f8cd 8000 	str.w	r8, [sp]
 800c2d8:	4638      	mov	r0, r7
 800c2da:	f7fb fa9f 	bl	800781c <_Unwind_VRS_Get>
 800c2de:	2300      	movs	r3, #0
 800c2e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c2e2:	9d04      	ldr	r5, [sp, #16]
 800c2e4:	f002 0201 	and.w	r2, r2, #1
 800c2e8:	4315      	orrs	r5, r2
 800c2ea:	f8cd 8000 	str.w	r8, [sp]
 800c2ee:	4638      	mov	r0, r7
 800c2f0:	4619      	mov	r1, r3
 800c2f2:	220f      	movs	r2, #15
 800c2f4:	950e      	str	r5, [sp, #56]	; 0x38
 800c2f6:	f7fb fab7 	bl	8007868 <_Unwind_VRS_Set>
 800c2fa:	2c02      	cmp	r4, #2
 800c2fc:	f000 8082 	beq.w	800c404 <__gxx_personality_v0+0x350>
 800c300:	2007      	movs	r0, #7
 800c302:	b017      	add	sp, #92	; 0x5c
 800c304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c308:	4648      	mov	r0, r9
 800c30a:	f000 fb5f 	bl	800c9cc <__cxa_call_terminate>
 800c30e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c310:	461a      	mov	r2, r3
 800c312:	9304      	str	r3, [sp, #16]
 800c314:	2b00      	cmp	r3, #0
 800c316:	d17a      	bne.n	800c40e <__gxx_personality_v0+0x35a>
 800c318:	2800      	cmp	r0, #0
 800c31a:	f43f aed9 	beq.w	800c0d0 <__gxx_personality_v0+0x1c>
 800c31e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800c320:	9a04      	ldr	r2, [sp, #16]
 800c322:	3801      	subs	r0, #1
 800c324:	4403      	add	r3, r0
 800c326:	2a00      	cmp	r2, #0
 800c328:	f43f aed2 	beq.w	800c0d0 <__gxx_personality_v0+0x1c>
 800c32c:	2b00      	cmp	r3, #0
 800c32e:	d077      	beq.n	800c420 <__gxx_personality_v0+0x36c>
 800c330:	9a03      	ldr	r2, [sp, #12]
 800c332:	f012 0208 	ands.w	r2, r2, #8
 800c336:	9209      	str	r2, [sp, #36]	; 0x24
 800c338:	f000 80f8 	beq.w	800c52c <__gxx_personality_v0+0x478>
 800c33c:	2547      	movs	r5, #71	; 0x47
 800c33e:	244e      	movs	r4, #78	; 0x4e
 800c340:	2055      	movs	r0, #85	; 0x55
 800c342:	2143      	movs	r1, #67	; 0x43
 800c344:	2246      	movs	r2, #70	; 0x46
 800c346:	264f      	movs	r6, #79	; 0x4f
 800c348:	f04f 0e52 	mov.w	lr, #82	; 0x52
 800c34c:	f04f 0c00 	mov.w	ip, #0
 800c350:	f889 5000 	strb.w	r5, [r9]
 800c354:	f889 4001 	strb.w	r4, [r9, #1]
 800c358:	f889 0002 	strb.w	r0, [r9, #2]
 800c35c:	f889 1003 	strb.w	r1, [r9, #3]
 800c360:	f889 2004 	strb.w	r2, [r9, #4]
 800c364:	f889 6005 	strb.w	r6, [r9, #5]
 800c368:	f889 e006 	strb.w	lr, [r9, #6]
 800c36c:	f889 c007 	strb.w	ip, [r9, #7]
 800c370:	2200      	movs	r2, #0
 800c372:	9707      	str	r7, [sp, #28]
 800c374:	9208      	str	r2, [sp, #32]
 800c376:	2500      	movs	r5, #0
 800c378:	4629      	mov	r1, r5
 800c37a:	e000      	b.n	800c37e <__gxx_personality_v0+0x2ca>
 800c37c:	4623      	mov	r3, r4
 800c37e:	461c      	mov	r4, r3
 800c380:	f814 0b01 	ldrb.w	r0, [r4], #1
 800c384:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 800c388:	408a      	lsls	r2, r1
 800c38a:	0606      	lsls	r6, r0, #24
 800c38c:	ea45 0502 	orr.w	r5, r5, r2
 800c390:	f101 0107 	add.w	r1, r1, #7
 800c394:	d4f2      	bmi.n	800c37c <__gxx_personality_v0+0x2c8>
 800c396:	291f      	cmp	r1, #31
 800c398:	d805      	bhi.n	800c3a6 <__gxx_personality_v0+0x2f2>
 800c39a:	0642      	lsls	r2, r0, #25
 800c39c:	d503      	bpl.n	800c3a6 <__gxx_personality_v0+0x2f2>
 800c39e:	2201      	movs	r2, #1
 800c3a0:	408a      	lsls	r2, r1
 800c3a2:	4252      	negs	r2, r2
 800c3a4:	4315      	orrs	r5, r2
 800c3a6:	2600      	movs	r6, #0
 800c3a8:	4631      	mov	r1, r6
 800c3aa:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c3ae:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 800c3b2:	408a      	lsls	r2, r1
 800c3b4:	0607      	lsls	r7, r0, #24
 800c3b6:	ea46 0602 	orr.w	r6, r6, r2
 800c3ba:	f101 0107 	add.w	r1, r1, #7
 800c3be:	d4f4      	bmi.n	800c3aa <__gxx_personality_v0+0x2f6>
 800c3c0:	291f      	cmp	r1, #31
 800c3c2:	d805      	bhi.n	800c3d0 <__gxx_personality_v0+0x31c>
 800c3c4:	0640      	lsls	r0, r0, #25
 800c3c6:	d503      	bpl.n	800c3d0 <__gxx_personality_v0+0x31c>
 800c3c8:	2301      	movs	r3, #1
 800c3ca:	408b      	lsls	r3, r1
 800c3cc:	425b      	negs	r3, r3
 800c3ce:	431e      	orrs	r6, r3
 800c3d0:	2d00      	cmp	r5, #0
 800c3d2:	d05c      	beq.n	800c48e <__gxx_personality_v0+0x3da>
 800c3d4:	dd5e      	ble.n	800c494 <__gxx_personality_v0+0x3e0>
 800c3d6:	f89d 0054 	ldrb.w	r0, [sp, #84]	; 0x54
 800c3da:	28ff      	cmp	r0, #255	; 0xff
 800c3dc:	f000 80a4 	beq.w	800c528 <__gxx_personality_v0+0x474>
 800c3e0:	f000 0307 	and.w	r3, r0, #7
 800c3e4:	2b04      	cmp	r3, #4
 800c3e6:	f63f ae7e 	bhi.w	800c0e6 <__gxx_personality_v0+0x32>
 800c3ea:	a201      	add	r2, pc, #4	; (adr r2, 800c3f0 <__gxx_personality_v0+0x33c>)
 800c3ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c3f0:	0800c45b 	.word	0x0800c45b
 800c3f4:	0800c0e7 	.word	0x0800c0e7
 800c3f8:	0800c461 	.word	0x0800c461
 800c3fc:	0800c45b 	.word	0x0800c45b
 800c400:	0800c439 	.word	0x0800c439
 800c404:	4648      	mov	r0, r9
 800c406:	f7ff fd21 	bl	800be4c <__cxa_begin_cleanup>
 800c40a:	2007      	movs	r0, #7
 800c40c:	e668      	b.n	800c0e0 <__gxx_personality_v0+0x2c>
 800c40e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c410:	441a      	add	r2, r3
 800c412:	9204      	str	r2, [sp, #16]
 800c414:	2800      	cmp	r0, #0
 800c416:	d182      	bne.n	800c31e <__gxx_personality_v0+0x26a>
 800c418:	9b04      	ldr	r3, [sp, #16]
 800c41a:	2b00      	cmp	r3, #0
 800c41c:	f43f ae58 	beq.w	800c0d0 <__gxx_personality_v0+0x1c>
 800c420:	9b03      	ldr	r3, [sp, #12]
 800c422:	f013 0301 	ands.w	r3, r3, #1
 800c426:	f47f ae53 	bne.w	800c0d0 <__gxx_personality_v0+0x1c>
 800c42a:	9a03      	ldr	r2, [sp, #12]
 800c42c:	f012 0508 	ands.w	r5, r2, #8
 800c430:	f040 8097 	bne.w	800c562 <__gxx_personality_v0+0x4ae>
 800c434:	2402      	movs	r4, #2
 800c436:	e737      	b.n	800c2a8 <__gxx_personality_v0+0x1f4>
 800c438:	00eb      	lsls	r3, r5, #3
 800c43a:	425b      	negs	r3, r3
 800c43c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c43e:	9912      	ldr	r1, [sp, #72]	; 0x48
 800c440:	441a      	add	r2, r3
 800c442:	4643      	mov	r3, r8
 800c444:	f7ff fd6c 	bl	800bf20 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c448:	990e      	ldr	r1, [sp, #56]	; 0x38
 800c44a:	b199      	cbz	r1, 800c474 <__gxx_personality_v0+0x3c0>
 800c44c:	f1b9 0f00 	cmp.w	r9, #0
 800c450:	d109      	bne.n	800c466 <__gxx_personality_v0+0x3b2>
 800c452:	2e00      	cmp	r6, #0
 800c454:	d077      	beq.n	800c546 <__gxx_personality_v0+0x492>
 800c456:	19a3      	adds	r3, r4, r6
 800c458:	e78d      	b.n	800c376 <__gxx_personality_v0+0x2c2>
 800c45a:	00ab      	lsls	r3, r5, #2
 800c45c:	425b      	negs	r3, r3
 800c45e:	e7ed      	b.n	800c43c <__gxx_personality_v0+0x388>
 800c460:	006b      	lsls	r3, r5, #1
 800c462:	425b      	negs	r3, r3
 800c464:	e7ea      	b.n	800c43c <__gxx_personality_v0+0x388>
 800c466:	ab0a      	add	r3, sp, #40	; 0x28
 800c468:	2200      	movs	r2, #0
 800c46a:	4648      	mov	r0, r9
 800c46c:	f7ff fc92 	bl	800bd94 <__cxa_type_match>
 800c470:	2800      	cmp	r0, #0
 800c472:	d0ee      	beq.n	800c452 <__gxx_personality_v0+0x39e>
 800c474:	2403      	movs	r4, #3
 800c476:	9f07      	ldr	r7, [sp, #28]
 800c478:	9b03      	ldr	r3, [sp, #12]
 800c47a:	07da      	lsls	r2, r3, #31
 800c47c:	d460      	bmi.n	800c540 <__gxx_personality_v0+0x48c>
 800c47e:	9b03      	ldr	r3, [sp, #12]
 800c480:	0719      	lsls	r1, r3, #28
 800c482:	d466      	bmi.n	800c552 <__gxx_personality_v0+0x49e>
 800c484:	2c01      	cmp	r4, #1
 800c486:	f43f af3f 	beq.w	800c308 <__gxx_personality_v0+0x254>
 800c48a:	9905      	ldr	r1, [sp, #20]
 800c48c:	e705      	b.n	800c29a <__gxx_personality_v0+0x1e6>
 800c48e:	2301      	movs	r3, #1
 800c490:	9308      	str	r3, [sp, #32]
 800c492:	e7de      	b.n	800c452 <__gxx_personality_v0+0x39e>
 800c494:	f1b9 0f00 	cmp.w	r9, #0
 800c498:	d001      	beq.n	800c49e <__gxx_personality_v0+0x3ea>
 800c49a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c49c:	b35b      	cbz	r3, 800c4f6 <__gxx_personality_v0+0x442>
 800c49e:	1c6b      	adds	r3, r5, #1
 800c4a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c4a2:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 800c4a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c4aa:	2b00      	cmp	r3, #0
 800c4ac:	d1d1      	bne.n	800c452 <__gxx_personality_v0+0x39e>
 800c4ae:	e7e1      	b.n	800c474 <__gxx_personality_v0+0x3c0>
 800c4b0:	9a06      	ldr	r2, [sp, #24]
 800c4b2:	4638      	mov	r0, r7
 800c4b4:	f7ff fdb4 	bl	800c020 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800c4b8:	4639      	mov	r1, r7
 800c4ba:	f89d 0054 	ldrb.w	r0, [sp, #84]	; 0x54
 800c4be:	f7ff fd8f 	bl	800bfe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c4c2:	00aa      	lsls	r2, r5, #2
 800c4c4:	f082 0203 	eor.w	r2, r2, #3
 800c4c8:	43d2      	mvns	r2, r2
 800c4ca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800c4cc:	9012      	str	r0, [sp, #72]	; 0x48
 800c4ce:	58b3      	ldr	r3, [r6, r2]
 800c4d0:	4416      	add	r6, r2
 800c4d2:	b133      	cbz	r3, 800c4e2 <__gxx_personality_v0+0x42e>
 800c4d4:	4632      	mov	r2, r6
 800c4d6:	2300      	movs	r3, #0
 800c4d8:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800c4dc:	3301      	adds	r3, #1
 800c4de:	2900      	cmp	r1, #0
 800c4e0:	d1fa      	bne.n	800c4d8 <__gxx_personality_v0+0x424>
 800c4e2:	2204      	movs	r2, #4
 800c4e4:	f8c9 3028 	str.w	r3, [r9, #40]	; 0x28
 800c4e8:	f8c9 002c 	str.w	r0, [r9, #44]	; 0x2c
 800c4ec:	f8c9 6034 	str.w	r6, [r9, #52]	; 0x34
 800c4f0:	f8c9 2030 	str.w	r2, [r9, #48]	; 0x30
 800c4f4:	e6d4      	b.n	800c2a0 <__gxx_personality_v0+0x1ec>
 800c4f6:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800c4f8:	1c6b      	adds	r3, r5, #1
 800c4fa:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 800c4fe:	f857 1023 	ldr.w	r1, [r7, r3, lsl #2]
 800c502:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c504:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 800c508:	920f      	str	r2, [sp, #60]	; 0x3c
 800c50a:	b921      	cbnz	r1, 800c516 <__gxx_personality_v0+0x462>
 800c50c:	e7b2      	b.n	800c474 <__gxx_personality_v0+0x3c0>
 800c50e:	f857 1f04 	ldr.w	r1, [r7, #4]!
 800c512:	2900      	cmp	r1, #0
 800c514:	d0ae      	beq.n	800c474 <__gxx_personality_v0+0x3c0>
 800c516:	4439      	add	r1, r7
 800c518:	465b      	mov	r3, fp
 800c51a:	2200      	movs	r2, #0
 800c51c:	4648      	mov	r0, r9
 800c51e:	f7ff fc39 	bl	800bd94 <__cxa_type_match>
 800c522:	2800      	cmp	r0, #0
 800c524:	d0f3      	beq.n	800c50e <__gxx_personality_v0+0x45a>
 800c526:	e794      	b.n	800c452 <__gxx_personality_v0+0x39e>
 800c528:	2300      	movs	r3, #0
 800c52a:	e787      	b.n	800c43c <__gxx_personality_v0+0x388>
 800c52c:	f899 2007 	ldrb.w	r2, [r9, #7]
 800c530:	2a01      	cmp	r2, #1
 800c532:	bf0c      	ite	eq
 800c534:	f859 2c20 	ldreq.w	r2, [r9, #-32]
 800c538:	f109 0258 	addne.w	r2, r9, #88	; 0x58
 800c53c:	920a      	str	r2, [sp, #40]	; 0x28
 800c53e:	e717      	b.n	800c370 <__gxx_personality_v0+0x2bc>
 800c540:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c544:	e658      	b.n	800c1f8 <__gxx_personality_v0+0x144>
 800c546:	9b08      	ldr	r3, [sp, #32]
 800c548:	9f07      	ldr	r7, [sp, #28]
 800c54a:	2b00      	cmp	r3, #0
 800c54c:	f47f af68 	bne.w	800c420 <__gxx_personality_v0+0x36c>
 800c550:	e5be      	b.n	800c0d0 <__gxx_personality_v0+0x1c>
 800c552:	2c01      	cmp	r4, #1
 800c554:	f43f ae8b 	beq.w	800c26e <__gxx_personality_v0+0x1ba>
 800c558:	2d00      	cmp	r5, #0
 800c55a:	f6bf aea1 	bge.w	800c2a0 <__gxx_personality_v0+0x1ec>
 800c55e:	f7ff fa6f 	bl	800ba40 <_ZSt10unexpectedv>
 800c562:	461d      	mov	r5, r3
 800c564:	2402      	movs	r4, #2
 800c566:	e69f      	b.n	800c2a8 <__gxx_personality_v0+0x1f4>
 800c568:	f7ff f9c2 	bl	800b8f0 <__cxa_begin_catch>
 800c56c:	e67f      	b.n	800c26e <__gxx_personality_v0+0x1ba>
 800c56e:	bf00      	nop

0800c570 <_ZdlPvj>:
 800c570:	f7ff b9bc 	b.w	800b8ec <_ZdlPv>

0800c574 <_ZSt15get_new_handlerv>:
 800c574:	4b02      	ldr	r3, [pc, #8]	; (800c580 <_ZSt15get_new_handlerv+0xc>)
 800c576:	6818      	ldr	r0, [r3, #0]
 800c578:	f3bf 8f5b 	dmb	ish
 800c57c:	4770      	bx	lr
 800c57e:	bf00      	nop
 800c580:	20000918 	.word	0x20000918

0800c584 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800c584:	b570      	push	{r4, r5, r6, lr}
 800c586:	2400      	movs	r4, #0
 800c588:	2610      	movs	r6, #16
 800c58a:	6803      	ldr	r3, [r0, #0]
 800c58c:	b084      	sub	sp, #16
 800c58e:	4615      	mov	r5, r2
 800c590:	9602      	str	r6, [sp, #8]
 800c592:	6812      	ldr	r2, [r2, #0]
 800c594:	699e      	ldr	r6, [r3, #24]
 800c596:	9400      	str	r4, [sp, #0]
 800c598:	466b      	mov	r3, sp
 800c59a:	f88d 4004 	strb.w	r4, [sp, #4]
 800c59e:	9403      	str	r4, [sp, #12]
 800c5a0:	47b0      	blx	r6
 800c5a2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800c5a6:	f003 0306 	and.w	r3, r3, #6
 800c5aa:	2b06      	cmp	r3, #6
 800c5ac:	bf09      	itett	eq
 800c5ae:	2001      	moveq	r0, #1
 800c5b0:	4620      	movne	r0, r4
 800c5b2:	9b00      	ldreq	r3, [sp, #0]
 800c5b4:	602b      	streq	r3, [r5, #0]
 800c5b6:	b004      	add	sp, #16
 800c5b8:	bd70      	pop	{r4, r5, r6, pc}
 800c5ba:	bf00      	nop

0800c5bc <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800c5bc:	9800      	ldr	r0, [sp, #0]
 800c5be:	4290      	cmp	r0, r2
 800c5c0:	bf0c      	ite	eq
 800c5c2:	2006      	moveq	r0, #6
 800c5c4:	2001      	movne	r0, #1
 800c5c6:	4770      	bx	lr

0800c5c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800c5c8:	b510      	push	{r4, lr}
 800c5ca:	4604      	mov	r4, r0
 800c5cc:	4b02      	ldr	r3, [pc, #8]	; (800c5d8 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800c5ce:	6003      	str	r3, [r0, #0]
 800c5d0:	f000 f854 	bl	800c67c <_ZNSt9type_infoD1Ev>
 800c5d4:	4620      	mov	r0, r4
 800c5d6:	bd10      	pop	{r4, pc}
 800c5d8:	08011c6c 	.word	0x08011c6c

0800c5dc <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800c5dc:	b510      	push	{r4, lr}
 800c5de:	4604      	mov	r4, r0
 800c5e0:	4b04      	ldr	r3, [pc, #16]	; (800c5f4 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800c5e2:	6003      	str	r3, [r0, #0]
 800c5e4:	f000 f84a 	bl	800c67c <_ZNSt9type_infoD1Ev>
 800c5e8:	4620      	mov	r0, r4
 800c5ea:	2108      	movs	r1, #8
 800c5ec:	f7ff ffc0 	bl	800c570 <_ZdlPvj>
 800c5f0:	4620      	mov	r0, r4
 800c5f2:	bd10      	pop	{r4, pc}
 800c5f4:	08011c6c 	.word	0x08011c6c

0800c5f8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800c5f8:	b538      	push	{r3, r4, r5, lr}
 800c5fa:	4615      	mov	r5, r2
 800c5fc:	461c      	mov	r4, r3
 800c5fe:	f000 f841 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c602:	b120      	cbz	r0, 800c60e <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 800c604:	2208      	movs	r2, #8
 800c606:	2306      	movs	r3, #6
 800c608:	6025      	str	r5, [r4, #0]
 800c60a:	60e2      	str	r2, [r4, #12]
 800c60c:	7123      	strb	r3, [r4, #4]
 800c60e:	bd38      	pop	{r3, r4, r5, pc}

0800c610 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800c610:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c614:	4617      	mov	r7, r2
 800c616:	461c      	mov	r4, r3
 800c618:	4606      	mov	r6, r0
 800c61a:	460d      	mov	r5, r1
 800c61c:	f000 f832 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c620:	b908      	cbnz	r0, 800c626 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x16>
 800c622:	2c03      	cmp	r4, #3
 800c624:	d901      	bls.n	800c62a <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x1a>
 800c626:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c62a:	682b      	ldr	r3, [r5, #0]
 800c62c:	463a      	mov	r2, r7
 800c62e:	4631      	mov	r1, r6
 800c630:	4628      	mov	r0, r5
 800c632:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c636:	695b      	ldr	r3, [r3, #20]
 800c638:	4718      	bx	r3
 800c63a:	bf00      	nop

0800c63c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800c63c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c63e:	b083      	sub	sp, #12
 800c640:	9d08      	ldr	r5, [sp, #32]
 800c642:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c644:	4617      	mov	r7, r2
 800c646:	428d      	cmp	r5, r1
 800c648:	4606      	mov	r6, r0
 800c64a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c64c:	d00b      	beq.n	800c666 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
 800c64e:	4619      	mov	r1, r3
 800c650:	4630      	mov	r0, r6
 800c652:	f000 f817 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c656:	b118      	cbz	r0, 800c660 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x24>
 800c658:	2301      	movs	r3, #1
 800c65a:	6025      	str	r5, [r4, #0]
 800c65c:	7127      	strb	r7, [r4, #4]
 800c65e:	71a3      	strb	r3, [r4, #6]
 800c660:	2000      	movs	r0, #0
 800c662:	b003      	add	sp, #12
 800c664:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c666:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c668:	9301      	str	r3, [sp, #4]
 800c66a:	f000 f80b 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c66e:	b118      	cbz	r0, 800c678 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x3c>
 800c670:	2000      	movs	r0, #0
 800c672:	7167      	strb	r7, [r4, #5]
 800c674:	b003      	add	sp, #12
 800c676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c678:	9b01      	ldr	r3, [sp, #4]
 800c67a:	e7e8      	b.n	800c64e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x12>

0800c67c <_ZNSt9type_infoD1Ev>:
 800c67c:	4770      	bx	lr
 800c67e:	bf00      	nop

0800c680 <_ZNKSt9type_info14__is_pointer_pEv>:
 800c680:	2000      	movs	r0, #0
 800c682:	4770      	bx	lr

0800c684 <_ZNKSt9type_infoeqERKS_>:
 800c684:	4281      	cmp	r1, r0
 800c686:	d011      	beq.n	800c6ac <_ZNKSt9type_infoeqERKS_+0x28>
 800c688:	b508      	push	{r3, lr}
 800c68a:	6840      	ldr	r0, [r0, #4]
 800c68c:	7803      	ldrb	r3, [r0, #0]
 800c68e:	2b2a      	cmp	r3, #42	; 0x2a
 800c690:	d00a      	beq.n	800c6a8 <_ZNKSt9type_infoeqERKS_+0x24>
 800c692:	6849      	ldr	r1, [r1, #4]
 800c694:	780b      	ldrb	r3, [r1, #0]
 800c696:	2b2a      	cmp	r3, #42	; 0x2a
 800c698:	bf08      	it	eq
 800c69a:	3101      	addeq	r1, #1
 800c69c:	f7fa f8a4 	bl	80067e8 <strcmp>
 800c6a0:	fab0 f080 	clz	r0, r0
 800c6a4:	0940      	lsrs	r0, r0, #5
 800c6a6:	bd08      	pop	{r3, pc}
 800c6a8:	2000      	movs	r0, #0
 800c6aa:	bd08      	pop	{r3, pc}
 800c6ac:	2001      	movs	r0, #1
 800c6ae:	4770      	bx	lr

0800c6b0 <_ZSt17__throw_bad_allocv>:
 800c6b0:	b508      	push	{r3, lr}
 800c6b2:	2004      	movs	r0, #4
 800c6b4:	f7ff fa6e 	bl	800bb94 <__cxa_allocate_exception>
 800c6b8:	4b02      	ldr	r3, [pc, #8]	; (800c6c4 <_ZSt17__throw_bad_allocv+0x14>)
 800c6ba:	4a03      	ldr	r2, [pc, #12]	; (800c6c8 <_ZSt17__throw_bad_allocv+0x18>)
 800c6bc:	6003      	str	r3, [r0, #0]
 800c6be:	4903      	ldr	r1, [pc, #12]	; (800c6cc <_ZSt17__throw_bad_allocv+0x1c>)
 800c6c0:	f7ff fac6 	bl	800bc50 <__cxa_throw>
 800c6c4:	08011c28 	.word	0x08011c28
 800c6c8:	0800bd49 	.word	0x0800bd49
 800c6cc:	08011c04 	.word	0x08011c04

0800c6d0 <_ZSt19__throw_logic_errorPKc>:
 800c6d0:	b538      	push	{r3, r4, r5, lr}
 800c6d2:	4605      	mov	r5, r0
 800c6d4:	2008      	movs	r0, #8
 800c6d6:	f7ff fa5d 	bl	800bb94 <__cxa_allocate_exception>
 800c6da:	4629      	mov	r1, r5
 800c6dc:	4604      	mov	r4, r0
 800c6de:	f000 fc21 	bl	800cf24 <_ZNSt11logic_errorC1EPKc>
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	4a04      	ldr	r2, [pc, #16]	; (800c6f8 <_ZSt19__throw_logic_errorPKc+0x28>)
 800c6e6:	4905      	ldr	r1, [pc, #20]	; (800c6fc <_ZSt19__throw_logic_errorPKc+0x2c>)
 800c6e8:	f7ff fab2 	bl	800bc50 <__cxa_throw>
 800c6ec:	4620      	mov	r0, r4
 800c6ee:	f7ff fa69 	bl	800bbc4 <__cxa_free_exception>
 800c6f2:	f7ff fb49 	bl	800bd88 <__cxa_end_cleanup>
 800c6f6:	bf00      	nop
 800c6f8:	0800caf1 	.word	0x0800caf1
 800c6fc:	080126a0 	.word	0x080126a0

0800c700 <_ZSt20__throw_length_errorPKc>:
 800c700:	b538      	push	{r3, r4, r5, lr}
 800c702:	4605      	mov	r5, r0
 800c704:	2008      	movs	r0, #8
 800c706:	f7ff fa45 	bl	800bb94 <__cxa_allocate_exception>
 800c70a:	4629      	mov	r1, r5
 800c70c:	4604      	mov	r4, r0
 800c70e:	f000 fc1d 	bl	800cf4c <_ZNSt12length_errorC1EPKc>
 800c712:	4620      	mov	r0, r4
 800c714:	4a04      	ldr	r2, [pc, #16]	; (800c728 <_ZSt20__throw_length_errorPKc+0x28>)
 800c716:	4905      	ldr	r1, [pc, #20]	; (800c72c <_ZSt20__throw_length_errorPKc+0x2c>)
 800c718:	f7ff fa9a 	bl	800bc50 <__cxa_throw>
 800c71c:	4620      	mov	r0, r4
 800c71e:	f7ff fa51 	bl	800bbc4 <__cxa_free_exception>
 800c722:	f7ff fb31 	bl	800bd88 <__cxa_end_cleanup>
 800c726:	bf00      	nop
 800c728:	0800cb45 	.word	0x0800cb45
 800c72c:	080126ac 	.word	0x080126ac

0800c730 <_ZNSt9exceptionD1Ev>:
 800c730:	4770      	bx	lr
 800c732:	bf00      	nop

0800c734 <_ZNSt13bad_exceptionD1Ev>:
 800c734:	4770      	bx	lr
 800c736:	bf00      	nop

0800c738 <_ZGTtNKSt13bad_exception4whatEv>:
 800c738:	4800      	ldr	r0, [pc, #0]	; (800c73c <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800c73a:	4770      	bx	lr
 800c73c:	08011ca8 	.word	0x08011ca8

0800c740 <_ZNSt13bad_exceptionD0Ev>:
 800c740:	b510      	push	{r4, lr}
 800c742:	4604      	mov	r4, r0
 800c744:	2104      	movs	r1, #4
 800c746:	f7ff ff13 	bl	800c570 <_ZdlPvj>
 800c74a:	4620      	mov	r0, r4
 800c74c:	bd10      	pop	{r4, pc}
 800c74e:	bf00      	nop

0800c750 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800c750:	b510      	push	{r4, lr}
 800c752:	4604      	mov	r4, r0
 800c754:	4b02      	ldr	r3, [pc, #8]	; (800c760 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800c756:	6003      	str	r3, [r0, #0]
 800c758:	f7ff ff36 	bl	800c5c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c75c:	4620      	mov	r0, r4
 800c75e:	bd10      	pop	{r4, pc}
 800c760:	08011d98 	.word	0x08011d98

0800c764 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800c764:	b510      	push	{r4, lr}
 800c766:	4604      	mov	r4, r0
 800c768:	4b04      	ldr	r3, [pc, #16]	; (800c77c <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800c76a:	6003      	str	r3, [r0, #0]
 800c76c:	f7ff ff2c 	bl	800c5c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c770:	4620      	mov	r0, r4
 800c772:	210c      	movs	r1, #12
 800c774:	f7ff fefc 	bl	800c570 <_ZdlPvj>
 800c778:	4620      	mov	r0, r4
 800c77a:	bd10      	pop	{r4, pc}
 800c77c:	08011d98 	.word	0x08011d98

0800c780 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800c780:	b570      	push	{r4, r5, r6, lr}
 800c782:	b082      	sub	sp, #8
 800c784:	9c06      	ldr	r4, [sp, #24]
 800c786:	460d      	mov	r5, r1
 800c788:	4294      	cmp	r4, r2
 800c78a:	4606      	mov	r6, r0
 800c78c:	d009      	beq.n	800c7a2 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800c78e:	68b0      	ldr	r0, [r6, #8]
 800c790:	4629      	mov	r1, r5
 800c792:	6806      	ldr	r6, [r0, #0]
 800c794:	9406      	str	r4, [sp, #24]
 800c796:	6a34      	ldr	r4, [r6, #32]
 800c798:	46a4      	mov	ip, r4
 800c79a:	b002      	add	sp, #8
 800c79c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7a0:	4760      	bx	ip
 800c7a2:	4619      	mov	r1, r3
 800c7a4:	9201      	str	r2, [sp, #4]
 800c7a6:	9300      	str	r3, [sp, #0]
 800c7a8:	f7ff ff6c 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c7ac:	9b00      	ldr	r3, [sp, #0]
 800c7ae:	9a01      	ldr	r2, [sp, #4]
 800c7b0:	2800      	cmp	r0, #0
 800c7b2:	d0ec      	beq.n	800c78e <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800c7b4:	2006      	movs	r0, #6
 800c7b6:	b002      	add	sp, #8
 800c7b8:	bd70      	pop	{r4, r5, r6, pc}
 800c7ba:	bf00      	nop

0800c7bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800c7bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7c0:	4689      	mov	r9, r1
 800c7c2:	b081      	sub	sp, #4
 800c7c4:	4619      	mov	r1, r3
 800c7c6:	461d      	mov	r5, r3
 800c7c8:	4616      	mov	r6, r2
 800c7ca:	4607      	mov	r7, r0
 800c7cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800c7ce:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800c7d2:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800c7d6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800c7da:	f7ff ff53 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c7de:	b188      	cbz	r0, 800c804 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x48>
 800c7e0:	f1b9 0f00 	cmp.w	r9, #0
 800c7e4:	f8c8 4000 	str.w	r4, [r8]
 800c7e8:	f888 6004 	strb.w	r6, [r8, #4]
 800c7ec:	db1e      	blt.n	800c82c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x70>
 800c7ee:	444c      	add	r4, r9
 800c7f0:	45a2      	cmp	sl, r4
 800c7f2:	bf0c      	ite	eq
 800c7f4:	2406      	moveq	r4, #6
 800c7f6:	2401      	movne	r4, #1
 800c7f8:	f888 4006 	strb.w	r4, [r8, #6]
 800c7fc:	2000      	movs	r0, #0
 800c7fe:	b001      	add	sp, #4
 800c800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c804:	4554      	cmp	r4, sl
 800c806:	d018      	beq.n	800c83a <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7e>
 800c808:	68b8      	ldr	r0, [r7, #8]
 800c80a:	462b      	mov	r3, r5
 800c80c:	6805      	ldr	r5, [r0, #0]
 800c80e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
 800c812:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800c816:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800c81a:	940a      	str	r4, [sp, #40]	; 0x28
 800c81c:	69ec      	ldr	r4, [r5, #28]
 800c81e:	4632      	mov	r2, r6
 800c820:	4649      	mov	r1, r9
 800c822:	46a4      	mov	ip, r4
 800c824:	b001      	add	sp, #4
 800c826:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c82a:	4760      	bx	ip
 800c82c:	f119 0f02 	cmn.w	r9, #2
 800c830:	d1e4      	bne.n	800c7fc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800c832:	2301      	movs	r3, #1
 800c834:	f888 3006 	strb.w	r3, [r8, #6]
 800c838:	e7e0      	b.n	800c7fc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800c83a:	4659      	mov	r1, fp
 800c83c:	4638      	mov	r0, r7
 800c83e:	f7ff ff21 	bl	800c684 <_ZNKSt9type_infoeqERKS_>
 800c842:	2800      	cmp	r0, #0
 800c844:	d0e0      	beq.n	800c808 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4c>
 800c846:	2000      	movs	r0, #0
 800c848:	f888 6005 	strb.w	r6, [r8, #5]
 800c84c:	b001      	add	sp, #4
 800c84e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c852:	bf00      	nop

0800c854 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800c854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c858:	4607      	mov	r7, r0
 800c85a:	460c      	mov	r4, r1
 800c85c:	4615      	mov	r5, r2
 800c85e:	461e      	mov	r6, r3
 800c860:	f7ff feca 	bl	800c5f8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800c864:	b108      	cbz	r0, 800c86a <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x16>
 800c866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c86a:	68b8      	ldr	r0, [r7, #8]
 800c86c:	4633      	mov	r3, r6
 800c86e:	6806      	ldr	r6, [r0, #0]
 800c870:	4621      	mov	r1, r4
 800c872:	69b4      	ldr	r4, [r6, #24]
 800c874:	462a      	mov	r2, r5
 800c876:	46a4      	mov	ip, r4
 800c878:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c87c:	4760      	bx	ip
 800c87e:	bf00      	nop

0800c880 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800c880:	b570      	push	{r4, r5, r6, lr}
 800c882:	4b3c      	ldr	r3, [pc, #240]	; (800c974 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800c884:	b082      	sub	sp, #8
 800c886:	781a      	ldrb	r2, [r3, #0]
 800c888:	2a00      	cmp	r2, #0
 800c88a:	d135      	bne.n	800c8f8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x78>
 800c88c:	2401      	movs	r4, #1
 800c88e:	701c      	strb	r4, [r3, #0]
 800c890:	f000 f91e 	bl	800cad0 <__cxa_current_exception_type>
 800c894:	2800      	cmp	r0, #0
 800c896:	d05b      	beq.n	800c950 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xd0>
 800c898:	2200      	movs	r2, #0
 800c89a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800c89e:	6844      	ldr	r4, [r0, #4]
 800c8a0:	4d35      	ldr	r5, [pc, #212]	; (800c978 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800c8a2:	7823      	ldrb	r3, [r4, #0]
 800c8a4:	2b2a      	cmp	r3, #42	; 0x2a
 800c8a6:	bf08      	it	eq
 800c8a8:	3401      	addeq	r4, #1
 800c8aa:	ab02      	add	r3, sp, #8
 800c8ac:	f843 1d04 	str.w	r1, [r3, #-4]!
 800c8b0:	4620      	mov	r0, r4
 800c8b2:	4611      	mov	r1, r2
 800c8b4:	f7f9 ff2a 	bl	800670c <__cxa_demangle>
 800c8b8:	682b      	ldr	r3, [r5, #0]
 800c8ba:	4606      	mov	r6, r0
 800c8bc:	68db      	ldr	r3, [r3, #12]
 800c8be:	2230      	movs	r2, #48	; 0x30
 800c8c0:	2101      	movs	r1, #1
 800c8c2:	482e      	ldr	r0, [pc, #184]	; (800c97c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800c8c4:	f000 fea4 	bl	800d610 <fwrite>
 800c8c8:	9b01      	ldr	r3, [sp, #4]
 800c8ca:	b17b      	cbz	r3, 800c8ec <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 800c8cc:	682b      	ldr	r3, [r5, #0]
 800c8ce:	4620      	mov	r0, r4
 800c8d0:	68d9      	ldr	r1, [r3, #12]
 800c8d2:	f000 fcd7 	bl	800d284 <fputs>
 800c8d6:	682b      	ldr	r3, [r5, #0]
 800c8d8:	2202      	movs	r2, #2
 800c8da:	68db      	ldr	r3, [r3, #12]
 800c8dc:	2101      	movs	r1, #1
 800c8de:	4828      	ldr	r0, [pc, #160]	; (800c980 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800c8e0:	f000 fe96 	bl	800d610 <fwrite>
 800c8e4:	9b01      	ldr	r3, [sp, #4]
 800c8e6:	b18b      	cbz	r3, 800c90c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800c8e8:	f7ff f9f2 	bl	800bcd0 <__cxa_rethrow>
 800c8ec:	682b      	ldr	r3, [r5, #0]
 800c8ee:	4630      	mov	r0, r6
 800c8f0:	68d9      	ldr	r1, [r3, #12]
 800c8f2:	f000 fcc7 	bl	800d284 <fputs>
 800c8f6:	e7ee      	b.n	800c8d6 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x56>
 800c8f8:	4b1f      	ldr	r3, [pc, #124]	; (800c978 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800c8fa:	221d      	movs	r2, #29
 800c8fc:	681b      	ldr	r3, [r3, #0]
 800c8fe:	2101      	movs	r1, #1
 800c900:	68db      	ldr	r3, [r3, #12]
 800c902:	4820      	ldr	r0, [pc, #128]	; (800c984 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800c904:	f000 fe84 	bl	800d610 <fwrite>
 800c908:	f000 fc20 	bl	800d14c <abort>
 800c90c:	4630      	mov	r0, r6
 800c90e:	f000 ff29 	bl	800d764 <free>
 800c912:	e7e9      	b.n	800c8e8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x68>
 800c914:	2901      	cmp	r1, #1
 800c916:	460c      	mov	r4, r1
 800c918:	d127      	bne.n	800c96a <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xea>
 800c91a:	f7fe ffe9 	bl	800b8f0 <__cxa_begin_catch>
 800c91e:	6803      	ldr	r3, [r0, #0]
 800c920:	689b      	ldr	r3, [r3, #8]
 800c922:	4798      	blx	r3
 800c924:	682b      	ldr	r3, [r5, #0]
 800c926:	4606      	mov	r6, r0
 800c928:	4621      	mov	r1, r4
 800c92a:	68db      	ldr	r3, [r3, #12]
 800c92c:	220b      	movs	r2, #11
 800c92e:	4816      	ldr	r0, [pc, #88]	; (800c988 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800c930:	f000 fe6e 	bl	800d610 <fwrite>
 800c934:	682b      	ldr	r3, [r5, #0]
 800c936:	4630      	mov	r0, r6
 800c938:	68d9      	ldr	r1, [r3, #12]
 800c93a:	f000 fca3 	bl	800d284 <fputs>
 800c93e:	682b      	ldr	r3, [r5, #0]
 800c940:	200a      	movs	r0, #10
 800c942:	68d9      	ldr	r1, [r3, #12]
 800c944:	f000 fc48 	bl	800d1d8 <fputc>
 800c948:	f7ff f812 	bl	800b970 <__cxa_end_catch>
 800c94c:	f000 fbfe 	bl	800d14c <abort>
 800c950:	4b09      	ldr	r3, [pc, #36]	; (800c978 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800c952:	4621      	mov	r1, r4
 800c954:	681b      	ldr	r3, [r3, #0]
 800c956:	222d      	movs	r2, #45	; 0x2d
 800c958:	68db      	ldr	r3, [r3, #12]
 800c95a:	480c      	ldr	r0, [pc, #48]	; (800c98c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10c>)
 800c95c:	f000 fe58 	bl	800d610 <fwrite>
 800c960:	e7f4      	b.n	800c94c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xcc>
 800c962:	f7ff f805 	bl	800b970 <__cxa_end_catch>
 800c966:	f7ff fa0f 	bl	800bd88 <__cxa_end_cleanup>
 800c96a:	f7fe ffc1 	bl	800b8f0 <__cxa_begin_catch>
 800c96e:	f7fe ffff 	bl	800b970 <__cxa_end_catch>
 800c972:	e7eb      	b.n	800c94c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xcc>
 800c974:	2000091c 	.word	0x2000091c
 800c978:	20000020 	.word	0x20000020
 800c97c:	08011ddc 	.word	0x08011ddc
 800c980:	08011e10 	.word	0x08011e10
 800c984:	08011dbc 	.word	0x08011dbc
 800c988:	08011e44 	.word	0x08011e44
 800c98c:	08011e14 	.word	0x08011e14

0800c990 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800c990:	7803      	ldrb	r3, [r0, #0]
 800c992:	2b47      	cmp	r3, #71	; 0x47
 800c994:	d001      	beq.n	800c99a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800c996:	2000      	movs	r0, #0
 800c998:	4770      	bx	lr
 800c99a:	7843      	ldrb	r3, [r0, #1]
 800c99c:	2b4e      	cmp	r3, #78	; 0x4e
 800c99e:	d1fa      	bne.n	800c996 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c9a0:	7883      	ldrb	r3, [r0, #2]
 800c9a2:	2b55      	cmp	r3, #85	; 0x55
 800c9a4:	d1f7      	bne.n	800c996 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c9a6:	78c3      	ldrb	r3, [r0, #3]
 800c9a8:	2b43      	cmp	r3, #67	; 0x43
 800c9aa:	d1f4      	bne.n	800c996 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c9ac:	7903      	ldrb	r3, [r0, #4]
 800c9ae:	2b43      	cmp	r3, #67	; 0x43
 800c9b0:	d1f1      	bne.n	800c996 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c9b2:	7943      	ldrb	r3, [r0, #5]
 800c9b4:	2b2b      	cmp	r3, #43	; 0x2b
 800c9b6:	d1ee      	bne.n	800c996 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c9b8:	7983      	ldrb	r3, [r0, #6]
 800c9ba:	2b2b      	cmp	r3, #43	; 0x2b
 800c9bc:	d1eb      	bne.n	800c996 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c9be:	79c0      	ldrb	r0, [r0, #7]
 800c9c0:	2801      	cmp	r0, #1
 800c9c2:	bf8c      	ite	hi
 800c9c4:	2000      	movhi	r0, #0
 800c9c6:	2001      	movls	r0, #1
 800c9c8:	4770      	bx	lr
 800c9ca:	bf00      	nop

0800c9cc <__cxa_call_terminate>:
 800c9cc:	b510      	push	{r4, lr}
 800c9ce:	b130      	cbz	r0, 800c9de <__cxa_call_terminate+0x12>
 800c9d0:	4604      	mov	r4, r0
 800c9d2:	f7fe ff8d 	bl	800b8f0 <__cxa_begin_catch>
 800c9d6:	4620      	mov	r0, r4
 800c9d8:	f7ff ffda 	bl	800c990 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c9dc:	b908      	cbnz	r0, 800c9e2 <__cxa_call_terminate+0x16>
 800c9de:	f7ff f821 	bl	800ba24 <_ZSt9terminatev>
 800c9e2:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800c9e6:	f7ff f809 	bl	800b9fc <_ZN10__cxxabiv111__terminateEPFvvE>
 800c9ea:	bf00      	nop

0800c9ec <__cxa_call_unexpected>:
 800c9ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9f0:	b085      	sub	sp, #20
 800c9f2:	4602      	mov	r2, r0
 800c9f4:	f7ff ffcc 	bl	800c990 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c9f8:	b168      	cbz	r0, 800ca16 <__cxa_call_unexpected+0x2a>
 800c9fa:	f852 4c18 	ldr.w	r4, [r2, #-24]
 800c9fe:	4610      	mov	r0, r2
 800ca00:	f852 5c14 	ldr.w	r5, [r2, #-20]
 800ca04:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800ca06:	6b17      	ldr	r7, [r2, #48]	; 0x30
 800ca08:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 800ca0c:	f7fe ff70 	bl	800b8f0 <__cxa_begin_catch>
 800ca10:	4620      	mov	r0, r4
 800ca12:	f7ff f811 	bl	800ba38 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800ca16:	4610      	mov	r0, r2
 800ca18:	f7fe ff6a 	bl	800b8f0 <__cxa_begin_catch>
 800ca1c:	f7ff f810 	bl	800ba40 <_ZSt10unexpectedv>
 800ca20:	f7fe ff66 	bl	800b8f0 <__cxa_begin_catch>
 800ca24:	f7fe fffe 	bl	800ba24 <_ZSt9terminatev>
 800ca28:	f7fe ff62 	bl	800b8f0 <__cxa_begin_catch>
 800ca2c:	f7ff f9a4 	bl	800bd78 <__cxa_get_globals_fast>
 800ca30:	6803      	ldr	r3, [r0, #0]
 800ca32:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800ca36:	2a01      	cmp	r2, #1
 800ca38:	d037      	beq.n	800caaa <__cxa_call_unexpected+0xbe>
 800ca3a:	f103 0278 	add.w	r2, r3, #120	; 0x78
 800ca3e:	f04f 0800 	mov.w	r8, #0
 800ca42:	464c      	mov	r4, r9
 800ca44:	46c1      	mov	r9, r8
 800ca46:	f10d 0a10 	add.w	sl, sp, #16
 800ca4a:	3320      	adds	r3, #32
 800ca4c:	f027 0b03 	bic.w	fp, r7, #3
 800ca50:	9301      	str	r3, [sp, #4]
 800ca52:	f84a 2d08 	str.w	r2, [sl, #-8]!
 800ca56:	45b1      	cmp	r9, r6
 800ca58:	da1b      	bge.n	800ca92 <__cxa_call_unexpected+0xa6>
 800ca5a:	6827      	ldr	r7, [r4, #0]
 800ca5c:	b107      	cbz	r7, 800ca60 <__cxa_call_unexpected+0x74>
 800ca5e:	4427      	add	r7, r4
 800ca60:	4653      	mov	r3, sl
 800ca62:	2200      	movs	r2, #0
 800ca64:	4639      	mov	r1, r7
 800ca66:	9801      	ldr	r0, [sp, #4]
 800ca68:	f7ff f994 	bl	800bd94 <__cxa_type_match>
 800ca6c:	bb10      	cbnz	r0, 800cab4 <__cxa_call_unexpected+0xc8>
 800ca6e:	683b      	ldr	r3, [r7, #0]
 800ca70:	aa04      	add	r2, sp, #16
 800ca72:	691b      	ldr	r3, [r3, #16]
 800ca74:	f842 0d04 	str.w	r0, [r2, #-4]!
 800ca78:	9300      	str	r3, [sp, #0]
 800ca7a:	4638      	mov	r0, r7
 800ca7c:	2301      	movs	r3, #1
 800ca7e:	4911      	ldr	r1, [pc, #68]	; (800cac4 <__cxa_call_unexpected+0xd8>)
 800ca80:	9f00      	ldr	r7, [sp, #0]
 800ca82:	47b8      	blx	r7
 800ca84:	2800      	cmp	r0, #0
 800ca86:	bf18      	it	ne
 800ca88:	4680      	movne	r8, r0
 800ca8a:	f109 0901 	add.w	r9, r9, #1
 800ca8e:	445c      	add	r4, fp
 800ca90:	e7e1      	b.n	800ca56 <__cxa_call_unexpected+0x6a>
 800ca92:	f1b8 0f00 	cmp.w	r8, #0
 800ca96:	d00a      	beq.n	800caae <__cxa_call_unexpected+0xc2>
 800ca98:	2004      	movs	r0, #4
 800ca9a:	f7ff f87b 	bl	800bb94 <__cxa_allocate_exception>
 800ca9e:	4b0a      	ldr	r3, [pc, #40]	; (800cac8 <__cxa_call_unexpected+0xdc>)
 800caa0:	4a0a      	ldr	r2, [pc, #40]	; (800cacc <__cxa_call_unexpected+0xe0>)
 800caa2:	6003      	str	r3, [r0, #0]
 800caa4:	4907      	ldr	r1, [pc, #28]	; (800cac4 <__cxa_call_unexpected+0xd8>)
 800caa6:	f7ff f8d3 	bl	800bc50 <__cxa_throw>
 800caaa:	681a      	ldr	r2, [r3, #0]
 800caac:	e7c7      	b.n	800ca3e <__cxa_call_unexpected+0x52>
 800caae:	4628      	mov	r0, r5
 800cab0:	f7fe ffa4 	bl	800b9fc <_ZN10__cxxabiv111__terminateEPFvvE>
 800cab4:	f7ff f90c 	bl	800bcd0 <__cxa_rethrow>
 800cab8:	f7fe ff5a 	bl	800b970 <__cxa_end_catch>
 800cabc:	f7fe ff58 	bl	800b970 <__cxa_end_catch>
 800cac0:	f7ff f962 	bl	800bd88 <__cxa_end_cleanup>
 800cac4:	08011ccc 	.word	0x08011ccc
 800cac8:	08011d50 	.word	0x08011d50
 800cacc:	0800c735 	.word	0x0800c735

0800cad0 <__cxa_current_exception_type>:
 800cad0:	b508      	push	{r3, lr}
 800cad2:	f7ff f955 	bl	800bd80 <__cxa_get_globals>
 800cad6:	6800      	ldr	r0, [r0, #0]
 800cad8:	b130      	cbz	r0, 800cae8 <__cxa_current_exception_type+0x18>
 800cada:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800cade:	2b01      	cmp	r3, #1
 800cae0:	bf04      	itt	eq
 800cae2:	6800      	ldreq	r0, [r0, #0]
 800cae4:	3878      	subeq	r0, #120	; 0x78
 800cae6:	6800      	ldr	r0, [r0, #0]
 800cae8:	bd08      	pop	{r3, pc}
 800caea:	bf00      	nop

0800caec <_ZNKSt11logic_error4whatEv>:
 800caec:	6840      	ldr	r0, [r0, #4]
 800caee:	4770      	bx	lr

0800caf0 <_ZNSt11logic_errorD1Ev>:
 800caf0:	b510      	push	{r4, lr}
 800caf2:	4604      	mov	r4, r0
 800caf4:	6843      	ldr	r3, [r0, #4]
 800caf6:	4a0c      	ldr	r2, [pc, #48]	; (800cb28 <_ZNSt11logic_errorD1Ev+0x38>)
 800caf8:	490c      	ldr	r1, [pc, #48]	; (800cb2c <_ZNSt11logic_errorD1Ev+0x3c>)
 800cafa:	f1a3 000c 	sub.w	r0, r3, #12
 800cafe:	4290      	cmp	r0, r2
 800cb00:	b082      	sub	sp, #8
 800cb02:	6021      	str	r1, [r4, #0]
 800cb04:	d105      	bne.n	800cb12 <_ZNSt11logic_errorD1Ev+0x22>
 800cb06:	4620      	mov	r0, r4
 800cb08:	f7ff fe12 	bl	800c730 <_ZNSt9exceptionD1Ev>
 800cb0c:	4620      	mov	r0, r4
 800cb0e:	b002      	add	sp, #8
 800cb10:	bd10      	pop	{r4, pc}
 800cb12:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800cb16:	1e51      	subs	r1, r2, #1
 800cb18:	2a00      	cmp	r2, #0
 800cb1a:	f843 1c04 	str.w	r1, [r3, #-4]
 800cb1e:	dcf2      	bgt.n	800cb06 <_ZNSt11logic_errorD1Ev+0x16>
 800cb20:	a901      	add	r1, sp, #4
 800cb22:	f000 f9c7 	bl	800ceb4 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800cb26:	e7ee      	b.n	800cb06 <_ZNSt11logic_errorD1Ev+0x16>
 800cb28:	20000950 	.word	0x20000950
 800cb2c:	080126e4 	.word	0x080126e4

0800cb30 <_ZNSt11logic_errorD0Ev>:
 800cb30:	b510      	push	{r4, lr}
 800cb32:	4604      	mov	r4, r0
 800cb34:	f7ff ffdc 	bl	800caf0 <_ZNSt11logic_errorD1Ev>
 800cb38:	4620      	mov	r0, r4
 800cb3a:	f7fe fed7 	bl	800b8ec <_ZdlPv>
 800cb3e:	4620      	mov	r0, r4
 800cb40:	bd10      	pop	{r4, pc}
 800cb42:	bf00      	nop

0800cb44 <_ZNSt12length_errorD1Ev>:
 800cb44:	b510      	push	{r4, lr}
 800cb46:	4604      	mov	r4, r0
 800cb48:	4b02      	ldr	r3, [pc, #8]	; (800cb54 <_ZNSt12length_errorD1Ev+0x10>)
 800cb4a:	6003      	str	r3, [r0, #0]
 800cb4c:	f7ff ffd0 	bl	800caf0 <_ZNSt11logic_errorD1Ev>
 800cb50:	4620      	mov	r0, r4
 800cb52:	bd10      	pop	{r4, pc}
 800cb54:	080126f8 	.word	0x080126f8

0800cb58 <_ZNSt12length_errorD0Ev>:
 800cb58:	b510      	push	{r4, lr}
 800cb5a:	4604      	mov	r4, r0
 800cb5c:	4b04      	ldr	r3, [pc, #16]	; (800cb70 <_ZNSt12length_errorD0Ev+0x18>)
 800cb5e:	6003      	str	r3, [r0, #0]
 800cb60:	f7ff ffc6 	bl	800caf0 <_ZNSt11logic_errorD1Ev>
 800cb64:	4620      	mov	r0, r4
 800cb66:	f7fe fec1 	bl	800b8ec <_ZdlPv>
 800cb6a:	4620      	mov	r0, r4
 800cb6c:	bd10      	pop	{r4, pc}
 800cb6e:	bf00      	nop
 800cb70:	080126f8 	.word	0x080126f8

0800cb74 <_ZNK12_GLOBAL__N_122generic_error_category4nameEv>:
 800cb74:	4800      	ldr	r0, [pc, #0]	; (800cb78 <_ZNK12_GLOBAL__N_122generic_error_category4nameEv+0x4>)
 800cb76:	4770      	bx	lr
 800cb78:	0801270c 	.word	0x0801270c

0800cb7c <_ZNK12_GLOBAL__N_121system_error_category4nameEv>:
 800cb7c:	4800      	ldr	r0, [pc, #0]	; (800cb80 <_ZNK12_GLOBAL__N_121system_error_category4nameEv+0x4>)
 800cb7e:	4770      	bx	lr
 800cb80:	08012704 	.word	0x08012704

0800cb84 <_ZNKSt3_V214error_category23default_error_conditionEi>:
 800cb84:	6002      	str	r2, [r0, #0]
 800cb86:	6041      	str	r1, [r0, #4]
 800cb88:	4770      	bx	lr
 800cb8a:	bf00      	nop

0800cb8c <_ZNKSt3_V214error_category10equivalentERKSt10error_codei>:
 800cb8c:	684b      	ldr	r3, [r1, #4]
 800cb8e:	4283      	cmp	r3, r0
 800cb90:	d001      	beq.n	800cb96 <_ZNKSt3_V214error_category10equivalentERKSt10error_codei+0xa>
 800cb92:	2000      	movs	r0, #0
 800cb94:	4770      	bx	lr
 800cb96:	6808      	ldr	r0, [r1, #0]
 800cb98:	1a80      	subs	r0, r0, r2
 800cb9a:	fab0 f080 	clz	r0, r0
 800cb9e:	0940      	lsrs	r0, r0, #5
 800cba0:	4770      	bx	lr
 800cba2:	bf00      	nop

0800cba4 <_ZN12_GLOBAL__N_121system_error_categoryD1Ev>:
 800cba4:	4770      	bx	lr
 800cba6:	bf00      	nop

0800cba8 <_ZN12_GLOBAL__N_122generic_error_categoryD1Ev>:
 800cba8:	4770      	bx	lr
 800cbaa:	bf00      	nop

0800cbac <_ZN12_GLOBAL__N_121system_error_categoryD0Ev>:
 800cbac:	b510      	push	{r4, lr}
 800cbae:	4604      	mov	r4, r0
 800cbb0:	f7fe fe9c 	bl	800b8ec <_ZdlPv>
 800cbb4:	4620      	mov	r0, r4
 800cbb6:	bd10      	pop	{r4, pc}

0800cbb8 <_ZN12_GLOBAL__N_122generic_error_categoryD0Ev>:
 800cbb8:	b510      	push	{r4, lr}
 800cbba:	4604      	mov	r4, r0
 800cbbc:	f7fe fe96 	bl	800b8ec <_ZdlPv>
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	bd10      	pop	{r4, pc}

0800cbc4 <_ZNKSt3_V214error_category10_M_messageB5cxx11Ei>:
 800cbc4:	b510      	push	{r4, lr}
 800cbc6:	4604      	mov	r4, r0
 800cbc8:	680b      	ldr	r3, [r1, #0]
 800cbca:	b086      	sub	sp, #24
 800cbcc:	4668      	mov	r0, sp
 800cbce:	691b      	ldr	r3, [r3, #16]
 800cbd0:	4798      	blx	r3
 800cbd2:	e89d 0006 	ldmia.w	sp, {r1, r2}
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	f000 f9c2 	bl	800cf60 <_ZNSt12__cow_stringC1EPKcj>
 800cbdc:	9800      	ldr	r0, [sp, #0]
 800cbde:	ab02      	add	r3, sp, #8
 800cbe0:	4298      	cmp	r0, r3
 800cbe2:	d001      	beq.n	800cbe8 <_ZNKSt3_V214error_category10_M_messageB5cxx11Ei+0x24>
 800cbe4:	f7fe fe82 	bl	800b8ec <_ZdlPv>
 800cbe8:	4620      	mov	r0, r4
 800cbea:	b006      	add	sp, #24
 800cbec:	bd10      	pop	{r4, pc}
 800cbee:	9800      	ldr	r0, [sp, #0]
 800cbf0:	ab02      	add	r3, sp, #8
 800cbf2:	4298      	cmp	r0, r3
 800cbf4:	d001      	beq.n	800cbfa <_ZNKSt3_V214error_category10_M_messageB5cxx11Ei+0x36>
 800cbf6:	f7fe fe79 	bl	800b8ec <_ZdlPv>
 800cbfa:	f7ff f8c5 	bl	800bd88 <__cxa_end_cleanup>
 800cbfe:	bf00      	nop

0800cc00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27>:
 800cc00:	b570      	push	{r4, r5, r6, lr}
 800cc02:	4605      	mov	r5, r0
 800cc04:	b082      	sub	sp, #8
 800cc06:	b301      	cbz	r1, 800cc4a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x4a>
 800cc08:	1a54      	subs	r4, r2, r1
 800cc0a:	2c0f      	cmp	r4, #15
 800cc0c:	460e      	mov	r6, r1
 800cc0e:	9401      	str	r4, [sp, #4]
 800cc10:	d80a      	bhi.n	800cc28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x28>
 800cc12:	682b      	ldr	r3, [r5, #0]
 800cc14:	2c01      	cmp	r4, #1
 800cc16:	4618      	mov	r0, r3
 800cc18:	d013      	beq.n	800cc42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x42>
 800cc1a:	b964      	cbnz	r4, 800cc36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x36>
 800cc1c:	2100      	movs	r1, #0
 800cc1e:	9a01      	ldr	r2, [sp, #4]
 800cc20:	606a      	str	r2, [r5, #4]
 800cc22:	5499      	strb	r1, [r3, r2]
 800cc24:	b002      	add	sp, #8
 800cc26:	bd70      	pop	{r4, r5, r6, pc}
 800cc28:	2200      	movs	r2, #0
 800cc2a:	a901      	add	r1, sp, #4
 800cc2c:	f000 f868 	bl	800cd00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 800cc30:	9b01      	ldr	r3, [sp, #4]
 800cc32:	6028      	str	r0, [r5, #0]
 800cc34:	60ab      	str	r3, [r5, #8]
 800cc36:	4622      	mov	r2, r4
 800cc38:	4631      	mov	r1, r6
 800cc3a:	f000 ffd6 	bl	800dbea <memcpy>
 800cc3e:	682b      	ldr	r3, [r5, #0]
 800cc40:	e7ec      	b.n	800cc1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x1c>
 800cc42:	7832      	ldrb	r2, [r6, #0]
 800cc44:	701a      	strb	r2, [r3, #0]
 800cc46:	682b      	ldr	r3, [r5, #0]
 800cc48:	e7e8      	b.n	800cc1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x1c>
 800cc4a:	b112      	cbz	r2, 800cc52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x52>
 800cc4c:	4802      	ldr	r0, [pc, #8]	; (800cc58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x58>)
 800cc4e:	f7ff fd3f 	bl	800c6d0 <_ZSt19__throw_logic_errorPKc>
 800cc52:	9201      	str	r2, [sp, #4]
 800cc54:	6803      	ldr	r3, [r0, #0]
 800cc56:	e7e1      	b.n	800cc1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27+0x1c>
 800cc58:	08012714 	.word	0x08012714

0800cc5c <_ZNK12_GLOBAL__N_121system_error_category7messageB5cxx11Ei>:
 800cc5c:	b538      	push	{r3, r4, r5, lr}
 800cc5e:	4604      	mov	r4, r0
 800cc60:	4610      	mov	r0, r2
 800cc62:	f001 fc6f 	bl	800e544 <strerror>
 800cc66:	f104 0308 	add.w	r3, r4, #8
 800cc6a:	6023      	str	r3, [r4, #0]
 800cc6c:	4605      	mov	r5, r0
 800cc6e:	b140      	cbz	r0, 800cc82 <_ZNK12_GLOBAL__N_121system_error_category7messageB5cxx11Ei+0x26>
 800cc70:	f7f9 fdc4 	bl	80067fc <strlen>
 800cc74:	4629      	mov	r1, r5
 800cc76:	182a      	adds	r2, r5, r0
 800cc78:	4620      	mov	r0, r4
 800cc7a:	f7ff ffc1 	bl	800cc00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27>
 800cc7e:	4620      	mov	r0, r4
 800cc80:	bd38      	pop	{r3, r4, r5, pc}
 800cc82:	4620      	mov	r0, r4
 800cc84:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800cc88:	4629      	mov	r1, r5
 800cc8a:	f7ff ffb9 	bl	800cc00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.27>
 800cc8e:	4620      	mov	r0, r4
 800cc90:	bd38      	pop	{r3, r4, r5, pc}
 800cc92:	bf00      	nop

0800cc94 <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition>:
 800cc94:	b530      	push	{r4, r5, lr}
 800cc96:	6803      	ldr	r3, [r0, #0]
 800cc98:	4d0c      	ldr	r5, [pc, #48]	; (800cccc <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition+0x38>)
 800cc9a:	695b      	ldr	r3, [r3, #20]
 800cc9c:	b083      	sub	sp, #12
 800cc9e:	42ab      	cmp	r3, r5
 800cca0:	4614      	mov	r4, r2
 800cca2:	d10c      	bne.n	800ccbe <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition+0x2a>
 800cca4:	6863      	ldr	r3, [r4, #4]
 800cca6:	4283      	cmp	r3, r0
 800cca8:	d002      	beq.n	800ccb0 <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition+0x1c>
 800ccaa:	2000      	movs	r0, #0
 800ccac:	b003      	add	sp, #12
 800ccae:	bd30      	pop	{r4, r5, pc}
 800ccb0:	6820      	ldr	r0, [r4, #0]
 800ccb2:	1a40      	subs	r0, r0, r1
 800ccb4:	fab0 f080 	clz	r0, r0
 800ccb8:	0940      	lsrs	r0, r0, #5
 800ccba:	b003      	add	sp, #12
 800ccbc:	bd30      	pop	{r4, r5, pc}
 800ccbe:	460a      	mov	r2, r1
 800ccc0:	4601      	mov	r1, r0
 800ccc2:	4668      	mov	r0, sp
 800ccc4:	4798      	blx	r3
 800ccc6:	9900      	ldr	r1, [sp, #0]
 800ccc8:	9801      	ldr	r0, [sp, #4]
 800ccca:	e7eb      	b.n	800cca4 <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition+0x10>
 800cccc:	0800cb85 	.word	0x0800cb85

0800ccd0 <_GLOBAL__sub_I__ZNSt3_V214error_categoryD2Ev>:
 800ccd0:	b510      	push	{r4, lr}
 800ccd2:	4c06      	ldr	r4, [pc, #24]	; (800ccec <_GLOBAL__sub_I__ZNSt3_V214error_categoryD2Ev+0x1c>)
 800ccd4:	4906      	ldr	r1, [pc, #24]	; (800ccf0 <_GLOBAL__sub_I__ZNSt3_V214error_categoryD2Ev+0x20>)
 800ccd6:	4622      	mov	r2, r4
 800ccd8:	4806      	ldr	r0, [pc, #24]	; (800ccf4 <_GLOBAL__sub_I__ZNSt3_V214error_categoryD2Ev+0x24>)
 800ccda:	f000 f94b 	bl	800cf74 <__aeabi_atexit>
 800ccde:	4622      	mov	r2, r4
 800cce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cce4:	4904      	ldr	r1, [pc, #16]	; (800ccf8 <_GLOBAL__sub_I__ZNSt3_V214error_categoryD2Ev+0x28>)
 800cce6:	4805      	ldr	r0, [pc, #20]	; (800ccfc <_GLOBAL__sub_I__ZNSt3_V214error_categoryD2Ev+0x2c>)
 800cce8:	f000 b944 	b.w	800cf74 <__aeabi_atexit>
 800ccec:	20000000 	.word	0x20000000
 800ccf0:	0800cba9 	.word	0x0800cba9
 800ccf4:	2000001c 	.word	0x2000001c
 800ccf8:	0800cba5 	.word	0x0800cba5
 800ccfc:	20000018 	.word	0x20000018

0800cd00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 800cd00:	6808      	ldr	r0, [r1, #0]
 800cd02:	b508      	push	{r3, lr}
 800cd04:	2800      	cmp	r0, #0
 800cd06:	db1a      	blt.n	800cd3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x3e>
 800cd08:	4290      	cmp	r0, r2
 800cd0a:	d90a      	bls.n	800cd22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x22>
 800cd0c:	0052      	lsls	r2, r2, #1
 800cd0e:	4290      	cmp	r0, r2
 800cd10:	d207      	bcs.n	800cd22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x22>
 800cd12:	2a00      	cmp	r2, #0
 800cd14:	db0a      	blt.n	800cd2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 800cd16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cd1a:	600a      	str	r2, [r1, #0]
 800cd1c:	1c50      	adds	r0, r2, #1
 800cd1e:	f7fe bea9 	b.w	800ba74 <_Znwj>
 800cd22:	3001      	adds	r0, #1
 800cd24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cd28:	f7fe bea4 	b.w	800ba74 <_Znwj>
 800cd2c:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800cd30:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 800cd34:	600b      	str	r3, [r1, #0]
 800cd36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cd3a:	f7fe be9b 	b.w	800ba74 <_Znwj>
 800cd3e:	4801      	ldr	r0, [pc, #4]	; (800cd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x44>)
 800cd40:	f7ff fcde 	bl	800c700 <_ZSt20__throw_length_errorPKc>
 800cd44:	08012824 	.word	0x08012824

0800cd48 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
 800cd48:	4b24      	ldr	r3, [pc, #144]	; (800cddc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x94>)
 800cd4a:	681a      	ldr	r2, [r3, #0]
 800cd4c:	07d0      	lsls	r0, r2, #31
 800cd4e:	bf5c      	itt	pl
 800cd50:	2201      	movpl	r2, #1
 800cd52:	601a      	strpl	r2, [r3, #0]
 800cd54:	4b22      	ldr	r3, [pc, #136]	; (800cde0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>)
 800cd56:	681a      	ldr	r2, [r3, #0]
 800cd58:	07d1      	lsls	r1, r2, #31
 800cd5a:	bf5c      	itt	pl
 800cd5c:	2201      	movpl	r2, #1
 800cd5e:	601a      	strpl	r2, [r3, #0]
 800cd60:	4b20      	ldr	r3, [pc, #128]	; (800cde4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x9c>)
 800cd62:	681a      	ldr	r2, [r3, #0]
 800cd64:	07d2      	lsls	r2, r2, #31
 800cd66:	bf5c      	itt	pl
 800cd68:	2201      	movpl	r2, #1
 800cd6a:	601a      	strpl	r2, [r3, #0]
 800cd6c:	4b1e      	ldr	r3, [pc, #120]	; (800cde8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa0>)
 800cd6e:	681a      	ldr	r2, [r3, #0]
 800cd70:	07d0      	lsls	r0, r2, #31
 800cd72:	bf5c      	itt	pl
 800cd74:	2201      	movpl	r2, #1
 800cd76:	601a      	strpl	r2, [r3, #0]
 800cd78:	4b1c      	ldr	r3, [pc, #112]	; (800cdec <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa4>)
 800cd7a:	681a      	ldr	r2, [r3, #0]
 800cd7c:	07d1      	lsls	r1, r2, #31
 800cd7e:	bf5c      	itt	pl
 800cd80:	2201      	movpl	r2, #1
 800cd82:	601a      	strpl	r2, [r3, #0]
 800cd84:	4b1a      	ldr	r3, [pc, #104]	; (800cdf0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa8>)
 800cd86:	681a      	ldr	r2, [r3, #0]
 800cd88:	07d2      	lsls	r2, r2, #31
 800cd8a:	bf5c      	itt	pl
 800cd8c:	2201      	movpl	r2, #1
 800cd8e:	601a      	strpl	r2, [r3, #0]
 800cd90:	4b18      	ldr	r3, [pc, #96]	; (800cdf4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xac>)
 800cd92:	681a      	ldr	r2, [r3, #0]
 800cd94:	07d0      	lsls	r0, r2, #31
 800cd96:	bf5c      	itt	pl
 800cd98:	2201      	movpl	r2, #1
 800cd9a:	601a      	strpl	r2, [r3, #0]
 800cd9c:	4b16      	ldr	r3, [pc, #88]	; (800cdf8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb0>)
 800cd9e:	681a      	ldr	r2, [r3, #0]
 800cda0:	07d1      	lsls	r1, r2, #31
 800cda2:	bf5c      	itt	pl
 800cda4:	2201      	movpl	r2, #1
 800cda6:	601a      	strpl	r2, [r3, #0]
 800cda8:	4b14      	ldr	r3, [pc, #80]	; (800cdfc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb4>)
 800cdaa:	681a      	ldr	r2, [r3, #0]
 800cdac:	07d2      	lsls	r2, r2, #31
 800cdae:	bf5c      	itt	pl
 800cdb0:	2201      	movpl	r2, #1
 800cdb2:	601a      	strpl	r2, [r3, #0]
 800cdb4:	4b12      	ldr	r3, [pc, #72]	; (800ce00 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb8>)
 800cdb6:	681a      	ldr	r2, [r3, #0]
 800cdb8:	07d0      	lsls	r0, r2, #31
 800cdba:	bf5c      	itt	pl
 800cdbc:	2201      	movpl	r2, #1
 800cdbe:	601a      	strpl	r2, [r3, #0]
 800cdc0:	4b10      	ldr	r3, [pc, #64]	; (800ce04 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xbc>)
 800cdc2:	681a      	ldr	r2, [r3, #0]
 800cdc4:	07d1      	lsls	r1, r2, #31
 800cdc6:	bf5c      	itt	pl
 800cdc8:	2201      	movpl	r2, #1
 800cdca:	601a      	strpl	r2, [r3, #0]
 800cdcc:	4b0e      	ldr	r3, [pc, #56]	; (800ce08 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc0>)
 800cdce:	681a      	ldr	r2, [r3, #0]
 800cdd0:	07d2      	lsls	r2, r2, #31
 800cdd2:	bf5c      	itt	pl
 800cdd4:	2201      	movpl	r2, #1
 800cdd6:	601a      	strpl	r2, [r3, #0]
 800cdd8:	4770      	bx	lr
 800cdda:	bf00      	nop
 800cddc:	2000094c 	.word	0x2000094c
 800cde0:	20000948 	.word	0x20000948
 800cde4:	20000944 	.word	0x20000944
 800cde8:	20000940 	.word	0x20000940
 800cdec:	2000093c 	.word	0x2000093c
 800cdf0:	20000938 	.word	0x20000938
 800cdf4:	20000934 	.word	0x20000934
 800cdf8:	20000930 	.word	0x20000930
 800cdfc:	2000092c 	.word	0x2000092c
 800ce00:	20000928 	.word	0x20000928
 800ce04:	20000924 	.word	0x20000924
 800ce08:	20000920 	.word	0x20000920

0800ce0c <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
 800ce0c:	4b13      	ldr	r3, [pc, #76]	; (800ce5c <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x50>)
 800ce0e:	b510      	push	{r4, lr}
 800ce10:	4298      	cmp	r0, r3
 800ce12:	d81f      	bhi.n	800ce54 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x48>
 800ce14:	4288      	cmp	r0, r1
 800ce16:	4604      	mov	r4, r0
 800ce18:	d914      	bls.n	800ce44 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x38>
 800ce1a:	004a      	lsls	r2, r1, #1
 800ce1c:	4290      	cmp	r0, r2
 800ce1e:	bf38      	it	cc
 800ce20:	4614      	movcc	r4, r2
 800ce22:	f104 021d 	add.w	r2, r4, #29
 800ce26:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 800ce2a:	f104 000d 	add.w	r0, r4, #13
 800ce2e:	d90b      	bls.n	800ce48 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x3c>
 800ce30:	42a1      	cmp	r1, r4
 800ce32:	d209      	bcs.n	800ce48 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x3c>
 800ce34:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
 800ce38:	f3c2 020b 	ubfx	r2, r2, #0, #12
 800ce3c:	1aa4      	subs	r4, r4, r2
 800ce3e:	429c      	cmp	r4, r3
 800ce40:	bf28      	it	cs
 800ce42:	461c      	movcs	r4, r3
 800ce44:	f104 000d 	add.w	r0, r4, #13
 800ce48:	f7fe fe14 	bl	800ba74 <_Znwj>
 800ce4c:	2200      	movs	r2, #0
 800ce4e:	6044      	str	r4, [r0, #4]
 800ce50:	6082      	str	r2, [r0, #8]
 800ce52:	bd10      	pop	{r4, pc}
 800ce54:	4802      	ldr	r0, [pc, #8]	; (800ce60 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x54>)
 800ce56:	f7ff fc53 	bl	800c700 <_ZSt20__throw_length_errorPKc>
 800ce5a:	bf00      	nop
 800ce5c:	3ffffffc 	.word	0x3ffffffc
 800ce60:	08012868 	.word	0x08012868

0800ce64 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27>:
 800ce64:	b570      	push	{r4, r5, r6, lr}
 800ce66:	1a0c      	subs	r4, r1, r0
 800ce68:	4606      	mov	r6, r0
 800ce6a:	2100      	movs	r1, #0
 800ce6c:	4620      	mov	r0, r4
 800ce6e:	f7ff ffcd 	bl	800ce0c <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 800ce72:	2c01      	cmp	r4, #1
 800ce74:	4605      	mov	r5, r0
 800ce76:	f100 030c 	add.w	r3, r0, #12
 800ce7a:	d005      	beq.n	800ce88 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x24>
 800ce7c:	b984      	cbnz	r4, 800cea0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x3c>
 800ce7e:	4a0c      	ldr	r2, [pc, #48]	; (800ceb0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x4c>)
 800ce80:	4295      	cmp	r5, r2
 800ce82:	d106      	bne.n	800ce92 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x2e>
 800ce84:	4618      	mov	r0, r3
 800ce86:	bd70      	pop	{r4, r5, r6, pc}
 800ce88:	7832      	ldrb	r2, [r6, #0]
 800ce8a:	7302      	strb	r2, [r0, #12]
 800ce8c:	4a08      	ldr	r2, [pc, #32]	; (800ceb0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x4c>)
 800ce8e:	4295      	cmp	r5, r2
 800ce90:	d0f8      	beq.n	800ce84 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x20>
 800ce92:	2200      	movs	r2, #0
 800ce94:	1929      	adds	r1, r5, r4
 800ce96:	602c      	str	r4, [r5, #0]
 800ce98:	60aa      	str	r2, [r5, #8]
 800ce9a:	730a      	strb	r2, [r1, #12]
 800ce9c:	4618      	mov	r0, r3
 800ce9e:	bd70      	pop	{r4, r5, r6, pc}
 800cea0:	4618      	mov	r0, r3
 800cea2:	4631      	mov	r1, r6
 800cea4:	4622      	mov	r2, r4
 800cea6:	f000 fea0 	bl	800dbea <memcpy>
 800ceaa:	4603      	mov	r3, r0
 800ceac:	e7e7      	b.n	800ce7e <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27+0x1a>
 800ceae:	bf00      	nop
 800ceb0:	20000950 	.word	0x20000950

0800ceb4 <_ZNSs4_Rep10_M_destroyERKSaIcE>:
 800ceb4:	f7fe bd1a 	b.w	800b8ec <_ZdlPv>

0800ceb8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>:
 800ceb8:	4288      	cmp	r0, r1
 800ceba:	d002      	beq.n	800cec2 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0xa>
 800cebc:	b118      	cbz	r0, 800cec6 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0xe>
 800cebe:	f7ff bfd1 	b.w	800ce64 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.27>
 800cec2:	4804      	ldr	r0, [pc, #16]	; (800ced4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x1c>)
 800cec4:	4770      	bx	lr
 800cec6:	2900      	cmp	r1, #0
 800cec8:	d0f9      	beq.n	800cebe <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x6>
 800ceca:	b508      	push	{r3, lr}
 800cecc:	4802      	ldr	r0, [pc, #8]	; (800ced8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x20>)
 800cece:	f7ff fbff 	bl	800c6d0 <_ZSt19__throw_logic_errorPKc>
 800ced2:	bf00      	nop
 800ced4:	2000095c 	.word	0x2000095c
 800ced8:	0801283c 	.word	0x0801283c

0800cedc <_ZNSsC1EPKcjRKSaIcE>:
 800cedc:	b538      	push	{r3, r4, r5, lr}
 800cede:	460d      	mov	r5, r1
 800cee0:	4604      	mov	r4, r0
 800cee2:	4411      	add	r1, r2
 800cee4:	4628      	mov	r0, r5
 800cee6:	461a      	mov	r2, r3
 800cee8:	f04f 0300 	mov.w	r3, #0
 800ceec:	f7ff ffe4 	bl	800ceb8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
 800cef0:	6020      	str	r0, [r4, #0]
 800cef2:	4620      	mov	r0, r4
 800cef4:	bd38      	pop	{r3, r4, r5, pc}
 800cef6:	bf00      	nop

0800cef8 <_ZNSsC1EPKcRKSaIcE>:
 800cef8:	b570      	push	{r4, r5, r6, lr}
 800cefa:	4605      	mov	r5, r0
 800cefc:	4616      	mov	r6, r2
 800cefe:	460c      	mov	r4, r1
 800cf00:	b161      	cbz	r1, 800cf1c <_ZNSsC1EPKcRKSaIcE+0x24>
 800cf02:	4608      	mov	r0, r1
 800cf04:	f7f9 fc7a 	bl	80067fc <strlen>
 800cf08:	1821      	adds	r1, r4, r0
 800cf0a:	4632      	mov	r2, r6
 800cf0c:	4620      	mov	r0, r4
 800cf0e:	f04f 0300 	mov.w	r3, #0
 800cf12:	f7ff ffd1 	bl	800ceb8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
 800cf16:	6028      	str	r0, [r5, #0]
 800cf18:	4628      	mov	r0, r5
 800cf1a:	bd70      	pop	{r4, r5, r6, pc}
 800cf1c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800cf20:	e7f3      	b.n	800cf0a <_ZNSsC1EPKcRKSaIcE+0x12>
 800cf22:	bf00      	nop

0800cf24 <_ZNSt11logic_errorC1EPKc>:
 800cf24:	b510      	push	{r4, lr}
 800cf26:	4b08      	ldr	r3, [pc, #32]	; (800cf48 <_ZNSt11logic_errorC1EPKc+0x24>)
 800cf28:	b082      	sub	sp, #8
 800cf2a:	4604      	mov	r4, r0
 800cf2c:	aa01      	add	r2, sp, #4
 800cf2e:	f840 3b04 	str.w	r3, [r0], #4
 800cf32:	f7ff ffe1 	bl	800cef8 <_ZNSsC1EPKcRKSaIcE>
 800cf36:	4620      	mov	r0, r4
 800cf38:	b002      	add	sp, #8
 800cf3a:	bd10      	pop	{r4, pc}
 800cf3c:	4620      	mov	r0, r4
 800cf3e:	f7ff fbf7 	bl	800c730 <_ZNSt9exceptionD1Ev>
 800cf42:	f7fe ff21 	bl	800bd88 <__cxa_end_cleanup>
 800cf46:	bf00      	nop
 800cf48:	080126e4 	.word	0x080126e4

0800cf4c <_ZNSt12length_errorC1EPKc>:
 800cf4c:	b510      	push	{r4, lr}
 800cf4e:	4604      	mov	r4, r0
 800cf50:	f7ff ffe8 	bl	800cf24 <_ZNSt11logic_errorC1EPKc>
 800cf54:	4b01      	ldr	r3, [pc, #4]	; (800cf5c <_ZNSt12length_errorC1EPKc+0x10>)
 800cf56:	4620      	mov	r0, r4
 800cf58:	6023      	str	r3, [r4, #0]
 800cf5a:	bd10      	pop	{r4, pc}
 800cf5c:	080126f8 	.word	0x080126f8

0800cf60 <_ZNSt12__cow_stringC1EPKcj>:
 800cf60:	b510      	push	{r4, lr}
 800cf62:	4604      	mov	r4, r0
 800cf64:	b082      	sub	sp, #8
 800cf66:	ab01      	add	r3, sp, #4
 800cf68:	f7ff ffb8 	bl	800cedc <_ZNSsC1EPKcjRKSaIcE>
 800cf6c:	4620      	mov	r0, r4
 800cf6e:	b002      	add	sp, #8
 800cf70:	bd10      	pop	{r4, pc}
 800cf72:	bf00      	nop

0800cf74 <__aeabi_atexit>:
 800cf74:	460b      	mov	r3, r1
 800cf76:	4601      	mov	r1, r0
 800cf78:	4618      	mov	r0, r3
 800cf7a:	f000 b8ee 	b.w	800d15a <__cxa_atexit>
 800cf7e:	bf00      	nop

0800cf80 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 800cf80:	4b18      	ldr	r3, [pc, #96]	; (800cfe4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 800cf82:	681a      	ldr	r2, [r3, #0]
 800cf84:	07d1      	lsls	r1, r2, #31
 800cf86:	bf5c      	itt	pl
 800cf88:	2201      	movpl	r2, #1
 800cf8a:	601a      	strpl	r2, [r3, #0]
 800cf8c:	4b16      	ldr	r3, [pc, #88]	; (800cfe8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 800cf8e:	681a      	ldr	r2, [r3, #0]
 800cf90:	07d2      	lsls	r2, r2, #31
 800cf92:	bf5c      	itt	pl
 800cf94:	2201      	movpl	r2, #1
 800cf96:	601a      	strpl	r2, [r3, #0]
 800cf98:	4b14      	ldr	r3, [pc, #80]	; (800cfec <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 800cf9a:	681a      	ldr	r2, [r3, #0]
 800cf9c:	07d0      	lsls	r0, r2, #31
 800cf9e:	bf5c      	itt	pl
 800cfa0:	2201      	movpl	r2, #1
 800cfa2:	601a      	strpl	r2, [r3, #0]
 800cfa4:	4b12      	ldr	r3, [pc, #72]	; (800cff0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 800cfa6:	681a      	ldr	r2, [r3, #0]
 800cfa8:	07d1      	lsls	r1, r2, #31
 800cfaa:	bf5c      	itt	pl
 800cfac:	2201      	movpl	r2, #1
 800cfae:	601a      	strpl	r2, [r3, #0]
 800cfb0:	4b10      	ldr	r3, [pc, #64]	; (800cff4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 800cfb2:	681a      	ldr	r2, [r3, #0]
 800cfb4:	07d2      	lsls	r2, r2, #31
 800cfb6:	bf5c      	itt	pl
 800cfb8:	2201      	movpl	r2, #1
 800cfba:	601a      	strpl	r2, [r3, #0]
 800cfbc:	4b0e      	ldr	r3, [pc, #56]	; (800cff8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 800cfbe:	681a      	ldr	r2, [r3, #0]
 800cfc0:	07d0      	lsls	r0, r2, #31
 800cfc2:	bf5c      	itt	pl
 800cfc4:	2201      	movpl	r2, #1
 800cfc6:	601a      	strpl	r2, [r3, #0]
 800cfc8:	4b0c      	ldr	r3, [pc, #48]	; (800cffc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 800cfca:	681a      	ldr	r2, [r3, #0]
 800cfcc:	07d1      	lsls	r1, r2, #31
 800cfce:	bf5c      	itt	pl
 800cfd0:	2201      	movpl	r2, #1
 800cfd2:	601a      	strpl	r2, [r3, #0]
 800cfd4:	4b0a      	ldr	r3, [pc, #40]	; (800d000 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 800cfd6:	681a      	ldr	r2, [r3, #0]
 800cfd8:	07d2      	lsls	r2, r2, #31
 800cfda:	bf5c      	itt	pl
 800cfdc:	2201      	movpl	r2, #1
 800cfde:	601a      	strpl	r2, [r3, #0]
 800cfe0:	4770      	bx	lr
 800cfe2:	bf00      	nop
 800cfe4:	2000097c 	.word	0x2000097c
 800cfe8:	20000978 	.word	0x20000978
 800cfec:	20000974 	.word	0x20000974
 800cff0:	20000970 	.word	0x20000970
 800cff4:	2000096c 	.word	0x2000096c
 800cff8:	20000968 	.word	0x20000968
 800cffc:	20000964 	.word	0x20000964
 800d000:	20000960 	.word	0x20000960

0800d004 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
 800d004:	4b24      	ldr	r3, [pc, #144]	; (800d098 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x94>)
 800d006:	681a      	ldr	r2, [r3, #0]
 800d008:	07d0      	lsls	r0, r2, #31
 800d00a:	bf5c      	itt	pl
 800d00c:	2201      	movpl	r2, #1
 800d00e:	601a      	strpl	r2, [r3, #0]
 800d010:	4b22      	ldr	r3, [pc, #136]	; (800d09c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>)
 800d012:	681a      	ldr	r2, [r3, #0]
 800d014:	07d1      	lsls	r1, r2, #31
 800d016:	bf5c      	itt	pl
 800d018:	2201      	movpl	r2, #1
 800d01a:	601a      	strpl	r2, [r3, #0]
 800d01c:	4b20      	ldr	r3, [pc, #128]	; (800d0a0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x9c>)
 800d01e:	681a      	ldr	r2, [r3, #0]
 800d020:	07d2      	lsls	r2, r2, #31
 800d022:	bf5c      	itt	pl
 800d024:	2201      	movpl	r2, #1
 800d026:	601a      	strpl	r2, [r3, #0]
 800d028:	4b1e      	ldr	r3, [pc, #120]	; (800d0a4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa0>)
 800d02a:	681a      	ldr	r2, [r3, #0]
 800d02c:	07d0      	lsls	r0, r2, #31
 800d02e:	bf5c      	itt	pl
 800d030:	2201      	movpl	r2, #1
 800d032:	601a      	strpl	r2, [r3, #0]
 800d034:	4b1c      	ldr	r3, [pc, #112]	; (800d0a8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa4>)
 800d036:	681a      	ldr	r2, [r3, #0]
 800d038:	07d1      	lsls	r1, r2, #31
 800d03a:	bf5c      	itt	pl
 800d03c:	2201      	movpl	r2, #1
 800d03e:	601a      	strpl	r2, [r3, #0]
 800d040:	4b1a      	ldr	r3, [pc, #104]	; (800d0ac <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa8>)
 800d042:	681a      	ldr	r2, [r3, #0]
 800d044:	07d2      	lsls	r2, r2, #31
 800d046:	bf5c      	itt	pl
 800d048:	2201      	movpl	r2, #1
 800d04a:	601a      	strpl	r2, [r3, #0]
 800d04c:	4b18      	ldr	r3, [pc, #96]	; (800d0b0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xac>)
 800d04e:	681a      	ldr	r2, [r3, #0]
 800d050:	07d0      	lsls	r0, r2, #31
 800d052:	bf5c      	itt	pl
 800d054:	2201      	movpl	r2, #1
 800d056:	601a      	strpl	r2, [r3, #0]
 800d058:	4b16      	ldr	r3, [pc, #88]	; (800d0b4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb0>)
 800d05a:	681a      	ldr	r2, [r3, #0]
 800d05c:	07d1      	lsls	r1, r2, #31
 800d05e:	bf5c      	itt	pl
 800d060:	2201      	movpl	r2, #1
 800d062:	601a      	strpl	r2, [r3, #0]
 800d064:	4b14      	ldr	r3, [pc, #80]	; (800d0b8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb4>)
 800d066:	681a      	ldr	r2, [r3, #0]
 800d068:	07d2      	lsls	r2, r2, #31
 800d06a:	bf5c      	itt	pl
 800d06c:	2201      	movpl	r2, #1
 800d06e:	601a      	strpl	r2, [r3, #0]
 800d070:	4b12      	ldr	r3, [pc, #72]	; (800d0bc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb8>)
 800d072:	681a      	ldr	r2, [r3, #0]
 800d074:	07d0      	lsls	r0, r2, #31
 800d076:	bf5c      	itt	pl
 800d078:	2201      	movpl	r2, #1
 800d07a:	601a      	strpl	r2, [r3, #0]
 800d07c:	4b10      	ldr	r3, [pc, #64]	; (800d0c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xbc>)
 800d07e:	681a      	ldr	r2, [r3, #0]
 800d080:	07d1      	lsls	r1, r2, #31
 800d082:	bf5c      	itt	pl
 800d084:	2201      	movpl	r2, #1
 800d086:	601a      	strpl	r2, [r3, #0]
 800d088:	4b0e      	ldr	r3, [pc, #56]	; (800d0c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc0>)
 800d08a:	681a      	ldr	r2, [r3, #0]
 800d08c:	07d2      	lsls	r2, r2, #31
 800d08e:	bf5c      	itt	pl
 800d090:	2201      	movpl	r2, #1
 800d092:	601a      	strpl	r2, [r3, #0]
 800d094:	4770      	bx	lr
 800d096:	bf00      	nop
 800d098:	200009ac 	.word	0x200009ac
 800d09c:	200009a8 	.word	0x200009a8
 800d0a0:	200009a4 	.word	0x200009a4
 800d0a4:	200009a0 	.word	0x200009a0
 800d0a8:	2000099c 	.word	0x2000099c
 800d0ac:	20000998 	.word	0x20000998
 800d0b0:	20000994 	.word	0x20000994
 800d0b4:	20000990 	.word	0x20000990
 800d0b8:	2000098c 	.word	0x2000098c
 800d0bc:	20000988 	.word	0x20000988
 800d0c0:	20000984 	.word	0x20000984
 800d0c4:	20000980 	.word	0x20000980

0800d0c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 800d0c8:	4b18      	ldr	r3, [pc, #96]	; (800d12c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 800d0ca:	681a      	ldr	r2, [r3, #0]
 800d0cc:	07d1      	lsls	r1, r2, #31
 800d0ce:	bf5c      	itt	pl
 800d0d0:	2201      	movpl	r2, #1
 800d0d2:	601a      	strpl	r2, [r3, #0]
 800d0d4:	4b16      	ldr	r3, [pc, #88]	; (800d130 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 800d0d6:	681a      	ldr	r2, [r3, #0]
 800d0d8:	07d2      	lsls	r2, r2, #31
 800d0da:	bf5c      	itt	pl
 800d0dc:	2201      	movpl	r2, #1
 800d0de:	601a      	strpl	r2, [r3, #0]
 800d0e0:	4b14      	ldr	r3, [pc, #80]	; (800d134 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 800d0e2:	681a      	ldr	r2, [r3, #0]
 800d0e4:	07d0      	lsls	r0, r2, #31
 800d0e6:	bf5c      	itt	pl
 800d0e8:	2201      	movpl	r2, #1
 800d0ea:	601a      	strpl	r2, [r3, #0]
 800d0ec:	4b12      	ldr	r3, [pc, #72]	; (800d138 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 800d0ee:	681a      	ldr	r2, [r3, #0]
 800d0f0:	07d1      	lsls	r1, r2, #31
 800d0f2:	bf5c      	itt	pl
 800d0f4:	2201      	movpl	r2, #1
 800d0f6:	601a      	strpl	r2, [r3, #0]
 800d0f8:	4b10      	ldr	r3, [pc, #64]	; (800d13c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 800d0fa:	681a      	ldr	r2, [r3, #0]
 800d0fc:	07d2      	lsls	r2, r2, #31
 800d0fe:	bf5c      	itt	pl
 800d100:	2201      	movpl	r2, #1
 800d102:	601a      	strpl	r2, [r3, #0]
 800d104:	4b0e      	ldr	r3, [pc, #56]	; (800d140 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 800d106:	681a      	ldr	r2, [r3, #0]
 800d108:	07d0      	lsls	r0, r2, #31
 800d10a:	bf5c      	itt	pl
 800d10c:	2201      	movpl	r2, #1
 800d10e:	601a      	strpl	r2, [r3, #0]
 800d110:	4b0c      	ldr	r3, [pc, #48]	; (800d144 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 800d112:	681a      	ldr	r2, [r3, #0]
 800d114:	07d1      	lsls	r1, r2, #31
 800d116:	bf5c      	itt	pl
 800d118:	2201      	movpl	r2, #1
 800d11a:	601a      	strpl	r2, [r3, #0]
 800d11c:	4b0a      	ldr	r3, [pc, #40]	; (800d148 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 800d11e:	681a      	ldr	r2, [r3, #0]
 800d120:	07d2      	lsls	r2, r2, #31
 800d122:	bf5c      	itt	pl
 800d124:	2201      	movpl	r2, #1
 800d126:	601a      	strpl	r2, [r3, #0]
 800d128:	4770      	bx	lr
 800d12a:	bf00      	nop
 800d12c:	200009cc 	.word	0x200009cc
 800d130:	200009c8 	.word	0x200009c8
 800d134:	200009c4 	.word	0x200009c4
 800d138:	200009c0 	.word	0x200009c0
 800d13c:	200009bc 	.word	0x200009bc
 800d140:	200009b8 	.word	0x200009b8
 800d144:	200009b4 	.word	0x200009b4
 800d148:	200009b0 	.word	0x200009b0

0800d14c <abort>:
 800d14c:	b508      	push	{r3, lr}
 800d14e:	2006      	movs	r0, #6
 800d150:	f000 ff8e 	bl	800e070 <raise>
 800d154:	2001      	movs	r0, #1
 800d156:	f004 f909 	bl	801136c <_exit>

0800d15a <__cxa_atexit>:
 800d15a:	4613      	mov	r3, r2
 800d15c:	460a      	mov	r2, r1
 800d15e:	4601      	mov	r1, r0
 800d160:	2002      	movs	r0, #2
 800d162:	f002 bac9 	b.w	800f6f8 <__register_exitproc>
	...

0800d168 <_fputc_r>:
 800d168:	b570      	push	{r4, r5, r6, lr}
 800d16a:	460e      	mov	r6, r1
 800d16c:	4614      	mov	r4, r2
 800d16e:	4605      	mov	r5, r0
 800d170:	b118      	cbz	r0, 800d17a <_fputc_r+0x12>
 800d172:	6983      	ldr	r3, [r0, #24]
 800d174:	b90b      	cbnz	r3, 800d17a <_fputc_r+0x12>
 800d176:	f003 fad1 	bl	801071c <__sinit>
 800d17a:	4b14      	ldr	r3, [pc, #80]	; (800d1cc <_fputc_r+0x64>)
 800d17c:	429c      	cmp	r4, r3
 800d17e:	d11a      	bne.n	800d1b6 <_fputc_r+0x4e>
 800d180:	686c      	ldr	r4, [r5, #4]
 800d182:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d184:	07d8      	lsls	r0, r3, #31
 800d186:	d405      	bmi.n	800d194 <_fputc_r+0x2c>
 800d188:	89a3      	ldrh	r3, [r4, #12]
 800d18a:	0599      	lsls	r1, r3, #22
 800d18c:	d402      	bmi.n	800d194 <_fputc_r+0x2c>
 800d18e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d190:	f000 fa72 	bl	800d678 <__retarget_lock_acquire_recursive>
 800d194:	4622      	mov	r2, r4
 800d196:	4628      	mov	r0, r5
 800d198:	4631      	mov	r1, r6
 800d19a:	f000 fd5f 	bl	800dc5c <_putc_r>
 800d19e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d1a0:	4605      	mov	r5, r0
 800d1a2:	07da      	lsls	r2, r3, #31
 800d1a4:	d405      	bmi.n	800d1b2 <_fputc_r+0x4a>
 800d1a6:	89a3      	ldrh	r3, [r4, #12]
 800d1a8:	059b      	lsls	r3, r3, #22
 800d1aa:	d402      	bmi.n	800d1b2 <_fputc_r+0x4a>
 800d1ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d1ae:	f000 fa65 	bl	800d67c <__retarget_lock_release_recursive>
 800d1b2:	4628      	mov	r0, r5
 800d1b4:	bd70      	pop	{r4, r5, r6, pc}
 800d1b6:	4b06      	ldr	r3, [pc, #24]	; (800d1d0 <_fputc_r+0x68>)
 800d1b8:	429c      	cmp	r4, r3
 800d1ba:	d101      	bne.n	800d1c0 <_fputc_r+0x58>
 800d1bc:	68ac      	ldr	r4, [r5, #8]
 800d1be:	e7e0      	b.n	800d182 <_fputc_r+0x1a>
 800d1c0:	4b04      	ldr	r3, [pc, #16]	; (800d1d4 <_fputc_r+0x6c>)
 800d1c2:	429c      	cmp	r4, r3
 800d1c4:	bf08      	it	eq
 800d1c6:	68ec      	ldreq	r4, [r5, #12]
 800d1c8:	e7db      	b.n	800d182 <_fputc_r+0x1a>
 800d1ca:	bf00      	nop
 800d1cc:	080130b0 	.word	0x080130b0
 800d1d0:	080130d0 	.word	0x080130d0
 800d1d4:	08013090 	.word	0x08013090

0800d1d8 <fputc>:
 800d1d8:	4b02      	ldr	r3, [pc, #8]	; (800d1e4 <fputc+0xc>)
 800d1da:	460a      	mov	r2, r1
 800d1dc:	4601      	mov	r1, r0
 800d1de:	6818      	ldr	r0, [r3, #0]
 800d1e0:	f7ff bfc2 	b.w	800d168 <_fputc_r>
 800d1e4:	20000020 	.word	0x20000020

0800d1e8 <_fputs_r>:
 800d1e8:	b530      	push	{r4, r5, lr}
 800d1ea:	4605      	mov	r5, r0
 800d1ec:	b087      	sub	sp, #28
 800d1ee:	4608      	mov	r0, r1
 800d1f0:	4614      	mov	r4, r2
 800d1f2:	9101      	str	r1, [sp, #4]
 800d1f4:	f7f9 fb02 	bl	80067fc <strlen>
 800d1f8:	ab01      	add	r3, sp, #4
 800d1fa:	9303      	str	r3, [sp, #12]
 800d1fc:	2301      	movs	r3, #1
 800d1fe:	9005      	str	r0, [sp, #20]
 800d200:	9002      	str	r0, [sp, #8]
 800d202:	9304      	str	r3, [sp, #16]
 800d204:	b125      	cbz	r5, 800d210 <_fputs_r+0x28>
 800d206:	69ab      	ldr	r3, [r5, #24]
 800d208:	b913      	cbnz	r3, 800d210 <_fputs_r+0x28>
 800d20a:	4628      	mov	r0, r5
 800d20c:	f003 fa86 	bl	801071c <__sinit>
 800d210:	4b19      	ldr	r3, [pc, #100]	; (800d278 <_fputs_r+0x90>)
 800d212:	429c      	cmp	r4, r3
 800d214:	d126      	bne.n	800d264 <_fputs_r+0x7c>
 800d216:	686c      	ldr	r4, [r5, #4]
 800d218:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d21a:	07db      	lsls	r3, r3, #31
 800d21c:	d405      	bmi.n	800d22a <_fputs_r+0x42>
 800d21e:	89a3      	ldrh	r3, [r4, #12]
 800d220:	0598      	lsls	r0, r3, #22
 800d222:	d402      	bmi.n	800d22a <_fputs_r+0x42>
 800d224:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d226:	f000 fa27 	bl	800d678 <__retarget_lock_acquire_recursive>
 800d22a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d22e:	0499      	lsls	r1, r3, #18
 800d230:	d406      	bmi.n	800d240 <_fputs_r+0x58>
 800d232:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d236:	81a3      	strh	r3, [r4, #12]
 800d238:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d23a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d23e:	6663      	str	r3, [r4, #100]	; 0x64
 800d240:	aa03      	add	r2, sp, #12
 800d242:	4628      	mov	r0, r5
 800d244:	4621      	mov	r1, r4
 800d246:	f000 f837 	bl	800d2b8 <__sfvwrite_r>
 800d24a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d24c:	4605      	mov	r5, r0
 800d24e:	07da      	lsls	r2, r3, #31
 800d250:	d405      	bmi.n	800d25e <_fputs_r+0x76>
 800d252:	89a3      	ldrh	r3, [r4, #12]
 800d254:	059b      	lsls	r3, r3, #22
 800d256:	d402      	bmi.n	800d25e <_fputs_r+0x76>
 800d258:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d25a:	f000 fa0f 	bl	800d67c <__retarget_lock_release_recursive>
 800d25e:	4628      	mov	r0, r5
 800d260:	b007      	add	sp, #28
 800d262:	bd30      	pop	{r4, r5, pc}
 800d264:	4b05      	ldr	r3, [pc, #20]	; (800d27c <_fputs_r+0x94>)
 800d266:	429c      	cmp	r4, r3
 800d268:	d101      	bne.n	800d26e <_fputs_r+0x86>
 800d26a:	68ac      	ldr	r4, [r5, #8]
 800d26c:	e7d4      	b.n	800d218 <_fputs_r+0x30>
 800d26e:	4b04      	ldr	r3, [pc, #16]	; (800d280 <_fputs_r+0x98>)
 800d270:	429c      	cmp	r4, r3
 800d272:	bf08      	it	eq
 800d274:	68ec      	ldreq	r4, [r5, #12]
 800d276:	e7cf      	b.n	800d218 <_fputs_r+0x30>
 800d278:	080130b0 	.word	0x080130b0
 800d27c:	080130d0 	.word	0x080130d0
 800d280:	08013090 	.word	0x08013090

0800d284 <fputs>:
 800d284:	4b02      	ldr	r3, [pc, #8]	; (800d290 <fputs+0xc>)
 800d286:	460a      	mov	r2, r1
 800d288:	4601      	mov	r1, r0
 800d28a:	6818      	ldr	r0, [r3, #0]
 800d28c:	f7ff bfac 	b.w	800d1e8 <_fputs_r>
 800d290:	20000020 	.word	0x20000020

0800d294 <_fstat_r>:
 800d294:	b538      	push	{r3, r4, r5, lr}
 800d296:	2300      	movs	r3, #0
 800d298:	4c06      	ldr	r4, [pc, #24]	; (800d2b4 <_fstat_r+0x20>)
 800d29a:	4605      	mov	r5, r0
 800d29c:	4608      	mov	r0, r1
 800d29e:	4611      	mov	r1, r2
 800d2a0:	6023      	str	r3, [r4, #0]
 800d2a2:	f004 f81d 	bl	80112e0 <_fstat>
 800d2a6:	1c43      	adds	r3, r0, #1
 800d2a8:	d102      	bne.n	800d2b0 <_fstat_r+0x1c>
 800d2aa:	6823      	ldr	r3, [r4, #0]
 800d2ac:	b103      	cbz	r3, 800d2b0 <_fstat_r+0x1c>
 800d2ae:	602b      	str	r3, [r5, #0]
 800d2b0:	bd38      	pop	{r3, r4, r5, pc}
 800d2b2:	bf00      	nop
 800d2b4:	20000b20 	.word	0x20000b20

0800d2b8 <__sfvwrite_r>:
 800d2b8:	6893      	ldr	r3, [r2, #8]
 800d2ba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2be:	4607      	mov	r7, r0
 800d2c0:	460c      	mov	r4, r1
 800d2c2:	4690      	mov	r8, r2
 800d2c4:	b91b      	cbnz	r3, 800d2ce <__sfvwrite_r+0x16>
 800d2c6:	2000      	movs	r0, #0
 800d2c8:	b003      	add	sp, #12
 800d2ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2ce:	898b      	ldrh	r3, [r1, #12]
 800d2d0:	0718      	lsls	r0, r3, #28
 800d2d2:	d526      	bpl.n	800d322 <__sfvwrite_r+0x6a>
 800d2d4:	690b      	ldr	r3, [r1, #16]
 800d2d6:	b323      	cbz	r3, 800d322 <__sfvwrite_r+0x6a>
 800d2d8:	89a3      	ldrh	r3, [r4, #12]
 800d2da:	f8d8 6000 	ldr.w	r6, [r8]
 800d2de:	f013 0902 	ands.w	r9, r3, #2
 800d2e2:	d02d      	beq.n	800d340 <__sfvwrite_r+0x88>
 800d2e4:	f04f 0a00 	mov.w	sl, #0
 800d2e8:	46d1      	mov	r9, sl
 800d2ea:	f8df b264 	ldr.w	fp, [pc, #612]	; 800d550 <__sfvwrite_r+0x298>
 800d2ee:	f1b9 0f00 	cmp.w	r9, #0
 800d2f2:	d01f      	beq.n	800d334 <__sfvwrite_r+0x7c>
 800d2f4:	45d9      	cmp	r9, fp
 800d2f6:	464b      	mov	r3, r9
 800d2f8:	4652      	mov	r2, sl
 800d2fa:	bf28      	it	cs
 800d2fc:	465b      	movcs	r3, fp
 800d2fe:	6a21      	ldr	r1, [r4, #32]
 800d300:	4638      	mov	r0, r7
 800d302:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 800d304:	47a8      	blx	r5
 800d306:	2800      	cmp	r0, #0
 800d308:	f340 8089 	ble.w	800d41e <__sfvwrite_r+0x166>
 800d30c:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d310:	4482      	add	sl, r0
 800d312:	eba9 0900 	sub.w	r9, r9, r0
 800d316:	1a18      	subs	r0, r3, r0
 800d318:	f8c8 0008 	str.w	r0, [r8, #8]
 800d31c:	2800      	cmp	r0, #0
 800d31e:	d1e6      	bne.n	800d2ee <__sfvwrite_r+0x36>
 800d320:	e7d1      	b.n	800d2c6 <__sfvwrite_r+0xe>
 800d322:	4621      	mov	r1, r4
 800d324:	4638      	mov	r0, r7
 800d326:	f002 f979 	bl	800f61c <__swsetup_r>
 800d32a:	2800      	cmp	r0, #0
 800d32c:	d0d4      	beq.n	800d2d8 <__sfvwrite_r+0x20>
 800d32e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d332:	e7c9      	b.n	800d2c8 <__sfvwrite_r+0x10>
 800d334:	f8d6 a000 	ldr.w	sl, [r6]
 800d338:	f8d6 9004 	ldr.w	r9, [r6, #4]
 800d33c:	3608      	adds	r6, #8
 800d33e:	e7d6      	b.n	800d2ee <__sfvwrite_r+0x36>
 800d340:	f013 0301 	ands.w	r3, r3, #1
 800d344:	d043      	beq.n	800d3ce <__sfvwrite_r+0x116>
 800d346:	4648      	mov	r0, r9
 800d348:	46ca      	mov	sl, r9
 800d34a:	46cb      	mov	fp, r9
 800d34c:	f1bb 0f00 	cmp.w	fp, #0
 800d350:	f000 80d9 	beq.w	800d506 <__sfvwrite_r+0x24e>
 800d354:	b950      	cbnz	r0, 800d36c <__sfvwrite_r+0xb4>
 800d356:	465a      	mov	r2, fp
 800d358:	210a      	movs	r1, #10
 800d35a:	4650      	mov	r0, sl
 800d35c:	f000 fc28 	bl	800dbb0 <memchr>
 800d360:	2800      	cmp	r0, #0
 800d362:	f000 80d5 	beq.w	800d510 <__sfvwrite_r+0x258>
 800d366:	3001      	adds	r0, #1
 800d368:	eba0 090a 	sub.w	r9, r0, sl
 800d36c:	6820      	ldr	r0, [r4, #0]
 800d36e:	6921      	ldr	r1, [r4, #16]
 800d370:	45d9      	cmp	r9, fp
 800d372:	464b      	mov	r3, r9
 800d374:	bf28      	it	cs
 800d376:	465b      	movcs	r3, fp
 800d378:	4288      	cmp	r0, r1
 800d37a:	6962      	ldr	r2, [r4, #20]
 800d37c:	f240 80cb 	bls.w	800d516 <__sfvwrite_r+0x25e>
 800d380:	68a5      	ldr	r5, [r4, #8]
 800d382:	4415      	add	r5, r2
 800d384:	42ab      	cmp	r3, r5
 800d386:	f340 80c6 	ble.w	800d516 <__sfvwrite_r+0x25e>
 800d38a:	4651      	mov	r1, sl
 800d38c:	462a      	mov	r2, r5
 800d38e:	f000 fc37 	bl	800dc00 <memmove>
 800d392:	6823      	ldr	r3, [r4, #0]
 800d394:	4621      	mov	r1, r4
 800d396:	442b      	add	r3, r5
 800d398:	6023      	str	r3, [r4, #0]
 800d39a:	4638      	mov	r0, r7
 800d39c:	f003 f92a 	bl	80105f4 <_fflush_r>
 800d3a0:	2800      	cmp	r0, #0
 800d3a2:	d13c      	bne.n	800d41e <__sfvwrite_r+0x166>
 800d3a4:	ebb9 0905 	subs.w	r9, r9, r5
 800d3a8:	f040 80cf 	bne.w	800d54a <__sfvwrite_r+0x292>
 800d3ac:	4621      	mov	r1, r4
 800d3ae:	4638      	mov	r0, r7
 800d3b0:	f003 f920 	bl	80105f4 <_fflush_r>
 800d3b4:	2800      	cmp	r0, #0
 800d3b6:	d132      	bne.n	800d41e <__sfvwrite_r+0x166>
 800d3b8:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d3bc:	44aa      	add	sl, r5
 800d3be:	ebab 0b05 	sub.w	fp, fp, r5
 800d3c2:	1b5d      	subs	r5, r3, r5
 800d3c4:	f8c8 5008 	str.w	r5, [r8, #8]
 800d3c8:	2d00      	cmp	r5, #0
 800d3ca:	d1bf      	bne.n	800d34c <__sfvwrite_r+0x94>
 800d3cc:	e77b      	b.n	800d2c6 <__sfvwrite_r+0xe>
 800d3ce:	4699      	mov	r9, r3
 800d3d0:	469a      	mov	sl, r3
 800d3d2:	f1ba 0f00 	cmp.w	sl, #0
 800d3d6:	d027      	beq.n	800d428 <__sfvwrite_r+0x170>
 800d3d8:	89a2      	ldrh	r2, [r4, #12]
 800d3da:	68a5      	ldr	r5, [r4, #8]
 800d3dc:	0591      	lsls	r1, r2, #22
 800d3de:	d565      	bpl.n	800d4ac <__sfvwrite_r+0x1f4>
 800d3e0:	45aa      	cmp	sl, r5
 800d3e2:	d33b      	bcc.n	800d45c <__sfvwrite_r+0x1a4>
 800d3e4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800d3e8:	d036      	beq.n	800d458 <__sfvwrite_r+0x1a0>
 800d3ea:	2002      	movs	r0, #2
 800d3ec:	6921      	ldr	r1, [r4, #16]
 800d3ee:	6823      	ldr	r3, [r4, #0]
 800d3f0:	1a5b      	subs	r3, r3, r1
 800d3f2:	9301      	str	r3, [sp, #4]
 800d3f4:	6963      	ldr	r3, [r4, #20]
 800d3f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800d3fa:	fb93 fbf0 	sdiv	fp, r3, r0
 800d3fe:	9b01      	ldr	r3, [sp, #4]
 800d400:	1c58      	adds	r0, r3, #1
 800d402:	4450      	add	r0, sl
 800d404:	4583      	cmp	fp, r0
 800d406:	bf38      	it	cc
 800d408:	4683      	movcc	fp, r0
 800d40a:	0553      	lsls	r3, r2, #21
 800d40c:	d53e      	bpl.n	800d48c <__sfvwrite_r+0x1d4>
 800d40e:	4659      	mov	r1, fp
 800d410:	4638      	mov	r0, r7
 800d412:	f000 f9af 	bl	800d774 <_malloc_r>
 800d416:	4605      	mov	r5, r0
 800d418:	b950      	cbnz	r0, 800d430 <__sfvwrite_r+0x178>
 800d41a:	230c      	movs	r3, #12
 800d41c:	603b      	str	r3, [r7, #0]
 800d41e:	89a3      	ldrh	r3, [r4, #12]
 800d420:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d424:	81a3      	strh	r3, [r4, #12]
 800d426:	e782      	b.n	800d32e <__sfvwrite_r+0x76>
 800d428:	e896 0600 	ldmia.w	r6, {r9, sl}
 800d42c:	3608      	adds	r6, #8
 800d42e:	e7d0      	b.n	800d3d2 <__sfvwrite_r+0x11a>
 800d430:	9a01      	ldr	r2, [sp, #4]
 800d432:	6921      	ldr	r1, [r4, #16]
 800d434:	f000 fbd9 	bl	800dbea <memcpy>
 800d438:	89a2      	ldrh	r2, [r4, #12]
 800d43a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800d43e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800d442:	81a2      	strh	r2, [r4, #12]
 800d444:	9b01      	ldr	r3, [sp, #4]
 800d446:	6125      	str	r5, [r4, #16]
 800d448:	441d      	add	r5, r3
 800d44a:	6025      	str	r5, [r4, #0]
 800d44c:	4655      	mov	r5, sl
 800d44e:	ebab 0303 	sub.w	r3, fp, r3
 800d452:	f8c4 b014 	str.w	fp, [r4, #20]
 800d456:	60a3      	str	r3, [r4, #8]
 800d458:	45aa      	cmp	sl, r5
 800d45a:	d200      	bcs.n	800d45e <__sfvwrite_r+0x1a6>
 800d45c:	4655      	mov	r5, sl
 800d45e:	462a      	mov	r2, r5
 800d460:	4649      	mov	r1, r9
 800d462:	6820      	ldr	r0, [r4, #0]
 800d464:	f000 fbcc 	bl	800dc00 <memmove>
 800d468:	68a3      	ldr	r3, [r4, #8]
 800d46a:	1b5b      	subs	r3, r3, r5
 800d46c:	60a3      	str	r3, [r4, #8]
 800d46e:	6823      	ldr	r3, [r4, #0]
 800d470:	441d      	add	r5, r3
 800d472:	6025      	str	r5, [r4, #0]
 800d474:	4655      	mov	r5, sl
 800d476:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d47a:	44a9      	add	r9, r5
 800d47c:	ebaa 0a05 	sub.w	sl, sl, r5
 800d480:	1b5d      	subs	r5, r3, r5
 800d482:	f8c8 5008 	str.w	r5, [r8, #8]
 800d486:	2d00      	cmp	r5, #0
 800d488:	d1a3      	bne.n	800d3d2 <__sfvwrite_r+0x11a>
 800d48a:	e71c      	b.n	800d2c6 <__sfvwrite_r+0xe>
 800d48c:	465a      	mov	r2, fp
 800d48e:	4638      	mov	r0, r7
 800d490:	f000 fc34 	bl	800dcfc <_realloc_r>
 800d494:	4605      	mov	r5, r0
 800d496:	2800      	cmp	r0, #0
 800d498:	d1d4      	bne.n	800d444 <__sfvwrite_r+0x18c>
 800d49a:	6921      	ldr	r1, [r4, #16]
 800d49c:	4638      	mov	r0, r7
 800d49e:	f003 fa15 	bl	80108cc <_free_r>
 800d4a2:	89a3      	ldrh	r3, [r4, #12]
 800d4a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d4a8:	81a3      	strh	r3, [r4, #12]
 800d4aa:	e7b6      	b.n	800d41a <__sfvwrite_r+0x162>
 800d4ac:	6820      	ldr	r0, [r4, #0]
 800d4ae:	6923      	ldr	r3, [r4, #16]
 800d4b0:	4298      	cmp	r0, r3
 800d4b2:	d802      	bhi.n	800d4ba <__sfvwrite_r+0x202>
 800d4b4:	6962      	ldr	r2, [r4, #20]
 800d4b6:	4592      	cmp	sl, r2
 800d4b8:	d215      	bcs.n	800d4e6 <__sfvwrite_r+0x22e>
 800d4ba:	4555      	cmp	r5, sl
 800d4bc:	bf28      	it	cs
 800d4be:	4655      	movcs	r5, sl
 800d4c0:	4649      	mov	r1, r9
 800d4c2:	462a      	mov	r2, r5
 800d4c4:	f000 fb9c 	bl	800dc00 <memmove>
 800d4c8:	68a3      	ldr	r3, [r4, #8]
 800d4ca:	6822      	ldr	r2, [r4, #0]
 800d4cc:	1b5b      	subs	r3, r3, r5
 800d4ce:	442a      	add	r2, r5
 800d4d0:	60a3      	str	r3, [r4, #8]
 800d4d2:	6022      	str	r2, [r4, #0]
 800d4d4:	2b00      	cmp	r3, #0
 800d4d6:	d1ce      	bne.n	800d476 <__sfvwrite_r+0x1be>
 800d4d8:	4621      	mov	r1, r4
 800d4da:	4638      	mov	r0, r7
 800d4dc:	f003 f88a 	bl	80105f4 <_fflush_r>
 800d4e0:	2800      	cmp	r0, #0
 800d4e2:	d0c8      	beq.n	800d476 <__sfvwrite_r+0x1be>
 800d4e4:	e79b      	b.n	800d41e <__sfvwrite_r+0x166>
 800d4e6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800d4ea:	4553      	cmp	r3, sl
 800d4ec:	bf28      	it	cs
 800d4ee:	4653      	movcs	r3, sl
 800d4f0:	fb93 f3f2 	sdiv	r3, r3, r2
 800d4f4:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 800d4f6:	4353      	muls	r3, r2
 800d4f8:	6a21      	ldr	r1, [r4, #32]
 800d4fa:	464a      	mov	r2, r9
 800d4fc:	4638      	mov	r0, r7
 800d4fe:	47a8      	blx	r5
 800d500:	1e05      	subs	r5, r0, #0
 800d502:	dcb8      	bgt.n	800d476 <__sfvwrite_r+0x1be>
 800d504:	e78b      	b.n	800d41e <__sfvwrite_r+0x166>
 800d506:	e896 0c00 	ldmia.w	r6, {sl, fp}
 800d50a:	2000      	movs	r0, #0
 800d50c:	3608      	adds	r6, #8
 800d50e:	e71d      	b.n	800d34c <__sfvwrite_r+0x94>
 800d510:	f10b 0901 	add.w	r9, fp, #1
 800d514:	e72a      	b.n	800d36c <__sfvwrite_r+0xb4>
 800d516:	4293      	cmp	r3, r2
 800d518:	db09      	blt.n	800d52e <__sfvwrite_r+0x276>
 800d51a:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 800d51c:	4613      	mov	r3, r2
 800d51e:	6a21      	ldr	r1, [r4, #32]
 800d520:	4652      	mov	r2, sl
 800d522:	4638      	mov	r0, r7
 800d524:	47a8      	blx	r5
 800d526:	1e05      	subs	r5, r0, #0
 800d528:	f73f af3c 	bgt.w	800d3a4 <__sfvwrite_r+0xec>
 800d52c:	e777      	b.n	800d41e <__sfvwrite_r+0x166>
 800d52e:	461a      	mov	r2, r3
 800d530:	4651      	mov	r1, sl
 800d532:	9301      	str	r3, [sp, #4]
 800d534:	f000 fb64 	bl	800dc00 <memmove>
 800d538:	9b01      	ldr	r3, [sp, #4]
 800d53a:	68a2      	ldr	r2, [r4, #8]
 800d53c:	461d      	mov	r5, r3
 800d53e:	1ad2      	subs	r2, r2, r3
 800d540:	60a2      	str	r2, [r4, #8]
 800d542:	6822      	ldr	r2, [r4, #0]
 800d544:	441a      	add	r2, r3
 800d546:	6022      	str	r2, [r4, #0]
 800d548:	e72c      	b.n	800d3a4 <__sfvwrite_r+0xec>
 800d54a:	2001      	movs	r0, #1
 800d54c:	e734      	b.n	800d3b8 <__sfvwrite_r+0x100>
 800d54e:	bf00      	nop
 800d550:	7ffffc00 	.word	0x7ffffc00

0800d554 <_fwrite_r>:
 800d554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d558:	b086      	sub	sp, #24
 800d55a:	fb02 f503 	mul.w	r5, r2, r3
 800d55e:	461f      	mov	r7, r3
 800d560:	ab01      	add	r3, sp, #4
 800d562:	9303      	str	r3, [sp, #12]
 800d564:	2301      	movs	r3, #1
 800d566:	4690      	mov	r8, r2
 800d568:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d56a:	9101      	str	r1, [sp, #4]
 800d56c:	9502      	str	r5, [sp, #8]
 800d56e:	9505      	str	r5, [sp, #20]
 800d570:	9304      	str	r3, [sp, #16]
 800d572:	4606      	mov	r6, r0
 800d574:	b118      	cbz	r0, 800d57e <_fwrite_r+0x2a>
 800d576:	6983      	ldr	r3, [r0, #24]
 800d578:	b90b      	cbnz	r3, 800d57e <_fwrite_r+0x2a>
 800d57a:	f003 f8cf 	bl	801071c <__sinit>
 800d57e:	4b21      	ldr	r3, [pc, #132]	; (800d604 <_fwrite_r+0xb0>)
 800d580:	429c      	cmp	r4, r3
 800d582:	d127      	bne.n	800d5d4 <_fwrite_r+0x80>
 800d584:	6874      	ldr	r4, [r6, #4]
 800d586:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d588:	07d8      	lsls	r0, r3, #31
 800d58a:	d405      	bmi.n	800d598 <_fwrite_r+0x44>
 800d58c:	89a3      	ldrh	r3, [r4, #12]
 800d58e:	0599      	lsls	r1, r3, #22
 800d590:	d402      	bmi.n	800d598 <_fwrite_r+0x44>
 800d592:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d594:	f000 f870 	bl	800d678 <__retarget_lock_acquire_recursive>
 800d598:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d59c:	049a      	lsls	r2, r3, #18
 800d59e:	d406      	bmi.n	800d5ae <_fwrite_r+0x5a>
 800d5a0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d5a4:	81a3      	strh	r3, [r4, #12]
 800d5a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d5a8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d5ac:	6663      	str	r3, [r4, #100]	; 0x64
 800d5ae:	aa03      	add	r2, sp, #12
 800d5b0:	4621      	mov	r1, r4
 800d5b2:	4630      	mov	r0, r6
 800d5b4:	f7ff fe80 	bl	800d2b8 <__sfvwrite_r>
 800d5b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d5ba:	b9a8      	cbnz	r0, 800d5e8 <_fwrite_r+0x94>
 800d5bc:	07d8      	lsls	r0, r3, #31
 800d5be:	d405      	bmi.n	800d5cc <_fwrite_r+0x78>
 800d5c0:	89a3      	ldrh	r3, [r4, #12]
 800d5c2:	0599      	lsls	r1, r3, #22
 800d5c4:	d402      	bmi.n	800d5cc <_fwrite_r+0x78>
 800d5c6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d5c8:	f000 f858 	bl	800d67c <__retarget_lock_release_recursive>
 800d5cc:	4638      	mov	r0, r7
 800d5ce:	b006      	add	sp, #24
 800d5d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d5d4:	4b0c      	ldr	r3, [pc, #48]	; (800d608 <_fwrite_r+0xb4>)
 800d5d6:	429c      	cmp	r4, r3
 800d5d8:	d101      	bne.n	800d5de <_fwrite_r+0x8a>
 800d5da:	68b4      	ldr	r4, [r6, #8]
 800d5dc:	e7d3      	b.n	800d586 <_fwrite_r+0x32>
 800d5de:	4b0b      	ldr	r3, [pc, #44]	; (800d60c <_fwrite_r+0xb8>)
 800d5e0:	429c      	cmp	r4, r3
 800d5e2:	bf08      	it	eq
 800d5e4:	68f4      	ldreq	r4, [r6, #12]
 800d5e6:	e7ce      	b.n	800d586 <_fwrite_r+0x32>
 800d5e8:	07da      	lsls	r2, r3, #31
 800d5ea:	d405      	bmi.n	800d5f8 <_fwrite_r+0xa4>
 800d5ec:	89a3      	ldrh	r3, [r4, #12]
 800d5ee:	059b      	lsls	r3, r3, #22
 800d5f0:	d402      	bmi.n	800d5f8 <_fwrite_r+0xa4>
 800d5f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d5f4:	f000 f842 	bl	800d67c <__retarget_lock_release_recursive>
 800d5f8:	9b05      	ldr	r3, [sp, #20]
 800d5fa:	1aed      	subs	r5, r5, r3
 800d5fc:	fbb5 f7f8 	udiv	r7, r5, r8
 800d600:	e7e4      	b.n	800d5cc <_fwrite_r+0x78>
 800d602:	bf00      	nop
 800d604:	080130b0 	.word	0x080130b0
 800d608:	080130d0 	.word	0x080130d0
 800d60c:	08013090 	.word	0x08013090

0800d610 <fwrite>:
 800d610:	b507      	push	{r0, r1, r2, lr}
 800d612:	9300      	str	r3, [sp, #0]
 800d614:	4613      	mov	r3, r2
 800d616:	460a      	mov	r2, r1
 800d618:	4601      	mov	r1, r0
 800d61a:	4803      	ldr	r0, [pc, #12]	; (800d628 <fwrite+0x18>)
 800d61c:	6800      	ldr	r0, [r0, #0]
 800d61e:	f7ff ff99 	bl	800d554 <_fwrite_r>
 800d622:	b003      	add	sp, #12
 800d624:	f85d fb04 	ldr.w	pc, [sp], #4
 800d628:	20000020 	.word	0x20000020

0800d62c <__libc_init_array>:
 800d62c:	b570      	push	{r4, r5, r6, lr}
 800d62e:	2500      	movs	r5, #0
 800d630:	4e0c      	ldr	r6, [pc, #48]	; (800d664 <__libc_init_array+0x38>)
 800d632:	4c0d      	ldr	r4, [pc, #52]	; (800d668 <__libc_init_array+0x3c>)
 800d634:	1ba4      	subs	r4, r4, r6
 800d636:	10a4      	asrs	r4, r4, #2
 800d638:	42a5      	cmp	r5, r4
 800d63a:	d109      	bne.n	800d650 <__libc_init_array+0x24>
 800d63c:	f003 fe98 	bl	8011370 <_init>
 800d640:	2500      	movs	r5, #0
 800d642:	4e0a      	ldr	r6, [pc, #40]	; (800d66c <__libc_init_array+0x40>)
 800d644:	4c0a      	ldr	r4, [pc, #40]	; (800d670 <__libc_init_array+0x44>)
 800d646:	1ba4      	subs	r4, r4, r6
 800d648:	10a4      	asrs	r4, r4, #2
 800d64a:	42a5      	cmp	r5, r4
 800d64c:	d105      	bne.n	800d65a <__libc_init_array+0x2e>
 800d64e:	bd70      	pop	{r4, r5, r6, pc}
 800d650:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800d654:	4798      	blx	r3
 800d656:	3501      	adds	r5, #1
 800d658:	e7ee      	b.n	800d638 <__libc_init_array+0xc>
 800d65a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800d65e:	4798      	blx	r3
 800d660:	3501      	adds	r5, #1
 800d662:	e7f2      	b.n	800d64a <__libc_init_array+0x1e>
 800d664:	08013a84 	.word	0x08013a84
 800d668:	08013a84 	.word	0x08013a84
 800d66c:	08013a84 	.word	0x08013a84
 800d670:	08013aa0 	.word	0x08013aa0

0800d674 <__retarget_lock_init_recursive>:
 800d674:	4770      	bx	lr

0800d676 <__retarget_lock_close_recursive>:
 800d676:	4770      	bx	lr

0800d678 <__retarget_lock_acquire_recursive>:
 800d678:	4770      	bx	lr

0800d67a <__retarget_lock_release>:
 800d67a:	4770      	bx	lr

0800d67c <__retarget_lock_release_recursive>:
 800d67c:	4770      	bx	lr

0800d67e <__swhatbuf_r>:
 800d67e:	b570      	push	{r4, r5, r6, lr}
 800d680:	460e      	mov	r6, r1
 800d682:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d686:	b090      	sub	sp, #64	; 0x40
 800d688:	2900      	cmp	r1, #0
 800d68a:	4614      	mov	r4, r2
 800d68c:	461d      	mov	r5, r3
 800d68e:	da09      	bge.n	800d6a4 <__swhatbuf_r+0x26>
 800d690:	2200      	movs	r2, #0
 800d692:	89b3      	ldrh	r3, [r6, #12]
 800d694:	602a      	str	r2, [r5, #0]
 800d696:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800d69a:	d116      	bne.n	800d6ca <__swhatbuf_r+0x4c>
 800d69c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d6a0:	6023      	str	r3, [r4, #0]
 800d6a2:	e015      	b.n	800d6d0 <__swhatbuf_r+0x52>
 800d6a4:	aa01      	add	r2, sp, #4
 800d6a6:	f7ff fdf5 	bl	800d294 <_fstat_r>
 800d6aa:	2800      	cmp	r0, #0
 800d6ac:	dbf0      	blt.n	800d690 <__swhatbuf_r+0x12>
 800d6ae:	9a02      	ldr	r2, [sp, #8]
 800d6b0:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800d6b4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800d6b8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800d6bc:	425a      	negs	r2, r3
 800d6be:	415a      	adcs	r2, r3
 800d6c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d6c4:	602a      	str	r2, [r5, #0]
 800d6c6:	6023      	str	r3, [r4, #0]
 800d6c8:	e002      	b.n	800d6d0 <__swhatbuf_r+0x52>
 800d6ca:	2340      	movs	r3, #64	; 0x40
 800d6cc:	4610      	mov	r0, r2
 800d6ce:	6023      	str	r3, [r4, #0]
 800d6d0:	b010      	add	sp, #64	; 0x40
 800d6d2:	bd70      	pop	{r4, r5, r6, pc}

0800d6d4 <__smakebuf_r>:
 800d6d4:	898b      	ldrh	r3, [r1, #12]
 800d6d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d6d8:	079d      	lsls	r5, r3, #30
 800d6da:	4606      	mov	r6, r0
 800d6dc:	460c      	mov	r4, r1
 800d6de:	d507      	bpl.n	800d6f0 <__smakebuf_r+0x1c>
 800d6e0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800d6e4:	6023      	str	r3, [r4, #0]
 800d6e6:	6123      	str	r3, [r4, #16]
 800d6e8:	2301      	movs	r3, #1
 800d6ea:	6163      	str	r3, [r4, #20]
 800d6ec:	b002      	add	sp, #8
 800d6ee:	bd70      	pop	{r4, r5, r6, pc}
 800d6f0:	ab01      	add	r3, sp, #4
 800d6f2:	466a      	mov	r2, sp
 800d6f4:	f7ff ffc3 	bl	800d67e <__swhatbuf_r>
 800d6f8:	9900      	ldr	r1, [sp, #0]
 800d6fa:	4605      	mov	r5, r0
 800d6fc:	4630      	mov	r0, r6
 800d6fe:	f000 f839 	bl	800d774 <_malloc_r>
 800d702:	b948      	cbnz	r0, 800d718 <__smakebuf_r+0x44>
 800d704:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d708:	059a      	lsls	r2, r3, #22
 800d70a:	d4ef      	bmi.n	800d6ec <__smakebuf_r+0x18>
 800d70c:	f023 0303 	bic.w	r3, r3, #3
 800d710:	f043 0302 	orr.w	r3, r3, #2
 800d714:	81a3      	strh	r3, [r4, #12]
 800d716:	e7e3      	b.n	800d6e0 <__smakebuf_r+0xc>
 800d718:	4b0d      	ldr	r3, [pc, #52]	; (800d750 <__smakebuf_r+0x7c>)
 800d71a:	62b3      	str	r3, [r6, #40]	; 0x28
 800d71c:	89a3      	ldrh	r3, [r4, #12]
 800d71e:	6020      	str	r0, [r4, #0]
 800d720:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800d724:	81a3      	strh	r3, [r4, #12]
 800d726:	9b00      	ldr	r3, [sp, #0]
 800d728:	6120      	str	r0, [r4, #16]
 800d72a:	6163      	str	r3, [r4, #20]
 800d72c:	9b01      	ldr	r3, [sp, #4]
 800d72e:	b15b      	cbz	r3, 800d748 <__smakebuf_r+0x74>
 800d730:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d734:	4630      	mov	r0, r6
 800d736:	f003 f9a3 	bl	8010a80 <_isatty_r>
 800d73a:	b128      	cbz	r0, 800d748 <__smakebuf_r+0x74>
 800d73c:	89a3      	ldrh	r3, [r4, #12]
 800d73e:	f023 0303 	bic.w	r3, r3, #3
 800d742:	f043 0301 	orr.w	r3, r3, #1
 800d746:	81a3      	strh	r3, [r4, #12]
 800d748:	89a3      	ldrh	r3, [r4, #12]
 800d74a:	431d      	orrs	r5, r3
 800d74c:	81a5      	strh	r5, [r4, #12]
 800d74e:	e7cd      	b.n	800d6ec <__smakebuf_r+0x18>
 800d750:	0801066d 	.word	0x0801066d

0800d754 <malloc>:
 800d754:	4b02      	ldr	r3, [pc, #8]	; (800d760 <malloc+0xc>)
 800d756:	4601      	mov	r1, r0
 800d758:	6818      	ldr	r0, [r3, #0]
 800d75a:	f000 b80b 	b.w	800d774 <_malloc_r>
 800d75e:	bf00      	nop
 800d760:	20000020 	.word	0x20000020

0800d764 <free>:
 800d764:	4b02      	ldr	r3, [pc, #8]	; (800d770 <free+0xc>)
 800d766:	4601      	mov	r1, r0
 800d768:	6818      	ldr	r0, [r3, #0]
 800d76a:	f003 b8af 	b.w	80108cc <_free_r>
 800d76e:	bf00      	nop
 800d770:	20000020 	.word	0x20000020

0800d774 <_malloc_r>:
 800d774:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d778:	f101 040b 	add.w	r4, r1, #11
 800d77c:	2c16      	cmp	r4, #22
 800d77e:	4681      	mov	r9, r0
 800d780:	d907      	bls.n	800d792 <_malloc_r+0x1e>
 800d782:	f034 0407 	bics.w	r4, r4, #7
 800d786:	d505      	bpl.n	800d794 <_malloc_r+0x20>
 800d788:	230c      	movs	r3, #12
 800d78a:	f8c9 3000 	str.w	r3, [r9]
 800d78e:	2600      	movs	r6, #0
 800d790:	e131      	b.n	800d9f6 <_malloc_r+0x282>
 800d792:	2410      	movs	r4, #16
 800d794:	428c      	cmp	r4, r1
 800d796:	d3f7      	bcc.n	800d788 <_malloc_r+0x14>
 800d798:	4648      	mov	r0, r9
 800d79a:	f000 fa53 	bl	800dc44 <__malloc_lock>
 800d79e:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 800d7a2:	4d9b      	ldr	r5, [pc, #620]	; (800da10 <_malloc_r+0x29c>)
 800d7a4:	d236      	bcs.n	800d814 <_malloc_r+0xa0>
 800d7a6:	f104 0208 	add.w	r2, r4, #8
 800d7aa:	442a      	add	r2, r5
 800d7ac:	6856      	ldr	r6, [r2, #4]
 800d7ae:	f1a2 0108 	sub.w	r1, r2, #8
 800d7b2:	428e      	cmp	r6, r1
 800d7b4:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 800d7b8:	d102      	bne.n	800d7c0 <_malloc_r+0x4c>
 800d7ba:	68d6      	ldr	r6, [r2, #12]
 800d7bc:	42b2      	cmp	r2, r6
 800d7be:	d010      	beq.n	800d7e2 <_malloc_r+0x6e>
 800d7c0:	6873      	ldr	r3, [r6, #4]
 800d7c2:	68f2      	ldr	r2, [r6, #12]
 800d7c4:	68b1      	ldr	r1, [r6, #8]
 800d7c6:	f023 0303 	bic.w	r3, r3, #3
 800d7ca:	60ca      	str	r2, [r1, #12]
 800d7cc:	4433      	add	r3, r6
 800d7ce:	6091      	str	r1, [r2, #8]
 800d7d0:	685a      	ldr	r2, [r3, #4]
 800d7d2:	f042 0201 	orr.w	r2, r2, #1
 800d7d6:	605a      	str	r2, [r3, #4]
 800d7d8:	4648      	mov	r0, r9
 800d7da:	f000 fa39 	bl	800dc50 <__malloc_unlock>
 800d7de:	3608      	adds	r6, #8
 800d7e0:	e109      	b.n	800d9f6 <_malloc_r+0x282>
 800d7e2:	3302      	adds	r3, #2
 800d7e4:	4a8b      	ldr	r2, [pc, #556]	; (800da14 <_malloc_r+0x2a0>)
 800d7e6:	692e      	ldr	r6, [r5, #16]
 800d7e8:	4611      	mov	r1, r2
 800d7ea:	4296      	cmp	r6, r2
 800d7ec:	d06d      	beq.n	800d8ca <_malloc_r+0x156>
 800d7ee:	6870      	ldr	r0, [r6, #4]
 800d7f0:	f020 0003 	bic.w	r0, r0, #3
 800d7f4:	1b07      	subs	r7, r0, r4
 800d7f6:	2f0f      	cmp	r7, #15
 800d7f8:	dd47      	ble.n	800d88a <_malloc_r+0x116>
 800d7fa:	1933      	adds	r3, r6, r4
 800d7fc:	f044 0401 	orr.w	r4, r4, #1
 800d800:	6074      	str	r4, [r6, #4]
 800d802:	616b      	str	r3, [r5, #20]
 800d804:	612b      	str	r3, [r5, #16]
 800d806:	60da      	str	r2, [r3, #12]
 800d808:	609a      	str	r2, [r3, #8]
 800d80a:	f047 0201 	orr.w	r2, r7, #1
 800d80e:	605a      	str	r2, [r3, #4]
 800d810:	5037      	str	r7, [r6, r0]
 800d812:	e7e1      	b.n	800d7d8 <_malloc_r+0x64>
 800d814:	0a63      	lsrs	r3, r4, #9
 800d816:	d02a      	beq.n	800d86e <_malloc_r+0xfa>
 800d818:	2b04      	cmp	r3, #4
 800d81a:	d812      	bhi.n	800d842 <_malloc_r+0xce>
 800d81c:	09a3      	lsrs	r3, r4, #6
 800d81e:	3338      	adds	r3, #56	; 0x38
 800d820:	1c5a      	adds	r2, r3, #1
 800d822:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 800d826:	6856      	ldr	r6, [r2, #4]
 800d828:	f1a2 0008 	sub.w	r0, r2, #8
 800d82c:	4286      	cmp	r6, r0
 800d82e:	d006      	beq.n	800d83e <_malloc_r+0xca>
 800d830:	6872      	ldr	r2, [r6, #4]
 800d832:	f022 0203 	bic.w	r2, r2, #3
 800d836:	1b11      	subs	r1, r2, r4
 800d838:	290f      	cmp	r1, #15
 800d83a:	dd1c      	ble.n	800d876 <_malloc_r+0x102>
 800d83c:	3b01      	subs	r3, #1
 800d83e:	3301      	adds	r3, #1
 800d840:	e7d0      	b.n	800d7e4 <_malloc_r+0x70>
 800d842:	2b14      	cmp	r3, #20
 800d844:	d801      	bhi.n	800d84a <_malloc_r+0xd6>
 800d846:	335b      	adds	r3, #91	; 0x5b
 800d848:	e7ea      	b.n	800d820 <_malloc_r+0xac>
 800d84a:	2b54      	cmp	r3, #84	; 0x54
 800d84c:	d802      	bhi.n	800d854 <_malloc_r+0xe0>
 800d84e:	0b23      	lsrs	r3, r4, #12
 800d850:	336e      	adds	r3, #110	; 0x6e
 800d852:	e7e5      	b.n	800d820 <_malloc_r+0xac>
 800d854:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800d858:	d802      	bhi.n	800d860 <_malloc_r+0xec>
 800d85a:	0be3      	lsrs	r3, r4, #15
 800d85c:	3377      	adds	r3, #119	; 0x77
 800d85e:	e7df      	b.n	800d820 <_malloc_r+0xac>
 800d860:	f240 5254 	movw	r2, #1364	; 0x554
 800d864:	4293      	cmp	r3, r2
 800d866:	d804      	bhi.n	800d872 <_malloc_r+0xfe>
 800d868:	0ca3      	lsrs	r3, r4, #18
 800d86a:	337c      	adds	r3, #124	; 0x7c
 800d86c:	e7d8      	b.n	800d820 <_malloc_r+0xac>
 800d86e:	233f      	movs	r3, #63	; 0x3f
 800d870:	e7d6      	b.n	800d820 <_malloc_r+0xac>
 800d872:	237e      	movs	r3, #126	; 0x7e
 800d874:	e7d4      	b.n	800d820 <_malloc_r+0xac>
 800d876:	2900      	cmp	r1, #0
 800d878:	68f1      	ldr	r1, [r6, #12]
 800d87a:	db04      	blt.n	800d886 <_malloc_r+0x112>
 800d87c:	68b3      	ldr	r3, [r6, #8]
 800d87e:	60d9      	str	r1, [r3, #12]
 800d880:	608b      	str	r3, [r1, #8]
 800d882:	18b3      	adds	r3, r6, r2
 800d884:	e7a4      	b.n	800d7d0 <_malloc_r+0x5c>
 800d886:	460e      	mov	r6, r1
 800d888:	e7d0      	b.n	800d82c <_malloc_r+0xb8>
 800d88a:	2f00      	cmp	r7, #0
 800d88c:	616a      	str	r2, [r5, #20]
 800d88e:	612a      	str	r2, [r5, #16]
 800d890:	db05      	blt.n	800d89e <_malloc_r+0x12a>
 800d892:	4430      	add	r0, r6
 800d894:	6843      	ldr	r3, [r0, #4]
 800d896:	f043 0301 	orr.w	r3, r3, #1
 800d89a:	6043      	str	r3, [r0, #4]
 800d89c:	e79c      	b.n	800d7d8 <_malloc_r+0x64>
 800d89e:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800d8a2:	d244      	bcs.n	800d92e <_malloc_r+0x1ba>
 800d8a4:	2201      	movs	r2, #1
 800d8a6:	08c0      	lsrs	r0, r0, #3
 800d8a8:	1087      	asrs	r7, r0, #2
 800d8aa:	fa02 f707 	lsl.w	r7, r2, r7
 800d8ae:	686a      	ldr	r2, [r5, #4]
 800d8b0:	3001      	adds	r0, #1
 800d8b2:	433a      	orrs	r2, r7
 800d8b4:	606a      	str	r2, [r5, #4]
 800d8b6:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 800d8ba:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 800d8be:	3a08      	subs	r2, #8
 800d8c0:	60f2      	str	r2, [r6, #12]
 800d8c2:	60b7      	str	r7, [r6, #8]
 800d8c4:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 800d8c8:	60fe      	str	r6, [r7, #12]
 800d8ca:	2001      	movs	r0, #1
 800d8cc:	109a      	asrs	r2, r3, #2
 800d8ce:	fa00 f202 	lsl.w	r2, r0, r2
 800d8d2:	6868      	ldr	r0, [r5, #4]
 800d8d4:	4282      	cmp	r2, r0
 800d8d6:	f200 809f 	bhi.w	800da18 <_malloc_r+0x2a4>
 800d8da:	4202      	tst	r2, r0
 800d8dc:	d106      	bne.n	800d8ec <_malloc_r+0x178>
 800d8de:	f023 0303 	bic.w	r3, r3, #3
 800d8e2:	0052      	lsls	r2, r2, #1
 800d8e4:	4202      	tst	r2, r0
 800d8e6:	f103 0304 	add.w	r3, r3, #4
 800d8ea:	d0fa      	beq.n	800d8e2 <_malloc_r+0x16e>
 800d8ec:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 800d8f0:	46e0      	mov	r8, ip
 800d8f2:	469e      	mov	lr, r3
 800d8f4:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800d8f8:	4546      	cmp	r6, r8
 800d8fa:	d153      	bne.n	800d9a4 <_malloc_r+0x230>
 800d8fc:	f10e 0e01 	add.w	lr, lr, #1
 800d900:	f01e 0f03 	tst.w	lr, #3
 800d904:	f108 0808 	add.w	r8, r8, #8
 800d908:	d1f4      	bne.n	800d8f4 <_malloc_r+0x180>
 800d90a:	0798      	lsls	r0, r3, #30
 800d90c:	d179      	bne.n	800da02 <_malloc_r+0x28e>
 800d90e:	686b      	ldr	r3, [r5, #4]
 800d910:	ea23 0302 	bic.w	r3, r3, r2
 800d914:	606b      	str	r3, [r5, #4]
 800d916:	6868      	ldr	r0, [r5, #4]
 800d918:	0052      	lsls	r2, r2, #1
 800d91a:	4282      	cmp	r2, r0
 800d91c:	d87c      	bhi.n	800da18 <_malloc_r+0x2a4>
 800d91e:	2a00      	cmp	r2, #0
 800d920:	d07a      	beq.n	800da18 <_malloc_r+0x2a4>
 800d922:	4673      	mov	r3, lr
 800d924:	4202      	tst	r2, r0
 800d926:	d1e1      	bne.n	800d8ec <_malloc_r+0x178>
 800d928:	3304      	adds	r3, #4
 800d92a:	0052      	lsls	r2, r2, #1
 800d92c:	e7fa      	b.n	800d924 <_malloc_r+0x1b0>
 800d92e:	0a42      	lsrs	r2, r0, #9
 800d930:	2a04      	cmp	r2, #4
 800d932:	d815      	bhi.n	800d960 <_malloc_r+0x1ec>
 800d934:	0982      	lsrs	r2, r0, #6
 800d936:	3238      	adds	r2, #56	; 0x38
 800d938:	1c57      	adds	r7, r2, #1
 800d93a:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 800d93e:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 800d942:	45be      	cmp	lr, r7
 800d944:	d126      	bne.n	800d994 <_malloc_r+0x220>
 800d946:	2001      	movs	r0, #1
 800d948:	1092      	asrs	r2, r2, #2
 800d94a:	fa00 f202 	lsl.w	r2, r0, r2
 800d94e:	6868      	ldr	r0, [r5, #4]
 800d950:	4310      	orrs	r0, r2
 800d952:	6068      	str	r0, [r5, #4]
 800d954:	f8c6 e00c 	str.w	lr, [r6, #12]
 800d958:	60b7      	str	r7, [r6, #8]
 800d95a:	f8ce 6008 	str.w	r6, [lr, #8]
 800d95e:	e7b3      	b.n	800d8c8 <_malloc_r+0x154>
 800d960:	2a14      	cmp	r2, #20
 800d962:	d801      	bhi.n	800d968 <_malloc_r+0x1f4>
 800d964:	325b      	adds	r2, #91	; 0x5b
 800d966:	e7e7      	b.n	800d938 <_malloc_r+0x1c4>
 800d968:	2a54      	cmp	r2, #84	; 0x54
 800d96a:	d802      	bhi.n	800d972 <_malloc_r+0x1fe>
 800d96c:	0b02      	lsrs	r2, r0, #12
 800d96e:	326e      	adds	r2, #110	; 0x6e
 800d970:	e7e2      	b.n	800d938 <_malloc_r+0x1c4>
 800d972:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800d976:	d802      	bhi.n	800d97e <_malloc_r+0x20a>
 800d978:	0bc2      	lsrs	r2, r0, #15
 800d97a:	3277      	adds	r2, #119	; 0x77
 800d97c:	e7dc      	b.n	800d938 <_malloc_r+0x1c4>
 800d97e:	f240 5754 	movw	r7, #1364	; 0x554
 800d982:	42ba      	cmp	r2, r7
 800d984:	bf9a      	itte	ls
 800d986:	0c82      	lsrls	r2, r0, #18
 800d988:	327c      	addls	r2, #124	; 0x7c
 800d98a:	227e      	movhi	r2, #126	; 0x7e
 800d98c:	e7d4      	b.n	800d938 <_malloc_r+0x1c4>
 800d98e:	68bf      	ldr	r7, [r7, #8]
 800d990:	45be      	cmp	lr, r7
 800d992:	d004      	beq.n	800d99e <_malloc_r+0x22a>
 800d994:	687a      	ldr	r2, [r7, #4]
 800d996:	f022 0203 	bic.w	r2, r2, #3
 800d99a:	4290      	cmp	r0, r2
 800d99c:	d3f7      	bcc.n	800d98e <_malloc_r+0x21a>
 800d99e:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 800d9a2:	e7d7      	b.n	800d954 <_malloc_r+0x1e0>
 800d9a4:	6870      	ldr	r0, [r6, #4]
 800d9a6:	68f7      	ldr	r7, [r6, #12]
 800d9a8:	f020 0003 	bic.w	r0, r0, #3
 800d9ac:	eba0 0a04 	sub.w	sl, r0, r4
 800d9b0:	f1ba 0f0f 	cmp.w	sl, #15
 800d9b4:	dd10      	ble.n	800d9d8 <_malloc_r+0x264>
 800d9b6:	68b2      	ldr	r2, [r6, #8]
 800d9b8:	1933      	adds	r3, r6, r4
 800d9ba:	f044 0401 	orr.w	r4, r4, #1
 800d9be:	6074      	str	r4, [r6, #4]
 800d9c0:	60d7      	str	r7, [r2, #12]
 800d9c2:	60ba      	str	r2, [r7, #8]
 800d9c4:	f04a 0201 	orr.w	r2, sl, #1
 800d9c8:	616b      	str	r3, [r5, #20]
 800d9ca:	612b      	str	r3, [r5, #16]
 800d9cc:	60d9      	str	r1, [r3, #12]
 800d9ce:	6099      	str	r1, [r3, #8]
 800d9d0:	605a      	str	r2, [r3, #4]
 800d9d2:	f846 a000 	str.w	sl, [r6, r0]
 800d9d6:	e6ff      	b.n	800d7d8 <_malloc_r+0x64>
 800d9d8:	f1ba 0f00 	cmp.w	sl, #0
 800d9dc:	db0f      	blt.n	800d9fe <_malloc_r+0x28a>
 800d9de:	4430      	add	r0, r6
 800d9e0:	6843      	ldr	r3, [r0, #4]
 800d9e2:	f043 0301 	orr.w	r3, r3, #1
 800d9e6:	6043      	str	r3, [r0, #4]
 800d9e8:	f856 3f08 	ldr.w	r3, [r6, #8]!
 800d9ec:	4648      	mov	r0, r9
 800d9ee:	60df      	str	r7, [r3, #12]
 800d9f0:	60bb      	str	r3, [r7, #8]
 800d9f2:	f000 f92d 	bl	800dc50 <__malloc_unlock>
 800d9f6:	4630      	mov	r0, r6
 800d9f8:	b003      	add	sp, #12
 800d9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9fe:	463e      	mov	r6, r7
 800da00:	e77a      	b.n	800d8f8 <_malloc_r+0x184>
 800da02:	f85c 0908 	ldr.w	r0, [ip], #-8
 800da06:	3b01      	subs	r3, #1
 800da08:	4584      	cmp	ip, r0
 800da0a:	f43f af7e 	beq.w	800d90a <_malloc_r+0x196>
 800da0e:	e782      	b.n	800d916 <_malloc_r+0x1a2>
 800da10:	20000280 	.word	0x20000280
 800da14:	20000288 	.word	0x20000288
 800da18:	f8d5 b008 	ldr.w	fp, [r5, #8]
 800da1c:	f8db 6004 	ldr.w	r6, [fp, #4]
 800da20:	f026 0603 	bic.w	r6, r6, #3
 800da24:	42b4      	cmp	r4, r6
 800da26:	d803      	bhi.n	800da30 <_malloc_r+0x2bc>
 800da28:	1b33      	subs	r3, r6, r4
 800da2a:	2b0f      	cmp	r3, #15
 800da2c:	f300 8095 	bgt.w	800db5a <_malloc_r+0x3e6>
 800da30:	4a4f      	ldr	r2, [pc, #316]	; (800db70 <_malloc_r+0x3fc>)
 800da32:	eb0b 0306 	add.w	r3, fp, r6
 800da36:	6817      	ldr	r7, [r2, #0]
 800da38:	4a4e      	ldr	r2, [pc, #312]	; (800db74 <_malloc_r+0x400>)
 800da3a:	3710      	adds	r7, #16
 800da3c:	6811      	ldr	r1, [r2, #0]
 800da3e:	4427      	add	r7, r4
 800da40:	3101      	adds	r1, #1
 800da42:	d005      	beq.n	800da50 <_malloc_r+0x2dc>
 800da44:	494c      	ldr	r1, [pc, #304]	; (800db78 <_malloc_r+0x404>)
 800da46:	3901      	subs	r1, #1
 800da48:	440f      	add	r7, r1
 800da4a:	3101      	adds	r1, #1
 800da4c:	4249      	negs	r1, r1
 800da4e:	400f      	ands	r7, r1
 800da50:	4639      	mov	r1, r7
 800da52:	4648      	mov	r0, r9
 800da54:	9201      	str	r2, [sp, #4]
 800da56:	9300      	str	r3, [sp, #0]
 800da58:	f000 fad2 	bl	800e000 <_sbrk_r>
 800da5c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 800da60:	4680      	mov	r8, r0
 800da62:	d055      	beq.n	800db10 <_malloc_r+0x39c>
 800da64:	9b00      	ldr	r3, [sp, #0]
 800da66:	9a01      	ldr	r2, [sp, #4]
 800da68:	4283      	cmp	r3, r0
 800da6a:	d901      	bls.n	800da70 <_malloc_r+0x2fc>
 800da6c:	45ab      	cmp	fp, r5
 800da6e:	d14f      	bne.n	800db10 <_malloc_r+0x39c>
 800da70:	4842      	ldr	r0, [pc, #264]	; (800db7c <_malloc_r+0x408>)
 800da72:	4543      	cmp	r3, r8
 800da74:	6801      	ldr	r1, [r0, #0]
 800da76:	4682      	mov	sl, r0
 800da78:	eb07 0e01 	add.w	lr, r7, r1
 800da7c:	f8c0 e000 	str.w	lr, [r0]
 800da80:	493f      	ldr	r1, [pc, #252]	; (800db80 <_malloc_r+0x40c>)
 800da82:	d113      	bne.n	800daac <_malloc_r+0x338>
 800da84:	420b      	tst	r3, r1
 800da86:	d111      	bne.n	800daac <_malloc_r+0x338>
 800da88:	68ab      	ldr	r3, [r5, #8]
 800da8a:	443e      	add	r6, r7
 800da8c:	f046 0601 	orr.w	r6, r6, #1
 800da90:	605e      	str	r6, [r3, #4]
 800da92:	4a3c      	ldr	r2, [pc, #240]	; (800db84 <_malloc_r+0x410>)
 800da94:	f8da 3000 	ldr.w	r3, [sl]
 800da98:	6811      	ldr	r1, [r2, #0]
 800da9a:	428b      	cmp	r3, r1
 800da9c:	bf88      	it	hi
 800da9e:	6013      	strhi	r3, [r2, #0]
 800daa0:	4a39      	ldr	r2, [pc, #228]	; (800db88 <_malloc_r+0x414>)
 800daa2:	6811      	ldr	r1, [r2, #0]
 800daa4:	428b      	cmp	r3, r1
 800daa6:	bf88      	it	hi
 800daa8:	6013      	strhi	r3, [r2, #0]
 800daaa:	e031      	b.n	800db10 <_malloc_r+0x39c>
 800daac:	6810      	ldr	r0, [r2, #0]
 800daae:	3001      	adds	r0, #1
 800dab0:	bf1b      	ittet	ne
 800dab2:	eba8 0303 	subne.w	r3, r8, r3
 800dab6:	4473      	addne	r3, lr
 800dab8:	f8c2 8000 	streq.w	r8, [r2]
 800dabc:	f8ca 3000 	strne.w	r3, [sl]
 800dac0:	f018 0007 	ands.w	r0, r8, #7
 800dac4:	bf1c      	itt	ne
 800dac6:	f1c0 0008 	rsbne	r0, r0, #8
 800daca:	4480      	addne	r8, r0
 800dacc:	4b2a      	ldr	r3, [pc, #168]	; (800db78 <_malloc_r+0x404>)
 800dace:	4447      	add	r7, r8
 800dad0:	4418      	add	r0, r3
 800dad2:	400f      	ands	r7, r1
 800dad4:	1bc7      	subs	r7, r0, r7
 800dad6:	4639      	mov	r1, r7
 800dad8:	4648      	mov	r0, r9
 800dada:	f000 fa91 	bl	800e000 <_sbrk_r>
 800dade:	1c43      	adds	r3, r0, #1
 800dae0:	bf04      	itt	eq
 800dae2:	4640      	moveq	r0, r8
 800dae4:	2700      	moveq	r7, #0
 800dae6:	f8da 3000 	ldr.w	r3, [sl]
 800daea:	eba0 0008 	sub.w	r0, r0, r8
 800daee:	443b      	add	r3, r7
 800daf0:	4407      	add	r7, r0
 800daf2:	f047 0701 	orr.w	r7, r7, #1
 800daf6:	45ab      	cmp	fp, r5
 800daf8:	f8c5 8008 	str.w	r8, [r5, #8]
 800dafc:	f8ca 3000 	str.w	r3, [sl]
 800db00:	f8c8 7004 	str.w	r7, [r8, #4]
 800db04:	d0c5      	beq.n	800da92 <_malloc_r+0x31e>
 800db06:	2e0f      	cmp	r6, #15
 800db08:	d810      	bhi.n	800db2c <_malloc_r+0x3b8>
 800db0a:	2301      	movs	r3, #1
 800db0c:	f8c8 3004 	str.w	r3, [r8, #4]
 800db10:	68ab      	ldr	r3, [r5, #8]
 800db12:	685a      	ldr	r2, [r3, #4]
 800db14:	f022 0203 	bic.w	r2, r2, #3
 800db18:	4294      	cmp	r4, r2
 800db1a:	eba2 0304 	sub.w	r3, r2, r4
 800db1e:	d801      	bhi.n	800db24 <_malloc_r+0x3b0>
 800db20:	2b0f      	cmp	r3, #15
 800db22:	dc1a      	bgt.n	800db5a <_malloc_r+0x3e6>
 800db24:	4648      	mov	r0, r9
 800db26:	f000 f893 	bl	800dc50 <__malloc_unlock>
 800db2a:	e630      	b.n	800d78e <_malloc_r+0x1a>
 800db2c:	2205      	movs	r2, #5
 800db2e:	f8db 3004 	ldr.w	r3, [fp, #4]
 800db32:	3e0c      	subs	r6, #12
 800db34:	f026 0607 	bic.w	r6, r6, #7
 800db38:	f003 0301 	and.w	r3, r3, #1
 800db3c:	4333      	orrs	r3, r6
 800db3e:	f8cb 3004 	str.w	r3, [fp, #4]
 800db42:	2e0f      	cmp	r6, #15
 800db44:	eb0b 0306 	add.w	r3, fp, r6
 800db48:	605a      	str	r2, [r3, #4]
 800db4a:	609a      	str	r2, [r3, #8]
 800db4c:	d9a1      	bls.n	800da92 <_malloc_r+0x31e>
 800db4e:	f10b 0108 	add.w	r1, fp, #8
 800db52:	4648      	mov	r0, r9
 800db54:	f002 feba 	bl	80108cc <_free_r>
 800db58:	e79b      	b.n	800da92 <_malloc_r+0x31e>
 800db5a:	68ae      	ldr	r6, [r5, #8]
 800db5c:	f044 0201 	orr.w	r2, r4, #1
 800db60:	f043 0301 	orr.w	r3, r3, #1
 800db64:	4434      	add	r4, r6
 800db66:	6072      	str	r2, [r6, #4]
 800db68:	60ac      	str	r4, [r5, #8]
 800db6a:	6063      	str	r3, [r4, #4]
 800db6c:	e634      	b.n	800d7d8 <_malloc_r+0x64>
 800db6e:	bf00      	nop
 800db70:	20000a00 	.word	0x20000a00
 800db74:	20000688 	.word	0x20000688
 800db78:	00001000 	.word	0x00001000
 800db7c:	200009d0 	.word	0x200009d0
 800db80:	00000fff 	.word	0x00000fff
 800db84:	200009f8 	.word	0x200009f8
 800db88:	200009fc 	.word	0x200009fc

0800db8c <__ascii_mbtowc>:
 800db8c:	b082      	sub	sp, #8
 800db8e:	b901      	cbnz	r1, 800db92 <__ascii_mbtowc+0x6>
 800db90:	a901      	add	r1, sp, #4
 800db92:	b142      	cbz	r2, 800dba6 <__ascii_mbtowc+0x1a>
 800db94:	b14b      	cbz	r3, 800dbaa <__ascii_mbtowc+0x1e>
 800db96:	7813      	ldrb	r3, [r2, #0]
 800db98:	600b      	str	r3, [r1, #0]
 800db9a:	7812      	ldrb	r2, [r2, #0]
 800db9c:	1c10      	adds	r0, r2, #0
 800db9e:	bf18      	it	ne
 800dba0:	2001      	movne	r0, #1
 800dba2:	b002      	add	sp, #8
 800dba4:	4770      	bx	lr
 800dba6:	4610      	mov	r0, r2
 800dba8:	e7fb      	b.n	800dba2 <__ascii_mbtowc+0x16>
 800dbaa:	f06f 0001 	mvn.w	r0, #1
 800dbae:	e7f8      	b.n	800dba2 <__ascii_mbtowc+0x16>

0800dbb0 <memchr>:
 800dbb0:	b510      	push	{r4, lr}
 800dbb2:	b2c9      	uxtb	r1, r1
 800dbb4:	4402      	add	r2, r0
 800dbb6:	4290      	cmp	r0, r2
 800dbb8:	4603      	mov	r3, r0
 800dbba:	d101      	bne.n	800dbc0 <memchr+0x10>
 800dbbc:	2000      	movs	r0, #0
 800dbbe:	bd10      	pop	{r4, pc}
 800dbc0:	781c      	ldrb	r4, [r3, #0]
 800dbc2:	3001      	adds	r0, #1
 800dbc4:	428c      	cmp	r4, r1
 800dbc6:	d1f6      	bne.n	800dbb6 <memchr+0x6>
 800dbc8:	4618      	mov	r0, r3
 800dbca:	bd10      	pop	{r4, pc}

0800dbcc <memcmp>:
 800dbcc:	b510      	push	{r4, lr}
 800dbce:	3901      	subs	r1, #1
 800dbd0:	4402      	add	r2, r0
 800dbd2:	4290      	cmp	r0, r2
 800dbd4:	d101      	bne.n	800dbda <memcmp+0xe>
 800dbd6:	2000      	movs	r0, #0
 800dbd8:	bd10      	pop	{r4, pc}
 800dbda:	f810 3b01 	ldrb.w	r3, [r0], #1
 800dbde:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800dbe2:	42a3      	cmp	r3, r4
 800dbe4:	d0f5      	beq.n	800dbd2 <memcmp+0x6>
 800dbe6:	1b18      	subs	r0, r3, r4
 800dbe8:	bd10      	pop	{r4, pc}

0800dbea <memcpy>:
 800dbea:	b510      	push	{r4, lr}
 800dbec:	1e43      	subs	r3, r0, #1
 800dbee:	440a      	add	r2, r1
 800dbf0:	4291      	cmp	r1, r2
 800dbf2:	d100      	bne.n	800dbf6 <memcpy+0xc>
 800dbf4:	bd10      	pop	{r4, pc}
 800dbf6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800dbfa:	f803 4f01 	strb.w	r4, [r3, #1]!
 800dbfe:	e7f7      	b.n	800dbf0 <memcpy+0x6>

0800dc00 <memmove>:
 800dc00:	4288      	cmp	r0, r1
 800dc02:	b510      	push	{r4, lr}
 800dc04:	eb01 0302 	add.w	r3, r1, r2
 800dc08:	d803      	bhi.n	800dc12 <memmove+0x12>
 800dc0a:	1e42      	subs	r2, r0, #1
 800dc0c:	4299      	cmp	r1, r3
 800dc0e:	d10c      	bne.n	800dc2a <memmove+0x2a>
 800dc10:	bd10      	pop	{r4, pc}
 800dc12:	4298      	cmp	r0, r3
 800dc14:	d2f9      	bcs.n	800dc0a <memmove+0xa>
 800dc16:	1881      	adds	r1, r0, r2
 800dc18:	1ad2      	subs	r2, r2, r3
 800dc1a:	42d3      	cmn	r3, r2
 800dc1c:	d100      	bne.n	800dc20 <memmove+0x20>
 800dc1e:	bd10      	pop	{r4, pc}
 800dc20:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800dc24:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800dc28:	e7f7      	b.n	800dc1a <memmove+0x1a>
 800dc2a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800dc2e:	f802 4f01 	strb.w	r4, [r2, #1]!
 800dc32:	e7eb      	b.n	800dc0c <memmove+0xc>

0800dc34 <memset>:
 800dc34:	4603      	mov	r3, r0
 800dc36:	4402      	add	r2, r0
 800dc38:	4293      	cmp	r3, r2
 800dc3a:	d100      	bne.n	800dc3e <memset+0xa>
 800dc3c:	4770      	bx	lr
 800dc3e:	f803 1b01 	strb.w	r1, [r3], #1
 800dc42:	e7f9      	b.n	800dc38 <memset+0x4>

0800dc44 <__malloc_lock>:
 800dc44:	4801      	ldr	r0, [pc, #4]	; (800dc4c <__malloc_lock+0x8>)
 800dc46:	f7ff bd17 	b.w	800d678 <__retarget_lock_acquire_recursive>
 800dc4a:	bf00      	nop
 800dc4c:	20000b14 	.word	0x20000b14

0800dc50 <__malloc_unlock>:
 800dc50:	4801      	ldr	r0, [pc, #4]	; (800dc58 <__malloc_unlock+0x8>)
 800dc52:	f7ff bd13 	b.w	800d67c <__retarget_lock_release_recursive>
 800dc56:	bf00      	nop
 800dc58:	20000b14 	.word	0x20000b14

0800dc5c <_putc_r>:
 800dc5c:	b570      	push	{r4, r5, r6, lr}
 800dc5e:	460d      	mov	r5, r1
 800dc60:	4614      	mov	r4, r2
 800dc62:	4606      	mov	r6, r0
 800dc64:	b118      	cbz	r0, 800dc6e <_putc_r+0x12>
 800dc66:	6983      	ldr	r3, [r0, #24]
 800dc68:	b90b      	cbnz	r3, 800dc6e <_putc_r+0x12>
 800dc6a:	f002 fd57 	bl	801071c <__sinit>
 800dc6e:	4b1c      	ldr	r3, [pc, #112]	; (800dce0 <_putc_r+0x84>)
 800dc70:	429c      	cmp	r4, r3
 800dc72:	d124      	bne.n	800dcbe <_putc_r+0x62>
 800dc74:	6874      	ldr	r4, [r6, #4]
 800dc76:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dc78:	07d8      	lsls	r0, r3, #31
 800dc7a:	d405      	bmi.n	800dc88 <_putc_r+0x2c>
 800dc7c:	89a3      	ldrh	r3, [r4, #12]
 800dc7e:	0599      	lsls	r1, r3, #22
 800dc80:	d402      	bmi.n	800dc88 <_putc_r+0x2c>
 800dc82:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dc84:	f7ff fcf8 	bl	800d678 <__retarget_lock_acquire_recursive>
 800dc88:	68a3      	ldr	r3, [r4, #8]
 800dc8a:	3b01      	subs	r3, #1
 800dc8c:	2b00      	cmp	r3, #0
 800dc8e:	60a3      	str	r3, [r4, #8]
 800dc90:	da05      	bge.n	800dc9e <_putc_r+0x42>
 800dc92:	69a2      	ldr	r2, [r4, #24]
 800dc94:	4293      	cmp	r3, r2
 800dc96:	db1c      	blt.n	800dcd2 <_putc_r+0x76>
 800dc98:	b2eb      	uxtb	r3, r5
 800dc9a:	2b0a      	cmp	r3, #10
 800dc9c:	d019      	beq.n	800dcd2 <_putc_r+0x76>
 800dc9e:	6823      	ldr	r3, [r4, #0]
 800dca0:	1c5a      	adds	r2, r3, #1
 800dca2:	6022      	str	r2, [r4, #0]
 800dca4:	701d      	strb	r5, [r3, #0]
 800dca6:	b2ed      	uxtb	r5, r5
 800dca8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dcaa:	07da      	lsls	r2, r3, #31
 800dcac:	d405      	bmi.n	800dcba <_putc_r+0x5e>
 800dcae:	89a3      	ldrh	r3, [r4, #12]
 800dcb0:	059b      	lsls	r3, r3, #22
 800dcb2:	d402      	bmi.n	800dcba <_putc_r+0x5e>
 800dcb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dcb6:	f7ff fce1 	bl	800d67c <__retarget_lock_release_recursive>
 800dcba:	4628      	mov	r0, r5
 800dcbc:	bd70      	pop	{r4, r5, r6, pc}
 800dcbe:	4b09      	ldr	r3, [pc, #36]	; (800dce4 <_putc_r+0x88>)
 800dcc0:	429c      	cmp	r4, r3
 800dcc2:	d101      	bne.n	800dcc8 <_putc_r+0x6c>
 800dcc4:	68b4      	ldr	r4, [r6, #8]
 800dcc6:	e7d6      	b.n	800dc76 <_putc_r+0x1a>
 800dcc8:	4b07      	ldr	r3, [pc, #28]	; (800dce8 <_putc_r+0x8c>)
 800dcca:	429c      	cmp	r4, r3
 800dccc:	bf08      	it	eq
 800dcce:	68f4      	ldreq	r4, [r6, #12]
 800dcd0:	e7d1      	b.n	800dc76 <_putc_r+0x1a>
 800dcd2:	4629      	mov	r1, r5
 800dcd4:	4622      	mov	r2, r4
 800dcd6:	4630      	mov	r0, r6
 800dcd8:	f001 fc22 	bl	800f520 <__swbuf_r>
 800dcdc:	4605      	mov	r5, r0
 800dcde:	e7e3      	b.n	800dca8 <_putc_r+0x4c>
 800dce0:	080130b0 	.word	0x080130b0
 800dce4:	080130d0 	.word	0x080130d0
 800dce8:	08013090 	.word	0x08013090

0800dcec <realloc>:
 800dcec:	4b02      	ldr	r3, [pc, #8]	; (800dcf8 <realloc+0xc>)
 800dcee:	460a      	mov	r2, r1
 800dcf0:	4601      	mov	r1, r0
 800dcf2:	6818      	ldr	r0, [r3, #0]
 800dcf4:	f000 b802 	b.w	800dcfc <_realloc_r>
 800dcf8:	20000020 	.word	0x20000020

0800dcfc <_realloc_r>:
 800dcfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd00:	4682      	mov	sl, r0
 800dd02:	460c      	mov	r4, r1
 800dd04:	b929      	cbnz	r1, 800dd12 <_realloc_r+0x16>
 800dd06:	4611      	mov	r1, r2
 800dd08:	b003      	add	sp, #12
 800dd0a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd0e:	f7ff bd31 	b.w	800d774 <_malloc_r>
 800dd12:	9201      	str	r2, [sp, #4]
 800dd14:	f7ff ff96 	bl	800dc44 <__malloc_lock>
 800dd18:	9a01      	ldr	r2, [sp, #4]
 800dd1a:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800dd1e:	f102 080b 	add.w	r8, r2, #11
 800dd22:	f1b8 0f16 	cmp.w	r8, #22
 800dd26:	f1a4 0908 	sub.w	r9, r4, #8
 800dd2a:	f025 0603 	bic.w	r6, r5, #3
 800dd2e:	d90a      	bls.n	800dd46 <_realloc_r+0x4a>
 800dd30:	f038 0807 	bics.w	r8, r8, #7
 800dd34:	d509      	bpl.n	800dd4a <_realloc_r+0x4e>
 800dd36:	230c      	movs	r3, #12
 800dd38:	2700      	movs	r7, #0
 800dd3a:	f8ca 3000 	str.w	r3, [sl]
 800dd3e:	4638      	mov	r0, r7
 800dd40:	b003      	add	sp, #12
 800dd42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd46:	f04f 0810 	mov.w	r8, #16
 800dd4a:	4590      	cmp	r8, r2
 800dd4c:	d3f3      	bcc.n	800dd36 <_realloc_r+0x3a>
 800dd4e:	45b0      	cmp	r8, r6
 800dd50:	f340 8148 	ble.w	800dfe4 <_realloc_r+0x2e8>
 800dd54:	4ba9      	ldr	r3, [pc, #676]	; (800dffc <_realloc_r+0x300>)
 800dd56:	eb09 0106 	add.w	r1, r9, r6
 800dd5a:	f8d3 e008 	ldr.w	lr, [r3, #8]
 800dd5e:	469b      	mov	fp, r3
 800dd60:	4571      	cmp	r1, lr
 800dd62:	684b      	ldr	r3, [r1, #4]
 800dd64:	d005      	beq.n	800dd72 <_realloc_r+0x76>
 800dd66:	f023 0001 	bic.w	r0, r3, #1
 800dd6a:	4408      	add	r0, r1
 800dd6c:	6840      	ldr	r0, [r0, #4]
 800dd6e:	07c7      	lsls	r7, r0, #31
 800dd70:	d447      	bmi.n	800de02 <_realloc_r+0x106>
 800dd72:	f023 0303 	bic.w	r3, r3, #3
 800dd76:	4571      	cmp	r1, lr
 800dd78:	eb06 0703 	add.w	r7, r6, r3
 800dd7c:	d119      	bne.n	800ddb2 <_realloc_r+0xb6>
 800dd7e:	f108 0010 	add.w	r0, r8, #16
 800dd82:	4287      	cmp	r7, r0
 800dd84:	db3f      	blt.n	800de06 <_realloc_r+0x10a>
 800dd86:	eba7 0708 	sub.w	r7, r7, r8
 800dd8a:	eb09 0308 	add.w	r3, r9, r8
 800dd8e:	f047 0701 	orr.w	r7, r7, #1
 800dd92:	f8cb 3008 	str.w	r3, [fp, #8]
 800dd96:	605f      	str	r7, [r3, #4]
 800dd98:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800dd9c:	4650      	mov	r0, sl
 800dd9e:	f003 0301 	and.w	r3, r3, #1
 800dda2:	ea43 0308 	orr.w	r3, r3, r8
 800dda6:	f844 3c04 	str.w	r3, [r4, #-4]
 800ddaa:	f7ff ff51 	bl	800dc50 <__malloc_unlock>
 800ddae:	4627      	mov	r7, r4
 800ddb0:	e7c5      	b.n	800dd3e <_realloc_r+0x42>
 800ddb2:	45b8      	cmp	r8, r7
 800ddb4:	dc27      	bgt.n	800de06 <_realloc_r+0x10a>
 800ddb6:	68cb      	ldr	r3, [r1, #12]
 800ddb8:	688a      	ldr	r2, [r1, #8]
 800ddba:	60d3      	str	r3, [r2, #12]
 800ddbc:	609a      	str	r2, [r3, #8]
 800ddbe:	eba7 0008 	sub.w	r0, r7, r8
 800ddc2:	280f      	cmp	r0, #15
 800ddc4:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800ddc8:	eb09 0207 	add.w	r2, r9, r7
 800ddcc:	f240 810c 	bls.w	800dfe8 <_realloc_r+0x2ec>
 800ddd0:	f003 0301 	and.w	r3, r3, #1
 800ddd4:	eb09 0108 	add.w	r1, r9, r8
 800ddd8:	ea43 0308 	orr.w	r3, r3, r8
 800dddc:	f040 0001 	orr.w	r0, r0, #1
 800dde0:	f8c9 3004 	str.w	r3, [r9, #4]
 800dde4:	6048      	str	r0, [r1, #4]
 800dde6:	6853      	ldr	r3, [r2, #4]
 800dde8:	3108      	adds	r1, #8
 800ddea:	f043 0301 	orr.w	r3, r3, #1
 800ddee:	6053      	str	r3, [r2, #4]
 800ddf0:	4650      	mov	r0, sl
 800ddf2:	f002 fd6b 	bl	80108cc <_free_r>
 800ddf6:	4650      	mov	r0, sl
 800ddf8:	f7ff ff2a 	bl	800dc50 <__malloc_unlock>
 800ddfc:	f109 0708 	add.w	r7, r9, #8
 800de00:	e79d      	b.n	800dd3e <_realloc_r+0x42>
 800de02:	2300      	movs	r3, #0
 800de04:	4619      	mov	r1, r3
 800de06:	07e8      	lsls	r0, r5, #31
 800de08:	f100 8085 	bmi.w	800df16 <_realloc_r+0x21a>
 800de0c:	f854 5c08 	ldr.w	r5, [r4, #-8]
 800de10:	eba9 0505 	sub.w	r5, r9, r5
 800de14:	6868      	ldr	r0, [r5, #4]
 800de16:	f020 0003 	bic.w	r0, r0, #3
 800de1a:	4430      	add	r0, r6
 800de1c:	2900      	cmp	r1, #0
 800de1e:	d077      	beq.n	800df10 <_realloc_r+0x214>
 800de20:	4571      	cmp	r1, lr
 800de22:	d151      	bne.n	800dec8 <_realloc_r+0x1cc>
 800de24:	4403      	add	r3, r0
 800de26:	f108 0110 	add.w	r1, r8, #16
 800de2a:	428b      	cmp	r3, r1
 800de2c:	db70      	blt.n	800df10 <_realloc_r+0x214>
 800de2e:	462f      	mov	r7, r5
 800de30:	68ea      	ldr	r2, [r5, #12]
 800de32:	f857 1f08 	ldr.w	r1, [r7, #8]!
 800de36:	60ca      	str	r2, [r1, #12]
 800de38:	6091      	str	r1, [r2, #8]
 800de3a:	1f32      	subs	r2, r6, #4
 800de3c:	2a24      	cmp	r2, #36	; 0x24
 800de3e:	d83c      	bhi.n	800deba <_realloc_r+0x1be>
 800de40:	2a13      	cmp	r2, #19
 800de42:	d937      	bls.n	800deb4 <_realloc_r+0x1b8>
 800de44:	6821      	ldr	r1, [r4, #0]
 800de46:	2a1b      	cmp	r2, #27
 800de48:	60a9      	str	r1, [r5, #8]
 800de4a:	6861      	ldr	r1, [r4, #4]
 800de4c:	60e9      	str	r1, [r5, #12]
 800de4e:	d81c      	bhi.n	800de8a <_realloc_r+0x18e>
 800de50:	f105 0210 	add.w	r2, r5, #16
 800de54:	f104 0108 	add.w	r1, r4, #8
 800de58:	6808      	ldr	r0, [r1, #0]
 800de5a:	6010      	str	r0, [r2, #0]
 800de5c:	6848      	ldr	r0, [r1, #4]
 800de5e:	6050      	str	r0, [r2, #4]
 800de60:	6889      	ldr	r1, [r1, #8]
 800de62:	6091      	str	r1, [r2, #8]
 800de64:	eba3 0308 	sub.w	r3, r3, r8
 800de68:	eb05 0208 	add.w	r2, r5, r8
 800de6c:	f043 0301 	orr.w	r3, r3, #1
 800de70:	f8cb 2008 	str.w	r2, [fp, #8]
 800de74:	6053      	str	r3, [r2, #4]
 800de76:	686b      	ldr	r3, [r5, #4]
 800de78:	f003 0301 	and.w	r3, r3, #1
 800de7c:	ea43 0308 	orr.w	r3, r3, r8
 800de80:	606b      	str	r3, [r5, #4]
 800de82:	4650      	mov	r0, sl
 800de84:	f7ff fee4 	bl	800dc50 <__malloc_unlock>
 800de88:	e759      	b.n	800dd3e <_realloc_r+0x42>
 800de8a:	68a1      	ldr	r1, [r4, #8]
 800de8c:	2a24      	cmp	r2, #36	; 0x24
 800de8e:	6129      	str	r1, [r5, #16]
 800de90:	68e1      	ldr	r1, [r4, #12]
 800de92:	bf18      	it	ne
 800de94:	f105 0218 	addne.w	r2, r5, #24
 800de98:	6169      	str	r1, [r5, #20]
 800de9a:	bf09      	itett	eq
 800de9c:	6922      	ldreq	r2, [r4, #16]
 800de9e:	f104 0110 	addne.w	r1, r4, #16
 800dea2:	61aa      	streq	r2, [r5, #24]
 800dea4:	6960      	ldreq	r0, [r4, #20]
 800dea6:	bf02      	ittt	eq
 800dea8:	f105 0220 	addeq.w	r2, r5, #32
 800deac:	f104 0118 	addeq.w	r1, r4, #24
 800deb0:	61e8      	streq	r0, [r5, #28]
 800deb2:	e7d1      	b.n	800de58 <_realloc_r+0x15c>
 800deb4:	463a      	mov	r2, r7
 800deb6:	4621      	mov	r1, r4
 800deb8:	e7ce      	b.n	800de58 <_realloc_r+0x15c>
 800deba:	4621      	mov	r1, r4
 800debc:	4638      	mov	r0, r7
 800debe:	9301      	str	r3, [sp, #4]
 800dec0:	f7ff fe9e 	bl	800dc00 <memmove>
 800dec4:	9b01      	ldr	r3, [sp, #4]
 800dec6:	e7cd      	b.n	800de64 <_realloc_r+0x168>
 800dec8:	18c7      	adds	r7, r0, r3
 800deca:	45b8      	cmp	r8, r7
 800decc:	dc20      	bgt.n	800df10 <_realloc_r+0x214>
 800dece:	68cb      	ldr	r3, [r1, #12]
 800ded0:	688a      	ldr	r2, [r1, #8]
 800ded2:	60d3      	str	r3, [r2, #12]
 800ded4:	609a      	str	r2, [r3, #8]
 800ded6:	4628      	mov	r0, r5
 800ded8:	68eb      	ldr	r3, [r5, #12]
 800deda:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800dede:	60d3      	str	r3, [r2, #12]
 800dee0:	609a      	str	r2, [r3, #8]
 800dee2:	1f32      	subs	r2, r6, #4
 800dee4:	2a24      	cmp	r2, #36	; 0x24
 800dee6:	d843      	bhi.n	800df70 <_realloc_r+0x274>
 800dee8:	2a13      	cmp	r2, #19
 800deea:	d93f      	bls.n	800df6c <_realloc_r+0x270>
 800deec:	6823      	ldr	r3, [r4, #0]
 800deee:	2a1b      	cmp	r2, #27
 800def0:	60ab      	str	r3, [r5, #8]
 800def2:	6863      	ldr	r3, [r4, #4]
 800def4:	60eb      	str	r3, [r5, #12]
 800def6:	d824      	bhi.n	800df42 <_realloc_r+0x246>
 800def8:	f105 0010 	add.w	r0, r5, #16
 800defc:	f104 0308 	add.w	r3, r4, #8
 800df00:	681a      	ldr	r2, [r3, #0]
 800df02:	6002      	str	r2, [r0, #0]
 800df04:	685a      	ldr	r2, [r3, #4]
 800df06:	6042      	str	r2, [r0, #4]
 800df08:	689b      	ldr	r3, [r3, #8]
 800df0a:	6083      	str	r3, [r0, #8]
 800df0c:	46a9      	mov	r9, r5
 800df0e:	e756      	b.n	800ddbe <_realloc_r+0xc2>
 800df10:	4580      	cmp	r8, r0
 800df12:	4607      	mov	r7, r0
 800df14:	dddf      	ble.n	800ded6 <_realloc_r+0x1da>
 800df16:	4611      	mov	r1, r2
 800df18:	4650      	mov	r0, sl
 800df1a:	f7ff fc2b 	bl	800d774 <_malloc_r>
 800df1e:	4607      	mov	r7, r0
 800df20:	2800      	cmp	r0, #0
 800df22:	d0ae      	beq.n	800de82 <_realloc_r+0x186>
 800df24:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800df28:	f1a0 0208 	sub.w	r2, r0, #8
 800df2c:	f023 0301 	bic.w	r3, r3, #1
 800df30:	444b      	add	r3, r9
 800df32:	429a      	cmp	r2, r3
 800df34:	d120      	bne.n	800df78 <_realloc_r+0x27c>
 800df36:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800df3a:	f027 0703 	bic.w	r7, r7, #3
 800df3e:	4437      	add	r7, r6
 800df40:	e73d      	b.n	800ddbe <_realloc_r+0xc2>
 800df42:	68a3      	ldr	r3, [r4, #8]
 800df44:	2a24      	cmp	r2, #36	; 0x24
 800df46:	612b      	str	r3, [r5, #16]
 800df48:	68e3      	ldr	r3, [r4, #12]
 800df4a:	bf18      	it	ne
 800df4c:	f105 0018 	addne.w	r0, r5, #24
 800df50:	616b      	str	r3, [r5, #20]
 800df52:	bf09      	itett	eq
 800df54:	6923      	ldreq	r3, [r4, #16]
 800df56:	f104 0310 	addne.w	r3, r4, #16
 800df5a:	61ab      	streq	r3, [r5, #24]
 800df5c:	6962      	ldreq	r2, [r4, #20]
 800df5e:	bf02      	ittt	eq
 800df60:	f105 0020 	addeq.w	r0, r5, #32
 800df64:	f104 0318 	addeq.w	r3, r4, #24
 800df68:	61ea      	streq	r2, [r5, #28]
 800df6a:	e7c9      	b.n	800df00 <_realloc_r+0x204>
 800df6c:	4623      	mov	r3, r4
 800df6e:	e7c7      	b.n	800df00 <_realloc_r+0x204>
 800df70:	4621      	mov	r1, r4
 800df72:	f7ff fe45 	bl	800dc00 <memmove>
 800df76:	e7c9      	b.n	800df0c <_realloc_r+0x210>
 800df78:	1f32      	subs	r2, r6, #4
 800df7a:	2a24      	cmp	r2, #36	; 0x24
 800df7c:	d82e      	bhi.n	800dfdc <_realloc_r+0x2e0>
 800df7e:	2a13      	cmp	r2, #19
 800df80:	d929      	bls.n	800dfd6 <_realloc_r+0x2da>
 800df82:	6823      	ldr	r3, [r4, #0]
 800df84:	2a1b      	cmp	r2, #27
 800df86:	6003      	str	r3, [r0, #0]
 800df88:	6863      	ldr	r3, [r4, #4]
 800df8a:	6043      	str	r3, [r0, #4]
 800df8c:	d80e      	bhi.n	800dfac <_realloc_r+0x2b0>
 800df8e:	f100 0308 	add.w	r3, r0, #8
 800df92:	f104 0208 	add.w	r2, r4, #8
 800df96:	6811      	ldr	r1, [r2, #0]
 800df98:	6019      	str	r1, [r3, #0]
 800df9a:	6851      	ldr	r1, [r2, #4]
 800df9c:	6059      	str	r1, [r3, #4]
 800df9e:	6892      	ldr	r2, [r2, #8]
 800dfa0:	609a      	str	r2, [r3, #8]
 800dfa2:	4621      	mov	r1, r4
 800dfa4:	4650      	mov	r0, sl
 800dfa6:	f002 fc91 	bl	80108cc <_free_r>
 800dfaa:	e76a      	b.n	800de82 <_realloc_r+0x186>
 800dfac:	68a3      	ldr	r3, [r4, #8]
 800dfae:	2a24      	cmp	r2, #36	; 0x24
 800dfb0:	6083      	str	r3, [r0, #8]
 800dfb2:	68e3      	ldr	r3, [r4, #12]
 800dfb4:	bf18      	it	ne
 800dfb6:	f104 0210 	addne.w	r2, r4, #16
 800dfba:	60c3      	str	r3, [r0, #12]
 800dfbc:	bf09      	itett	eq
 800dfbe:	6923      	ldreq	r3, [r4, #16]
 800dfc0:	f100 0310 	addne.w	r3, r0, #16
 800dfc4:	6103      	streq	r3, [r0, #16]
 800dfc6:	6961      	ldreq	r1, [r4, #20]
 800dfc8:	bf02      	ittt	eq
 800dfca:	f100 0318 	addeq.w	r3, r0, #24
 800dfce:	f104 0218 	addeq.w	r2, r4, #24
 800dfd2:	6141      	streq	r1, [r0, #20]
 800dfd4:	e7df      	b.n	800df96 <_realloc_r+0x29a>
 800dfd6:	4603      	mov	r3, r0
 800dfd8:	4622      	mov	r2, r4
 800dfda:	e7dc      	b.n	800df96 <_realloc_r+0x29a>
 800dfdc:	4621      	mov	r1, r4
 800dfde:	f7ff fe0f 	bl	800dc00 <memmove>
 800dfe2:	e7de      	b.n	800dfa2 <_realloc_r+0x2a6>
 800dfe4:	4637      	mov	r7, r6
 800dfe6:	e6ea      	b.n	800ddbe <_realloc_r+0xc2>
 800dfe8:	f003 0301 	and.w	r3, r3, #1
 800dfec:	431f      	orrs	r7, r3
 800dfee:	f8c9 7004 	str.w	r7, [r9, #4]
 800dff2:	6853      	ldr	r3, [r2, #4]
 800dff4:	f043 0301 	orr.w	r3, r3, #1
 800dff8:	6053      	str	r3, [r2, #4]
 800dffa:	e6fc      	b.n	800ddf6 <_realloc_r+0xfa>
 800dffc:	20000280 	.word	0x20000280

0800e000 <_sbrk_r>:
 800e000:	b538      	push	{r3, r4, r5, lr}
 800e002:	2300      	movs	r3, #0
 800e004:	4c05      	ldr	r4, [pc, #20]	; (800e01c <_sbrk_r+0x1c>)
 800e006:	4605      	mov	r5, r0
 800e008:	4608      	mov	r0, r1
 800e00a:	6023      	str	r3, [r4, #0]
 800e00c:	f003 f998 	bl	8011340 <_sbrk>
 800e010:	1c43      	adds	r3, r0, #1
 800e012:	d102      	bne.n	800e01a <_sbrk_r+0x1a>
 800e014:	6823      	ldr	r3, [r4, #0]
 800e016:	b103      	cbz	r3, 800e01a <_sbrk_r+0x1a>
 800e018:	602b      	str	r3, [r5, #0]
 800e01a:	bd38      	pop	{r3, r4, r5, pc}
 800e01c:	20000b20 	.word	0x20000b20

0800e020 <_raise_r>:
 800e020:	291f      	cmp	r1, #31
 800e022:	b538      	push	{r3, r4, r5, lr}
 800e024:	4604      	mov	r4, r0
 800e026:	460d      	mov	r5, r1
 800e028:	d904      	bls.n	800e034 <_raise_r+0x14>
 800e02a:	2316      	movs	r3, #22
 800e02c:	6003      	str	r3, [r0, #0]
 800e02e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e032:	bd38      	pop	{r3, r4, r5, pc}
 800e034:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800e036:	b112      	cbz	r2, 800e03e <_raise_r+0x1e>
 800e038:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800e03c:	b94b      	cbnz	r3, 800e052 <_raise_r+0x32>
 800e03e:	4620      	mov	r0, r4
 800e040:	f000 f830 	bl	800e0a4 <_getpid_r>
 800e044:	462a      	mov	r2, r5
 800e046:	4601      	mov	r1, r0
 800e048:	4620      	mov	r0, r4
 800e04a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e04e:	f000 b817 	b.w	800e080 <_kill_r>
 800e052:	2b01      	cmp	r3, #1
 800e054:	d00a      	beq.n	800e06c <_raise_r+0x4c>
 800e056:	1c59      	adds	r1, r3, #1
 800e058:	d103      	bne.n	800e062 <_raise_r+0x42>
 800e05a:	2316      	movs	r3, #22
 800e05c:	6003      	str	r3, [r0, #0]
 800e05e:	2001      	movs	r0, #1
 800e060:	bd38      	pop	{r3, r4, r5, pc}
 800e062:	2400      	movs	r4, #0
 800e064:	4628      	mov	r0, r5
 800e066:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800e06a:	4798      	blx	r3
 800e06c:	2000      	movs	r0, #0
 800e06e:	bd38      	pop	{r3, r4, r5, pc}

0800e070 <raise>:
 800e070:	4b02      	ldr	r3, [pc, #8]	; (800e07c <raise+0xc>)
 800e072:	4601      	mov	r1, r0
 800e074:	6818      	ldr	r0, [r3, #0]
 800e076:	f7ff bfd3 	b.w	800e020 <_raise_r>
 800e07a:	bf00      	nop
 800e07c:	20000020 	.word	0x20000020

0800e080 <_kill_r>:
 800e080:	b538      	push	{r3, r4, r5, lr}
 800e082:	2300      	movs	r3, #0
 800e084:	4c06      	ldr	r4, [pc, #24]	; (800e0a0 <_kill_r+0x20>)
 800e086:	4605      	mov	r5, r0
 800e088:	4608      	mov	r0, r1
 800e08a:	4611      	mov	r1, r2
 800e08c:	6023      	str	r3, [r4, #0]
 800e08e:	f003 f93f 	bl	8011310 <_kill>
 800e092:	1c43      	adds	r3, r0, #1
 800e094:	d102      	bne.n	800e09c <_kill_r+0x1c>
 800e096:	6823      	ldr	r3, [r4, #0]
 800e098:	b103      	cbz	r3, 800e09c <_kill_r+0x1c>
 800e09a:	602b      	str	r3, [r5, #0]
 800e09c:	bd38      	pop	{r3, r4, r5, pc}
 800e09e:	bf00      	nop
 800e0a0:	20000b20 	.word	0x20000b20

0800e0a4 <_getpid_r>:
 800e0a4:	f003 b924 	b.w	80112f0 <_getpid>

0800e0a8 <sprintf>:
 800e0a8:	b40e      	push	{r1, r2, r3}
 800e0aa:	f44f 7102 	mov.w	r1, #520	; 0x208
 800e0ae:	b500      	push	{lr}
 800e0b0:	b09c      	sub	sp, #112	; 0x70
 800e0b2:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e0b6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800e0ba:	9104      	str	r1, [sp, #16]
 800e0bc:	9107      	str	r1, [sp, #28]
 800e0be:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e0c2:	ab1d      	add	r3, sp, #116	; 0x74
 800e0c4:	9002      	str	r0, [sp, #8]
 800e0c6:	9006      	str	r0, [sp, #24]
 800e0c8:	4808      	ldr	r0, [pc, #32]	; (800e0ec <sprintf+0x44>)
 800e0ca:	f853 2b04 	ldr.w	r2, [r3], #4
 800e0ce:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e0d2:	6800      	ldr	r0, [r0, #0]
 800e0d4:	a902      	add	r1, sp, #8
 800e0d6:	9301      	str	r3, [sp, #4]
 800e0d8:	f000 fa50 	bl	800e57c <_svfprintf_r>
 800e0dc:	2200      	movs	r2, #0
 800e0de:	9b02      	ldr	r3, [sp, #8]
 800e0e0:	701a      	strb	r2, [r3, #0]
 800e0e2:	b01c      	add	sp, #112	; 0x70
 800e0e4:	f85d eb04 	ldr.w	lr, [sp], #4
 800e0e8:	b003      	add	sp, #12
 800e0ea:	4770      	bx	lr
 800e0ec:	20000020 	.word	0x20000020

0800e0f0 <__sread>:
 800e0f0:	b510      	push	{r4, lr}
 800e0f2:	460c      	mov	r4, r1
 800e0f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800e0f8:	f002 ffc4 	bl	8011084 <_read_r>
 800e0fc:	2800      	cmp	r0, #0
 800e0fe:	bfab      	itete	ge
 800e100:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800e102:	89a3      	ldrhlt	r3, [r4, #12]
 800e104:	181b      	addge	r3, r3, r0
 800e106:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800e10a:	bfac      	ite	ge
 800e10c:	6563      	strge	r3, [r4, #84]	; 0x54
 800e10e:	81a3      	strhlt	r3, [r4, #12]
 800e110:	bd10      	pop	{r4, pc}

0800e112 <__swrite>:
 800e112:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e116:	461f      	mov	r7, r3
 800e118:	898b      	ldrh	r3, [r1, #12]
 800e11a:	4605      	mov	r5, r0
 800e11c:	05db      	lsls	r3, r3, #23
 800e11e:	460c      	mov	r4, r1
 800e120:	4616      	mov	r6, r2
 800e122:	d505      	bpl.n	800e130 <__swrite+0x1e>
 800e124:	2302      	movs	r3, #2
 800e126:	2200      	movs	r2, #0
 800e128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800e12c:	f002 fcc6 	bl	8010abc <_lseek_r>
 800e130:	89a3      	ldrh	r3, [r4, #12]
 800e132:	4632      	mov	r2, r6
 800e134:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800e138:	81a3      	strh	r3, [r4, #12]
 800e13a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800e13e:	463b      	mov	r3, r7
 800e140:	4628      	mov	r0, r5
 800e142:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e146:	f001 ba57 	b.w	800f5f8 <_write_r>

0800e14a <__sseek>:
 800e14a:	b510      	push	{r4, lr}
 800e14c:	460c      	mov	r4, r1
 800e14e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800e152:	f002 fcb3 	bl	8010abc <_lseek_r>
 800e156:	1c43      	adds	r3, r0, #1
 800e158:	89a3      	ldrh	r3, [r4, #12]
 800e15a:	bf15      	itete	ne
 800e15c:	6560      	strne	r0, [r4, #84]	; 0x54
 800e15e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800e162:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800e166:	81a3      	strheq	r3, [r4, #12]
 800e168:	bf18      	it	ne
 800e16a:	81a3      	strhne	r3, [r4, #12]
 800e16c:	bd10      	pop	{r4, pc}

0800e16e <__sclose>:
 800e16e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800e172:	f001 bb3b 	b.w	800f7ec <_close_r>
	...

0800e178 <_strerror_r>:
 800e178:	b510      	push	{r4, lr}
 800e17a:	4604      	mov	r4, r0
 800e17c:	4608      	mov	r0, r1
 800e17e:	4611      	mov	r1, r2
 800e180:	288e      	cmp	r0, #142	; 0x8e
 800e182:	f200 812f 	bhi.w	800e3e4 <_strerror_r+0x26c>
 800e186:	e8df f010 	tbh	[pc, r0, lsl #1]
 800e18a:	0138      	.short	0x0138
 800e18c:	0091008f 	.word	0x0091008f
 800e190:	00950093 	.word	0x00950093
 800e194:	00990097 	.word	0x00990097
 800e198:	009d009b 	.word	0x009d009b
 800e19c:	00a300a1 	.word	0x00a300a1
 800e1a0:	00a900a7 	.word	0x00a900a7
 800e1a4:	00ad00ab 	.word	0x00ad00ab
 800e1a8:	00af012d 	.word	0x00af012d
 800e1ac:	00b300b1 	.word	0x00b300b1
 800e1b0:	00b700b5 	.word	0x00b700b5
 800e1b4:	00bf00bd 	.word	0x00bf00bd
 800e1b8:	00c700c5 	.word	0x00c700c5
 800e1bc:	00cb00c9 	.word	0x00cb00c9
 800e1c0:	00d100cd 	.word	0x00d100cd
 800e1c4:	00d700d5 	.word	0x00d700d5
 800e1c8:	00db00d9 	.word	0x00db00d9
 800e1cc:	00df00dd 	.word	0x00df00dd
 800e1d0:	00e300e1 	.word	0x00e300e1
 800e1d4:	012d012d 	.word	0x012d012d
 800e1d8:	012d012d 	.word	0x012d012d
 800e1dc:	012d012d 	.word	0x012d012d
 800e1e0:	012d012d 	.word	0x012d012d
 800e1e4:	00eb00e7 	.word	0x00eb00e7
 800e1e8:	012d012d 	.word	0x012d012d
 800e1ec:	012d012d 	.word	0x012d012d
 800e1f0:	012d012d 	.word	0x012d012d
 800e1f4:	012d012d 	.word	0x012d012d
 800e1f8:	012d012d 	.word	0x012d012d
 800e1fc:	012d012d 	.word	0x012d012d
 800e200:	00ed012d 	.word	0x00ed012d
 800e204:	00ef0107 	.word	0x00ef0107
 800e208:	012d00f1 	.word	0x012d00f1
 800e20c:	012d012d 	.word	0x012d012d
 800e210:	012d00f3 	.word	0x012d00f3
 800e214:	012d012d 	.word	0x012d012d
 800e218:	012d00f5 	.word	0x012d00f5
 800e21c:	00f9012d 	.word	0x00f9012d
 800e220:	012d012d 	.word	0x012d012d
 800e224:	012d00fb 	.word	0x012d00fb
 800e228:	012d012d 	.word	0x012d012d
 800e22c:	012d012d 	.word	0x012d012d
 800e230:	012d012d 	.word	0x012d012d
 800e234:	012d012d 	.word	0x012d012d
 800e238:	00fd012d 	.word	0x00fd012d
 800e23c:	00ff012d 	.word	0x00ff012d
 800e240:	01030101 	.word	0x01030101
 800e244:	012d012d 	.word	0x012d012d
 800e248:	012d0125 	.word	0x012d0125
 800e24c:	012d012d 	.word	0x012d012d
 800e250:	012d012d 	.word	0x012d012d
 800e254:	012d012d 	.word	0x012d012d
 800e258:	0113012d 	.word	0x0113012d
 800e25c:	01090105 	.word	0x01090105
 800e260:	010d010b 	.word	0x010d010b
 800e264:	012d010f 	.word	0x012d010f
 800e268:	01150111 	.word	0x01150111
 800e26c:	00e90119 	.word	0x00e90119
 800e270:	012b00c1 	.word	0x012b00c1
 800e274:	00cf00b9 	.word	0x00cf00b9
 800e278:	009f00bb 	.word	0x009f00bb
 800e27c:	012900a5 	.word	0x012900a5
 800e280:	012d00f7 	.word	0x012d00f7
 800e284:	00c30117 	.word	0x00c30117
 800e288:	011b011d 	.word	0x011b011d
 800e28c:	012d012d 	.word	0x012d012d
 800e290:	012d012d 	.word	0x012d012d
 800e294:	00d3012d 	.word	0x00d3012d
 800e298:	012d012d 	.word	0x012d012d
 800e29c:	00e5012d 	.word	0x00e5012d
 800e2a0:	011f0127 	.word	0x011f0127
 800e2a4:	01230121 	.word	0x01230121
 800e2a8:	4855      	ldr	r0, [pc, #340]	; (800e400 <_strerror_r+0x288>)
 800e2aa:	bd10      	pop	{r4, pc}
 800e2ac:	4855      	ldr	r0, [pc, #340]	; (800e404 <_strerror_r+0x28c>)
 800e2ae:	bd10      	pop	{r4, pc}
 800e2b0:	4855      	ldr	r0, [pc, #340]	; (800e408 <_strerror_r+0x290>)
 800e2b2:	bd10      	pop	{r4, pc}
 800e2b4:	4855      	ldr	r0, [pc, #340]	; (800e40c <_strerror_r+0x294>)
 800e2b6:	bd10      	pop	{r4, pc}
 800e2b8:	4855      	ldr	r0, [pc, #340]	; (800e410 <_strerror_r+0x298>)
 800e2ba:	bd10      	pop	{r4, pc}
 800e2bc:	4855      	ldr	r0, [pc, #340]	; (800e414 <_strerror_r+0x29c>)
 800e2be:	bd10      	pop	{r4, pc}
 800e2c0:	4855      	ldr	r0, [pc, #340]	; (800e418 <_strerror_r+0x2a0>)
 800e2c2:	bd10      	pop	{r4, pc}
 800e2c4:	4855      	ldr	r0, [pc, #340]	; (800e41c <_strerror_r+0x2a4>)
 800e2c6:	bd10      	pop	{r4, pc}
 800e2c8:	4855      	ldr	r0, [pc, #340]	; (800e420 <_strerror_r+0x2a8>)
 800e2ca:	bd10      	pop	{r4, pc}
 800e2cc:	4855      	ldr	r0, [pc, #340]	; (800e424 <_strerror_r+0x2ac>)
 800e2ce:	bd10      	pop	{r4, pc}
 800e2d0:	4855      	ldr	r0, [pc, #340]	; (800e428 <_strerror_r+0x2b0>)
 800e2d2:	bd10      	pop	{r4, pc}
 800e2d4:	4855      	ldr	r0, [pc, #340]	; (800e42c <_strerror_r+0x2b4>)
 800e2d6:	bd10      	pop	{r4, pc}
 800e2d8:	4855      	ldr	r0, [pc, #340]	; (800e430 <_strerror_r+0x2b8>)
 800e2da:	bd10      	pop	{r4, pc}
 800e2dc:	4855      	ldr	r0, [pc, #340]	; (800e434 <_strerror_r+0x2bc>)
 800e2de:	bd10      	pop	{r4, pc}
 800e2e0:	4855      	ldr	r0, [pc, #340]	; (800e438 <_strerror_r+0x2c0>)
 800e2e2:	bd10      	pop	{r4, pc}
 800e2e4:	4855      	ldr	r0, [pc, #340]	; (800e43c <_strerror_r+0x2c4>)
 800e2e6:	bd10      	pop	{r4, pc}
 800e2e8:	4855      	ldr	r0, [pc, #340]	; (800e440 <_strerror_r+0x2c8>)
 800e2ea:	bd10      	pop	{r4, pc}
 800e2ec:	4855      	ldr	r0, [pc, #340]	; (800e444 <_strerror_r+0x2cc>)
 800e2ee:	bd10      	pop	{r4, pc}
 800e2f0:	4855      	ldr	r0, [pc, #340]	; (800e448 <_strerror_r+0x2d0>)
 800e2f2:	bd10      	pop	{r4, pc}
 800e2f4:	4855      	ldr	r0, [pc, #340]	; (800e44c <_strerror_r+0x2d4>)
 800e2f6:	bd10      	pop	{r4, pc}
 800e2f8:	4855      	ldr	r0, [pc, #340]	; (800e450 <_strerror_r+0x2d8>)
 800e2fa:	bd10      	pop	{r4, pc}
 800e2fc:	4855      	ldr	r0, [pc, #340]	; (800e454 <_strerror_r+0x2dc>)
 800e2fe:	bd10      	pop	{r4, pc}
 800e300:	4855      	ldr	r0, [pc, #340]	; (800e458 <_strerror_r+0x2e0>)
 800e302:	bd10      	pop	{r4, pc}
 800e304:	4855      	ldr	r0, [pc, #340]	; (800e45c <_strerror_r+0x2e4>)
 800e306:	bd10      	pop	{r4, pc}
 800e308:	4855      	ldr	r0, [pc, #340]	; (800e460 <_strerror_r+0x2e8>)
 800e30a:	bd10      	pop	{r4, pc}
 800e30c:	4855      	ldr	r0, [pc, #340]	; (800e464 <_strerror_r+0x2ec>)
 800e30e:	bd10      	pop	{r4, pc}
 800e310:	4855      	ldr	r0, [pc, #340]	; (800e468 <_strerror_r+0x2f0>)
 800e312:	bd10      	pop	{r4, pc}
 800e314:	4855      	ldr	r0, [pc, #340]	; (800e46c <_strerror_r+0x2f4>)
 800e316:	bd10      	pop	{r4, pc}
 800e318:	4855      	ldr	r0, [pc, #340]	; (800e470 <_strerror_r+0x2f8>)
 800e31a:	bd10      	pop	{r4, pc}
 800e31c:	4855      	ldr	r0, [pc, #340]	; (800e474 <_strerror_r+0x2fc>)
 800e31e:	bd10      	pop	{r4, pc}
 800e320:	4855      	ldr	r0, [pc, #340]	; (800e478 <_strerror_r+0x300>)
 800e322:	bd10      	pop	{r4, pc}
 800e324:	4855      	ldr	r0, [pc, #340]	; (800e47c <_strerror_r+0x304>)
 800e326:	bd10      	pop	{r4, pc}
 800e328:	4855      	ldr	r0, [pc, #340]	; (800e480 <_strerror_r+0x308>)
 800e32a:	bd10      	pop	{r4, pc}
 800e32c:	4855      	ldr	r0, [pc, #340]	; (800e484 <_strerror_r+0x30c>)
 800e32e:	bd10      	pop	{r4, pc}
 800e330:	4855      	ldr	r0, [pc, #340]	; (800e488 <_strerror_r+0x310>)
 800e332:	bd10      	pop	{r4, pc}
 800e334:	4855      	ldr	r0, [pc, #340]	; (800e48c <_strerror_r+0x314>)
 800e336:	bd10      	pop	{r4, pc}
 800e338:	4855      	ldr	r0, [pc, #340]	; (800e490 <_strerror_r+0x318>)
 800e33a:	bd10      	pop	{r4, pc}
 800e33c:	4855      	ldr	r0, [pc, #340]	; (800e494 <_strerror_r+0x31c>)
 800e33e:	bd10      	pop	{r4, pc}
 800e340:	4855      	ldr	r0, [pc, #340]	; (800e498 <_strerror_r+0x320>)
 800e342:	bd10      	pop	{r4, pc}
 800e344:	4855      	ldr	r0, [pc, #340]	; (800e49c <_strerror_r+0x324>)
 800e346:	bd10      	pop	{r4, pc}
 800e348:	4855      	ldr	r0, [pc, #340]	; (800e4a0 <_strerror_r+0x328>)
 800e34a:	bd10      	pop	{r4, pc}
 800e34c:	4855      	ldr	r0, [pc, #340]	; (800e4a4 <_strerror_r+0x32c>)
 800e34e:	bd10      	pop	{r4, pc}
 800e350:	4855      	ldr	r0, [pc, #340]	; (800e4a8 <_strerror_r+0x330>)
 800e352:	bd10      	pop	{r4, pc}
 800e354:	4855      	ldr	r0, [pc, #340]	; (800e4ac <_strerror_r+0x334>)
 800e356:	bd10      	pop	{r4, pc}
 800e358:	4855      	ldr	r0, [pc, #340]	; (800e4b0 <_strerror_r+0x338>)
 800e35a:	bd10      	pop	{r4, pc}
 800e35c:	4855      	ldr	r0, [pc, #340]	; (800e4b4 <_strerror_r+0x33c>)
 800e35e:	bd10      	pop	{r4, pc}
 800e360:	4855      	ldr	r0, [pc, #340]	; (800e4b8 <_strerror_r+0x340>)
 800e362:	bd10      	pop	{r4, pc}
 800e364:	4855      	ldr	r0, [pc, #340]	; (800e4bc <_strerror_r+0x344>)
 800e366:	bd10      	pop	{r4, pc}
 800e368:	4855      	ldr	r0, [pc, #340]	; (800e4c0 <_strerror_r+0x348>)
 800e36a:	bd10      	pop	{r4, pc}
 800e36c:	4855      	ldr	r0, [pc, #340]	; (800e4c4 <_strerror_r+0x34c>)
 800e36e:	bd10      	pop	{r4, pc}
 800e370:	4855      	ldr	r0, [pc, #340]	; (800e4c8 <_strerror_r+0x350>)
 800e372:	bd10      	pop	{r4, pc}
 800e374:	4855      	ldr	r0, [pc, #340]	; (800e4cc <_strerror_r+0x354>)
 800e376:	bd10      	pop	{r4, pc}
 800e378:	4855      	ldr	r0, [pc, #340]	; (800e4d0 <_strerror_r+0x358>)
 800e37a:	bd10      	pop	{r4, pc}
 800e37c:	4855      	ldr	r0, [pc, #340]	; (800e4d4 <_strerror_r+0x35c>)
 800e37e:	bd10      	pop	{r4, pc}
 800e380:	4855      	ldr	r0, [pc, #340]	; (800e4d8 <_strerror_r+0x360>)
 800e382:	bd10      	pop	{r4, pc}
 800e384:	4855      	ldr	r0, [pc, #340]	; (800e4dc <_strerror_r+0x364>)
 800e386:	bd10      	pop	{r4, pc}
 800e388:	4855      	ldr	r0, [pc, #340]	; (800e4e0 <_strerror_r+0x368>)
 800e38a:	bd10      	pop	{r4, pc}
 800e38c:	4855      	ldr	r0, [pc, #340]	; (800e4e4 <_strerror_r+0x36c>)
 800e38e:	bd10      	pop	{r4, pc}
 800e390:	4855      	ldr	r0, [pc, #340]	; (800e4e8 <_strerror_r+0x370>)
 800e392:	bd10      	pop	{r4, pc}
 800e394:	4855      	ldr	r0, [pc, #340]	; (800e4ec <_strerror_r+0x374>)
 800e396:	bd10      	pop	{r4, pc}
 800e398:	4855      	ldr	r0, [pc, #340]	; (800e4f0 <_strerror_r+0x378>)
 800e39a:	bd10      	pop	{r4, pc}
 800e39c:	4855      	ldr	r0, [pc, #340]	; (800e4f4 <_strerror_r+0x37c>)
 800e39e:	bd10      	pop	{r4, pc}
 800e3a0:	4855      	ldr	r0, [pc, #340]	; (800e4f8 <_strerror_r+0x380>)
 800e3a2:	bd10      	pop	{r4, pc}
 800e3a4:	4855      	ldr	r0, [pc, #340]	; (800e4fc <_strerror_r+0x384>)
 800e3a6:	bd10      	pop	{r4, pc}
 800e3a8:	4855      	ldr	r0, [pc, #340]	; (800e500 <_strerror_r+0x388>)
 800e3aa:	bd10      	pop	{r4, pc}
 800e3ac:	4855      	ldr	r0, [pc, #340]	; (800e504 <_strerror_r+0x38c>)
 800e3ae:	bd10      	pop	{r4, pc}
 800e3b0:	4855      	ldr	r0, [pc, #340]	; (800e508 <_strerror_r+0x390>)
 800e3b2:	bd10      	pop	{r4, pc}
 800e3b4:	4855      	ldr	r0, [pc, #340]	; (800e50c <_strerror_r+0x394>)
 800e3b6:	bd10      	pop	{r4, pc}
 800e3b8:	4855      	ldr	r0, [pc, #340]	; (800e510 <_strerror_r+0x398>)
 800e3ba:	bd10      	pop	{r4, pc}
 800e3bc:	4855      	ldr	r0, [pc, #340]	; (800e514 <_strerror_r+0x39c>)
 800e3be:	bd10      	pop	{r4, pc}
 800e3c0:	4855      	ldr	r0, [pc, #340]	; (800e518 <_strerror_r+0x3a0>)
 800e3c2:	bd10      	pop	{r4, pc}
 800e3c4:	4855      	ldr	r0, [pc, #340]	; (800e51c <_strerror_r+0x3a4>)
 800e3c6:	bd10      	pop	{r4, pc}
 800e3c8:	4855      	ldr	r0, [pc, #340]	; (800e520 <_strerror_r+0x3a8>)
 800e3ca:	bd10      	pop	{r4, pc}
 800e3cc:	4855      	ldr	r0, [pc, #340]	; (800e524 <_strerror_r+0x3ac>)
 800e3ce:	bd10      	pop	{r4, pc}
 800e3d0:	4855      	ldr	r0, [pc, #340]	; (800e528 <_strerror_r+0x3b0>)
 800e3d2:	bd10      	pop	{r4, pc}
 800e3d4:	4855      	ldr	r0, [pc, #340]	; (800e52c <_strerror_r+0x3b4>)
 800e3d6:	bd10      	pop	{r4, pc}
 800e3d8:	4855      	ldr	r0, [pc, #340]	; (800e530 <_strerror_r+0x3b8>)
 800e3da:	bd10      	pop	{r4, pc}
 800e3dc:	4855      	ldr	r0, [pc, #340]	; (800e534 <_strerror_r+0x3bc>)
 800e3de:	bd10      	pop	{r4, pc}
 800e3e0:	4855      	ldr	r0, [pc, #340]	; (800e538 <_strerror_r+0x3c0>)
 800e3e2:	bd10      	pop	{r4, pc}
 800e3e4:	2b00      	cmp	r3, #0
 800e3e6:	bf14      	ite	ne
 800e3e8:	461a      	movne	r2, r3
 800e3ea:	4622      	moveq	r2, r4
 800e3ec:	f001 f896 	bl	800f51c <_user_strerror>
 800e3f0:	4b52      	ldr	r3, [pc, #328]	; (800e53c <_strerror_r+0x3c4>)
 800e3f2:	2800      	cmp	r0, #0
 800e3f4:	bf08      	it	eq
 800e3f6:	4618      	moveq	r0, r3
 800e3f8:	bd10      	pop	{r4, pc}
 800e3fa:	4851      	ldr	r0, [pc, #324]	; (800e540 <_strerror_r+0x3c8>)
 800e3fc:	bd10      	pop	{r4, pc}
 800e3fe:	bf00      	nop
 800e400:	080129a0 	.word	0x080129a0
 800e404:	080129aa 	.word	0x080129aa
 800e408:	080129c4 	.word	0x080129c4
 800e40c:	080129d4 	.word	0x080129d4
 800e410:	080129ec 	.word	0x080129ec
 800e414:	080129f6 	.word	0x080129f6
 800e418:	08012a10 	.word	0x08012a10
 800e41c:	08012a22 	.word	0x08012a22
 800e420:	08012a34 	.word	0x08012a34
 800e424:	08012a4d 	.word	0x08012a4d
 800e428:	08012a5d 	.word	0x08012a5d
 800e42c:	08012a69 	.word	0x08012a69
 800e430:	08012a86 	.word	0x08012a86
 800e434:	08012a98 	.word	0x08012a98
 800e438:	08012aa9 	.word	0x08012aa9
 800e43c:	08012abb 	.word	0x08012abb
 800e440:	08012ac7 	.word	0x08012ac7
 800e444:	08012adf 	.word	0x08012adf
 800e448:	08012aeb 	.word	0x08012aeb
 800e44c:	08012afd 	.word	0x08012afd
 800e450:	08012b0c 	.word	0x08012b0c
 800e454:	08012b1c 	.word	0x08012b1c
 800e458:	08012b29 	.word	0x08012b29
 800e45c:	08012b48 	.word	0x08012b48
 800e460:	08012b57 	.word	0x08012b57
 800e464:	08012b68 	.word	0x08012b68
 800e468:	08012b8c 	.word	0x08012b8c
 800e46c:	08012baa 	.word	0x08012baa
 800e470:	08012bc8 	.word	0x08012bc8
 800e474:	08012be8 	.word	0x08012be8
 800e478:	08012bff 	.word	0x08012bff
 800e47c:	08012c0e 	.word	0x08012c0e
 800e480:	08012c1d 	.word	0x08012c1d
 800e484:	08012c31 	.word	0x08012c31
 800e488:	08012c49 	.word	0x08012c49
 800e48c:	08012c57 	.word	0x08012c57
 800e490:	08012c64 	.word	0x08012c64
 800e494:	08012c7a 	.word	0x08012c7a
 800e498:	08012c89 	.word	0x08012c89
 800e49c:	08012c95 	.word	0x08012c95
 800e4a0:	08012cc4 	.word	0x08012cc4
 800e4a4:	08012cd5 	.word	0x08012cd5
 800e4a8:	08012cf0 	.word	0x08012cf0
 800e4ac:	08012d03 	.word	0x08012d03
 800e4b0:	08012d19 	.word	0x08012d19
 800e4b4:	08012d22 	.word	0x08012d22
 800e4b8:	08012d39 	.word	0x08012d39
 800e4bc:	08012d41 	.word	0x08012d41
 800e4c0:	08012d4e 	.word	0x08012d4e
 800e4c4:	08012d63 	.word	0x08012d63
 800e4c8:	08012d77 	.word	0x08012d77
 800e4cc:	08012d8f 	.word	0x08012d8f
 800e4d0:	08012d9e 	.word	0x08012d9e
 800e4d4:	08012daf 	.word	0x08012daf
 800e4d8:	08012dc2 	.word	0x08012dc2
 800e4dc:	08012dce 	.word	0x08012dce
 800e4e0:	08012de7 	.word	0x08012de7
 800e4e4:	08012dfb 	.word	0x08012dfb
 800e4e8:	08012e16 	.word	0x08012e16
 800e4ec:	08012e2e 	.word	0x08012e2e
 800e4f0:	08012e48 	.word	0x08012e48
 800e4f4:	08012e50 	.word	0x08012e50
 800e4f8:	08012e80 	.word	0x08012e80
 800e4fc:	08012e9f 	.word	0x08012e9f
 800e500:	08012ebe 	.word	0x08012ebe
 800e504:	08012ed5 	.word	0x08012ed5
 800e508:	08012ee8 	.word	0x08012ee8
 800e50c:	08012f01 	.word	0x08012f01
 800e510:	08012f18 	.word	0x08012f18
 800e514:	08012f2e 	.word	0x08012f2e
 800e518:	08012f4f 	.word	0x08012f4f
 800e51c:	08012f67 	.word	0x08012f67
 800e520:	08012f83 	.word	0x08012f83
 800e524:	08012f96 	.word	0x08012f96
 800e528:	08012fac 	.word	0x08012fac
 800e52c:	08012fc0 	.word	0x08012fc0
 800e530:	08012fe2 	.word	0x08012fe2
 800e534:	08013008 	.word	0x08013008
 800e538:	08013019 	.word	0x08013019
 800e53c:	08012991 	.word	0x08012991
 800e540:	08012998 	.word	0x08012998

0800e544 <strerror>:
 800e544:	2300      	movs	r3, #0
 800e546:	4601      	mov	r1, r0
 800e548:	4802      	ldr	r0, [pc, #8]	; (800e554 <strerror+0x10>)
 800e54a:	461a      	mov	r2, r3
 800e54c:	6800      	ldr	r0, [r0, #0]
 800e54e:	f7ff be13 	b.w	800e178 <_strerror_r>
 800e552:	bf00      	nop
 800e554:	20000020 	.word	0x20000020

0800e558 <strncmp>:
 800e558:	b510      	push	{r4, lr}
 800e55a:	b16a      	cbz	r2, 800e578 <strncmp+0x20>
 800e55c:	3901      	subs	r1, #1
 800e55e:	1884      	adds	r4, r0, r2
 800e560:	f810 3b01 	ldrb.w	r3, [r0], #1
 800e564:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e568:	4293      	cmp	r3, r2
 800e56a:	d103      	bne.n	800e574 <strncmp+0x1c>
 800e56c:	42a0      	cmp	r0, r4
 800e56e:	d001      	beq.n	800e574 <strncmp+0x1c>
 800e570:	2b00      	cmp	r3, #0
 800e572:	d1f5      	bne.n	800e560 <strncmp+0x8>
 800e574:	1a98      	subs	r0, r3, r2
 800e576:	bd10      	pop	{r4, pc}
 800e578:	4610      	mov	r0, r2
 800e57a:	bd10      	pop	{r4, pc}

0800e57c <_svfprintf_r>:
 800e57c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e580:	b0bf      	sub	sp, #252	; 0xfc
 800e582:	4689      	mov	r9, r1
 800e584:	4615      	mov	r5, r2
 800e586:	461f      	mov	r7, r3
 800e588:	4682      	mov	sl, r0
 800e58a:	f002 fa89 	bl	8010aa0 <_localeconv_r>
 800e58e:	6803      	ldr	r3, [r0, #0]
 800e590:	4618      	mov	r0, r3
 800e592:	9311      	str	r3, [sp, #68]	; 0x44
 800e594:	f7f8 f932 	bl	80067fc <strlen>
 800e598:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800e59c:	900a      	str	r0, [sp, #40]	; 0x28
 800e59e:	061b      	lsls	r3, r3, #24
 800e5a0:	d518      	bpl.n	800e5d4 <_svfprintf_r+0x58>
 800e5a2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e5a6:	b9ab      	cbnz	r3, 800e5d4 <_svfprintf_r+0x58>
 800e5a8:	2140      	movs	r1, #64	; 0x40
 800e5aa:	4650      	mov	r0, sl
 800e5ac:	f7ff f8e2 	bl	800d774 <_malloc_r>
 800e5b0:	f8c9 0000 	str.w	r0, [r9]
 800e5b4:	f8c9 0010 	str.w	r0, [r9, #16]
 800e5b8:	b948      	cbnz	r0, 800e5ce <_svfprintf_r+0x52>
 800e5ba:	230c      	movs	r3, #12
 800e5bc:	f8ca 3000 	str.w	r3, [sl]
 800e5c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e5c4:	930b      	str	r3, [sp, #44]	; 0x2c
 800e5c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e5c8:	b03f      	add	sp, #252	; 0xfc
 800e5ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5ce:	2340      	movs	r3, #64	; 0x40
 800e5d0:	f8c9 3014 	str.w	r3, [r9, #20]
 800e5d4:	2300      	movs	r3, #0
 800e5d6:	ac2e      	add	r4, sp, #184	; 0xb8
 800e5d8:	9421      	str	r4, [sp, #132]	; 0x84
 800e5da:	9323      	str	r3, [sp, #140]	; 0x8c
 800e5dc:	9322      	str	r3, [sp, #136]	; 0x88
 800e5de:	9509      	str	r5, [sp, #36]	; 0x24
 800e5e0:	9307      	str	r3, [sp, #28]
 800e5e2:	930d      	str	r3, [sp, #52]	; 0x34
 800e5e4:	930e      	str	r3, [sp, #56]	; 0x38
 800e5e6:	9315      	str	r3, [sp, #84]	; 0x54
 800e5e8:	9314      	str	r3, [sp, #80]	; 0x50
 800e5ea:	930b      	str	r3, [sp, #44]	; 0x2c
 800e5ec:	9312      	str	r3, [sp, #72]	; 0x48
 800e5ee:	9313      	str	r3, [sp, #76]	; 0x4c
 800e5f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800e5f2:	462b      	mov	r3, r5
 800e5f4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e5f8:	b112      	cbz	r2, 800e600 <_svfprintf_r+0x84>
 800e5fa:	2a25      	cmp	r2, #37	; 0x25
 800e5fc:	f040 8083 	bne.w	800e706 <_svfprintf_r+0x18a>
 800e600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e602:	1aee      	subs	r6, r5, r3
 800e604:	d00d      	beq.n	800e622 <_svfprintf_r+0xa6>
 800e606:	e884 0048 	stmia.w	r4, {r3, r6}
 800e60a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800e60c:	4433      	add	r3, r6
 800e60e:	9323      	str	r3, [sp, #140]	; 0x8c
 800e610:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800e612:	3301      	adds	r3, #1
 800e614:	2b07      	cmp	r3, #7
 800e616:	9322      	str	r3, [sp, #136]	; 0x88
 800e618:	dc77      	bgt.n	800e70a <_svfprintf_r+0x18e>
 800e61a:	3408      	adds	r4, #8
 800e61c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e61e:	4433      	add	r3, r6
 800e620:	930b      	str	r3, [sp, #44]	; 0x2c
 800e622:	782b      	ldrb	r3, [r5, #0]
 800e624:	2b00      	cmp	r3, #0
 800e626:	f000 8725 	beq.w	800f474 <_svfprintf_r+0xef8>
 800e62a:	2300      	movs	r3, #0
 800e62c:	1c69      	adds	r1, r5, #1
 800e62e:	461a      	mov	r2, r3
 800e630:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 800e634:	461d      	mov	r5, r3
 800e636:	200a      	movs	r0, #10
 800e638:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 800e63c:	930c      	str	r3, [sp, #48]	; 0x30
 800e63e:	1c4e      	adds	r6, r1, #1
 800e640:	7809      	ldrb	r1, [r1, #0]
 800e642:	9609      	str	r6, [sp, #36]	; 0x24
 800e644:	9106      	str	r1, [sp, #24]
 800e646:	9906      	ldr	r1, [sp, #24]
 800e648:	3920      	subs	r1, #32
 800e64a:	2958      	cmp	r1, #88	; 0x58
 800e64c:	f200 8414 	bhi.w	800ee78 <_svfprintf_r+0x8fc>
 800e650:	e8df f011 	tbh	[pc, r1, lsl #1]
 800e654:	041200a5 	.word	0x041200a5
 800e658:	00aa0412 	.word	0x00aa0412
 800e65c:	04120412 	.word	0x04120412
 800e660:	04120412 	.word	0x04120412
 800e664:	04120412 	.word	0x04120412
 800e668:	006500ad 	.word	0x006500ad
 800e66c:	00b50412 	.word	0x00b50412
 800e670:	041200b8 	.word	0x041200b8
 800e674:	00d800d5 	.word	0x00d800d5
 800e678:	00d800d8 	.word	0x00d800d8
 800e67c:	00d800d8 	.word	0x00d800d8
 800e680:	00d800d8 	.word	0x00d800d8
 800e684:	00d800d8 	.word	0x00d800d8
 800e688:	04120412 	.word	0x04120412
 800e68c:	04120412 	.word	0x04120412
 800e690:	04120412 	.word	0x04120412
 800e694:	04120412 	.word	0x04120412
 800e698:	04120412 	.word	0x04120412
 800e69c:	0122010c 	.word	0x0122010c
 800e6a0:	01220412 	.word	0x01220412
 800e6a4:	04120412 	.word	0x04120412
 800e6a8:	04120412 	.word	0x04120412
 800e6ac:	041200eb 	.word	0x041200eb
 800e6b0:	033c0412 	.word	0x033c0412
 800e6b4:	04120412 	.word	0x04120412
 800e6b8:	04120412 	.word	0x04120412
 800e6bc:	03a40412 	.word	0x03a40412
 800e6c0:	04120412 	.word	0x04120412
 800e6c4:	04120085 	.word	0x04120085
 800e6c8:	04120412 	.word	0x04120412
 800e6cc:	04120412 	.word	0x04120412
 800e6d0:	04120412 	.word	0x04120412
 800e6d4:	04120412 	.word	0x04120412
 800e6d8:	00fe0412 	.word	0x00fe0412
 800e6dc:	0122006b 	.word	0x0122006b
 800e6e0:	01220122 	.word	0x01220122
 800e6e4:	006b00ee 	.word	0x006b00ee
 800e6e8:	04120412 	.word	0x04120412
 800e6ec:	041200f1 	.word	0x041200f1
 800e6f0:	033e031e 	.word	0x033e031e
 800e6f4:	00f80372 	.word	0x00f80372
 800e6f8:	03830412 	.word	0x03830412
 800e6fc:	03a60412 	.word	0x03a60412
 800e700:	04120412 	.word	0x04120412
 800e704:	03be      	.short	0x03be
 800e706:	461d      	mov	r5, r3
 800e708:	e773      	b.n	800e5f2 <_svfprintf_r+0x76>
 800e70a:	aa21      	add	r2, sp, #132	; 0x84
 800e70c:	4649      	mov	r1, r9
 800e70e:	4650      	mov	r0, sl
 800e710:	f002 fcca 	bl	80110a8 <__ssprint_r>
 800e714:	2800      	cmp	r0, #0
 800e716:	f040 868e 	bne.w	800f436 <_svfprintf_r+0xeba>
 800e71a:	ac2e      	add	r4, sp, #184	; 0xb8
 800e71c:	e77e      	b.n	800e61c <_svfprintf_r+0xa0>
 800e71e:	2301      	movs	r3, #1
 800e720:	222b      	movs	r2, #43	; 0x2b
 800e722:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e724:	e78b      	b.n	800e63e <_svfprintf_r+0xc2>
 800e726:	460f      	mov	r7, r1
 800e728:	e7fb      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e72a:	b10b      	cbz	r3, 800e730 <_svfprintf_r+0x1b4>
 800e72c:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800e730:	06ae      	lsls	r6, r5, #26
 800e732:	f140 80a1 	bpl.w	800e878 <_svfprintf_r+0x2fc>
 800e736:	3707      	adds	r7, #7
 800e738:	f027 0707 	bic.w	r7, r7, #7
 800e73c:	f107 0308 	add.w	r3, r7, #8
 800e740:	9308      	str	r3, [sp, #32]
 800e742:	e9d7 6700 	ldrd	r6, r7, [r7]
 800e746:	2e00      	cmp	r6, #0
 800e748:	f177 0300 	sbcs.w	r3, r7, #0
 800e74c:	da05      	bge.n	800e75a <_svfprintf_r+0x1de>
 800e74e:	232d      	movs	r3, #45	; 0x2d
 800e750:	4276      	negs	r6, r6
 800e752:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 800e756:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 800e75a:	2301      	movs	r3, #1
 800e75c:	e2c7      	b.n	800ecee <_svfprintf_r+0x772>
 800e75e:	b10b      	cbz	r3, 800e764 <_svfprintf_r+0x1e8>
 800e760:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800e764:	4ba0      	ldr	r3, [pc, #640]	; (800e9e8 <_svfprintf_r+0x46c>)
 800e766:	9315      	str	r3, [sp, #84]	; 0x54
 800e768:	06ab      	lsls	r3, r5, #26
 800e76a:	f140 8336 	bpl.w	800edda <_svfprintf_r+0x85e>
 800e76e:	3707      	adds	r7, #7
 800e770:	f027 0707 	bic.w	r7, r7, #7
 800e774:	f107 0308 	add.w	r3, r7, #8
 800e778:	9308      	str	r3, [sp, #32]
 800e77a:	e9d7 6700 	ldrd	r6, r7, [r7]
 800e77e:	07e8      	lsls	r0, r5, #31
 800e780:	d50b      	bpl.n	800e79a <_svfprintf_r+0x21e>
 800e782:	ea56 0307 	orrs.w	r3, r6, r7
 800e786:	d008      	beq.n	800e79a <_svfprintf_r+0x21e>
 800e788:	2330      	movs	r3, #48	; 0x30
 800e78a:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 800e78e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800e792:	f045 0502 	orr.w	r5, r5, #2
 800e796:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
 800e79a:	2302      	movs	r3, #2
 800e79c:	e2a4      	b.n	800ece8 <_svfprintf_r+0x76c>
 800e79e:	2a00      	cmp	r2, #0
 800e7a0:	d1bf      	bne.n	800e722 <_svfprintf_r+0x1a6>
 800e7a2:	2301      	movs	r3, #1
 800e7a4:	2220      	movs	r2, #32
 800e7a6:	e7bc      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e7a8:	f045 0501 	orr.w	r5, r5, #1
 800e7ac:	e7b9      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e7ae:	683e      	ldr	r6, [r7, #0]
 800e7b0:	1d39      	adds	r1, r7, #4
 800e7b2:	2e00      	cmp	r6, #0
 800e7b4:	960c      	str	r6, [sp, #48]	; 0x30
 800e7b6:	dab6      	bge.n	800e726 <_svfprintf_r+0x1aa>
 800e7b8:	460f      	mov	r7, r1
 800e7ba:	4276      	negs	r6, r6
 800e7bc:	960c      	str	r6, [sp, #48]	; 0x30
 800e7be:	f045 0504 	orr.w	r5, r5, #4
 800e7c2:	e7ae      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e7c4:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e7c6:	1c4e      	adds	r6, r1, #1
 800e7c8:	7809      	ldrb	r1, [r1, #0]
 800e7ca:	292a      	cmp	r1, #42	; 0x2a
 800e7cc:	9106      	str	r1, [sp, #24]
 800e7ce:	d010      	beq.n	800e7f2 <_svfprintf_r+0x276>
 800e7d0:	f04f 0b00 	mov.w	fp, #0
 800e7d4:	9609      	str	r6, [sp, #36]	; 0x24
 800e7d6:	9906      	ldr	r1, [sp, #24]
 800e7d8:	3930      	subs	r1, #48	; 0x30
 800e7da:	2909      	cmp	r1, #9
 800e7dc:	f63f af33 	bhi.w	800e646 <_svfprintf_r+0xca>
 800e7e0:	fb00 1b0b 	mla	fp, r0, fp, r1
 800e7e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e7e6:	460e      	mov	r6, r1
 800e7e8:	f816 1b01 	ldrb.w	r1, [r6], #1
 800e7ec:	9106      	str	r1, [sp, #24]
 800e7ee:	9609      	str	r6, [sp, #36]	; 0x24
 800e7f0:	e7f1      	b.n	800e7d6 <_svfprintf_r+0x25a>
 800e7f2:	6839      	ldr	r1, [r7, #0]
 800e7f4:	9609      	str	r6, [sp, #36]	; 0x24
 800e7f6:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
 800e7fa:	3704      	adds	r7, #4
 800e7fc:	e791      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e7fe:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 800e802:	e78e      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e804:	2100      	movs	r1, #0
 800e806:	910c      	str	r1, [sp, #48]	; 0x30
 800e808:	9906      	ldr	r1, [sp, #24]
 800e80a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800e80c:	3930      	subs	r1, #48	; 0x30
 800e80e:	fb00 1106 	mla	r1, r0, r6, r1
 800e812:	910c      	str	r1, [sp, #48]	; 0x30
 800e814:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e816:	460e      	mov	r6, r1
 800e818:	f816 1b01 	ldrb.w	r1, [r6], #1
 800e81c:	9106      	str	r1, [sp, #24]
 800e81e:	9906      	ldr	r1, [sp, #24]
 800e820:	9609      	str	r6, [sp, #36]	; 0x24
 800e822:	3930      	subs	r1, #48	; 0x30
 800e824:	2909      	cmp	r1, #9
 800e826:	d9ef      	bls.n	800e808 <_svfprintf_r+0x28c>
 800e828:	e70d      	b.n	800e646 <_svfprintf_r+0xca>
 800e82a:	f045 0508 	orr.w	r5, r5, #8
 800e82e:	e778      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e830:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 800e834:	e775      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e836:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e838:	7809      	ldrb	r1, [r1, #0]
 800e83a:	296c      	cmp	r1, #108	; 0x6c
 800e83c:	d105      	bne.n	800e84a <_svfprintf_r+0x2ce>
 800e83e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e840:	3101      	adds	r1, #1
 800e842:	9109      	str	r1, [sp, #36]	; 0x24
 800e844:	f045 0520 	orr.w	r5, r5, #32
 800e848:	e76b      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e84a:	f045 0510 	orr.w	r5, r5, #16
 800e84e:	e768      	b.n	800e722 <_svfprintf_r+0x1a6>
 800e850:	2600      	movs	r6, #0
 800e852:	1d3b      	adds	r3, r7, #4
 800e854:	9308      	str	r3, [sp, #32]
 800e856:	683b      	ldr	r3, [r7, #0]
 800e858:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 800e85c:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 800e860:	f04f 0b01 	mov.w	fp, #1
 800e864:	4637      	mov	r7, r6
 800e866:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 800e86a:	e11c      	b.n	800eaa6 <_svfprintf_r+0x52a>
 800e86c:	b10b      	cbz	r3, 800e872 <_svfprintf_r+0x2f6>
 800e86e:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800e872:	f045 0510 	orr.w	r5, r5, #16
 800e876:	e75b      	b.n	800e730 <_svfprintf_r+0x1b4>
 800e878:	f015 0f10 	tst.w	r5, #16
 800e87c:	f107 0304 	add.w	r3, r7, #4
 800e880:	d003      	beq.n	800e88a <_svfprintf_r+0x30e>
 800e882:	683e      	ldr	r6, [r7, #0]
 800e884:	9308      	str	r3, [sp, #32]
 800e886:	17f7      	asrs	r7, r6, #31
 800e888:	e75d      	b.n	800e746 <_svfprintf_r+0x1ca>
 800e88a:	683e      	ldr	r6, [r7, #0]
 800e88c:	f015 0f40 	tst.w	r5, #64	; 0x40
 800e890:	9308      	str	r3, [sp, #32]
 800e892:	bf18      	it	ne
 800e894:	b236      	sxthne	r6, r6
 800e896:	e7f6      	b.n	800e886 <_svfprintf_r+0x30a>
 800e898:	b10b      	cbz	r3, 800e89e <_svfprintf_r+0x322>
 800e89a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800e89e:	3707      	adds	r7, #7
 800e8a0:	f027 0707 	bic.w	r7, r7, #7
 800e8a4:	f107 0308 	add.w	r3, r7, #8
 800e8a8:	9308      	str	r3, [sp, #32]
 800e8aa:	683b      	ldr	r3, [r7, #0]
 800e8ac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800e8b0:	930d      	str	r3, [sp, #52]	; 0x34
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800e8b6:	930e      	str	r3, [sp, #56]	; 0x38
 800e8b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e8ba:	4638      	mov	r0, r7
 800e8bc:	f023 4600 	bic.w	r6, r3, #2147483648	; 0x80000000
 800e8c0:	4631      	mov	r1, r6
 800e8c2:	4b4a      	ldr	r3, [pc, #296]	; (800e9ec <_svfprintf_r+0x470>)
 800e8c4:	f7f8 fbf4 	bl	80070b0 <__aeabi_dcmpun>
 800e8c8:	2800      	cmp	r0, #0
 800e8ca:	f040 85dc 	bne.w	800f486 <_svfprintf_r+0xf0a>
 800e8ce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800e8d2:	4b46      	ldr	r3, [pc, #280]	; (800e9ec <_svfprintf_r+0x470>)
 800e8d4:	4638      	mov	r0, r7
 800e8d6:	4631      	mov	r1, r6
 800e8d8:	f7f8 fbcc 	bl	8007074 <__aeabi_dcmple>
 800e8dc:	2800      	cmp	r0, #0
 800e8de:	f040 85d2 	bne.w	800f486 <_svfprintf_r+0xf0a>
 800e8e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e8e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800e8e6:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e8e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800e8ea:	f7f8 fbb9 	bl	8007060 <__aeabi_dcmplt>
 800e8ee:	b110      	cbz	r0, 800e8f6 <_svfprintf_r+0x37a>
 800e8f0:	232d      	movs	r3, #45	; 0x2d
 800e8f2:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 800e8f6:	4b3e      	ldr	r3, [pc, #248]	; (800e9f0 <_svfprintf_r+0x474>)
 800e8f8:	4a3e      	ldr	r2, [pc, #248]	; (800e9f4 <_svfprintf_r+0x478>)
 800e8fa:	9906      	ldr	r1, [sp, #24]
 800e8fc:	f04f 0b03 	mov.w	fp, #3
 800e900:	2947      	cmp	r1, #71	; 0x47
 800e902:	bfcc      	ite	gt
 800e904:	4690      	movgt	r8, r2
 800e906:	4698      	movle	r8, r3
 800e908:	2600      	movs	r6, #0
 800e90a:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 800e90e:	4637      	mov	r7, r6
 800e910:	e0c9      	b.n	800eaa6 <_svfprintf_r+0x52a>
 800e912:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 800e916:	d026      	beq.n	800e966 <_svfprintf_r+0x3ea>
 800e918:	9b06      	ldr	r3, [sp, #24]
 800e91a:	f023 0320 	bic.w	r3, r3, #32
 800e91e:	2b47      	cmp	r3, #71	; 0x47
 800e920:	d104      	bne.n	800e92c <_svfprintf_r+0x3b0>
 800e922:	f1bb 0f00 	cmp.w	fp, #0
 800e926:	bf08      	it	eq
 800e928:	f04f 0b01 	moveq.w	fp, #1
 800e92c:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 800e930:	9317      	str	r3, [sp, #92]	; 0x5c
 800e932:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e934:	1e1f      	subs	r7, r3, #0
 800e936:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e938:	bfa8      	it	ge
 800e93a:	9710      	strge	r7, [sp, #64]	; 0x40
 800e93c:	930f      	str	r3, [sp, #60]	; 0x3c
 800e93e:	bfbd      	ittte	lt
 800e940:	463b      	movlt	r3, r7
 800e942:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800e946:	9310      	strlt	r3, [sp, #64]	; 0x40
 800e948:	2300      	movge	r3, #0
 800e94a:	bfb8      	it	lt
 800e94c:	232d      	movlt	r3, #45	; 0x2d
 800e94e:	9316      	str	r3, [sp, #88]	; 0x58
 800e950:	9b06      	ldr	r3, [sp, #24]
 800e952:	f023 0720 	bic.w	r7, r3, #32
 800e956:	2f46      	cmp	r7, #70	; 0x46
 800e958:	d008      	beq.n	800e96c <_svfprintf_r+0x3f0>
 800e95a:	2f45      	cmp	r7, #69	; 0x45
 800e95c:	d142      	bne.n	800e9e4 <_svfprintf_r+0x468>
 800e95e:	f10b 0601 	add.w	r6, fp, #1
 800e962:	2302      	movs	r3, #2
 800e964:	e004      	b.n	800e970 <_svfprintf_r+0x3f4>
 800e966:	f04f 0b06 	mov.w	fp, #6
 800e96a:	e7df      	b.n	800e92c <_svfprintf_r+0x3b0>
 800e96c:	465e      	mov	r6, fp
 800e96e:	2303      	movs	r3, #3
 800e970:	aa1f      	add	r2, sp, #124	; 0x7c
 800e972:	9204      	str	r2, [sp, #16]
 800e974:	aa1c      	add	r2, sp, #112	; 0x70
 800e976:	9203      	str	r2, [sp, #12]
 800e978:	aa1b      	add	r2, sp, #108	; 0x6c
 800e97a:	9202      	str	r2, [sp, #8]
 800e97c:	e88d 0048 	stmia.w	sp, {r3, r6}
 800e980:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e982:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e984:	4650      	mov	r0, sl
 800e986:	f000 ffcf 	bl	800f928 <_dtoa_r>
 800e98a:	2f47      	cmp	r7, #71	; 0x47
 800e98c:	4680      	mov	r8, r0
 800e98e:	d102      	bne.n	800e996 <_svfprintf_r+0x41a>
 800e990:	07e8      	lsls	r0, r5, #31
 800e992:	f140 8585 	bpl.w	800f4a0 <_svfprintf_r+0xf24>
 800e996:	eb08 0306 	add.w	r3, r8, r6
 800e99a:	2f46      	cmp	r7, #70	; 0x46
 800e99c:	9307      	str	r3, [sp, #28]
 800e99e:	d111      	bne.n	800e9c4 <_svfprintf_r+0x448>
 800e9a0:	f898 3000 	ldrb.w	r3, [r8]
 800e9a4:	2b30      	cmp	r3, #48	; 0x30
 800e9a6:	d109      	bne.n	800e9bc <_svfprintf_r+0x440>
 800e9a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e9aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800e9ac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e9ae:	9910      	ldr	r1, [sp, #64]	; 0x40
 800e9b0:	f7f8 fb4c 	bl	800704c <__aeabi_dcmpeq>
 800e9b4:	b910      	cbnz	r0, 800e9bc <_svfprintf_r+0x440>
 800e9b6:	f1c6 0601 	rsb	r6, r6, #1
 800e9ba:	961b      	str	r6, [sp, #108]	; 0x6c
 800e9bc:	9a07      	ldr	r2, [sp, #28]
 800e9be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800e9c0:	441a      	add	r2, r3
 800e9c2:	9207      	str	r2, [sp, #28]
 800e9c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e9c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800e9c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e9ca:	9910      	ldr	r1, [sp, #64]	; 0x40
 800e9cc:	f7f8 fb3e 	bl	800704c <__aeabi_dcmpeq>
 800e9d0:	b990      	cbnz	r0, 800e9f8 <_svfprintf_r+0x47c>
 800e9d2:	2230      	movs	r2, #48	; 0x30
 800e9d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800e9d6:	9907      	ldr	r1, [sp, #28]
 800e9d8:	4299      	cmp	r1, r3
 800e9da:	d90f      	bls.n	800e9fc <_svfprintf_r+0x480>
 800e9dc:	1c59      	adds	r1, r3, #1
 800e9de:	911f      	str	r1, [sp, #124]	; 0x7c
 800e9e0:	701a      	strb	r2, [r3, #0]
 800e9e2:	e7f7      	b.n	800e9d4 <_svfprintf_r+0x458>
 800e9e4:	465e      	mov	r6, fp
 800e9e6:	e7bc      	b.n	800e962 <_svfprintf_r+0x3e6>
 800e9e8:	0801303e 	.word	0x0801303e
 800e9ec:	7fefffff 	.word	0x7fefffff
 800e9f0:	0801302e 	.word	0x0801302e
 800e9f4:	08013032 	.word	0x08013032
 800e9f8:	9b07      	ldr	r3, [sp, #28]
 800e9fa:	931f      	str	r3, [sp, #124]	; 0x7c
 800e9fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800e9fe:	2f47      	cmp	r7, #71	; 0x47
 800ea00:	eba3 0308 	sub.w	r3, r3, r8
 800ea04:	9307      	str	r3, [sp, #28]
 800ea06:	f040 8100 	bne.w	800ec0a <_svfprintf_r+0x68e>
 800ea0a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800ea0c:	1cd9      	adds	r1, r3, #3
 800ea0e:	db02      	blt.n	800ea16 <_svfprintf_r+0x49a>
 800ea10:	459b      	cmp	fp, r3
 800ea12:	f280 8126 	bge.w	800ec62 <_svfprintf_r+0x6e6>
 800ea16:	9b06      	ldr	r3, [sp, #24]
 800ea18:	3b02      	subs	r3, #2
 800ea1a:	9306      	str	r3, [sp, #24]
 800ea1c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800ea1e:	f89d 1018 	ldrb.w	r1, [sp, #24]
 800ea22:	1e53      	subs	r3, r2, #1
 800ea24:	2b00      	cmp	r3, #0
 800ea26:	bfa8      	it	ge
 800ea28:	222b      	movge	r2, #43	; 0x2b
 800ea2a:	931b      	str	r3, [sp, #108]	; 0x6c
 800ea2c:	bfbc      	itt	lt
 800ea2e:	f1c2 0301 	rsblt	r3, r2, #1
 800ea32:	222d      	movlt	r2, #45	; 0x2d
 800ea34:	2b09      	cmp	r3, #9
 800ea36:	f88d 1074 	strb.w	r1, [sp, #116]	; 0x74
 800ea3a:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
 800ea3e:	f340 8100 	ble.w	800ec42 <_svfprintf_r+0x6c6>
 800ea42:	260a      	movs	r6, #10
 800ea44:	f10d 0283 	add.w	r2, sp, #131	; 0x83
 800ea48:	fb93 f0f6 	sdiv	r0, r3, r6
 800ea4c:	fb06 3310 	mls	r3, r6, r0, r3
 800ea50:	2809      	cmp	r0, #9
 800ea52:	f103 0330 	add.w	r3, r3, #48	; 0x30
 800ea56:	f802 3c01 	strb.w	r3, [r2, #-1]
 800ea5a:	f102 31ff 	add.w	r1, r2, #4294967295	; 0xffffffff
 800ea5e:	4603      	mov	r3, r0
 800ea60:	f300 80e8 	bgt.w	800ec34 <_svfprintf_r+0x6b8>
 800ea64:	3330      	adds	r3, #48	; 0x30
 800ea66:	f801 3c01 	strb.w	r3, [r1, #-1]
 800ea6a:	3a02      	subs	r2, #2
 800ea6c:	f10d 0376 	add.w	r3, sp, #118	; 0x76
 800ea70:	f10d 0083 	add.w	r0, sp, #131	; 0x83
 800ea74:	4282      	cmp	r2, r0
 800ea76:	4619      	mov	r1, r3
 800ea78:	f0c0 80de 	bcc.w	800ec38 <_svfprintf_r+0x6bc>
 800ea7c:	9a07      	ldr	r2, [sp, #28]
 800ea7e:	ab1d      	add	r3, sp, #116	; 0x74
 800ea80:	1acb      	subs	r3, r1, r3
 800ea82:	2a01      	cmp	r2, #1
 800ea84:	9314      	str	r3, [sp, #80]	; 0x50
 800ea86:	eb03 0b02 	add.w	fp, r3, r2
 800ea8a:	dc02      	bgt.n	800ea92 <_svfprintf_r+0x516>
 800ea8c:	f015 0701 	ands.w	r7, r5, #1
 800ea90:	d002      	beq.n	800ea98 <_svfprintf_r+0x51c>
 800ea92:	2700      	movs	r7, #0
 800ea94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ea96:	449b      	add	fp, r3
 800ea98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800ea9a:	b113      	cbz	r3, 800eaa2 <_svfprintf_r+0x526>
 800ea9c:	232d      	movs	r3, #45	; 0x2d
 800ea9e:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 800eaa2:	2600      	movs	r6, #0
 800eaa4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800eaa6:	455e      	cmp	r6, fp
 800eaa8:	4633      	mov	r3, r6
 800eaaa:	bfb8      	it	lt
 800eaac:	465b      	movlt	r3, fp
 800eaae:	930f      	str	r3, [sp, #60]	; 0x3c
 800eab0:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 800eab4:	b113      	cbz	r3, 800eabc <_svfprintf_r+0x540>
 800eab6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800eab8:	3301      	adds	r3, #1
 800eaba:	930f      	str	r3, [sp, #60]	; 0x3c
 800eabc:	f015 0302 	ands.w	r3, r5, #2
 800eac0:	9316      	str	r3, [sp, #88]	; 0x58
 800eac2:	bf1e      	ittt	ne
 800eac4:	9b0f      	ldrne	r3, [sp, #60]	; 0x3c
 800eac6:	3302      	addne	r3, #2
 800eac8:	930f      	strne	r3, [sp, #60]	; 0x3c
 800eaca:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 800eace:	9317      	str	r3, [sp, #92]	; 0x5c
 800ead0:	d118      	bne.n	800eb04 <_svfprintf_r+0x588>
 800ead2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ead4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ead6:	1a9b      	subs	r3, r3, r2
 800ead8:	2b00      	cmp	r3, #0
 800eada:	9310      	str	r3, [sp, #64]	; 0x40
 800eadc:	dd12      	ble.n	800eb04 <_svfprintf_r+0x588>
 800eade:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eae0:	2b10      	cmp	r3, #16
 800eae2:	4bab      	ldr	r3, [pc, #684]	; (800ed90 <_svfprintf_r+0x814>)
 800eae4:	6023      	str	r3, [r4, #0]
 800eae6:	f300 81d9 	bgt.w	800ee9c <_svfprintf_r+0x920>
 800eaea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eaec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800eaee:	6063      	str	r3, [r4, #4]
 800eaf0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800eaf2:	4413      	add	r3, r2
 800eaf4:	9323      	str	r3, [sp, #140]	; 0x8c
 800eaf6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800eaf8:	3301      	adds	r3, #1
 800eafa:	2b07      	cmp	r3, #7
 800eafc:	9322      	str	r3, [sp, #136]	; 0x88
 800eafe:	f300 81e6 	bgt.w	800eece <_svfprintf_r+0x952>
 800eb02:	3408      	adds	r4, #8
 800eb04:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 800eb08:	b173      	cbz	r3, 800eb28 <_svfprintf_r+0x5ac>
 800eb0a:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800eb0e:	6023      	str	r3, [r4, #0]
 800eb10:	2301      	movs	r3, #1
 800eb12:	6063      	str	r3, [r4, #4]
 800eb14:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800eb16:	3301      	adds	r3, #1
 800eb18:	9323      	str	r3, [sp, #140]	; 0x8c
 800eb1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800eb1c:	3301      	adds	r3, #1
 800eb1e:	2b07      	cmp	r3, #7
 800eb20:	9322      	str	r3, [sp, #136]	; 0x88
 800eb22:	f300 81de 	bgt.w	800eee2 <_svfprintf_r+0x966>
 800eb26:	3408      	adds	r4, #8
 800eb28:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800eb2a:	b16b      	cbz	r3, 800eb48 <_svfprintf_r+0x5cc>
 800eb2c:	ab1a      	add	r3, sp, #104	; 0x68
 800eb2e:	6023      	str	r3, [r4, #0]
 800eb30:	2302      	movs	r3, #2
 800eb32:	6063      	str	r3, [r4, #4]
 800eb34:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800eb36:	3302      	adds	r3, #2
 800eb38:	9323      	str	r3, [sp, #140]	; 0x8c
 800eb3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800eb3c:	3301      	adds	r3, #1
 800eb3e:	2b07      	cmp	r3, #7
 800eb40:	9322      	str	r3, [sp, #136]	; 0x88
 800eb42:	f300 81d8 	bgt.w	800eef6 <_svfprintf_r+0x97a>
 800eb46:	3408      	adds	r4, #8
 800eb48:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800eb4a:	2b80      	cmp	r3, #128	; 0x80
 800eb4c:	d118      	bne.n	800eb80 <_svfprintf_r+0x604>
 800eb4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800eb50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800eb52:	1a9b      	subs	r3, r3, r2
 800eb54:	2b00      	cmp	r3, #0
 800eb56:	9310      	str	r3, [sp, #64]	; 0x40
 800eb58:	dd12      	ble.n	800eb80 <_svfprintf_r+0x604>
 800eb5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb5c:	2b10      	cmp	r3, #16
 800eb5e:	4b8d      	ldr	r3, [pc, #564]	; (800ed94 <_svfprintf_r+0x818>)
 800eb60:	6023      	str	r3, [r4, #0]
 800eb62:	f300 81d2 	bgt.w	800ef0a <_svfprintf_r+0x98e>
 800eb66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb68:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800eb6a:	6063      	str	r3, [r4, #4]
 800eb6c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800eb6e:	4413      	add	r3, r2
 800eb70:	9323      	str	r3, [sp, #140]	; 0x8c
 800eb72:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800eb74:	3301      	adds	r3, #1
 800eb76:	2b07      	cmp	r3, #7
 800eb78:	9322      	str	r3, [sp, #136]	; 0x88
 800eb7a:	f300 81df 	bgt.w	800ef3c <_svfprintf_r+0x9c0>
 800eb7e:	3408      	adds	r4, #8
 800eb80:	eba6 060b 	sub.w	r6, r6, fp
 800eb84:	2e00      	cmp	r6, #0
 800eb86:	dd0f      	ble.n	800eba8 <_svfprintf_r+0x62c>
 800eb88:	4b82      	ldr	r3, [pc, #520]	; (800ed94 <_svfprintf_r+0x818>)
 800eb8a:	2e10      	cmp	r6, #16
 800eb8c:	6023      	str	r3, [r4, #0]
 800eb8e:	f300 81df 	bgt.w	800ef50 <_svfprintf_r+0x9d4>
 800eb92:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800eb94:	9823      	ldr	r0, [sp, #140]	; 0x8c
 800eb96:	3301      	adds	r3, #1
 800eb98:	6066      	str	r6, [r4, #4]
 800eb9a:	2b07      	cmp	r3, #7
 800eb9c:	4406      	add	r6, r0
 800eb9e:	9623      	str	r6, [sp, #140]	; 0x8c
 800eba0:	9322      	str	r3, [sp, #136]	; 0x88
 800eba2:	f300 81ec 	bgt.w	800ef7e <_svfprintf_r+0xa02>
 800eba6:	3408      	adds	r4, #8
 800eba8:	05eb      	lsls	r3, r5, #23
 800ebaa:	f100 81f2 	bmi.w	800ef92 <_svfprintf_r+0xa16>
 800ebae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ebb0:	e884 0900 	stmia.w	r4, {r8, fp}
 800ebb4:	445b      	add	r3, fp
 800ebb6:	9323      	str	r3, [sp, #140]	; 0x8c
 800ebb8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ebba:	3301      	adds	r3, #1
 800ebbc:	2b07      	cmp	r3, #7
 800ebbe:	9322      	str	r3, [sp, #136]	; 0x88
 800ebc0:	f340 8419 	ble.w	800f3f6 <_svfprintf_r+0xe7a>
 800ebc4:	aa21      	add	r2, sp, #132	; 0x84
 800ebc6:	4649      	mov	r1, r9
 800ebc8:	4650      	mov	r0, sl
 800ebca:	f002 fa6d 	bl	80110a8 <__ssprint_r>
 800ebce:	2800      	cmp	r0, #0
 800ebd0:	f040 8431 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ebd4:	ac2e      	add	r4, sp, #184	; 0xb8
 800ebd6:	076b      	lsls	r3, r5, #29
 800ebd8:	f100 8410 	bmi.w	800f3fc <_svfprintf_r+0xe80>
 800ebdc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ebde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ebe0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800ebe2:	428a      	cmp	r2, r1
 800ebe4:	bfac      	ite	ge
 800ebe6:	189b      	addge	r3, r3, r2
 800ebe8:	185b      	addlt	r3, r3, r1
 800ebea:	930b      	str	r3, [sp, #44]	; 0x2c
 800ebec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ebee:	b13b      	cbz	r3, 800ec00 <_svfprintf_r+0x684>
 800ebf0:	aa21      	add	r2, sp, #132	; 0x84
 800ebf2:	4649      	mov	r1, r9
 800ebf4:	4650      	mov	r0, sl
 800ebf6:	f002 fa57 	bl	80110a8 <__ssprint_r>
 800ebfa:	2800      	cmp	r0, #0
 800ebfc:	f040 841b 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ec00:	2300      	movs	r3, #0
 800ec02:	9f08      	ldr	r7, [sp, #32]
 800ec04:	9322      	str	r3, [sp, #136]	; 0x88
 800ec06:	ac2e      	add	r4, sp, #184	; 0xb8
 800ec08:	e4f2      	b.n	800e5f0 <_svfprintf_r+0x74>
 800ec0a:	9b06      	ldr	r3, [sp, #24]
 800ec0c:	2b65      	cmp	r3, #101	; 0x65
 800ec0e:	f77f af05 	ble.w	800ea1c <_svfprintf_r+0x4a0>
 800ec12:	9b06      	ldr	r3, [sp, #24]
 800ec14:	2b66      	cmp	r3, #102	; 0x66
 800ec16:	d124      	bne.n	800ec62 <_svfprintf_r+0x6e6>
 800ec18:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800ec1a:	2b00      	cmp	r3, #0
 800ec1c:	dd19      	ble.n	800ec52 <_svfprintf_r+0x6d6>
 800ec1e:	f1bb 0f00 	cmp.w	fp, #0
 800ec22:	d101      	bne.n	800ec28 <_svfprintf_r+0x6ac>
 800ec24:	07ea      	lsls	r2, r5, #31
 800ec26:	d502      	bpl.n	800ec2e <_svfprintf_r+0x6b2>
 800ec28:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ec2a:	4413      	add	r3, r2
 800ec2c:	445b      	add	r3, fp
 800ec2e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800ec30:	469b      	mov	fp, r3
 800ec32:	e731      	b.n	800ea98 <_svfprintf_r+0x51c>
 800ec34:	460a      	mov	r2, r1
 800ec36:	e707      	b.n	800ea48 <_svfprintf_r+0x4cc>
 800ec38:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ec3c:	f803 1b01 	strb.w	r1, [r3], #1
 800ec40:	e718      	b.n	800ea74 <_svfprintf_r+0x4f8>
 800ec42:	2230      	movs	r2, #48	; 0x30
 800ec44:	4413      	add	r3, r2
 800ec46:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
 800ec4a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 800ec4e:	a91e      	add	r1, sp, #120	; 0x78
 800ec50:	e714      	b.n	800ea7c <_svfprintf_r+0x500>
 800ec52:	f1bb 0f00 	cmp.w	fp, #0
 800ec56:	d101      	bne.n	800ec5c <_svfprintf_r+0x6e0>
 800ec58:	07eb      	lsls	r3, r5, #31
 800ec5a:	d515      	bpl.n	800ec88 <_svfprintf_r+0x70c>
 800ec5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ec5e:	3301      	adds	r3, #1
 800ec60:	e7e4      	b.n	800ec2c <_svfprintf_r+0x6b0>
 800ec62:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800ec64:	9b07      	ldr	r3, [sp, #28]
 800ec66:	429a      	cmp	r2, r3
 800ec68:	db06      	blt.n	800ec78 <_svfprintf_r+0x6fc>
 800ec6a:	07ef      	lsls	r7, r5, #31
 800ec6c:	d50e      	bpl.n	800ec8c <_svfprintf_r+0x710>
 800ec6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ec70:	4413      	add	r3, r2
 800ec72:	2267      	movs	r2, #103	; 0x67
 800ec74:	9206      	str	r2, [sp, #24]
 800ec76:	e7da      	b.n	800ec2e <_svfprintf_r+0x6b2>
 800ec78:	9b07      	ldr	r3, [sp, #28]
 800ec7a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ec7c:	2a00      	cmp	r2, #0
 800ec7e:	440b      	add	r3, r1
 800ec80:	dcf7      	bgt.n	800ec72 <_svfprintf_r+0x6f6>
 800ec82:	f1c2 0201 	rsb	r2, r2, #1
 800ec86:	e7f3      	b.n	800ec70 <_svfprintf_r+0x6f4>
 800ec88:	2301      	movs	r3, #1
 800ec8a:	e7d0      	b.n	800ec2e <_svfprintf_r+0x6b2>
 800ec8c:	4613      	mov	r3, r2
 800ec8e:	e7f0      	b.n	800ec72 <_svfprintf_r+0x6f6>
 800ec90:	b10b      	cbz	r3, 800ec96 <_svfprintf_r+0x71a>
 800ec92:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800ec96:	f015 0f20 	tst.w	r5, #32
 800ec9a:	f107 0304 	add.w	r3, r7, #4
 800ec9e:	d008      	beq.n	800ecb2 <_svfprintf_r+0x736>
 800eca0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800eca2:	683a      	ldr	r2, [r7, #0]
 800eca4:	17ce      	asrs	r6, r1, #31
 800eca6:	4608      	mov	r0, r1
 800eca8:	4631      	mov	r1, r6
 800ecaa:	e9c2 0100 	strd	r0, r1, [r2]
 800ecae:	461f      	mov	r7, r3
 800ecb0:	e49e      	b.n	800e5f0 <_svfprintf_r+0x74>
 800ecb2:	06ee      	lsls	r6, r5, #27
 800ecb4:	d503      	bpl.n	800ecbe <_svfprintf_r+0x742>
 800ecb6:	683a      	ldr	r2, [r7, #0]
 800ecb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ecba:	6011      	str	r1, [r2, #0]
 800ecbc:	e7f7      	b.n	800ecae <_svfprintf_r+0x732>
 800ecbe:	0668      	lsls	r0, r5, #25
 800ecc0:	d5f9      	bpl.n	800ecb6 <_svfprintf_r+0x73a>
 800ecc2:	683a      	ldr	r2, [r7, #0]
 800ecc4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800ecc8:	8011      	strh	r1, [r2, #0]
 800ecca:	e7f0      	b.n	800ecae <_svfprintf_r+0x732>
 800eccc:	f045 0510 	orr.w	r5, r5, #16
 800ecd0:	f015 0320 	ands.w	r3, r5, #32
 800ecd4:	d022      	beq.n	800ed1c <_svfprintf_r+0x7a0>
 800ecd6:	3707      	adds	r7, #7
 800ecd8:	f027 0707 	bic.w	r7, r7, #7
 800ecdc:	f107 0308 	add.w	r3, r7, #8
 800ece0:	9308      	str	r3, [sp, #32]
 800ece2:	e9d7 6700 	ldrd	r6, r7, [r7]
 800ece6:	2300      	movs	r3, #0
 800ece8:	2200      	movs	r2, #0
 800ecea:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800ecee:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 800ecf2:	f000 83db 	beq.w	800f4ac <_svfprintf_r+0xf30>
 800ecf6:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 800ecfa:	920f      	str	r2, [sp, #60]	; 0x3c
 800ecfc:	ea56 0207 	orrs.w	r2, r6, r7
 800ed00:	f040 83d9 	bne.w	800f4b6 <_svfprintf_r+0xf3a>
 800ed04:	f1bb 0f00 	cmp.w	fp, #0
 800ed08:	f000 80aa 	beq.w	800ee60 <_svfprintf_r+0x8e4>
 800ed0c:	2b01      	cmp	r3, #1
 800ed0e:	d076      	beq.n	800edfe <_svfprintf_r+0x882>
 800ed10:	2b02      	cmp	r3, #2
 800ed12:	f000 8091 	beq.w	800ee38 <_svfprintf_r+0x8bc>
 800ed16:	2600      	movs	r6, #0
 800ed18:	2700      	movs	r7, #0
 800ed1a:	e3d2      	b.n	800f4c2 <_svfprintf_r+0xf46>
 800ed1c:	1d3a      	adds	r2, r7, #4
 800ed1e:	f015 0110 	ands.w	r1, r5, #16
 800ed22:	9208      	str	r2, [sp, #32]
 800ed24:	d002      	beq.n	800ed2c <_svfprintf_r+0x7b0>
 800ed26:	683e      	ldr	r6, [r7, #0]
 800ed28:	2700      	movs	r7, #0
 800ed2a:	e7dd      	b.n	800ece8 <_svfprintf_r+0x76c>
 800ed2c:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 800ed30:	d0f9      	beq.n	800ed26 <_svfprintf_r+0x7aa>
 800ed32:	883e      	ldrh	r6, [r7, #0]
 800ed34:	2700      	movs	r7, #0
 800ed36:	e7d6      	b.n	800ece6 <_svfprintf_r+0x76a>
 800ed38:	1d3b      	adds	r3, r7, #4
 800ed3a:	9308      	str	r3, [sp, #32]
 800ed3c:	2330      	movs	r3, #48	; 0x30
 800ed3e:	2278      	movs	r2, #120	; 0x78
 800ed40:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 800ed44:	4b14      	ldr	r3, [pc, #80]	; (800ed98 <_svfprintf_r+0x81c>)
 800ed46:	683e      	ldr	r6, [r7, #0]
 800ed48:	9315      	str	r3, [sp, #84]	; 0x54
 800ed4a:	2700      	movs	r7, #0
 800ed4c:	f045 0502 	orr.w	r5, r5, #2
 800ed50:	f88d 2069 	strb.w	r2, [sp, #105]	; 0x69
 800ed54:	2302      	movs	r3, #2
 800ed56:	9206      	str	r2, [sp, #24]
 800ed58:	e7c6      	b.n	800ece8 <_svfprintf_r+0x76c>
 800ed5a:	2600      	movs	r6, #0
 800ed5c:	1d3b      	adds	r3, r7, #4
 800ed5e:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 800ed62:	9308      	str	r3, [sp, #32]
 800ed64:	f8d7 8000 	ldr.w	r8, [r7]
 800ed68:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 800ed6c:	d00a      	beq.n	800ed84 <_svfprintf_r+0x808>
 800ed6e:	465a      	mov	r2, fp
 800ed70:	4631      	mov	r1, r6
 800ed72:	4640      	mov	r0, r8
 800ed74:	f7fe ff1c 	bl	800dbb0 <memchr>
 800ed78:	2800      	cmp	r0, #0
 800ed7a:	f000 808d 	beq.w	800ee98 <_svfprintf_r+0x91c>
 800ed7e:	eba0 0b08 	sub.w	fp, r0, r8
 800ed82:	e5c4      	b.n	800e90e <_svfprintf_r+0x392>
 800ed84:	4640      	mov	r0, r8
 800ed86:	f7f7 fd39 	bl	80067fc <strlen>
 800ed8a:	4683      	mov	fp, r0
 800ed8c:	e5bf      	b.n	800e90e <_svfprintf_r+0x392>
 800ed8e:	bf00      	nop
 800ed90:	08013062 	.word	0x08013062
 800ed94:	08013072 	.word	0x08013072
 800ed98:	0801304f 	.word	0x0801304f
 800ed9c:	f045 0510 	orr.w	r5, r5, #16
 800eda0:	06a9      	lsls	r1, r5, #26
 800eda2:	d509      	bpl.n	800edb8 <_svfprintf_r+0x83c>
 800eda4:	3707      	adds	r7, #7
 800eda6:	f027 0707 	bic.w	r7, r7, #7
 800edaa:	f107 0308 	add.w	r3, r7, #8
 800edae:	9308      	str	r3, [sp, #32]
 800edb0:	e9d7 6700 	ldrd	r6, r7, [r7]
 800edb4:	2301      	movs	r3, #1
 800edb6:	e797      	b.n	800ece8 <_svfprintf_r+0x76c>
 800edb8:	1d3b      	adds	r3, r7, #4
 800edba:	f015 0f10 	tst.w	r5, #16
 800edbe:	9308      	str	r3, [sp, #32]
 800edc0:	d001      	beq.n	800edc6 <_svfprintf_r+0x84a>
 800edc2:	683e      	ldr	r6, [r7, #0]
 800edc4:	e002      	b.n	800edcc <_svfprintf_r+0x850>
 800edc6:	066a      	lsls	r2, r5, #25
 800edc8:	d5fb      	bpl.n	800edc2 <_svfprintf_r+0x846>
 800edca:	883e      	ldrh	r6, [r7, #0]
 800edcc:	2700      	movs	r7, #0
 800edce:	e7f1      	b.n	800edb4 <_svfprintf_r+0x838>
 800edd0:	b10b      	cbz	r3, 800edd6 <_svfprintf_r+0x85a>
 800edd2:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800edd6:	4ba3      	ldr	r3, [pc, #652]	; (800f064 <_svfprintf_r+0xae8>)
 800edd8:	e4c5      	b.n	800e766 <_svfprintf_r+0x1ea>
 800edda:	1d3b      	adds	r3, r7, #4
 800eddc:	f015 0f10 	tst.w	r5, #16
 800ede0:	9308      	str	r3, [sp, #32]
 800ede2:	d001      	beq.n	800ede8 <_svfprintf_r+0x86c>
 800ede4:	683e      	ldr	r6, [r7, #0]
 800ede6:	e002      	b.n	800edee <_svfprintf_r+0x872>
 800ede8:	066e      	lsls	r6, r5, #25
 800edea:	d5fb      	bpl.n	800ede4 <_svfprintf_r+0x868>
 800edec:	883e      	ldrh	r6, [r7, #0]
 800edee:	2700      	movs	r7, #0
 800edf0:	e4c5      	b.n	800e77e <_svfprintf_r+0x202>
 800edf2:	4643      	mov	r3, r8
 800edf4:	e366      	b.n	800f4c4 <_svfprintf_r+0xf48>
 800edf6:	2f00      	cmp	r7, #0
 800edf8:	bf08      	it	eq
 800edfa:	2e0a      	cmpeq	r6, #10
 800edfc:	d205      	bcs.n	800ee0a <_svfprintf_r+0x88e>
 800edfe:	3630      	adds	r6, #48	; 0x30
 800ee00:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 800ee04:	f808 6d41 	strb.w	r6, [r8, #-65]!
 800ee08:	e377      	b.n	800f4fa <_svfprintf_r+0xf7e>
 800ee0a:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 800ee0e:	4630      	mov	r0, r6
 800ee10:	4639      	mov	r1, r7
 800ee12:	220a      	movs	r2, #10
 800ee14:	2300      	movs	r3, #0
 800ee16:	f7f8 f9a9 	bl	800716c <__aeabi_uldivmod>
 800ee1a:	3230      	adds	r2, #48	; 0x30
 800ee1c:	f808 2d01 	strb.w	r2, [r8, #-1]!
 800ee20:	2300      	movs	r3, #0
 800ee22:	4630      	mov	r0, r6
 800ee24:	4639      	mov	r1, r7
 800ee26:	220a      	movs	r2, #10
 800ee28:	f7f8 f9a0 	bl	800716c <__aeabi_uldivmod>
 800ee2c:	4606      	mov	r6, r0
 800ee2e:	460f      	mov	r7, r1
 800ee30:	ea56 0307 	orrs.w	r3, r6, r7
 800ee34:	d1eb      	bne.n	800ee0e <_svfprintf_r+0x892>
 800ee36:	e360      	b.n	800f4fa <_svfprintf_r+0xf7e>
 800ee38:	2600      	movs	r6, #0
 800ee3a:	2700      	movs	r7, #0
 800ee3c:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 800ee40:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ee42:	f006 030f 	and.w	r3, r6, #15
 800ee46:	5cd3      	ldrb	r3, [r2, r3]
 800ee48:	093a      	lsrs	r2, r7, #4
 800ee4a:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800ee4e:	0933      	lsrs	r3, r6, #4
 800ee50:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 800ee54:	461e      	mov	r6, r3
 800ee56:	4617      	mov	r7, r2
 800ee58:	ea56 0307 	orrs.w	r3, r6, r7
 800ee5c:	d1f0      	bne.n	800ee40 <_svfprintf_r+0x8c4>
 800ee5e:	e34c      	b.n	800f4fa <_svfprintf_r+0xf7e>
 800ee60:	b93b      	cbnz	r3, 800ee72 <_svfprintf_r+0x8f6>
 800ee62:	07ea      	lsls	r2, r5, #31
 800ee64:	d505      	bpl.n	800ee72 <_svfprintf_r+0x8f6>
 800ee66:	2330      	movs	r3, #48	; 0x30
 800ee68:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 800ee6c:	f808 3d41 	strb.w	r3, [r8, #-65]!
 800ee70:	e343      	b.n	800f4fa <_svfprintf_r+0xf7e>
 800ee72:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 800ee76:	e340      	b.n	800f4fa <_svfprintf_r+0xf7e>
 800ee78:	b10b      	cbz	r3, 800ee7e <_svfprintf_r+0x902>
 800ee7a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800ee7e:	9b06      	ldr	r3, [sp, #24]
 800ee80:	2b00      	cmp	r3, #0
 800ee82:	f000 82f7 	beq.w	800f474 <_svfprintf_r+0xef8>
 800ee86:	2600      	movs	r6, #0
 800ee88:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ee8c:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 800ee90:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 800ee94:	9708      	str	r7, [sp, #32]
 800ee96:	e4e3      	b.n	800e860 <_svfprintf_r+0x2e4>
 800ee98:	4606      	mov	r6, r0
 800ee9a:	e538      	b.n	800e90e <_svfprintf_r+0x392>
 800ee9c:	2310      	movs	r3, #16
 800ee9e:	6063      	str	r3, [r4, #4]
 800eea0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800eea2:	3310      	adds	r3, #16
 800eea4:	9323      	str	r3, [sp, #140]	; 0x8c
 800eea6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800eea8:	3301      	adds	r3, #1
 800eeaa:	2b07      	cmp	r3, #7
 800eeac:	9322      	str	r3, [sp, #136]	; 0x88
 800eeae:	dc04      	bgt.n	800eeba <_svfprintf_r+0x93e>
 800eeb0:	3408      	adds	r4, #8
 800eeb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eeb4:	3b10      	subs	r3, #16
 800eeb6:	9310      	str	r3, [sp, #64]	; 0x40
 800eeb8:	e611      	b.n	800eade <_svfprintf_r+0x562>
 800eeba:	aa21      	add	r2, sp, #132	; 0x84
 800eebc:	4649      	mov	r1, r9
 800eebe:	4650      	mov	r0, sl
 800eec0:	f002 f8f2 	bl	80110a8 <__ssprint_r>
 800eec4:	2800      	cmp	r0, #0
 800eec6:	f040 82b6 	bne.w	800f436 <_svfprintf_r+0xeba>
 800eeca:	ac2e      	add	r4, sp, #184	; 0xb8
 800eecc:	e7f1      	b.n	800eeb2 <_svfprintf_r+0x936>
 800eece:	aa21      	add	r2, sp, #132	; 0x84
 800eed0:	4649      	mov	r1, r9
 800eed2:	4650      	mov	r0, sl
 800eed4:	f002 f8e8 	bl	80110a8 <__ssprint_r>
 800eed8:	2800      	cmp	r0, #0
 800eeda:	f040 82ac 	bne.w	800f436 <_svfprintf_r+0xeba>
 800eede:	ac2e      	add	r4, sp, #184	; 0xb8
 800eee0:	e610      	b.n	800eb04 <_svfprintf_r+0x588>
 800eee2:	aa21      	add	r2, sp, #132	; 0x84
 800eee4:	4649      	mov	r1, r9
 800eee6:	4650      	mov	r0, sl
 800eee8:	f002 f8de 	bl	80110a8 <__ssprint_r>
 800eeec:	2800      	cmp	r0, #0
 800eeee:	f040 82a2 	bne.w	800f436 <_svfprintf_r+0xeba>
 800eef2:	ac2e      	add	r4, sp, #184	; 0xb8
 800eef4:	e618      	b.n	800eb28 <_svfprintf_r+0x5ac>
 800eef6:	aa21      	add	r2, sp, #132	; 0x84
 800eef8:	4649      	mov	r1, r9
 800eefa:	4650      	mov	r0, sl
 800eefc:	f002 f8d4 	bl	80110a8 <__ssprint_r>
 800ef00:	2800      	cmp	r0, #0
 800ef02:	f040 8298 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ef06:	ac2e      	add	r4, sp, #184	; 0xb8
 800ef08:	e61e      	b.n	800eb48 <_svfprintf_r+0x5cc>
 800ef0a:	2310      	movs	r3, #16
 800ef0c:	6063      	str	r3, [r4, #4]
 800ef0e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ef10:	3310      	adds	r3, #16
 800ef12:	9323      	str	r3, [sp, #140]	; 0x8c
 800ef14:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ef16:	3301      	adds	r3, #1
 800ef18:	2b07      	cmp	r3, #7
 800ef1a:	9322      	str	r3, [sp, #136]	; 0x88
 800ef1c:	dc04      	bgt.n	800ef28 <_svfprintf_r+0x9ac>
 800ef1e:	3408      	adds	r4, #8
 800ef20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef22:	3b10      	subs	r3, #16
 800ef24:	9310      	str	r3, [sp, #64]	; 0x40
 800ef26:	e618      	b.n	800eb5a <_svfprintf_r+0x5de>
 800ef28:	aa21      	add	r2, sp, #132	; 0x84
 800ef2a:	4649      	mov	r1, r9
 800ef2c:	4650      	mov	r0, sl
 800ef2e:	f002 f8bb 	bl	80110a8 <__ssprint_r>
 800ef32:	2800      	cmp	r0, #0
 800ef34:	f040 827f 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ef38:	ac2e      	add	r4, sp, #184	; 0xb8
 800ef3a:	e7f1      	b.n	800ef20 <_svfprintf_r+0x9a4>
 800ef3c:	aa21      	add	r2, sp, #132	; 0x84
 800ef3e:	4649      	mov	r1, r9
 800ef40:	4650      	mov	r0, sl
 800ef42:	f002 f8b1 	bl	80110a8 <__ssprint_r>
 800ef46:	2800      	cmp	r0, #0
 800ef48:	f040 8275 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ef4c:	ac2e      	add	r4, sp, #184	; 0xb8
 800ef4e:	e617      	b.n	800eb80 <_svfprintf_r+0x604>
 800ef50:	2310      	movs	r3, #16
 800ef52:	6063      	str	r3, [r4, #4]
 800ef54:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ef56:	3310      	adds	r3, #16
 800ef58:	9323      	str	r3, [sp, #140]	; 0x8c
 800ef5a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ef5c:	3301      	adds	r3, #1
 800ef5e:	2b07      	cmp	r3, #7
 800ef60:	9322      	str	r3, [sp, #136]	; 0x88
 800ef62:	dc02      	bgt.n	800ef6a <_svfprintf_r+0x9ee>
 800ef64:	3408      	adds	r4, #8
 800ef66:	3e10      	subs	r6, #16
 800ef68:	e60e      	b.n	800eb88 <_svfprintf_r+0x60c>
 800ef6a:	aa21      	add	r2, sp, #132	; 0x84
 800ef6c:	4649      	mov	r1, r9
 800ef6e:	4650      	mov	r0, sl
 800ef70:	f002 f89a 	bl	80110a8 <__ssprint_r>
 800ef74:	2800      	cmp	r0, #0
 800ef76:	f040 825e 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ef7a:	ac2e      	add	r4, sp, #184	; 0xb8
 800ef7c:	e7f3      	b.n	800ef66 <_svfprintf_r+0x9ea>
 800ef7e:	aa21      	add	r2, sp, #132	; 0x84
 800ef80:	4649      	mov	r1, r9
 800ef82:	4650      	mov	r0, sl
 800ef84:	f002 f890 	bl	80110a8 <__ssprint_r>
 800ef88:	2800      	cmp	r0, #0
 800ef8a:	f040 8254 	bne.w	800f436 <_svfprintf_r+0xeba>
 800ef8e:	ac2e      	add	r4, sp, #184	; 0xb8
 800ef90:	e60a      	b.n	800eba8 <_svfprintf_r+0x62c>
 800ef92:	9b06      	ldr	r3, [sp, #24]
 800ef94:	2b65      	cmp	r3, #101	; 0x65
 800ef96:	f340 81a9 	ble.w	800f2ec <_svfprintf_r+0xd70>
 800ef9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ef9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ef9e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800efa0:	990e      	ldr	r1, [sp, #56]	; 0x38
 800efa2:	f7f8 f853 	bl	800704c <__aeabi_dcmpeq>
 800efa6:	2800      	cmp	r0, #0
 800efa8:	d062      	beq.n	800f070 <_svfprintf_r+0xaf4>
 800efaa:	4b2f      	ldr	r3, [pc, #188]	; (800f068 <_svfprintf_r+0xaec>)
 800efac:	6023      	str	r3, [r4, #0]
 800efae:	2301      	movs	r3, #1
 800efb0:	6063      	str	r3, [r4, #4]
 800efb2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800efb4:	3301      	adds	r3, #1
 800efb6:	9323      	str	r3, [sp, #140]	; 0x8c
 800efb8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800efba:	3301      	adds	r3, #1
 800efbc:	2b07      	cmp	r3, #7
 800efbe:	9322      	str	r3, [sp, #136]	; 0x88
 800efc0:	dc25      	bgt.n	800f00e <_svfprintf_r+0xa92>
 800efc2:	3408      	adds	r4, #8
 800efc4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800efc6:	9a07      	ldr	r2, [sp, #28]
 800efc8:	4293      	cmp	r3, r2
 800efca:	db02      	blt.n	800efd2 <_svfprintf_r+0xa56>
 800efcc:	07ee      	lsls	r6, r5, #31
 800efce:	f57f ae02 	bpl.w	800ebd6 <_svfprintf_r+0x65a>
 800efd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800efd4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800efd6:	6023      	str	r3, [r4, #0]
 800efd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800efda:	6063      	str	r3, [r4, #4]
 800efdc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800efde:	4413      	add	r3, r2
 800efe0:	9323      	str	r3, [sp, #140]	; 0x8c
 800efe2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800efe4:	3301      	adds	r3, #1
 800efe6:	2b07      	cmp	r3, #7
 800efe8:	9322      	str	r3, [sp, #136]	; 0x88
 800efea:	dc1a      	bgt.n	800f022 <_svfprintf_r+0xaa6>
 800efec:	3408      	adds	r4, #8
 800efee:	9b07      	ldr	r3, [sp, #28]
 800eff0:	1e5e      	subs	r6, r3, #1
 800eff2:	2e00      	cmp	r6, #0
 800eff4:	f77f adef 	ble.w	800ebd6 <_svfprintf_r+0x65a>
 800eff8:	f04f 0810 	mov.w	r8, #16
 800effc:	4f1b      	ldr	r7, [pc, #108]	; (800f06c <_svfprintf_r+0xaf0>)
 800effe:	2e10      	cmp	r6, #16
 800f000:	6027      	str	r7, [r4, #0]
 800f002:	dc18      	bgt.n	800f036 <_svfprintf_r+0xaba>
 800f004:	6066      	str	r6, [r4, #4]
 800f006:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f008:	441e      	add	r6, r3
 800f00a:	9623      	str	r6, [sp, #140]	; 0x8c
 800f00c:	e5d4      	b.n	800ebb8 <_svfprintf_r+0x63c>
 800f00e:	aa21      	add	r2, sp, #132	; 0x84
 800f010:	4649      	mov	r1, r9
 800f012:	4650      	mov	r0, sl
 800f014:	f002 f848 	bl	80110a8 <__ssprint_r>
 800f018:	2800      	cmp	r0, #0
 800f01a:	f040 820c 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f01e:	ac2e      	add	r4, sp, #184	; 0xb8
 800f020:	e7d0      	b.n	800efc4 <_svfprintf_r+0xa48>
 800f022:	aa21      	add	r2, sp, #132	; 0x84
 800f024:	4649      	mov	r1, r9
 800f026:	4650      	mov	r0, sl
 800f028:	f002 f83e 	bl	80110a8 <__ssprint_r>
 800f02c:	2800      	cmp	r0, #0
 800f02e:	f040 8202 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f032:	ac2e      	add	r4, sp, #184	; 0xb8
 800f034:	e7db      	b.n	800efee <_svfprintf_r+0xa72>
 800f036:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f038:	f8c4 8004 	str.w	r8, [r4, #4]
 800f03c:	3310      	adds	r3, #16
 800f03e:	9323      	str	r3, [sp, #140]	; 0x8c
 800f040:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f042:	3301      	adds	r3, #1
 800f044:	2b07      	cmp	r3, #7
 800f046:	9322      	str	r3, [sp, #136]	; 0x88
 800f048:	dc02      	bgt.n	800f050 <_svfprintf_r+0xad4>
 800f04a:	3408      	adds	r4, #8
 800f04c:	3e10      	subs	r6, #16
 800f04e:	e7d6      	b.n	800effe <_svfprintf_r+0xa82>
 800f050:	aa21      	add	r2, sp, #132	; 0x84
 800f052:	4649      	mov	r1, r9
 800f054:	4650      	mov	r0, sl
 800f056:	f002 f827 	bl	80110a8 <__ssprint_r>
 800f05a:	2800      	cmp	r0, #0
 800f05c:	f040 81eb 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f060:	ac2e      	add	r4, sp, #184	; 0xb8
 800f062:	e7f3      	b.n	800f04c <_svfprintf_r+0xad0>
 800f064:	0801304f 	.word	0x0801304f
 800f068:	08013060 	.word	0x08013060
 800f06c:	08013072 	.word	0x08013072
 800f070:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f072:	2b00      	cmp	r3, #0
 800f074:	dc7a      	bgt.n	800f16c <_svfprintf_r+0xbf0>
 800f076:	4b9b      	ldr	r3, [pc, #620]	; (800f2e4 <_svfprintf_r+0xd68>)
 800f078:	6023      	str	r3, [r4, #0]
 800f07a:	2301      	movs	r3, #1
 800f07c:	6063      	str	r3, [r4, #4]
 800f07e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f080:	3301      	adds	r3, #1
 800f082:	9323      	str	r3, [sp, #140]	; 0x8c
 800f084:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f086:	3301      	adds	r3, #1
 800f088:	2b07      	cmp	r3, #7
 800f08a:	9322      	str	r3, [sp, #136]	; 0x88
 800f08c:	dc44      	bgt.n	800f118 <_svfprintf_r+0xb9c>
 800f08e:	3408      	adds	r4, #8
 800f090:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f092:	b923      	cbnz	r3, 800f09e <_svfprintf_r+0xb22>
 800f094:	9b07      	ldr	r3, [sp, #28]
 800f096:	b913      	cbnz	r3, 800f09e <_svfprintf_r+0xb22>
 800f098:	07e8      	lsls	r0, r5, #31
 800f09a:	f57f ad9c 	bpl.w	800ebd6 <_svfprintf_r+0x65a>
 800f09e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f0a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f0a2:	6023      	str	r3, [r4, #0]
 800f0a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f0a6:	6063      	str	r3, [r4, #4]
 800f0a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f0aa:	4413      	add	r3, r2
 800f0ac:	9323      	str	r3, [sp, #140]	; 0x8c
 800f0ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f0b0:	3301      	adds	r3, #1
 800f0b2:	2b07      	cmp	r3, #7
 800f0b4:	9322      	str	r3, [sp, #136]	; 0x88
 800f0b6:	dc39      	bgt.n	800f12c <_svfprintf_r+0xbb0>
 800f0b8:	f104 0308 	add.w	r3, r4, #8
 800f0bc:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800f0be:	2e00      	cmp	r6, #0
 800f0c0:	da19      	bge.n	800f0f6 <_svfprintf_r+0xb7a>
 800f0c2:	2410      	movs	r4, #16
 800f0c4:	4f88      	ldr	r7, [pc, #544]	; (800f2e8 <_svfprintf_r+0xd6c>)
 800f0c6:	4276      	negs	r6, r6
 800f0c8:	2e10      	cmp	r6, #16
 800f0ca:	601f      	str	r7, [r3, #0]
 800f0cc:	dc38      	bgt.n	800f140 <_svfprintf_r+0xbc4>
 800f0ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800f0d0:	605e      	str	r6, [r3, #4]
 800f0d2:	4416      	add	r6, r2
 800f0d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800f0d6:	9623      	str	r6, [sp, #140]	; 0x8c
 800f0d8:	3201      	adds	r2, #1
 800f0da:	2a07      	cmp	r2, #7
 800f0dc:	f103 0308 	add.w	r3, r3, #8
 800f0e0:	9222      	str	r2, [sp, #136]	; 0x88
 800f0e2:	dd08      	ble.n	800f0f6 <_svfprintf_r+0xb7a>
 800f0e4:	aa21      	add	r2, sp, #132	; 0x84
 800f0e6:	4649      	mov	r1, r9
 800f0e8:	4650      	mov	r0, sl
 800f0ea:	f001 ffdd 	bl	80110a8 <__ssprint_r>
 800f0ee:	2800      	cmp	r0, #0
 800f0f0:	f040 81a1 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f0f4:	ab2e      	add	r3, sp, #184	; 0xb8
 800f0f6:	9a07      	ldr	r2, [sp, #28]
 800f0f8:	9907      	ldr	r1, [sp, #28]
 800f0fa:	605a      	str	r2, [r3, #4]
 800f0fc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800f0fe:	f8c3 8000 	str.w	r8, [r3]
 800f102:	440a      	add	r2, r1
 800f104:	9223      	str	r2, [sp, #140]	; 0x8c
 800f106:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800f108:	3201      	adds	r2, #1
 800f10a:	2a07      	cmp	r2, #7
 800f10c:	9222      	str	r2, [sp, #136]	; 0x88
 800f10e:	f73f ad59 	bgt.w	800ebc4 <_svfprintf_r+0x648>
 800f112:	f103 0408 	add.w	r4, r3, #8
 800f116:	e55e      	b.n	800ebd6 <_svfprintf_r+0x65a>
 800f118:	aa21      	add	r2, sp, #132	; 0x84
 800f11a:	4649      	mov	r1, r9
 800f11c:	4650      	mov	r0, sl
 800f11e:	f001 ffc3 	bl	80110a8 <__ssprint_r>
 800f122:	2800      	cmp	r0, #0
 800f124:	f040 8187 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f128:	ac2e      	add	r4, sp, #184	; 0xb8
 800f12a:	e7b1      	b.n	800f090 <_svfprintf_r+0xb14>
 800f12c:	aa21      	add	r2, sp, #132	; 0x84
 800f12e:	4649      	mov	r1, r9
 800f130:	4650      	mov	r0, sl
 800f132:	f001 ffb9 	bl	80110a8 <__ssprint_r>
 800f136:	2800      	cmp	r0, #0
 800f138:	f040 817d 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f13c:	ab2e      	add	r3, sp, #184	; 0xb8
 800f13e:	e7bd      	b.n	800f0bc <_svfprintf_r+0xb40>
 800f140:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800f142:	605c      	str	r4, [r3, #4]
 800f144:	3210      	adds	r2, #16
 800f146:	9223      	str	r2, [sp, #140]	; 0x8c
 800f148:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800f14a:	3201      	adds	r2, #1
 800f14c:	2a07      	cmp	r2, #7
 800f14e:	9222      	str	r2, [sp, #136]	; 0x88
 800f150:	dc02      	bgt.n	800f158 <_svfprintf_r+0xbdc>
 800f152:	3308      	adds	r3, #8
 800f154:	3e10      	subs	r6, #16
 800f156:	e7b7      	b.n	800f0c8 <_svfprintf_r+0xb4c>
 800f158:	aa21      	add	r2, sp, #132	; 0x84
 800f15a:	4649      	mov	r1, r9
 800f15c:	4650      	mov	r0, sl
 800f15e:	f001 ffa3 	bl	80110a8 <__ssprint_r>
 800f162:	2800      	cmp	r0, #0
 800f164:	f040 8167 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f168:	ab2e      	add	r3, sp, #184	; 0xb8
 800f16a:	e7f3      	b.n	800f154 <_svfprintf_r+0xbd8>
 800f16c:	9b07      	ldr	r3, [sp, #28]
 800f16e:	42bb      	cmp	r3, r7
 800f170:	bfa8      	it	ge
 800f172:	463b      	movge	r3, r7
 800f174:	2b00      	cmp	r3, #0
 800f176:	461e      	mov	r6, r3
 800f178:	dd0b      	ble.n	800f192 <_svfprintf_r+0xc16>
 800f17a:	6063      	str	r3, [r4, #4]
 800f17c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f17e:	f8c4 8000 	str.w	r8, [r4]
 800f182:	4433      	add	r3, r6
 800f184:	9323      	str	r3, [sp, #140]	; 0x8c
 800f186:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f188:	3301      	adds	r3, #1
 800f18a:	2b07      	cmp	r3, #7
 800f18c:	9322      	str	r3, [sp, #136]	; 0x88
 800f18e:	dc5f      	bgt.n	800f250 <_svfprintf_r+0xcd4>
 800f190:	3408      	adds	r4, #8
 800f192:	2e00      	cmp	r6, #0
 800f194:	bfb4      	ite	lt
 800f196:	463e      	movlt	r6, r7
 800f198:	1bbe      	subge	r6, r7, r6
 800f19a:	2e00      	cmp	r6, #0
 800f19c:	dd0f      	ble.n	800f1be <_svfprintf_r+0xc42>
 800f19e:	f8df b148 	ldr.w	fp, [pc, #328]	; 800f2e8 <_svfprintf_r+0xd6c>
 800f1a2:	2e10      	cmp	r6, #16
 800f1a4:	f8c4 b000 	str.w	fp, [r4]
 800f1a8:	dc5c      	bgt.n	800f264 <_svfprintf_r+0xce8>
 800f1aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f1ac:	6066      	str	r6, [r4, #4]
 800f1ae:	441e      	add	r6, r3
 800f1b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f1b2:	9623      	str	r6, [sp, #140]	; 0x8c
 800f1b4:	3301      	adds	r3, #1
 800f1b6:	2b07      	cmp	r3, #7
 800f1b8:	9322      	str	r3, [sp, #136]	; 0x88
 800f1ba:	dc6a      	bgt.n	800f292 <_svfprintf_r+0xd16>
 800f1bc:	3408      	adds	r4, #8
 800f1be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f1c0:	9a07      	ldr	r2, [sp, #28]
 800f1c2:	4293      	cmp	r3, r2
 800f1c4:	db01      	blt.n	800f1ca <_svfprintf_r+0xc4e>
 800f1c6:	07e9      	lsls	r1, r5, #31
 800f1c8:	d50d      	bpl.n	800f1e6 <_svfprintf_r+0xc6a>
 800f1ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f1cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f1ce:	6023      	str	r3, [r4, #0]
 800f1d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f1d2:	6063      	str	r3, [r4, #4]
 800f1d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f1d6:	4413      	add	r3, r2
 800f1d8:	9323      	str	r3, [sp, #140]	; 0x8c
 800f1da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f1dc:	3301      	adds	r3, #1
 800f1de:	2b07      	cmp	r3, #7
 800f1e0:	9322      	str	r3, [sp, #136]	; 0x88
 800f1e2:	dc60      	bgt.n	800f2a6 <_svfprintf_r+0xd2a>
 800f1e4:	3408      	adds	r4, #8
 800f1e6:	9b07      	ldr	r3, [sp, #28]
 800f1e8:	9a07      	ldr	r2, [sp, #28]
 800f1ea:	1bde      	subs	r6, r3, r7
 800f1ec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f1ee:	1ad3      	subs	r3, r2, r3
 800f1f0:	429e      	cmp	r6, r3
 800f1f2:	bfa8      	it	ge
 800f1f4:	461e      	movge	r6, r3
 800f1f6:	2e00      	cmp	r6, #0
 800f1f8:	dd0b      	ble.n	800f212 <_svfprintf_r+0xc96>
 800f1fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f1fc:	4447      	add	r7, r8
 800f1fe:	4433      	add	r3, r6
 800f200:	9323      	str	r3, [sp, #140]	; 0x8c
 800f202:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f204:	6027      	str	r7, [r4, #0]
 800f206:	3301      	adds	r3, #1
 800f208:	2b07      	cmp	r3, #7
 800f20a:	6066      	str	r6, [r4, #4]
 800f20c:	9322      	str	r3, [sp, #136]	; 0x88
 800f20e:	dc54      	bgt.n	800f2ba <_svfprintf_r+0xd3e>
 800f210:	3408      	adds	r4, #8
 800f212:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f214:	9a07      	ldr	r2, [sp, #28]
 800f216:	2e00      	cmp	r6, #0
 800f218:	eba2 0303 	sub.w	r3, r2, r3
 800f21c:	bfb4      	ite	lt
 800f21e:	461e      	movlt	r6, r3
 800f220:	1b9e      	subge	r6, r3, r6
 800f222:	2e00      	cmp	r6, #0
 800f224:	f77f acd7 	ble.w	800ebd6 <_svfprintf_r+0x65a>
 800f228:	f04f 0810 	mov.w	r8, #16
 800f22c:	4f2e      	ldr	r7, [pc, #184]	; (800f2e8 <_svfprintf_r+0xd6c>)
 800f22e:	2e10      	cmp	r6, #16
 800f230:	6027      	str	r7, [r4, #0]
 800f232:	f77f aee7 	ble.w	800f004 <_svfprintf_r+0xa88>
 800f236:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f238:	f8c4 8004 	str.w	r8, [r4, #4]
 800f23c:	3310      	adds	r3, #16
 800f23e:	9323      	str	r3, [sp, #140]	; 0x8c
 800f240:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f242:	3301      	adds	r3, #1
 800f244:	2b07      	cmp	r3, #7
 800f246:	9322      	str	r3, [sp, #136]	; 0x88
 800f248:	dc41      	bgt.n	800f2ce <_svfprintf_r+0xd52>
 800f24a:	3408      	adds	r4, #8
 800f24c:	3e10      	subs	r6, #16
 800f24e:	e7ee      	b.n	800f22e <_svfprintf_r+0xcb2>
 800f250:	aa21      	add	r2, sp, #132	; 0x84
 800f252:	4649      	mov	r1, r9
 800f254:	4650      	mov	r0, sl
 800f256:	f001 ff27 	bl	80110a8 <__ssprint_r>
 800f25a:	2800      	cmp	r0, #0
 800f25c:	f040 80eb 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f260:	ac2e      	add	r4, sp, #184	; 0xb8
 800f262:	e796      	b.n	800f192 <_svfprintf_r+0xc16>
 800f264:	2310      	movs	r3, #16
 800f266:	6063      	str	r3, [r4, #4]
 800f268:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f26a:	3310      	adds	r3, #16
 800f26c:	9323      	str	r3, [sp, #140]	; 0x8c
 800f26e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f270:	3301      	adds	r3, #1
 800f272:	2b07      	cmp	r3, #7
 800f274:	9322      	str	r3, [sp, #136]	; 0x88
 800f276:	dc02      	bgt.n	800f27e <_svfprintf_r+0xd02>
 800f278:	3408      	adds	r4, #8
 800f27a:	3e10      	subs	r6, #16
 800f27c:	e791      	b.n	800f1a2 <_svfprintf_r+0xc26>
 800f27e:	aa21      	add	r2, sp, #132	; 0x84
 800f280:	4649      	mov	r1, r9
 800f282:	4650      	mov	r0, sl
 800f284:	f001 ff10 	bl	80110a8 <__ssprint_r>
 800f288:	2800      	cmp	r0, #0
 800f28a:	f040 80d4 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f28e:	ac2e      	add	r4, sp, #184	; 0xb8
 800f290:	e7f3      	b.n	800f27a <_svfprintf_r+0xcfe>
 800f292:	aa21      	add	r2, sp, #132	; 0x84
 800f294:	4649      	mov	r1, r9
 800f296:	4650      	mov	r0, sl
 800f298:	f001 ff06 	bl	80110a8 <__ssprint_r>
 800f29c:	2800      	cmp	r0, #0
 800f29e:	f040 80ca 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f2a2:	ac2e      	add	r4, sp, #184	; 0xb8
 800f2a4:	e78b      	b.n	800f1be <_svfprintf_r+0xc42>
 800f2a6:	aa21      	add	r2, sp, #132	; 0x84
 800f2a8:	4649      	mov	r1, r9
 800f2aa:	4650      	mov	r0, sl
 800f2ac:	f001 fefc 	bl	80110a8 <__ssprint_r>
 800f2b0:	2800      	cmp	r0, #0
 800f2b2:	f040 80c0 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f2b6:	ac2e      	add	r4, sp, #184	; 0xb8
 800f2b8:	e795      	b.n	800f1e6 <_svfprintf_r+0xc6a>
 800f2ba:	aa21      	add	r2, sp, #132	; 0x84
 800f2bc:	4649      	mov	r1, r9
 800f2be:	4650      	mov	r0, sl
 800f2c0:	f001 fef2 	bl	80110a8 <__ssprint_r>
 800f2c4:	2800      	cmp	r0, #0
 800f2c6:	f040 80b6 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f2ca:	ac2e      	add	r4, sp, #184	; 0xb8
 800f2cc:	e7a1      	b.n	800f212 <_svfprintf_r+0xc96>
 800f2ce:	aa21      	add	r2, sp, #132	; 0x84
 800f2d0:	4649      	mov	r1, r9
 800f2d2:	4650      	mov	r0, sl
 800f2d4:	f001 fee8 	bl	80110a8 <__ssprint_r>
 800f2d8:	2800      	cmp	r0, #0
 800f2da:	f040 80ac 	bne.w	800f436 <_svfprintf_r+0xeba>
 800f2de:	ac2e      	add	r4, sp, #184	; 0xb8
 800f2e0:	e7b4      	b.n	800f24c <_svfprintf_r+0xcd0>
 800f2e2:	bf00      	nop
 800f2e4:	08013060 	.word	0x08013060
 800f2e8:	08013072 	.word	0x08013072
 800f2ec:	9b07      	ldr	r3, [sp, #28]
 800f2ee:	2b01      	cmp	r3, #1
 800f2f0:	dc01      	bgt.n	800f2f6 <_svfprintf_r+0xd7a>
 800f2f2:	07ea      	lsls	r2, r5, #31
 800f2f4:	d576      	bpl.n	800f3e4 <_svfprintf_r+0xe68>
 800f2f6:	2301      	movs	r3, #1
 800f2f8:	6063      	str	r3, [r4, #4]
 800f2fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f2fc:	f8c4 8000 	str.w	r8, [r4]
 800f300:	3301      	adds	r3, #1
 800f302:	9323      	str	r3, [sp, #140]	; 0x8c
 800f304:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f306:	3301      	adds	r3, #1
 800f308:	2b07      	cmp	r3, #7
 800f30a:	9322      	str	r3, [sp, #136]	; 0x88
 800f30c:	dc36      	bgt.n	800f37c <_svfprintf_r+0xe00>
 800f30e:	3408      	adds	r4, #8
 800f310:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f312:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f314:	6023      	str	r3, [r4, #0]
 800f316:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f318:	6063      	str	r3, [r4, #4]
 800f31a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f31c:	4413      	add	r3, r2
 800f31e:	9323      	str	r3, [sp, #140]	; 0x8c
 800f320:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f322:	3301      	adds	r3, #1
 800f324:	2b07      	cmp	r3, #7
 800f326:	9322      	str	r3, [sp, #136]	; 0x88
 800f328:	dc31      	bgt.n	800f38e <_svfprintf_r+0xe12>
 800f32a:	3408      	adds	r4, #8
 800f32c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f32e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f330:	980d      	ldr	r0, [sp, #52]	; 0x34
 800f332:	990e      	ldr	r1, [sp, #56]	; 0x38
 800f334:	f7f7 fe8a 	bl	800704c <__aeabi_dcmpeq>
 800f338:	9b07      	ldr	r3, [sp, #28]
 800f33a:	1e5e      	subs	r6, r3, #1
 800f33c:	2800      	cmp	r0, #0
 800f33e:	d12f      	bne.n	800f3a0 <_svfprintf_r+0xe24>
 800f340:	f108 0301 	add.w	r3, r8, #1
 800f344:	e884 0048 	stmia.w	r4, {r3, r6}
 800f348:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f34a:	9a07      	ldr	r2, [sp, #28]
 800f34c:	3b01      	subs	r3, #1
 800f34e:	4413      	add	r3, r2
 800f350:	9323      	str	r3, [sp, #140]	; 0x8c
 800f352:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f354:	3301      	adds	r3, #1
 800f356:	2b07      	cmp	r3, #7
 800f358:	9322      	str	r3, [sp, #136]	; 0x88
 800f35a:	dd4a      	ble.n	800f3f2 <_svfprintf_r+0xe76>
 800f35c:	aa21      	add	r2, sp, #132	; 0x84
 800f35e:	4649      	mov	r1, r9
 800f360:	4650      	mov	r0, sl
 800f362:	f001 fea1 	bl	80110a8 <__ssprint_r>
 800f366:	2800      	cmp	r0, #0
 800f368:	d165      	bne.n	800f436 <_svfprintf_r+0xeba>
 800f36a:	ac2e      	add	r4, sp, #184	; 0xb8
 800f36c:	ab1d      	add	r3, sp, #116	; 0x74
 800f36e:	6023      	str	r3, [r4, #0]
 800f370:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800f372:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f374:	6063      	str	r3, [r4, #4]
 800f376:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f378:	4413      	add	r3, r2
 800f37a:	e41c      	b.n	800ebb6 <_svfprintf_r+0x63a>
 800f37c:	aa21      	add	r2, sp, #132	; 0x84
 800f37e:	4649      	mov	r1, r9
 800f380:	4650      	mov	r0, sl
 800f382:	f001 fe91 	bl	80110a8 <__ssprint_r>
 800f386:	2800      	cmp	r0, #0
 800f388:	d155      	bne.n	800f436 <_svfprintf_r+0xeba>
 800f38a:	ac2e      	add	r4, sp, #184	; 0xb8
 800f38c:	e7c0      	b.n	800f310 <_svfprintf_r+0xd94>
 800f38e:	aa21      	add	r2, sp, #132	; 0x84
 800f390:	4649      	mov	r1, r9
 800f392:	4650      	mov	r0, sl
 800f394:	f001 fe88 	bl	80110a8 <__ssprint_r>
 800f398:	2800      	cmp	r0, #0
 800f39a:	d14c      	bne.n	800f436 <_svfprintf_r+0xeba>
 800f39c:	ac2e      	add	r4, sp, #184	; 0xb8
 800f39e:	e7c5      	b.n	800f32c <_svfprintf_r+0xdb0>
 800f3a0:	2e00      	cmp	r6, #0
 800f3a2:	dde3      	ble.n	800f36c <_svfprintf_r+0xdf0>
 800f3a4:	f04f 0810 	mov.w	r8, #16
 800f3a8:	4f58      	ldr	r7, [pc, #352]	; (800f50c <_svfprintf_r+0xf90>)
 800f3aa:	2e10      	cmp	r6, #16
 800f3ac:	6027      	str	r7, [r4, #0]
 800f3ae:	dc04      	bgt.n	800f3ba <_svfprintf_r+0xe3e>
 800f3b0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f3b2:	6066      	str	r6, [r4, #4]
 800f3b4:	441e      	add	r6, r3
 800f3b6:	9623      	str	r6, [sp, #140]	; 0x8c
 800f3b8:	e7cb      	b.n	800f352 <_svfprintf_r+0xdd6>
 800f3ba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f3bc:	f8c4 8004 	str.w	r8, [r4, #4]
 800f3c0:	3310      	adds	r3, #16
 800f3c2:	9323      	str	r3, [sp, #140]	; 0x8c
 800f3c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f3c6:	3301      	adds	r3, #1
 800f3c8:	2b07      	cmp	r3, #7
 800f3ca:	9322      	str	r3, [sp, #136]	; 0x88
 800f3cc:	dc02      	bgt.n	800f3d4 <_svfprintf_r+0xe58>
 800f3ce:	3408      	adds	r4, #8
 800f3d0:	3e10      	subs	r6, #16
 800f3d2:	e7ea      	b.n	800f3aa <_svfprintf_r+0xe2e>
 800f3d4:	aa21      	add	r2, sp, #132	; 0x84
 800f3d6:	4649      	mov	r1, r9
 800f3d8:	4650      	mov	r0, sl
 800f3da:	f001 fe65 	bl	80110a8 <__ssprint_r>
 800f3de:	bb50      	cbnz	r0, 800f436 <_svfprintf_r+0xeba>
 800f3e0:	ac2e      	add	r4, sp, #184	; 0xb8
 800f3e2:	e7f5      	b.n	800f3d0 <_svfprintf_r+0xe54>
 800f3e4:	2301      	movs	r3, #1
 800f3e6:	6063      	str	r3, [r4, #4]
 800f3e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f3ea:	f8c4 8000 	str.w	r8, [r4]
 800f3ee:	3301      	adds	r3, #1
 800f3f0:	e7ae      	b.n	800f350 <_svfprintf_r+0xdd4>
 800f3f2:	3408      	adds	r4, #8
 800f3f4:	e7ba      	b.n	800f36c <_svfprintf_r+0xdf0>
 800f3f6:	3408      	adds	r4, #8
 800f3f8:	f7ff bbed 	b.w	800ebd6 <_svfprintf_r+0x65a>
 800f3fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f3fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f400:	1a9d      	subs	r5, r3, r2
 800f402:	2d00      	cmp	r5, #0
 800f404:	f77f abea 	ble.w	800ebdc <_svfprintf_r+0x660>
 800f408:	2610      	movs	r6, #16
 800f40a:	4b41      	ldr	r3, [pc, #260]	; (800f510 <_svfprintf_r+0xf94>)
 800f40c:	2d10      	cmp	r5, #16
 800f40e:	6023      	str	r3, [r4, #0]
 800f410:	dc1b      	bgt.n	800f44a <_svfprintf_r+0xece>
 800f412:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f414:	6065      	str	r5, [r4, #4]
 800f416:	441d      	add	r5, r3
 800f418:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f41a:	9523      	str	r5, [sp, #140]	; 0x8c
 800f41c:	3301      	adds	r3, #1
 800f41e:	2b07      	cmp	r3, #7
 800f420:	9322      	str	r3, [sp, #136]	; 0x88
 800f422:	f77f abdb 	ble.w	800ebdc <_svfprintf_r+0x660>
 800f426:	aa21      	add	r2, sp, #132	; 0x84
 800f428:	4649      	mov	r1, r9
 800f42a:	4650      	mov	r0, sl
 800f42c:	f001 fe3c 	bl	80110a8 <__ssprint_r>
 800f430:	2800      	cmp	r0, #0
 800f432:	f43f abd3 	beq.w	800ebdc <_svfprintf_r+0x660>
 800f436:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800f43a:	f013 0f40 	tst.w	r3, #64	; 0x40
 800f43e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f440:	bf18      	it	ne
 800f442:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
 800f446:	f7ff b8bd 	b.w	800e5c4 <_svfprintf_r+0x48>
 800f44a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f44c:	6066      	str	r6, [r4, #4]
 800f44e:	3310      	adds	r3, #16
 800f450:	9323      	str	r3, [sp, #140]	; 0x8c
 800f452:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f454:	3301      	adds	r3, #1
 800f456:	2b07      	cmp	r3, #7
 800f458:	9322      	str	r3, [sp, #136]	; 0x88
 800f45a:	dc02      	bgt.n	800f462 <_svfprintf_r+0xee6>
 800f45c:	3408      	adds	r4, #8
 800f45e:	3d10      	subs	r5, #16
 800f460:	e7d3      	b.n	800f40a <_svfprintf_r+0xe8e>
 800f462:	aa21      	add	r2, sp, #132	; 0x84
 800f464:	4649      	mov	r1, r9
 800f466:	4650      	mov	r0, sl
 800f468:	f001 fe1e 	bl	80110a8 <__ssprint_r>
 800f46c:	2800      	cmp	r0, #0
 800f46e:	d1e2      	bne.n	800f436 <_svfprintf_r+0xeba>
 800f470:	ac2e      	add	r4, sp, #184	; 0xb8
 800f472:	e7f4      	b.n	800f45e <_svfprintf_r+0xee2>
 800f474:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f476:	2b00      	cmp	r3, #0
 800f478:	d0dd      	beq.n	800f436 <_svfprintf_r+0xeba>
 800f47a:	aa21      	add	r2, sp, #132	; 0x84
 800f47c:	4649      	mov	r1, r9
 800f47e:	4650      	mov	r0, sl
 800f480:	f001 fe12 	bl	80110a8 <__ssprint_r>
 800f484:	e7d7      	b.n	800f436 <_svfprintf_r+0xeba>
 800f486:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f488:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f48a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800f48c:	990e      	ldr	r1, [sp, #56]	; 0x38
 800f48e:	f7f7 fe0f 	bl	80070b0 <__aeabi_dcmpun>
 800f492:	2800      	cmp	r0, #0
 800f494:	f43f aa3d 	beq.w	800e912 <_svfprintf_r+0x396>
 800f498:	4b1e      	ldr	r3, [pc, #120]	; (800f514 <_svfprintf_r+0xf98>)
 800f49a:	4a1f      	ldr	r2, [pc, #124]	; (800f518 <_svfprintf_r+0xf9c>)
 800f49c:	f7ff ba2d 	b.w	800e8fa <_svfprintf_r+0x37e>
 800f4a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f4a2:	eba3 0308 	sub.w	r3, r3, r8
 800f4a6:	9307      	str	r3, [sp, #28]
 800f4a8:	f7ff baaf 	b.w	800ea0a <_svfprintf_r+0x48e>
 800f4ac:	ea56 0207 	orrs.w	r2, r6, r7
 800f4b0:	950f      	str	r5, [sp, #60]	; 0x3c
 800f4b2:	f43f ac2b 	beq.w	800ed0c <_svfprintf_r+0x790>
 800f4b6:	2b01      	cmp	r3, #1
 800f4b8:	f43f ac9d 	beq.w	800edf6 <_svfprintf_r+0x87a>
 800f4bc:	2b02      	cmp	r3, #2
 800f4be:	f43f acbd 	beq.w	800ee3c <_svfprintf_r+0x8c0>
 800f4c2:	ab2e      	add	r3, sp, #184	; 0xb8
 800f4c4:	08f1      	lsrs	r1, r6, #3
 800f4c6:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 800f4ca:	08f8      	lsrs	r0, r7, #3
 800f4cc:	f006 0207 	and.w	r2, r6, #7
 800f4d0:	4607      	mov	r7, r0
 800f4d2:	460e      	mov	r6, r1
 800f4d4:	3230      	adds	r2, #48	; 0x30
 800f4d6:	ea56 0107 	orrs.w	r1, r6, r7
 800f4da:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800f4de:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f4e2:	f47f ac86 	bne.w	800edf2 <_svfprintf_r+0x876>
 800f4e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800f4e8:	07c9      	lsls	r1, r1, #31
 800f4ea:	d506      	bpl.n	800f4fa <_svfprintf_r+0xf7e>
 800f4ec:	2a30      	cmp	r2, #48	; 0x30
 800f4ee:	d004      	beq.n	800f4fa <_svfprintf_r+0xf7e>
 800f4f0:	2230      	movs	r2, #48	; 0x30
 800f4f2:	f808 2c01 	strb.w	r2, [r8, #-1]
 800f4f6:	f1a3 0802 	sub.w	r8, r3, #2
 800f4fa:	ab2e      	add	r3, sp, #184	; 0xb8
 800f4fc:	465e      	mov	r6, fp
 800f4fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800f500:	eba3 0b08 	sub.w	fp, r3, r8
 800f504:	2700      	movs	r7, #0
 800f506:	f7ff bace 	b.w	800eaa6 <_svfprintf_r+0x52a>
 800f50a:	bf00      	nop
 800f50c:	08013072 	.word	0x08013072
 800f510:	08013062 	.word	0x08013062
 800f514:	08013036 	.word	0x08013036
 800f518:	0801303a 	.word	0x0801303a

0800f51c <_user_strerror>:
 800f51c:	2000      	movs	r0, #0
 800f51e:	4770      	bx	lr

0800f520 <__swbuf_r>:
 800f520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f522:	460e      	mov	r6, r1
 800f524:	4614      	mov	r4, r2
 800f526:	4605      	mov	r5, r0
 800f528:	b118      	cbz	r0, 800f532 <__swbuf_r+0x12>
 800f52a:	6983      	ldr	r3, [r0, #24]
 800f52c:	b90b      	cbnz	r3, 800f532 <__swbuf_r+0x12>
 800f52e:	f001 f8f5 	bl	801071c <__sinit>
 800f532:	4b27      	ldr	r3, [pc, #156]	; (800f5d0 <__swbuf_r+0xb0>)
 800f534:	429c      	cmp	r4, r3
 800f536:	d12f      	bne.n	800f598 <__swbuf_r+0x78>
 800f538:	686c      	ldr	r4, [r5, #4]
 800f53a:	69a3      	ldr	r3, [r4, #24]
 800f53c:	60a3      	str	r3, [r4, #8]
 800f53e:	89a3      	ldrh	r3, [r4, #12]
 800f540:	0719      	lsls	r1, r3, #28
 800f542:	d533      	bpl.n	800f5ac <__swbuf_r+0x8c>
 800f544:	6923      	ldr	r3, [r4, #16]
 800f546:	2b00      	cmp	r3, #0
 800f548:	d030      	beq.n	800f5ac <__swbuf_r+0x8c>
 800f54a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f54e:	b2f6      	uxtb	r6, r6
 800f550:	049a      	lsls	r2, r3, #18
 800f552:	4637      	mov	r7, r6
 800f554:	d534      	bpl.n	800f5c0 <__swbuf_r+0xa0>
 800f556:	6923      	ldr	r3, [r4, #16]
 800f558:	6820      	ldr	r0, [r4, #0]
 800f55a:	1ac0      	subs	r0, r0, r3
 800f55c:	6963      	ldr	r3, [r4, #20]
 800f55e:	4298      	cmp	r0, r3
 800f560:	db04      	blt.n	800f56c <__swbuf_r+0x4c>
 800f562:	4621      	mov	r1, r4
 800f564:	4628      	mov	r0, r5
 800f566:	f001 f845 	bl	80105f4 <_fflush_r>
 800f56a:	bb28      	cbnz	r0, 800f5b8 <__swbuf_r+0x98>
 800f56c:	68a3      	ldr	r3, [r4, #8]
 800f56e:	3001      	adds	r0, #1
 800f570:	3b01      	subs	r3, #1
 800f572:	60a3      	str	r3, [r4, #8]
 800f574:	6823      	ldr	r3, [r4, #0]
 800f576:	1c5a      	adds	r2, r3, #1
 800f578:	6022      	str	r2, [r4, #0]
 800f57a:	701e      	strb	r6, [r3, #0]
 800f57c:	6963      	ldr	r3, [r4, #20]
 800f57e:	4298      	cmp	r0, r3
 800f580:	d004      	beq.n	800f58c <__swbuf_r+0x6c>
 800f582:	89a3      	ldrh	r3, [r4, #12]
 800f584:	07db      	lsls	r3, r3, #31
 800f586:	d519      	bpl.n	800f5bc <__swbuf_r+0x9c>
 800f588:	2e0a      	cmp	r6, #10
 800f58a:	d117      	bne.n	800f5bc <__swbuf_r+0x9c>
 800f58c:	4621      	mov	r1, r4
 800f58e:	4628      	mov	r0, r5
 800f590:	f001 f830 	bl	80105f4 <_fflush_r>
 800f594:	b190      	cbz	r0, 800f5bc <__swbuf_r+0x9c>
 800f596:	e00f      	b.n	800f5b8 <__swbuf_r+0x98>
 800f598:	4b0e      	ldr	r3, [pc, #56]	; (800f5d4 <__swbuf_r+0xb4>)
 800f59a:	429c      	cmp	r4, r3
 800f59c:	d101      	bne.n	800f5a2 <__swbuf_r+0x82>
 800f59e:	68ac      	ldr	r4, [r5, #8]
 800f5a0:	e7cb      	b.n	800f53a <__swbuf_r+0x1a>
 800f5a2:	4b0d      	ldr	r3, [pc, #52]	; (800f5d8 <__swbuf_r+0xb8>)
 800f5a4:	429c      	cmp	r4, r3
 800f5a6:	bf08      	it	eq
 800f5a8:	68ec      	ldreq	r4, [r5, #12]
 800f5aa:	e7c6      	b.n	800f53a <__swbuf_r+0x1a>
 800f5ac:	4621      	mov	r1, r4
 800f5ae:	4628      	mov	r0, r5
 800f5b0:	f000 f834 	bl	800f61c <__swsetup_r>
 800f5b4:	2800      	cmp	r0, #0
 800f5b6:	d0c8      	beq.n	800f54a <__swbuf_r+0x2a>
 800f5b8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800f5bc:	4638      	mov	r0, r7
 800f5be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f5c0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800f5c4:	81a3      	strh	r3, [r4, #12]
 800f5c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f5c8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800f5cc:	6663      	str	r3, [r4, #100]	; 0x64
 800f5ce:	e7c2      	b.n	800f556 <__swbuf_r+0x36>
 800f5d0:	080130b0 	.word	0x080130b0
 800f5d4:	080130d0 	.word	0x080130d0
 800f5d8:	08013090 	.word	0x08013090

0800f5dc <__ascii_wctomb>:
 800f5dc:	b149      	cbz	r1, 800f5f2 <__ascii_wctomb+0x16>
 800f5de:	2aff      	cmp	r2, #255	; 0xff
 800f5e0:	bf8b      	itete	hi
 800f5e2:	238a      	movhi	r3, #138	; 0x8a
 800f5e4:	700a      	strbls	r2, [r1, #0]
 800f5e6:	6003      	strhi	r3, [r0, #0]
 800f5e8:	2001      	movls	r0, #1
 800f5ea:	bf88      	it	hi
 800f5ec:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 800f5f0:	4770      	bx	lr
 800f5f2:	4608      	mov	r0, r1
 800f5f4:	4770      	bx	lr
	...

0800f5f8 <_write_r>:
 800f5f8:	b538      	push	{r3, r4, r5, lr}
 800f5fa:	4605      	mov	r5, r0
 800f5fc:	4608      	mov	r0, r1
 800f5fe:	4611      	mov	r1, r2
 800f600:	2200      	movs	r2, #0
 800f602:	4c05      	ldr	r4, [pc, #20]	; (800f618 <_write_r+0x20>)
 800f604:	6022      	str	r2, [r4, #0]
 800f606:	461a      	mov	r2, r3
 800f608:	f001 fea8 	bl	801135c <_write>
 800f60c:	1c43      	adds	r3, r0, #1
 800f60e:	d102      	bne.n	800f616 <_write_r+0x1e>
 800f610:	6823      	ldr	r3, [r4, #0]
 800f612:	b103      	cbz	r3, 800f616 <_write_r+0x1e>
 800f614:	602b      	str	r3, [r5, #0]
 800f616:	bd38      	pop	{r3, r4, r5, pc}
 800f618:	20000b20 	.word	0x20000b20

0800f61c <__swsetup_r>:
 800f61c:	4b32      	ldr	r3, [pc, #200]	; (800f6e8 <__swsetup_r+0xcc>)
 800f61e:	b570      	push	{r4, r5, r6, lr}
 800f620:	681d      	ldr	r5, [r3, #0]
 800f622:	4606      	mov	r6, r0
 800f624:	460c      	mov	r4, r1
 800f626:	b125      	cbz	r5, 800f632 <__swsetup_r+0x16>
 800f628:	69ab      	ldr	r3, [r5, #24]
 800f62a:	b913      	cbnz	r3, 800f632 <__swsetup_r+0x16>
 800f62c:	4628      	mov	r0, r5
 800f62e:	f001 f875 	bl	801071c <__sinit>
 800f632:	4b2e      	ldr	r3, [pc, #184]	; (800f6ec <__swsetup_r+0xd0>)
 800f634:	429c      	cmp	r4, r3
 800f636:	d10f      	bne.n	800f658 <__swsetup_r+0x3c>
 800f638:	686c      	ldr	r4, [r5, #4]
 800f63a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f63e:	b29a      	uxth	r2, r3
 800f640:	0715      	lsls	r5, r2, #28
 800f642:	d42c      	bmi.n	800f69e <__swsetup_r+0x82>
 800f644:	06d0      	lsls	r0, r2, #27
 800f646:	d411      	bmi.n	800f66c <__swsetup_r+0x50>
 800f648:	2209      	movs	r2, #9
 800f64a:	6032      	str	r2, [r6, #0]
 800f64c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f650:	81a3      	strh	r3, [r4, #12]
 800f652:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f656:	bd70      	pop	{r4, r5, r6, pc}
 800f658:	4b25      	ldr	r3, [pc, #148]	; (800f6f0 <__swsetup_r+0xd4>)
 800f65a:	429c      	cmp	r4, r3
 800f65c:	d101      	bne.n	800f662 <__swsetup_r+0x46>
 800f65e:	68ac      	ldr	r4, [r5, #8]
 800f660:	e7eb      	b.n	800f63a <__swsetup_r+0x1e>
 800f662:	4b24      	ldr	r3, [pc, #144]	; (800f6f4 <__swsetup_r+0xd8>)
 800f664:	429c      	cmp	r4, r3
 800f666:	bf08      	it	eq
 800f668:	68ec      	ldreq	r4, [r5, #12]
 800f66a:	e7e6      	b.n	800f63a <__swsetup_r+0x1e>
 800f66c:	0751      	lsls	r1, r2, #29
 800f66e:	d512      	bpl.n	800f696 <__swsetup_r+0x7a>
 800f670:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f672:	b141      	cbz	r1, 800f686 <__swsetup_r+0x6a>
 800f674:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f678:	4299      	cmp	r1, r3
 800f67a:	d002      	beq.n	800f682 <__swsetup_r+0x66>
 800f67c:	4630      	mov	r0, r6
 800f67e:	f001 f925 	bl	80108cc <_free_r>
 800f682:	2300      	movs	r3, #0
 800f684:	6363      	str	r3, [r4, #52]	; 0x34
 800f686:	89a3      	ldrh	r3, [r4, #12]
 800f688:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f68c:	81a3      	strh	r3, [r4, #12]
 800f68e:	2300      	movs	r3, #0
 800f690:	6063      	str	r3, [r4, #4]
 800f692:	6923      	ldr	r3, [r4, #16]
 800f694:	6023      	str	r3, [r4, #0]
 800f696:	89a3      	ldrh	r3, [r4, #12]
 800f698:	f043 0308 	orr.w	r3, r3, #8
 800f69c:	81a3      	strh	r3, [r4, #12]
 800f69e:	6923      	ldr	r3, [r4, #16]
 800f6a0:	b94b      	cbnz	r3, 800f6b6 <__swsetup_r+0x9a>
 800f6a2:	89a3      	ldrh	r3, [r4, #12]
 800f6a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f6a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f6ac:	d003      	beq.n	800f6b6 <__swsetup_r+0x9a>
 800f6ae:	4621      	mov	r1, r4
 800f6b0:	4630      	mov	r0, r6
 800f6b2:	f7fe f80f 	bl	800d6d4 <__smakebuf_r>
 800f6b6:	89a2      	ldrh	r2, [r4, #12]
 800f6b8:	f012 0301 	ands.w	r3, r2, #1
 800f6bc:	d00c      	beq.n	800f6d8 <__swsetup_r+0xbc>
 800f6be:	2300      	movs	r3, #0
 800f6c0:	60a3      	str	r3, [r4, #8]
 800f6c2:	6963      	ldr	r3, [r4, #20]
 800f6c4:	425b      	negs	r3, r3
 800f6c6:	61a3      	str	r3, [r4, #24]
 800f6c8:	6923      	ldr	r3, [r4, #16]
 800f6ca:	b953      	cbnz	r3, 800f6e2 <__swsetup_r+0xc6>
 800f6cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f6d0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800f6d4:	d1ba      	bne.n	800f64c <__swsetup_r+0x30>
 800f6d6:	bd70      	pop	{r4, r5, r6, pc}
 800f6d8:	0792      	lsls	r2, r2, #30
 800f6da:	bf58      	it	pl
 800f6dc:	6963      	ldrpl	r3, [r4, #20]
 800f6de:	60a3      	str	r3, [r4, #8]
 800f6e0:	e7f2      	b.n	800f6c8 <__swsetup_r+0xac>
 800f6e2:	2000      	movs	r0, #0
 800f6e4:	e7f7      	b.n	800f6d6 <__swsetup_r+0xba>
 800f6e6:	bf00      	nop
 800f6e8:	20000020 	.word	0x20000020
 800f6ec:	080130b0 	.word	0x080130b0
 800f6f0:	080130d0 	.word	0x080130d0
 800f6f4:	08013090 	.word	0x08013090

0800f6f8 <__register_exitproc>:
 800f6f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f6fc:	4d37      	ldr	r5, [pc, #220]	; (800f7dc <__register_exitproc+0xe4>)
 800f6fe:	4680      	mov	r8, r0
 800f700:	6828      	ldr	r0, [r5, #0]
 800f702:	4699      	mov	r9, r3
 800f704:	460f      	mov	r7, r1
 800f706:	4692      	mov	sl, r2
 800f708:	f7fd ffb6 	bl	800d678 <__retarget_lock_acquire_recursive>
 800f70c:	4b34      	ldr	r3, [pc, #208]	; (800f7e0 <__register_exitproc+0xe8>)
 800f70e:	681e      	ldr	r6, [r3, #0]
 800f710:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 800f712:	b93c      	cbnz	r4, 800f724 <__register_exitproc+0x2c>
 800f714:	4b33      	ldr	r3, [pc, #204]	; (800f7e4 <__register_exitproc+0xec>)
 800f716:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 800f71a:	64b4      	str	r4, [r6, #72]	; 0x48
 800f71c:	b113      	cbz	r3, 800f724 <__register_exitproc+0x2c>
 800f71e:	681b      	ldr	r3, [r3, #0]
 800f720:	f8c6 30d4 	str.w	r3, [r6, #212]	; 0xd4
 800f724:	6863      	ldr	r3, [r4, #4]
 800f726:	2b1f      	cmp	r3, #31
 800f728:	dd49      	ble.n	800f7be <__register_exitproc+0xc6>
 800f72a:	4b2f      	ldr	r3, [pc, #188]	; (800f7e8 <__register_exitproc+0xf0>)
 800f72c:	b933      	cbnz	r3, 800f73c <__register_exitproc+0x44>
 800f72e:	6828      	ldr	r0, [r5, #0]
 800f730:	f7fd ffa4 	bl	800d67c <__retarget_lock_release_recursive>
 800f734:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f73c:	208c      	movs	r0, #140	; 0x8c
 800f73e:	f7fe f809 	bl	800d754 <malloc>
 800f742:	4604      	mov	r4, r0
 800f744:	2800      	cmp	r0, #0
 800f746:	d0f2      	beq.n	800f72e <__register_exitproc+0x36>
 800f748:	2200      	movs	r2, #0
 800f74a:	6cb3      	ldr	r3, [r6, #72]	; 0x48
 800f74c:	6042      	str	r2, [r0, #4]
 800f74e:	6003      	str	r3, [r0, #0]
 800f750:	64b0      	str	r0, [r6, #72]	; 0x48
 800f752:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
 800f756:	f1b8 0f00 	cmp.w	r8, #0
 800f75a:	d024      	beq.n	800f7a6 <__register_exitproc+0xae>
 800f75c:	f44f 7084 	mov.w	r0, #264	; 0x108
 800f760:	f7fd fff8 	bl	800d754 <malloc>
 800f764:	2800      	cmp	r0, #0
 800f766:	d034      	beq.n	800f7d2 <__register_exitproc+0xda>
 800f768:	2300      	movs	r3, #0
 800f76a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 800f76e:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 800f772:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 800f776:	2301      	movs	r3, #1
 800f778:	6862      	ldr	r2, [r4, #4]
 800f77a:	f1b8 0f02 	cmp.w	r8, #2
 800f77e:	f840 a022 	str.w	sl, [r0, r2, lsl #2]
 800f782:	fa03 f302 	lsl.w	r3, r3, r2
 800f786:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 800f78a:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 800f78e:	ea42 0203 	orr.w	r2, r2, r3
 800f792:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 800f796:	f8c1 9080 	str.w	r9, [r1, #128]	; 0x80
 800f79a:	bf02      	ittt	eq
 800f79c:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 800f7a0:	4313      	orreq	r3, r2
 800f7a2:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 800f7a6:	6863      	ldr	r3, [r4, #4]
 800f7a8:	6828      	ldr	r0, [r5, #0]
 800f7aa:	1c5a      	adds	r2, r3, #1
 800f7ac:	3302      	adds	r3, #2
 800f7ae:	6062      	str	r2, [r4, #4]
 800f7b0:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 800f7b4:	f7fd ff62 	bl	800d67c <__retarget_lock_release_recursive>
 800f7b8:	2000      	movs	r0, #0
 800f7ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f7be:	f1b8 0f00 	cmp.w	r8, #0
 800f7c2:	d0f0      	beq.n	800f7a6 <__register_exitproc+0xae>
 800f7c4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 800f7c8:	2800      	cmp	r0, #0
 800f7ca:	d1d4      	bne.n	800f776 <__register_exitproc+0x7e>
 800f7cc:	4b06      	ldr	r3, [pc, #24]	; (800f7e8 <__register_exitproc+0xf0>)
 800f7ce:	2b00      	cmp	r3, #0
 800f7d0:	d1c4      	bne.n	800f75c <__register_exitproc+0x64>
 800f7d2:	6828      	ldr	r0, [r5, #0]
 800f7d4:	f7fd ff51 	bl	800d67a <__retarget_lock_release>
 800f7d8:	e7ac      	b.n	800f734 <__register_exitproc+0x3c>
 800f7da:	bf00      	nop
 800f7dc:	20000690 	.word	0x20000690
 800f7e0:	08012984 	.word	0x08012984
 800f7e4:	08012994 	.word	0x08012994
 800f7e8:	0800d755 	.word	0x0800d755

0800f7ec <_close_r>:
 800f7ec:	b538      	push	{r3, r4, r5, lr}
 800f7ee:	2300      	movs	r3, #0
 800f7f0:	4c05      	ldr	r4, [pc, #20]	; (800f808 <_close_r+0x1c>)
 800f7f2:	4605      	mov	r5, r0
 800f7f4:	4608      	mov	r0, r1
 800f7f6:	6023      	str	r3, [r4, #0]
 800f7f8:	f001 fd6a 	bl	80112d0 <_close>
 800f7fc:	1c43      	adds	r3, r0, #1
 800f7fe:	d102      	bne.n	800f806 <_close_r+0x1a>
 800f800:	6823      	ldr	r3, [r4, #0]
 800f802:	b103      	cbz	r3, 800f806 <_close_r+0x1a>
 800f804:	602b      	str	r3, [r5, #0]
 800f806:	bd38      	pop	{r3, r4, r5, pc}
 800f808:	20000b20 	.word	0x20000b20

0800f80c <quorem>:
 800f80c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f810:	6903      	ldr	r3, [r0, #16]
 800f812:	690c      	ldr	r4, [r1, #16]
 800f814:	4680      	mov	r8, r0
 800f816:	429c      	cmp	r4, r3
 800f818:	f300 8082 	bgt.w	800f920 <quorem+0x114>
 800f81c:	3c01      	subs	r4, #1
 800f81e:	f101 0714 	add.w	r7, r1, #20
 800f822:	f100 0614 	add.w	r6, r0, #20
 800f826:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800f82a:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800f82e:	3501      	adds	r5, #1
 800f830:	fbb0 f5f5 	udiv	r5, r0, r5
 800f834:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f838:	eb06 030e 	add.w	r3, r6, lr
 800f83c:	eb07 090e 	add.w	r9, r7, lr
 800f840:	9301      	str	r3, [sp, #4]
 800f842:	b38d      	cbz	r5, 800f8a8 <quorem+0x9c>
 800f844:	f04f 0a00 	mov.w	sl, #0
 800f848:	4638      	mov	r0, r7
 800f84a:	46b4      	mov	ip, r6
 800f84c:	46d3      	mov	fp, sl
 800f84e:	f850 2b04 	ldr.w	r2, [r0], #4
 800f852:	b293      	uxth	r3, r2
 800f854:	fb05 a303 	mla	r3, r5, r3, sl
 800f858:	0c12      	lsrs	r2, r2, #16
 800f85a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800f85e:	fb05 a202 	mla	r2, r5, r2, sl
 800f862:	b29b      	uxth	r3, r3
 800f864:	ebab 0303 	sub.w	r3, fp, r3
 800f868:	f8bc b000 	ldrh.w	fp, [ip]
 800f86c:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 800f870:	445b      	add	r3, fp
 800f872:	fa1f fb82 	uxth.w	fp, r2
 800f876:	f8dc 2000 	ldr.w	r2, [ip]
 800f87a:	4581      	cmp	r9, r0
 800f87c:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800f880:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800f884:	b29b      	uxth	r3, r3
 800f886:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800f88a:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800f88e:	f84c 3b04 	str.w	r3, [ip], #4
 800f892:	d2dc      	bcs.n	800f84e <quorem+0x42>
 800f894:	f856 300e 	ldr.w	r3, [r6, lr]
 800f898:	b933      	cbnz	r3, 800f8a8 <quorem+0x9c>
 800f89a:	9b01      	ldr	r3, [sp, #4]
 800f89c:	3b04      	subs	r3, #4
 800f89e:	429e      	cmp	r6, r3
 800f8a0:	461a      	mov	r2, r3
 800f8a2:	d331      	bcc.n	800f908 <quorem+0xfc>
 800f8a4:	f8c8 4010 	str.w	r4, [r8, #16]
 800f8a8:	4640      	mov	r0, r8
 800f8aa:	f001 fb22 	bl	8010ef2 <__mcmp>
 800f8ae:	2800      	cmp	r0, #0
 800f8b0:	db26      	blt.n	800f900 <quorem+0xf4>
 800f8b2:	4630      	mov	r0, r6
 800f8b4:	f04f 0e00 	mov.w	lr, #0
 800f8b8:	3501      	adds	r5, #1
 800f8ba:	f857 1b04 	ldr.w	r1, [r7], #4
 800f8be:	f8d0 c000 	ldr.w	ip, [r0]
 800f8c2:	b28b      	uxth	r3, r1
 800f8c4:	ebae 0303 	sub.w	r3, lr, r3
 800f8c8:	fa1f f28c 	uxth.w	r2, ip
 800f8cc:	4413      	add	r3, r2
 800f8ce:	0c0a      	lsrs	r2, r1, #16
 800f8d0:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800f8d4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800f8d8:	b29b      	uxth	r3, r3
 800f8da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800f8de:	45b9      	cmp	r9, r7
 800f8e0:	ea4f 4e22 	mov.w	lr, r2, asr #16
 800f8e4:	f840 3b04 	str.w	r3, [r0], #4
 800f8e8:	d2e7      	bcs.n	800f8ba <quorem+0xae>
 800f8ea:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800f8ee:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800f8f2:	b92a      	cbnz	r2, 800f900 <quorem+0xf4>
 800f8f4:	3b04      	subs	r3, #4
 800f8f6:	429e      	cmp	r6, r3
 800f8f8:	461a      	mov	r2, r3
 800f8fa:	d30b      	bcc.n	800f914 <quorem+0x108>
 800f8fc:	f8c8 4010 	str.w	r4, [r8, #16]
 800f900:	4628      	mov	r0, r5
 800f902:	b003      	add	sp, #12
 800f904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f908:	6812      	ldr	r2, [r2, #0]
 800f90a:	3b04      	subs	r3, #4
 800f90c:	2a00      	cmp	r2, #0
 800f90e:	d1c9      	bne.n	800f8a4 <quorem+0x98>
 800f910:	3c01      	subs	r4, #1
 800f912:	e7c4      	b.n	800f89e <quorem+0x92>
 800f914:	6812      	ldr	r2, [r2, #0]
 800f916:	3b04      	subs	r3, #4
 800f918:	2a00      	cmp	r2, #0
 800f91a:	d1ef      	bne.n	800f8fc <quorem+0xf0>
 800f91c:	3c01      	subs	r4, #1
 800f91e:	e7ea      	b.n	800f8f6 <quorem+0xea>
 800f920:	2000      	movs	r0, #0
 800f922:	e7ee      	b.n	800f902 <quorem+0xf6>
 800f924:	0000      	movs	r0, r0
	...

0800f928 <_dtoa_r>:
 800f928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f92c:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800f92e:	b095      	sub	sp, #84	; 0x54
 800f930:	4604      	mov	r4, r0
 800f932:	9d21      	ldr	r5, [sp, #132]	; 0x84
 800f934:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800f938:	b93e      	cbnz	r6, 800f94a <_dtoa_r+0x22>
 800f93a:	2010      	movs	r0, #16
 800f93c:	f7fd ff0a 	bl	800d754 <malloc>
 800f940:	6260      	str	r0, [r4, #36]	; 0x24
 800f942:	6046      	str	r6, [r0, #4]
 800f944:	6086      	str	r6, [r0, #8]
 800f946:	6006      	str	r6, [r0, #0]
 800f948:	60c6      	str	r6, [r0, #12]
 800f94a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f94c:	6819      	ldr	r1, [r3, #0]
 800f94e:	b151      	cbz	r1, 800f966 <_dtoa_r+0x3e>
 800f950:	685a      	ldr	r2, [r3, #4]
 800f952:	2301      	movs	r3, #1
 800f954:	4093      	lsls	r3, r2
 800f956:	604a      	str	r2, [r1, #4]
 800f958:	608b      	str	r3, [r1, #8]
 800f95a:	4620      	mov	r0, r4
 800f95c:	f001 f8f4 	bl	8010b48 <_Bfree>
 800f960:	2200      	movs	r2, #0
 800f962:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f964:	601a      	str	r2, [r3, #0]
 800f966:	9b03      	ldr	r3, [sp, #12]
 800f968:	2b00      	cmp	r3, #0
 800f96a:	bfb7      	itett	lt
 800f96c:	2301      	movlt	r3, #1
 800f96e:	2300      	movge	r3, #0
 800f970:	602b      	strlt	r3, [r5, #0]
 800f972:	9b03      	ldrlt	r3, [sp, #12]
 800f974:	bfae      	itee	ge
 800f976:	602b      	strge	r3, [r5, #0]
 800f978:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800f97c:	9303      	strlt	r3, [sp, #12]
 800f97e:	f8dd 900c 	ldr.w	r9, [sp, #12]
 800f982:	4bab      	ldr	r3, [pc, #684]	; (800fc30 <_dtoa_r+0x308>)
 800f984:	ea33 0309 	bics.w	r3, r3, r9
 800f988:	d11b      	bne.n	800f9c2 <_dtoa_r+0x9a>
 800f98a:	f242 730f 	movw	r3, #9999	; 0x270f
 800f98e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f990:	6013      	str	r3, [r2, #0]
 800f992:	9b02      	ldr	r3, [sp, #8]
 800f994:	b923      	cbnz	r3, 800f9a0 <_dtoa_r+0x78>
 800f996:	f3c9 0013 	ubfx	r0, r9, #0, #20
 800f99a:	2800      	cmp	r0, #0
 800f99c:	f000 8583 	beq.w	80104a6 <_dtoa_r+0xb7e>
 800f9a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f9a2:	b953      	cbnz	r3, 800f9ba <_dtoa_r+0x92>
 800f9a4:	4ba3      	ldr	r3, [pc, #652]	; (800fc34 <_dtoa_r+0x30c>)
 800f9a6:	e021      	b.n	800f9ec <_dtoa_r+0xc4>
 800f9a8:	4ba3      	ldr	r3, [pc, #652]	; (800fc38 <_dtoa_r+0x310>)
 800f9aa:	9306      	str	r3, [sp, #24]
 800f9ac:	3308      	adds	r3, #8
 800f9ae:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800f9b0:	6013      	str	r3, [r2, #0]
 800f9b2:	9806      	ldr	r0, [sp, #24]
 800f9b4:	b015      	add	sp, #84	; 0x54
 800f9b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9ba:	4b9e      	ldr	r3, [pc, #632]	; (800fc34 <_dtoa_r+0x30c>)
 800f9bc:	9306      	str	r3, [sp, #24]
 800f9be:	3303      	adds	r3, #3
 800f9c0:	e7f5      	b.n	800f9ae <_dtoa_r+0x86>
 800f9c2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800f9c6:	2200      	movs	r2, #0
 800f9c8:	2300      	movs	r3, #0
 800f9ca:	4630      	mov	r0, r6
 800f9cc:	4639      	mov	r1, r7
 800f9ce:	f7f7 fb3d 	bl	800704c <__aeabi_dcmpeq>
 800f9d2:	4680      	mov	r8, r0
 800f9d4:	b160      	cbz	r0, 800f9f0 <_dtoa_r+0xc8>
 800f9d6:	2301      	movs	r3, #1
 800f9d8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f9da:	6013      	str	r3, [r2, #0]
 800f9dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f9de:	2b00      	cmp	r3, #0
 800f9e0:	f000 855e 	beq.w	80104a0 <_dtoa_r+0xb78>
 800f9e4:	4b95      	ldr	r3, [pc, #596]	; (800fc3c <_dtoa_r+0x314>)
 800f9e6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800f9e8:	6013      	str	r3, [r2, #0]
 800f9ea:	3b01      	subs	r3, #1
 800f9ec:	9306      	str	r3, [sp, #24]
 800f9ee:	e7e0      	b.n	800f9b2 <_dtoa_r+0x8a>
 800f9f0:	ab12      	add	r3, sp, #72	; 0x48
 800f9f2:	9301      	str	r3, [sp, #4]
 800f9f4:	ab13      	add	r3, sp, #76	; 0x4c
 800f9f6:	9300      	str	r3, [sp, #0]
 800f9f8:	4632      	mov	r2, r6
 800f9fa:	463b      	mov	r3, r7
 800f9fc:	4620      	mov	r0, r4
 800f9fe:	f001 faf1 	bl	8010fe4 <__d2b>
 800fa02:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800fa06:	4682      	mov	sl, r0
 800fa08:	2d00      	cmp	r5, #0
 800fa0a:	d07d      	beq.n	800fb08 <_dtoa_r+0x1e0>
 800fa0c:	4630      	mov	r0, r6
 800fa0e:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800fa12:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800fa16:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800fa1a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800fa1e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 800fa22:	2200      	movs	r2, #0
 800fa24:	4b86      	ldr	r3, [pc, #536]	; (800fc40 <_dtoa_r+0x318>)
 800fa26:	f7f6 fef5 	bl	8006814 <__aeabi_dsub>
 800fa2a:	a37b      	add	r3, pc, #492	; (adr r3, 800fc18 <_dtoa_r+0x2f0>)
 800fa2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fa30:	f7f7 f8a4 	bl	8006b7c <__aeabi_dmul>
 800fa34:	a37a      	add	r3, pc, #488	; (adr r3, 800fc20 <_dtoa_r+0x2f8>)
 800fa36:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fa3a:	f7f6 feed 	bl	8006818 <__adddf3>
 800fa3e:	4606      	mov	r6, r0
 800fa40:	4628      	mov	r0, r5
 800fa42:	460f      	mov	r7, r1
 800fa44:	f7f7 f834 	bl	8006ab0 <__aeabi_i2d>
 800fa48:	a377      	add	r3, pc, #476	; (adr r3, 800fc28 <_dtoa_r+0x300>)
 800fa4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fa4e:	f7f7 f895 	bl	8006b7c <__aeabi_dmul>
 800fa52:	4602      	mov	r2, r0
 800fa54:	460b      	mov	r3, r1
 800fa56:	4630      	mov	r0, r6
 800fa58:	4639      	mov	r1, r7
 800fa5a:	f7f6 fedd 	bl	8006818 <__adddf3>
 800fa5e:	4606      	mov	r6, r0
 800fa60:	460f      	mov	r7, r1
 800fa62:	f7f7 fb3b 	bl	80070dc <__aeabi_d2iz>
 800fa66:	2200      	movs	r2, #0
 800fa68:	4683      	mov	fp, r0
 800fa6a:	2300      	movs	r3, #0
 800fa6c:	4630      	mov	r0, r6
 800fa6e:	4639      	mov	r1, r7
 800fa70:	f7f7 faf6 	bl	8007060 <__aeabi_dcmplt>
 800fa74:	b158      	cbz	r0, 800fa8e <_dtoa_r+0x166>
 800fa76:	4658      	mov	r0, fp
 800fa78:	f7f7 f81a 	bl	8006ab0 <__aeabi_i2d>
 800fa7c:	4602      	mov	r2, r0
 800fa7e:	460b      	mov	r3, r1
 800fa80:	4630      	mov	r0, r6
 800fa82:	4639      	mov	r1, r7
 800fa84:	f7f7 fae2 	bl	800704c <__aeabi_dcmpeq>
 800fa88:	b908      	cbnz	r0, 800fa8e <_dtoa_r+0x166>
 800fa8a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800fa8e:	f1bb 0f16 	cmp.w	fp, #22
 800fa92:	d858      	bhi.n	800fb46 <_dtoa_r+0x21e>
 800fa94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fa98:	496a      	ldr	r1, [pc, #424]	; (800fc44 <_dtoa_r+0x31c>)
 800fa9a:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 800fa9e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800faa2:	f7f7 fafb 	bl	800709c <__aeabi_dcmpgt>
 800faa6:	2800      	cmp	r0, #0
 800faa8:	d04f      	beq.n	800fb4a <_dtoa_r+0x222>
 800faaa:	2300      	movs	r3, #0
 800faac:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800fab0:	930d      	str	r3, [sp, #52]	; 0x34
 800fab2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fab4:	1b5d      	subs	r5, r3, r5
 800fab6:	1e6b      	subs	r3, r5, #1
 800fab8:	9307      	str	r3, [sp, #28]
 800faba:	bf43      	ittte	mi
 800fabc:	2300      	movmi	r3, #0
 800fabe:	f1c5 0801 	rsbmi	r8, r5, #1
 800fac2:	9307      	strmi	r3, [sp, #28]
 800fac4:	f04f 0800 	movpl.w	r8, #0
 800fac8:	f1bb 0f00 	cmp.w	fp, #0
 800facc:	db3f      	blt.n	800fb4e <_dtoa_r+0x226>
 800face:	9b07      	ldr	r3, [sp, #28]
 800fad0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800fad4:	445b      	add	r3, fp
 800fad6:	9307      	str	r3, [sp, #28]
 800fad8:	2300      	movs	r3, #0
 800fada:	9308      	str	r3, [sp, #32]
 800fadc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800fade:	2b09      	cmp	r3, #9
 800fae0:	f200 80b4 	bhi.w	800fc4c <_dtoa_r+0x324>
 800fae4:	2b05      	cmp	r3, #5
 800fae6:	bfc4      	itt	gt
 800fae8:	3b04      	subgt	r3, #4
 800faea:	931e      	strgt	r3, [sp, #120]	; 0x78
 800faec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800faee:	bfc8      	it	gt
 800faf0:	2600      	movgt	r6, #0
 800faf2:	f1a3 0302 	sub.w	r3, r3, #2
 800faf6:	bfd8      	it	le
 800faf8:	2601      	movle	r6, #1
 800fafa:	2b03      	cmp	r3, #3
 800fafc:	f200 80b2 	bhi.w	800fc64 <_dtoa_r+0x33c>
 800fb00:	e8df f003 	tbb	[pc, r3]
 800fb04:	782d8684 	.word	0x782d8684
 800fb08:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fb0a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fb0c:	441d      	add	r5, r3
 800fb0e:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800fb12:	2b20      	cmp	r3, #32
 800fb14:	dd11      	ble.n	800fb3a <_dtoa_r+0x212>
 800fb16:	9a02      	ldr	r2, [sp, #8]
 800fb18:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800fb1c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800fb20:	fa22 f000 	lsr.w	r0, r2, r0
 800fb24:	fa09 f303 	lsl.w	r3, r9, r3
 800fb28:	4318      	orrs	r0, r3
 800fb2a:	f7f6 ffb1 	bl	8006a90 <__aeabi_ui2d>
 800fb2e:	2301      	movs	r3, #1
 800fb30:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800fb34:	3d01      	subs	r5, #1
 800fb36:	9310      	str	r3, [sp, #64]	; 0x40
 800fb38:	e773      	b.n	800fa22 <_dtoa_r+0xfa>
 800fb3a:	f1c3 0020 	rsb	r0, r3, #32
 800fb3e:	9b02      	ldr	r3, [sp, #8]
 800fb40:	fa03 f000 	lsl.w	r0, r3, r0
 800fb44:	e7f1      	b.n	800fb2a <_dtoa_r+0x202>
 800fb46:	2301      	movs	r3, #1
 800fb48:	e7b2      	b.n	800fab0 <_dtoa_r+0x188>
 800fb4a:	900d      	str	r0, [sp, #52]	; 0x34
 800fb4c:	e7b1      	b.n	800fab2 <_dtoa_r+0x18a>
 800fb4e:	f1cb 0300 	rsb	r3, fp, #0
 800fb52:	9308      	str	r3, [sp, #32]
 800fb54:	2300      	movs	r3, #0
 800fb56:	eba8 080b 	sub.w	r8, r8, fp
 800fb5a:	930c      	str	r3, [sp, #48]	; 0x30
 800fb5c:	e7be      	b.n	800fadc <_dtoa_r+0x1b4>
 800fb5e:	2301      	movs	r3, #1
 800fb60:	9309      	str	r3, [sp, #36]	; 0x24
 800fb62:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800fb64:	2b00      	cmp	r3, #0
 800fb66:	f340 8080 	ble.w	800fc6a <_dtoa_r+0x342>
 800fb6a:	4699      	mov	r9, r3
 800fb6c:	9304      	str	r3, [sp, #16]
 800fb6e:	2200      	movs	r2, #0
 800fb70:	2104      	movs	r1, #4
 800fb72:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800fb74:	606a      	str	r2, [r5, #4]
 800fb76:	f101 0214 	add.w	r2, r1, #20
 800fb7a:	429a      	cmp	r2, r3
 800fb7c:	d97a      	bls.n	800fc74 <_dtoa_r+0x34c>
 800fb7e:	6869      	ldr	r1, [r5, #4]
 800fb80:	4620      	mov	r0, r4
 800fb82:	f000 ffad 	bl	8010ae0 <_Balloc>
 800fb86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fb88:	6028      	str	r0, [r5, #0]
 800fb8a:	681b      	ldr	r3, [r3, #0]
 800fb8c:	f1b9 0f0e 	cmp.w	r9, #14
 800fb90:	9306      	str	r3, [sp, #24]
 800fb92:	f200 80f0 	bhi.w	800fd76 <_dtoa_r+0x44e>
 800fb96:	2e00      	cmp	r6, #0
 800fb98:	f000 80ed 	beq.w	800fd76 <_dtoa_r+0x44e>
 800fb9c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fba0:	f1bb 0f00 	cmp.w	fp, #0
 800fba4:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 800fba8:	dd79      	ble.n	800fc9e <_dtoa_r+0x376>
 800fbaa:	4a26      	ldr	r2, [pc, #152]	; (800fc44 <_dtoa_r+0x31c>)
 800fbac:	f00b 030f 	and.w	r3, fp, #15
 800fbb0:	ea4f 162b 	mov.w	r6, fp, asr #4
 800fbb4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800fbb8:	06f0      	lsls	r0, r6, #27
 800fbba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fbbe:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800fbc2:	d55c      	bpl.n	800fc7e <_dtoa_r+0x356>
 800fbc4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800fbc8:	4b1f      	ldr	r3, [pc, #124]	; (800fc48 <_dtoa_r+0x320>)
 800fbca:	2503      	movs	r5, #3
 800fbcc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800fbd0:	f7f7 f8fe 	bl	8006dd0 <__aeabi_ddiv>
 800fbd4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fbd8:	f006 060f 	and.w	r6, r6, #15
 800fbdc:	4f1a      	ldr	r7, [pc, #104]	; (800fc48 <_dtoa_r+0x320>)
 800fbde:	2e00      	cmp	r6, #0
 800fbe0:	d14f      	bne.n	800fc82 <_dtoa_r+0x35a>
 800fbe2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fbe6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fbea:	f7f7 f8f1 	bl	8006dd0 <__aeabi_ddiv>
 800fbee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fbf2:	e06e      	b.n	800fcd2 <_dtoa_r+0x3aa>
 800fbf4:	2301      	movs	r3, #1
 800fbf6:	9309      	str	r3, [sp, #36]	; 0x24
 800fbf8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800fbfa:	445b      	add	r3, fp
 800fbfc:	f103 0901 	add.w	r9, r3, #1
 800fc00:	9304      	str	r3, [sp, #16]
 800fc02:	464b      	mov	r3, r9
 800fc04:	2b01      	cmp	r3, #1
 800fc06:	bfb8      	it	lt
 800fc08:	2301      	movlt	r3, #1
 800fc0a:	e7b0      	b.n	800fb6e <_dtoa_r+0x246>
 800fc0c:	2300      	movs	r3, #0
 800fc0e:	e7a7      	b.n	800fb60 <_dtoa_r+0x238>
 800fc10:	2300      	movs	r3, #0
 800fc12:	e7f0      	b.n	800fbf6 <_dtoa_r+0x2ce>
 800fc14:	f3af 8000 	nop.w
 800fc18:	636f4361 	.word	0x636f4361
 800fc1c:	3fd287a7 	.word	0x3fd287a7
 800fc20:	8b60c8b3 	.word	0x8b60c8b3
 800fc24:	3fc68a28 	.word	0x3fc68a28
 800fc28:	509f79fb 	.word	0x509f79fb
 800fc2c:	3fd34413 	.word	0x3fd34413
 800fc30:	7ff00000 	.word	0x7ff00000
 800fc34:	0801308b 	.word	0x0801308b
 800fc38:	08013082 	.word	0x08013082
 800fc3c:	08013061 	.word	0x08013061
 800fc40:	3ff80000 	.word	0x3ff80000
 800fc44:	08013118 	.word	0x08013118
 800fc48:	080130f0 	.word	0x080130f0
 800fc4c:	2601      	movs	r6, #1
 800fc4e:	2300      	movs	r3, #0
 800fc50:	9609      	str	r6, [sp, #36]	; 0x24
 800fc52:	931e      	str	r3, [sp, #120]	; 0x78
 800fc54:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fc58:	2200      	movs	r2, #0
 800fc5a:	9304      	str	r3, [sp, #16]
 800fc5c:	4699      	mov	r9, r3
 800fc5e:	2312      	movs	r3, #18
 800fc60:	921f      	str	r2, [sp, #124]	; 0x7c
 800fc62:	e784      	b.n	800fb6e <_dtoa_r+0x246>
 800fc64:	2301      	movs	r3, #1
 800fc66:	9309      	str	r3, [sp, #36]	; 0x24
 800fc68:	e7f4      	b.n	800fc54 <_dtoa_r+0x32c>
 800fc6a:	2301      	movs	r3, #1
 800fc6c:	9304      	str	r3, [sp, #16]
 800fc6e:	4699      	mov	r9, r3
 800fc70:	461a      	mov	r2, r3
 800fc72:	e7f5      	b.n	800fc60 <_dtoa_r+0x338>
 800fc74:	686a      	ldr	r2, [r5, #4]
 800fc76:	0049      	lsls	r1, r1, #1
 800fc78:	3201      	adds	r2, #1
 800fc7a:	606a      	str	r2, [r5, #4]
 800fc7c:	e77b      	b.n	800fb76 <_dtoa_r+0x24e>
 800fc7e:	2502      	movs	r5, #2
 800fc80:	e7ac      	b.n	800fbdc <_dtoa_r+0x2b4>
 800fc82:	07f1      	lsls	r1, r6, #31
 800fc84:	d508      	bpl.n	800fc98 <_dtoa_r+0x370>
 800fc86:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fc8a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800fc8e:	f7f6 ff75 	bl	8006b7c <__aeabi_dmul>
 800fc92:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800fc96:	3501      	adds	r5, #1
 800fc98:	1076      	asrs	r6, r6, #1
 800fc9a:	3708      	adds	r7, #8
 800fc9c:	e79f      	b.n	800fbde <_dtoa_r+0x2b6>
 800fc9e:	f000 80a5 	beq.w	800fdec <_dtoa_r+0x4c4>
 800fca2:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800fca6:	f1cb 0600 	rsb	r6, fp, #0
 800fcaa:	4ba2      	ldr	r3, [pc, #648]	; (800ff34 <_dtoa_r+0x60c>)
 800fcac:	f006 020f 	and.w	r2, r6, #15
 800fcb0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800fcb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fcb8:	f7f6 ff60 	bl	8006b7c <__aeabi_dmul>
 800fcbc:	2502      	movs	r5, #2
 800fcbe:	2300      	movs	r3, #0
 800fcc0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fcc4:	4f9c      	ldr	r7, [pc, #624]	; (800ff38 <_dtoa_r+0x610>)
 800fcc6:	1136      	asrs	r6, r6, #4
 800fcc8:	2e00      	cmp	r6, #0
 800fcca:	f040 8084 	bne.w	800fdd6 <_dtoa_r+0x4ae>
 800fcce:	2b00      	cmp	r3, #0
 800fcd0:	d18d      	bne.n	800fbee <_dtoa_r+0x2c6>
 800fcd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fcd4:	2b00      	cmp	r3, #0
 800fcd6:	f000 808b 	beq.w	800fdf0 <_dtoa_r+0x4c8>
 800fcda:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fcde:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800fce2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fce6:	2200      	movs	r2, #0
 800fce8:	4b94      	ldr	r3, [pc, #592]	; (800ff3c <_dtoa_r+0x614>)
 800fcea:	f7f7 f9b9 	bl	8007060 <__aeabi_dcmplt>
 800fcee:	2800      	cmp	r0, #0
 800fcf0:	d07e      	beq.n	800fdf0 <_dtoa_r+0x4c8>
 800fcf2:	f1b9 0f00 	cmp.w	r9, #0
 800fcf6:	d07b      	beq.n	800fdf0 <_dtoa_r+0x4c8>
 800fcf8:	9b04      	ldr	r3, [sp, #16]
 800fcfa:	2b00      	cmp	r3, #0
 800fcfc:	dd37      	ble.n	800fd6e <_dtoa_r+0x446>
 800fcfe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fd02:	2200      	movs	r2, #0
 800fd04:	4b8e      	ldr	r3, [pc, #568]	; (800ff40 <_dtoa_r+0x618>)
 800fd06:	f7f6 ff39 	bl	8006b7c <__aeabi_dmul>
 800fd0a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fd0e:	9e04      	ldr	r6, [sp, #16]
 800fd10:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
 800fd14:	3501      	adds	r5, #1
 800fd16:	4628      	mov	r0, r5
 800fd18:	f7f6 feca 	bl	8006ab0 <__aeabi_i2d>
 800fd1c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fd20:	f7f6 ff2c 	bl	8006b7c <__aeabi_dmul>
 800fd24:	4b87      	ldr	r3, [pc, #540]	; (800ff44 <_dtoa_r+0x61c>)
 800fd26:	2200      	movs	r2, #0
 800fd28:	f7f6 fd76 	bl	8006818 <__adddf3>
 800fd2c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800fd30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fd32:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
 800fd36:	950b      	str	r5, [sp, #44]	; 0x2c
 800fd38:	2e00      	cmp	r6, #0
 800fd3a:	d15c      	bne.n	800fdf6 <_dtoa_r+0x4ce>
 800fd3c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fd40:	2200      	movs	r2, #0
 800fd42:	4b81      	ldr	r3, [pc, #516]	; (800ff48 <_dtoa_r+0x620>)
 800fd44:	f7f6 fd66 	bl	8006814 <__aeabi_dsub>
 800fd48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fd4a:	462b      	mov	r3, r5
 800fd4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fd50:	f7f7 f9a4 	bl	800709c <__aeabi_dcmpgt>
 800fd54:	2800      	cmp	r0, #0
 800fd56:	f040 82f7 	bne.w	8010348 <_dtoa_r+0xa20>
 800fd5a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fd5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fd60:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800fd64:	f7f7 f97c 	bl	8007060 <__aeabi_dcmplt>
 800fd68:	2800      	cmp	r0, #0
 800fd6a:	f040 82eb 	bne.w	8010344 <_dtoa_r+0xa1c>
 800fd6e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800fd72:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800fd76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fd78:	2b00      	cmp	r3, #0
 800fd7a:	f2c0 8150 	blt.w	801001e <_dtoa_r+0x6f6>
 800fd7e:	f1bb 0f0e 	cmp.w	fp, #14
 800fd82:	f300 814c 	bgt.w	801001e <_dtoa_r+0x6f6>
 800fd86:	4b6b      	ldr	r3, [pc, #428]	; (800ff34 <_dtoa_r+0x60c>)
 800fd88:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800fd8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd90:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800fd94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800fd96:	2b00      	cmp	r3, #0
 800fd98:	f280 80da 	bge.w	800ff50 <_dtoa_r+0x628>
 800fd9c:	f1b9 0f00 	cmp.w	r9, #0
 800fda0:	f300 80d6 	bgt.w	800ff50 <_dtoa_r+0x628>
 800fda4:	f040 82cd 	bne.w	8010342 <_dtoa_r+0xa1a>
 800fda8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800fdac:	2200      	movs	r2, #0
 800fdae:	4b66      	ldr	r3, [pc, #408]	; (800ff48 <_dtoa_r+0x620>)
 800fdb0:	f7f6 fee4 	bl	8006b7c <__aeabi_dmul>
 800fdb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fdb8:	f7f7 f966 	bl	8007088 <__aeabi_dcmpge>
 800fdbc:	464e      	mov	r6, r9
 800fdbe:	464f      	mov	r7, r9
 800fdc0:	2800      	cmp	r0, #0
 800fdc2:	f040 82a4 	bne.w	801030e <_dtoa_r+0x9e6>
 800fdc6:	9b06      	ldr	r3, [sp, #24]
 800fdc8:	9a06      	ldr	r2, [sp, #24]
 800fdca:	1c5d      	adds	r5, r3, #1
 800fdcc:	2331      	movs	r3, #49	; 0x31
 800fdce:	f10b 0b01 	add.w	fp, fp, #1
 800fdd2:	7013      	strb	r3, [r2, #0]
 800fdd4:	e29f      	b.n	8010316 <_dtoa_r+0x9ee>
 800fdd6:	07f2      	lsls	r2, r6, #31
 800fdd8:	d505      	bpl.n	800fde6 <_dtoa_r+0x4be>
 800fdda:	e9d7 2300 	ldrd	r2, r3, [r7]
 800fdde:	f7f6 fecd 	bl	8006b7c <__aeabi_dmul>
 800fde2:	2301      	movs	r3, #1
 800fde4:	3501      	adds	r5, #1
 800fde6:	1076      	asrs	r6, r6, #1
 800fde8:	3708      	adds	r7, #8
 800fdea:	e76d      	b.n	800fcc8 <_dtoa_r+0x3a0>
 800fdec:	2502      	movs	r5, #2
 800fdee:	e770      	b.n	800fcd2 <_dtoa_r+0x3aa>
 800fdf0:	465f      	mov	r7, fp
 800fdf2:	464e      	mov	r6, r9
 800fdf4:	e78f      	b.n	800fd16 <_dtoa_r+0x3ee>
 800fdf6:	9a06      	ldr	r2, [sp, #24]
 800fdf8:	4b4e      	ldr	r3, [pc, #312]	; (800ff34 <_dtoa_r+0x60c>)
 800fdfa:	4432      	add	r2, r6
 800fdfc:	9211      	str	r2, [sp, #68]	; 0x44
 800fdfe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fe00:	1e71      	subs	r1, r6, #1
 800fe02:	2a00      	cmp	r2, #0
 800fe04:	d048      	beq.n	800fe98 <_dtoa_r+0x570>
 800fe06:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800fe0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe0e:	2000      	movs	r0, #0
 800fe10:	494e      	ldr	r1, [pc, #312]	; (800ff4c <_dtoa_r+0x624>)
 800fe12:	f7f6 ffdd 	bl	8006dd0 <__aeabi_ddiv>
 800fe16:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fe1a:	f7f6 fcfb 	bl	8006814 <__aeabi_dsub>
 800fe1e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800fe22:	9d06      	ldr	r5, [sp, #24]
 800fe24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fe28:	f7f7 f958 	bl	80070dc <__aeabi_d2iz>
 800fe2c:	4606      	mov	r6, r0
 800fe2e:	f7f6 fe3f 	bl	8006ab0 <__aeabi_i2d>
 800fe32:	4602      	mov	r2, r0
 800fe34:	460b      	mov	r3, r1
 800fe36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fe3a:	f7f6 fceb 	bl	8006814 <__aeabi_dsub>
 800fe3e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fe42:	3630      	adds	r6, #48	; 0x30
 800fe44:	f805 6b01 	strb.w	r6, [r5], #1
 800fe48:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fe4c:	f7f7 f908 	bl	8007060 <__aeabi_dcmplt>
 800fe50:	2800      	cmp	r0, #0
 800fe52:	d164      	bne.n	800ff1e <_dtoa_r+0x5f6>
 800fe54:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fe58:	2000      	movs	r0, #0
 800fe5a:	4938      	ldr	r1, [pc, #224]	; (800ff3c <_dtoa_r+0x614>)
 800fe5c:	f7f6 fcda 	bl	8006814 <__aeabi_dsub>
 800fe60:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fe64:	f7f7 f8fc 	bl	8007060 <__aeabi_dcmplt>
 800fe68:	2800      	cmp	r0, #0
 800fe6a:	f040 80b9 	bne.w	800ffe0 <_dtoa_r+0x6b8>
 800fe6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fe70:	429d      	cmp	r5, r3
 800fe72:	f43f af7c 	beq.w	800fd6e <_dtoa_r+0x446>
 800fe76:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fe7a:	2200      	movs	r2, #0
 800fe7c:	4b30      	ldr	r3, [pc, #192]	; (800ff40 <_dtoa_r+0x618>)
 800fe7e:	f7f6 fe7d 	bl	8006b7c <__aeabi_dmul>
 800fe82:	2200      	movs	r2, #0
 800fe84:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800fe88:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fe8c:	4b2c      	ldr	r3, [pc, #176]	; (800ff40 <_dtoa_r+0x618>)
 800fe8e:	f7f6 fe75 	bl	8006b7c <__aeabi_dmul>
 800fe92:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fe96:	e7c5      	b.n	800fe24 <_dtoa_r+0x4fc>
 800fe98:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800fe9c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800fea0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fea4:	f7f6 fe6a 	bl	8006b7c <__aeabi_dmul>
 800fea8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800feac:	9d06      	ldr	r5, [sp, #24]
 800feae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800feb2:	f7f7 f913 	bl	80070dc <__aeabi_d2iz>
 800feb6:	4606      	mov	r6, r0
 800feb8:	f7f6 fdfa 	bl	8006ab0 <__aeabi_i2d>
 800febc:	4602      	mov	r2, r0
 800febe:	460b      	mov	r3, r1
 800fec0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800fec4:	f7f6 fca6 	bl	8006814 <__aeabi_dsub>
 800fec8:	3630      	adds	r6, #48	; 0x30
 800feca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fecc:	f805 6b01 	strb.w	r6, [r5], #1
 800fed0:	42ab      	cmp	r3, r5
 800fed2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fed6:	f04f 0200 	mov.w	r2, #0
 800feda:	d124      	bne.n	800ff26 <_dtoa_r+0x5fe>
 800fedc:	4b1b      	ldr	r3, [pc, #108]	; (800ff4c <_dtoa_r+0x624>)
 800fede:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fee2:	f7f6 fc99 	bl	8006818 <__adddf3>
 800fee6:	4602      	mov	r2, r0
 800fee8:	460b      	mov	r3, r1
 800feea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800feee:	f7f7 f8d5 	bl	800709c <__aeabi_dcmpgt>
 800fef2:	2800      	cmp	r0, #0
 800fef4:	d174      	bne.n	800ffe0 <_dtoa_r+0x6b8>
 800fef6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fefa:	2000      	movs	r0, #0
 800fefc:	4913      	ldr	r1, [pc, #76]	; (800ff4c <_dtoa_r+0x624>)
 800fefe:	f7f6 fc89 	bl	8006814 <__aeabi_dsub>
 800ff02:	4602      	mov	r2, r0
 800ff04:	460b      	mov	r3, r1
 800ff06:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ff0a:	f7f7 f8a9 	bl	8007060 <__aeabi_dcmplt>
 800ff0e:	2800      	cmp	r0, #0
 800ff10:	f43f af2d 	beq.w	800fd6e <_dtoa_r+0x446>
 800ff14:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800ff18:	1e6a      	subs	r2, r5, #1
 800ff1a:	2b30      	cmp	r3, #48	; 0x30
 800ff1c:	d001      	beq.n	800ff22 <_dtoa_r+0x5fa>
 800ff1e:	46bb      	mov	fp, r7
 800ff20:	e04d      	b.n	800ffbe <_dtoa_r+0x696>
 800ff22:	4615      	mov	r5, r2
 800ff24:	e7f6      	b.n	800ff14 <_dtoa_r+0x5ec>
 800ff26:	4b06      	ldr	r3, [pc, #24]	; (800ff40 <_dtoa_r+0x618>)
 800ff28:	f7f6 fe28 	bl	8006b7c <__aeabi_dmul>
 800ff2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ff30:	e7bd      	b.n	800feae <_dtoa_r+0x586>
 800ff32:	bf00      	nop
 800ff34:	08013118 	.word	0x08013118
 800ff38:	080130f0 	.word	0x080130f0
 800ff3c:	3ff00000 	.word	0x3ff00000
 800ff40:	40240000 	.word	0x40240000
 800ff44:	401c0000 	.word	0x401c0000
 800ff48:	40140000 	.word	0x40140000
 800ff4c:	3fe00000 	.word	0x3fe00000
 800ff50:	9d06      	ldr	r5, [sp, #24]
 800ff52:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800ff56:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ff5a:	4630      	mov	r0, r6
 800ff5c:	4639      	mov	r1, r7
 800ff5e:	f7f6 ff37 	bl	8006dd0 <__aeabi_ddiv>
 800ff62:	f7f7 f8bb 	bl	80070dc <__aeabi_d2iz>
 800ff66:	4680      	mov	r8, r0
 800ff68:	f7f6 fda2 	bl	8006ab0 <__aeabi_i2d>
 800ff6c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ff70:	f7f6 fe04 	bl	8006b7c <__aeabi_dmul>
 800ff74:	4602      	mov	r2, r0
 800ff76:	460b      	mov	r3, r1
 800ff78:	4630      	mov	r0, r6
 800ff7a:	4639      	mov	r1, r7
 800ff7c:	f7f6 fc4a 	bl	8006814 <__aeabi_dsub>
 800ff80:	f108 0630 	add.w	r6, r8, #48	; 0x30
 800ff84:	f805 6b01 	strb.w	r6, [r5], #1
 800ff88:	9e06      	ldr	r6, [sp, #24]
 800ff8a:	4602      	mov	r2, r0
 800ff8c:	1bae      	subs	r6, r5, r6
 800ff8e:	45b1      	cmp	r9, r6
 800ff90:	460b      	mov	r3, r1
 800ff92:	d137      	bne.n	8010004 <_dtoa_r+0x6dc>
 800ff94:	f7f6 fc40 	bl	8006818 <__adddf3>
 800ff98:	4606      	mov	r6, r0
 800ff9a:	460f      	mov	r7, r1
 800ff9c:	4602      	mov	r2, r0
 800ff9e:	460b      	mov	r3, r1
 800ffa0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ffa4:	f7f7 f85c 	bl	8007060 <__aeabi_dcmplt>
 800ffa8:	b9c8      	cbnz	r0, 800ffde <_dtoa_r+0x6b6>
 800ffaa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ffae:	4632      	mov	r2, r6
 800ffb0:	463b      	mov	r3, r7
 800ffb2:	f7f7 f84b 	bl	800704c <__aeabi_dcmpeq>
 800ffb6:	b110      	cbz	r0, 800ffbe <_dtoa_r+0x696>
 800ffb8:	f018 0f01 	tst.w	r8, #1
 800ffbc:	d10f      	bne.n	800ffde <_dtoa_r+0x6b6>
 800ffbe:	4651      	mov	r1, sl
 800ffc0:	4620      	mov	r0, r4
 800ffc2:	f000 fdc1 	bl	8010b48 <_Bfree>
 800ffc6:	2300      	movs	r3, #0
 800ffc8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ffca:	702b      	strb	r3, [r5, #0]
 800ffcc:	f10b 0301 	add.w	r3, fp, #1
 800ffd0:	6013      	str	r3, [r2, #0]
 800ffd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ffd4:	2b00      	cmp	r3, #0
 800ffd6:	f43f acec 	beq.w	800f9b2 <_dtoa_r+0x8a>
 800ffda:	601d      	str	r5, [r3, #0]
 800ffdc:	e4e9      	b.n	800f9b2 <_dtoa_r+0x8a>
 800ffde:	465f      	mov	r7, fp
 800ffe0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800ffe4:	1e6b      	subs	r3, r5, #1
 800ffe6:	2a39      	cmp	r2, #57	; 0x39
 800ffe8:	d106      	bne.n	800fff8 <_dtoa_r+0x6d0>
 800ffea:	9a06      	ldr	r2, [sp, #24]
 800ffec:	429a      	cmp	r2, r3
 800ffee:	d107      	bne.n	8010000 <_dtoa_r+0x6d8>
 800fff0:	2330      	movs	r3, #48	; 0x30
 800fff2:	7013      	strb	r3, [r2, #0]
 800fff4:	4613      	mov	r3, r2
 800fff6:	3701      	adds	r7, #1
 800fff8:	781a      	ldrb	r2, [r3, #0]
 800fffa:	3201      	adds	r2, #1
 800fffc:	701a      	strb	r2, [r3, #0]
 800fffe:	e78e      	b.n	800ff1e <_dtoa_r+0x5f6>
 8010000:	461d      	mov	r5, r3
 8010002:	e7ed      	b.n	800ffe0 <_dtoa_r+0x6b8>
 8010004:	2200      	movs	r2, #0
 8010006:	4bb5      	ldr	r3, [pc, #724]	; (80102dc <_dtoa_r+0x9b4>)
 8010008:	f7f6 fdb8 	bl	8006b7c <__aeabi_dmul>
 801000c:	2200      	movs	r2, #0
 801000e:	2300      	movs	r3, #0
 8010010:	4606      	mov	r6, r0
 8010012:	460f      	mov	r7, r1
 8010014:	f7f7 f81a 	bl	800704c <__aeabi_dcmpeq>
 8010018:	2800      	cmp	r0, #0
 801001a:	d09c      	beq.n	800ff56 <_dtoa_r+0x62e>
 801001c:	e7cf      	b.n	800ffbe <_dtoa_r+0x696>
 801001e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010020:	2a00      	cmp	r2, #0
 8010022:	f000 8129 	beq.w	8010278 <_dtoa_r+0x950>
 8010026:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8010028:	2a01      	cmp	r2, #1
 801002a:	f300 810e 	bgt.w	801024a <_dtoa_r+0x922>
 801002e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010030:	2a00      	cmp	r2, #0
 8010032:	f000 8106 	beq.w	8010242 <_dtoa_r+0x91a>
 8010036:	f203 4333 	addw	r3, r3, #1075	; 0x433
 801003a:	4645      	mov	r5, r8
 801003c:	9e08      	ldr	r6, [sp, #32]
 801003e:	9a07      	ldr	r2, [sp, #28]
 8010040:	2101      	movs	r1, #1
 8010042:	441a      	add	r2, r3
 8010044:	4620      	mov	r0, r4
 8010046:	4498      	add	r8, r3
 8010048:	9207      	str	r2, [sp, #28]
 801004a:	f000 fe1d 	bl	8010c88 <__i2b>
 801004e:	4607      	mov	r7, r0
 8010050:	2d00      	cmp	r5, #0
 8010052:	dd0b      	ble.n	801006c <_dtoa_r+0x744>
 8010054:	9b07      	ldr	r3, [sp, #28]
 8010056:	2b00      	cmp	r3, #0
 8010058:	dd08      	ble.n	801006c <_dtoa_r+0x744>
 801005a:	42ab      	cmp	r3, r5
 801005c:	bfa8      	it	ge
 801005e:	462b      	movge	r3, r5
 8010060:	9a07      	ldr	r2, [sp, #28]
 8010062:	eba8 0803 	sub.w	r8, r8, r3
 8010066:	1aed      	subs	r5, r5, r3
 8010068:	1ad3      	subs	r3, r2, r3
 801006a:	9307      	str	r3, [sp, #28]
 801006c:	9b08      	ldr	r3, [sp, #32]
 801006e:	b1fb      	cbz	r3, 80100b0 <_dtoa_r+0x788>
 8010070:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010072:	2b00      	cmp	r3, #0
 8010074:	f000 8104 	beq.w	8010280 <_dtoa_r+0x958>
 8010078:	2e00      	cmp	r6, #0
 801007a:	dd11      	ble.n	80100a0 <_dtoa_r+0x778>
 801007c:	4639      	mov	r1, r7
 801007e:	4632      	mov	r2, r6
 8010080:	4620      	mov	r0, r4
 8010082:	f000 fe97 	bl	8010db4 <__pow5mult>
 8010086:	4652      	mov	r2, sl
 8010088:	4601      	mov	r1, r0
 801008a:	4607      	mov	r7, r0
 801008c:	4620      	mov	r0, r4
 801008e:	f000 fe04 	bl	8010c9a <__multiply>
 8010092:	4651      	mov	r1, sl
 8010094:	900a      	str	r0, [sp, #40]	; 0x28
 8010096:	4620      	mov	r0, r4
 8010098:	f000 fd56 	bl	8010b48 <_Bfree>
 801009c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801009e:	469a      	mov	sl, r3
 80100a0:	9b08      	ldr	r3, [sp, #32]
 80100a2:	1b9a      	subs	r2, r3, r6
 80100a4:	d004      	beq.n	80100b0 <_dtoa_r+0x788>
 80100a6:	4651      	mov	r1, sl
 80100a8:	4620      	mov	r0, r4
 80100aa:	f000 fe83 	bl	8010db4 <__pow5mult>
 80100ae:	4682      	mov	sl, r0
 80100b0:	2101      	movs	r1, #1
 80100b2:	4620      	mov	r0, r4
 80100b4:	f000 fde8 	bl	8010c88 <__i2b>
 80100b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80100ba:	4606      	mov	r6, r0
 80100bc:	2b00      	cmp	r3, #0
 80100be:	f340 80e1 	ble.w	8010284 <_dtoa_r+0x95c>
 80100c2:	461a      	mov	r2, r3
 80100c4:	4601      	mov	r1, r0
 80100c6:	4620      	mov	r0, r4
 80100c8:	f000 fe74 	bl	8010db4 <__pow5mult>
 80100cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80100ce:	4606      	mov	r6, r0
 80100d0:	2b01      	cmp	r3, #1
 80100d2:	f340 80da 	ble.w	801028a <_dtoa_r+0x962>
 80100d6:	2300      	movs	r3, #0
 80100d8:	9308      	str	r3, [sp, #32]
 80100da:	6933      	ldr	r3, [r6, #16]
 80100dc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80100e0:	6918      	ldr	r0, [r3, #16]
 80100e2:	f000 fd83 	bl	8010bec <__hi0bits>
 80100e6:	f1c0 0020 	rsb	r0, r0, #32
 80100ea:	9b07      	ldr	r3, [sp, #28]
 80100ec:	4418      	add	r0, r3
 80100ee:	f010 001f 	ands.w	r0, r0, #31
 80100f2:	f000 80f0 	beq.w	80102d6 <_dtoa_r+0x9ae>
 80100f6:	f1c0 0320 	rsb	r3, r0, #32
 80100fa:	2b04      	cmp	r3, #4
 80100fc:	f340 80e2 	ble.w	80102c4 <_dtoa_r+0x99c>
 8010100:	9b07      	ldr	r3, [sp, #28]
 8010102:	f1c0 001c 	rsb	r0, r0, #28
 8010106:	4480      	add	r8, r0
 8010108:	4405      	add	r5, r0
 801010a:	4403      	add	r3, r0
 801010c:	9307      	str	r3, [sp, #28]
 801010e:	f1b8 0f00 	cmp.w	r8, #0
 8010112:	dd05      	ble.n	8010120 <_dtoa_r+0x7f8>
 8010114:	4651      	mov	r1, sl
 8010116:	4642      	mov	r2, r8
 8010118:	4620      	mov	r0, r4
 801011a:	f000 fe99 	bl	8010e50 <__lshift>
 801011e:	4682      	mov	sl, r0
 8010120:	9b07      	ldr	r3, [sp, #28]
 8010122:	2b00      	cmp	r3, #0
 8010124:	dd05      	ble.n	8010132 <_dtoa_r+0x80a>
 8010126:	4631      	mov	r1, r6
 8010128:	461a      	mov	r2, r3
 801012a:	4620      	mov	r0, r4
 801012c:	f000 fe90 	bl	8010e50 <__lshift>
 8010130:	4606      	mov	r6, r0
 8010132:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010134:	2b00      	cmp	r3, #0
 8010136:	f000 80d3 	beq.w	80102e0 <_dtoa_r+0x9b8>
 801013a:	4631      	mov	r1, r6
 801013c:	4650      	mov	r0, sl
 801013e:	f000 fed8 	bl	8010ef2 <__mcmp>
 8010142:	2800      	cmp	r0, #0
 8010144:	f280 80cc 	bge.w	80102e0 <_dtoa_r+0x9b8>
 8010148:	2300      	movs	r3, #0
 801014a:	4651      	mov	r1, sl
 801014c:	220a      	movs	r2, #10
 801014e:	4620      	mov	r0, r4
 8010150:	f000 fd11 	bl	8010b76 <__multadd>
 8010154:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010156:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 801015a:	4682      	mov	sl, r0
 801015c:	2b00      	cmp	r3, #0
 801015e:	f000 81a9 	beq.w	80104b4 <_dtoa_r+0xb8c>
 8010162:	2300      	movs	r3, #0
 8010164:	4639      	mov	r1, r7
 8010166:	220a      	movs	r2, #10
 8010168:	4620      	mov	r0, r4
 801016a:	f000 fd04 	bl	8010b76 <__multadd>
 801016e:	9b04      	ldr	r3, [sp, #16]
 8010170:	4607      	mov	r7, r0
 8010172:	2b00      	cmp	r3, #0
 8010174:	dc03      	bgt.n	801017e <_dtoa_r+0x856>
 8010176:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8010178:	2b02      	cmp	r3, #2
 801017a:	f300 80b9 	bgt.w	80102f0 <_dtoa_r+0x9c8>
 801017e:	2d00      	cmp	r5, #0
 8010180:	dd05      	ble.n	801018e <_dtoa_r+0x866>
 8010182:	4639      	mov	r1, r7
 8010184:	462a      	mov	r2, r5
 8010186:	4620      	mov	r0, r4
 8010188:	f000 fe62 	bl	8010e50 <__lshift>
 801018c:	4607      	mov	r7, r0
 801018e:	9b08      	ldr	r3, [sp, #32]
 8010190:	2b00      	cmp	r3, #0
 8010192:	f000 8110 	beq.w	80103b6 <_dtoa_r+0xa8e>
 8010196:	6879      	ldr	r1, [r7, #4]
 8010198:	4620      	mov	r0, r4
 801019a:	f000 fca1 	bl	8010ae0 <_Balloc>
 801019e:	4605      	mov	r5, r0
 80101a0:	693a      	ldr	r2, [r7, #16]
 80101a2:	f107 010c 	add.w	r1, r7, #12
 80101a6:	3202      	adds	r2, #2
 80101a8:	0092      	lsls	r2, r2, #2
 80101aa:	300c      	adds	r0, #12
 80101ac:	f7fd fd1d 	bl	800dbea <memcpy>
 80101b0:	2201      	movs	r2, #1
 80101b2:	4629      	mov	r1, r5
 80101b4:	4620      	mov	r0, r4
 80101b6:	f000 fe4b 	bl	8010e50 <__lshift>
 80101ba:	9707      	str	r7, [sp, #28]
 80101bc:	4607      	mov	r7, r0
 80101be:	9b02      	ldr	r3, [sp, #8]
 80101c0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80101c4:	f003 0301 	and.w	r3, r3, #1
 80101c8:	9308      	str	r3, [sp, #32]
 80101ca:	4631      	mov	r1, r6
 80101cc:	4650      	mov	r0, sl
 80101ce:	f7ff fb1d 	bl	800f80c <quorem>
 80101d2:	9907      	ldr	r1, [sp, #28]
 80101d4:	4605      	mov	r5, r0
 80101d6:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80101da:	4650      	mov	r0, sl
 80101dc:	f000 fe89 	bl	8010ef2 <__mcmp>
 80101e0:	463a      	mov	r2, r7
 80101e2:	9002      	str	r0, [sp, #8]
 80101e4:	4631      	mov	r1, r6
 80101e6:	4620      	mov	r0, r4
 80101e8:	f000 fe9d 	bl	8010f26 <__mdiff>
 80101ec:	68c3      	ldr	r3, [r0, #12]
 80101ee:	4602      	mov	r2, r0
 80101f0:	2b00      	cmp	r3, #0
 80101f2:	f040 80e2 	bne.w	80103ba <_dtoa_r+0xa92>
 80101f6:	4601      	mov	r1, r0
 80101f8:	9009      	str	r0, [sp, #36]	; 0x24
 80101fa:	4650      	mov	r0, sl
 80101fc:	f000 fe79 	bl	8010ef2 <__mcmp>
 8010200:	4603      	mov	r3, r0
 8010202:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010204:	4611      	mov	r1, r2
 8010206:	4620      	mov	r0, r4
 8010208:	9309      	str	r3, [sp, #36]	; 0x24
 801020a:	f000 fc9d 	bl	8010b48 <_Bfree>
 801020e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010210:	2b00      	cmp	r3, #0
 8010212:	f040 80d4 	bne.w	80103be <_dtoa_r+0xa96>
 8010216:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8010218:	2a00      	cmp	r2, #0
 801021a:	f040 80d0 	bne.w	80103be <_dtoa_r+0xa96>
 801021e:	9a08      	ldr	r2, [sp, #32]
 8010220:	2a00      	cmp	r2, #0
 8010222:	f040 80cc 	bne.w	80103be <_dtoa_r+0xa96>
 8010226:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 801022a:	f000 80e8 	beq.w	80103fe <_dtoa_r+0xad6>
 801022e:	9b02      	ldr	r3, [sp, #8]
 8010230:	2b00      	cmp	r3, #0
 8010232:	dd01      	ble.n	8010238 <_dtoa_r+0x910>
 8010234:	f105 0931 	add.w	r9, r5, #49	; 0x31
 8010238:	f108 0501 	add.w	r5, r8, #1
 801023c:	f888 9000 	strb.w	r9, [r8]
 8010240:	e06b      	b.n	801031a <_dtoa_r+0x9f2>
 8010242:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010244:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8010248:	e6f7      	b.n	801003a <_dtoa_r+0x712>
 801024a:	9b08      	ldr	r3, [sp, #32]
 801024c:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
 8010250:	42b3      	cmp	r3, r6
 8010252:	bfb7      	itett	lt
 8010254:	9b08      	ldrlt	r3, [sp, #32]
 8010256:	1b9e      	subge	r6, r3, r6
 8010258:	1af2      	sublt	r2, r6, r3
 801025a:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 801025c:	bfbf      	itttt	lt
 801025e:	9608      	strlt	r6, [sp, #32]
 8010260:	189b      	addlt	r3, r3, r2
 8010262:	930c      	strlt	r3, [sp, #48]	; 0x30
 8010264:	2600      	movlt	r6, #0
 8010266:	f1b9 0f00 	cmp.w	r9, #0
 801026a:	bfb9      	ittee	lt
 801026c:	eba8 0509 	sublt.w	r5, r8, r9
 8010270:	2300      	movlt	r3, #0
 8010272:	4645      	movge	r5, r8
 8010274:	464b      	movge	r3, r9
 8010276:	e6e2      	b.n	801003e <_dtoa_r+0x716>
 8010278:	9e08      	ldr	r6, [sp, #32]
 801027a:	4645      	mov	r5, r8
 801027c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801027e:	e6e7      	b.n	8010050 <_dtoa_r+0x728>
 8010280:	9a08      	ldr	r2, [sp, #32]
 8010282:	e710      	b.n	80100a6 <_dtoa_r+0x77e>
 8010284:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8010286:	2b01      	cmp	r3, #1
 8010288:	dc18      	bgt.n	80102bc <_dtoa_r+0x994>
 801028a:	9b02      	ldr	r3, [sp, #8]
 801028c:	b9b3      	cbnz	r3, 80102bc <_dtoa_r+0x994>
 801028e:	9b03      	ldr	r3, [sp, #12]
 8010290:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010294:	b9a3      	cbnz	r3, 80102c0 <_dtoa_r+0x998>
 8010296:	9b03      	ldr	r3, [sp, #12]
 8010298:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801029c:	0d1b      	lsrs	r3, r3, #20
 801029e:	051b      	lsls	r3, r3, #20
 80102a0:	b12b      	cbz	r3, 80102ae <_dtoa_r+0x986>
 80102a2:	9b07      	ldr	r3, [sp, #28]
 80102a4:	f108 0801 	add.w	r8, r8, #1
 80102a8:	3301      	adds	r3, #1
 80102aa:	9307      	str	r3, [sp, #28]
 80102ac:	2301      	movs	r3, #1
 80102ae:	9308      	str	r3, [sp, #32]
 80102b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80102b2:	2b00      	cmp	r3, #0
 80102b4:	f47f af11 	bne.w	80100da <_dtoa_r+0x7b2>
 80102b8:	2001      	movs	r0, #1
 80102ba:	e716      	b.n	80100ea <_dtoa_r+0x7c2>
 80102bc:	2300      	movs	r3, #0
 80102be:	e7f6      	b.n	80102ae <_dtoa_r+0x986>
 80102c0:	9b02      	ldr	r3, [sp, #8]
 80102c2:	e7f4      	b.n	80102ae <_dtoa_r+0x986>
 80102c4:	f43f af23 	beq.w	801010e <_dtoa_r+0x7e6>
 80102c8:	9a07      	ldr	r2, [sp, #28]
 80102ca:	331c      	adds	r3, #28
 80102cc:	441a      	add	r2, r3
 80102ce:	4498      	add	r8, r3
 80102d0:	441d      	add	r5, r3
 80102d2:	4613      	mov	r3, r2
 80102d4:	e71a      	b.n	801010c <_dtoa_r+0x7e4>
 80102d6:	4603      	mov	r3, r0
 80102d8:	e7f6      	b.n	80102c8 <_dtoa_r+0x9a0>
 80102da:	bf00      	nop
 80102dc:	40240000 	.word	0x40240000
 80102e0:	f1b9 0f00 	cmp.w	r9, #0
 80102e4:	dc33      	bgt.n	801034e <_dtoa_r+0xa26>
 80102e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80102e8:	2b02      	cmp	r3, #2
 80102ea:	dd30      	ble.n	801034e <_dtoa_r+0xa26>
 80102ec:	f8cd 9010 	str.w	r9, [sp, #16]
 80102f0:	9b04      	ldr	r3, [sp, #16]
 80102f2:	b963      	cbnz	r3, 801030e <_dtoa_r+0x9e6>
 80102f4:	4631      	mov	r1, r6
 80102f6:	2205      	movs	r2, #5
 80102f8:	4620      	mov	r0, r4
 80102fa:	f000 fc3c 	bl	8010b76 <__multadd>
 80102fe:	4601      	mov	r1, r0
 8010300:	4606      	mov	r6, r0
 8010302:	4650      	mov	r0, sl
 8010304:	f000 fdf5 	bl	8010ef2 <__mcmp>
 8010308:	2800      	cmp	r0, #0
 801030a:	f73f ad5c 	bgt.w	800fdc6 <_dtoa_r+0x49e>
 801030e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8010310:	9d06      	ldr	r5, [sp, #24]
 8010312:	ea6f 0b03 	mvn.w	fp, r3
 8010316:	2300      	movs	r3, #0
 8010318:	9307      	str	r3, [sp, #28]
 801031a:	4631      	mov	r1, r6
 801031c:	4620      	mov	r0, r4
 801031e:	f000 fc13 	bl	8010b48 <_Bfree>
 8010322:	2f00      	cmp	r7, #0
 8010324:	f43f ae4b 	beq.w	800ffbe <_dtoa_r+0x696>
 8010328:	9b07      	ldr	r3, [sp, #28]
 801032a:	b12b      	cbz	r3, 8010338 <_dtoa_r+0xa10>
 801032c:	42bb      	cmp	r3, r7
 801032e:	d003      	beq.n	8010338 <_dtoa_r+0xa10>
 8010330:	4619      	mov	r1, r3
 8010332:	4620      	mov	r0, r4
 8010334:	f000 fc08 	bl	8010b48 <_Bfree>
 8010338:	4639      	mov	r1, r7
 801033a:	4620      	mov	r0, r4
 801033c:	f000 fc04 	bl	8010b48 <_Bfree>
 8010340:	e63d      	b.n	800ffbe <_dtoa_r+0x696>
 8010342:	2600      	movs	r6, #0
 8010344:	4637      	mov	r7, r6
 8010346:	e7e2      	b.n	801030e <_dtoa_r+0x9e6>
 8010348:	46bb      	mov	fp, r7
 801034a:	4637      	mov	r7, r6
 801034c:	e53b      	b.n	800fdc6 <_dtoa_r+0x49e>
 801034e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010350:	f8cd 9010 	str.w	r9, [sp, #16]
 8010354:	2b00      	cmp	r3, #0
 8010356:	f47f af12 	bne.w	801017e <_dtoa_r+0x856>
 801035a:	9d06      	ldr	r5, [sp, #24]
 801035c:	4631      	mov	r1, r6
 801035e:	4650      	mov	r0, sl
 8010360:	f7ff fa54 	bl	800f80c <quorem>
 8010364:	9b06      	ldr	r3, [sp, #24]
 8010366:	f100 0930 	add.w	r9, r0, #48	; 0x30
 801036a:	f805 9b01 	strb.w	r9, [r5], #1
 801036e:	9a04      	ldr	r2, [sp, #16]
 8010370:	1aeb      	subs	r3, r5, r3
 8010372:	429a      	cmp	r2, r3
 8010374:	f300 8081 	bgt.w	801047a <_dtoa_r+0xb52>
 8010378:	9b06      	ldr	r3, [sp, #24]
 801037a:	2a01      	cmp	r2, #1
 801037c:	bfac      	ite	ge
 801037e:	189b      	addge	r3, r3, r2
 8010380:	3301      	addlt	r3, #1
 8010382:	4698      	mov	r8, r3
 8010384:	2300      	movs	r3, #0
 8010386:	9307      	str	r3, [sp, #28]
 8010388:	4651      	mov	r1, sl
 801038a:	2201      	movs	r2, #1
 801038c:	4620      	mov	r0, r4
 801038e:	f000 fd5f 	bl	8010e50 <__lshift>
 8010392:	4631      	mov	r1, r6
 8010394:	4682      	mov	sl, r0
 8010396:	f000 fdac 	bl	8010ef2 <__mcmp>
 801039a:	2800      	cmp	r0, #0
 801039c:	dc34      	bgt.n	8010408 <_dtoa_r+0xae0>
 801039e:	d102      	bne.n	80103a6 <_dtoa_r+0xa7e>
 80103a0:	f019 0f01 	tst.w	r9, #1
 80103a4:	d130      	bne.n	8010408 <_dtoa_r+0xae0>
 80103a6:	4645      	mov	r5, r8
 80103a8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80103ac:	1e6a      	subs	r2, r5, #1
 80103ae:	2b30      	cmp	r3, #48	; 0x30
 80103b0:	d1b3      	bne.n	801031a <_dtoa_r+0x9f2>
 80103b2:	4615      	mov	r5, r2
 80103b4:	e7f8      	b.n	80103a8 <_dtoa_r+0xa80>
 80103b6:	4638      	mov	r0, r7
 80103b8:	e6ff      	b.n	80101ba <_dtoa_r+0x892>
 80103ba:	2301      	movs	r3, #1
 80103bc:	e722      	b.n	8010204 <_dtoa_r+0x8dc>
 80103be:	9a02      	ldr	r2, [sp, #8]
 80103c0:	2a00      	cmp	r2, #0
 80103c2:	db04      	blt.n	80103ce <_dtoa_r+0xaa6>
 80103c4:	d128      	bne.n	8010418 <_dtoa_r+0xaf0>
 80103c6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80103c8:	bb32      	cbnz	r2, 8010418 <_dtoa_r+0xaf0>
 80103ca:	9a08      	ldr	r2, [sp, #32]
 80103cc:	bb22      	cbnz	r2, 8010418 <_dtoa_r+0xaf0>
 80103ce:	2b00      	cmp	r3, #0
 80103d0:	f77f af32 	ble.w	8010238 <_dtoa_r+0x910>
 80103d4:	4651      	mov	r1, sl
 80103d6:	2201      	movs	r2, #1
 80103d8:	4620      	mov	r0, r4
 80103da:	f000 fd39 	bl	8010e50 <__lshift>
 80103de:	4631      	mov	r1, r6
 80103e0:	4682      	mov	sl, r0
 80103e2:	f000 fd86 	bl	8010ef2 <__mcmp>
 80103e6:	2800      	cmp	r0, #0
 80103e8:	dc05      	bgt.n	80103f6 <_dtoa_r+0xace>
 80103ea:	f47f af25 	bne.w	8010238 <_dtoa_r+0x910>
 80103ee:	f019 0f01 	tst.w	r9, #1
 80103f2:	f43f af21 	beq.w	8010238 <_dtoa_r+0x910>
 80103f6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80103fa:	f47f af1b 	bne.w	8010234 <_dtoa_r+0x90c>
 80103fe:	2339      	movs	r3, #57	; 0x39
 8010400:	f108 0801 	add.w	r8, r8, #1
 8010404:	f808 3c01 	strb.w	r3, [r8, #-1]
 8010408:	4645      	mov	r5, r8
 801040a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 801040e:	1e6a      	subs	r2, r5, #1
 8010410:	2b39      	cmp	r3, #57	; 0x39
 8010412:	d03a      	beq.n	801048a <_dtoa_r+0xb62>
 8010414:	3301      	adds	r3, #1
 8010416:	e03f      	b.n	8010498 <_dtoa_r+0xb70>
 8010418:	2b00      	cmp	r3, #0
 801041a:	f108 0501 	add.w	r5, r8, #1
 801041e:	dd05      	ble.n	801042c <_dtoa_r+0xb04>
 8010420:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8010424:	d0eb      	beq.n	80103fe <_dtoa_r+0xad6>
 8010426:	f109 0901 	add.w	r9, r9, #1
 801042a:	e707      	b.n	801023c <_dtoa_r+0x914>
 801042c:	9b06      	ldr	r3, [sp, #24]
 801042e:	9a04      	ldr	r2, [sp, #16]
 8010430:	1aeb      	subs	r3, r5, r3
 8010432:	4293      	cmp	r3, r2
 8010434:	46a8      	mov	r8, r5
 8010436:	f805 9c01 	strb.w	r9, [r5, #-1]
 801043a:	d0a5      	beq.n	8010388 <_dtoa_r+0xa60>
 801043c:	4651      	mov	r1, sl
 801043e:	2300      	movs	r3, #0
 8010440:	220a      	movs	r2, #10
 8010442:	4620      	mov	r0, r4
 8010444:	f000 fb97 	bl	8010b76 <__multadd>
 8010448:	9b07      	ldr	r3, [sp, #28]
 801044a:	4682      	mov	sl, r0
 801044c:	42bb      	cmp	r3, r7
 801044e:	f04f 020a 	mov.w	r2, #10
 8010452:	f04f 0300 	mov.w	r3, #0
 8010456:	9907      	ldr	r1, [sp, #28]
 8010458:	4620      	mov	r0, r4
 801045a:	d104      	bne.n	8010466 <_dtoa_r+0xb3e>
 801045c:	f000 fb8b 	bl	8010b76 <__multadd>
 8010460:	9007      	str	r0, [sp, #28]
 8010462:	4607      	mov	r7, r0
 8010464:	e6b1      	b.n	80101ca <_dtoa_r+0x8a2>
 8010466:	f000 fb86 	bl	8010b76 <__multadd>
 801046a:	2300      	movs	r3, #0
 801046c:	9007      	str	r0, [sp, #28]
 801046e:	220a      	movs	r2, #10
 8010470:	4639      	mov	r1, r7
 8010472:	4620      	mov	r0, r4
 8010474:	f000 fb7f 	bl	8010b76 <__multadd>
 8010478:	e7f3      	b.n	8010462 <_dtoa_r+0xb3a>
 801047a:	4651      	mov	r1, sl
 801047c:	2300      	movs	r3, #0
 801047e:	220a      	movs	r2, #10
 8010480:	4620      	mov	r0, r4
 8010482:	f000 fb78 	bl	8010b76 <__multadd>
 8010486:	4682      	mov	sl, r0
 8010488:	e768      	b.n	801035c <_dtoa_r+0xa34>
 801048a:	9b06      	ldr	r3, [sp, #24]
 801048c:	4293      	cmp	r3, r2
 801048e:	d105      	bne.n	801049c <_dtoa_r+0xb74>
 8010490:	2331      	movs	r3, #49	; 0x31
 8010492:	9a06      	ldr	r2, [sp, #24]
 8010494:	f10b 0b01 	add.w	fp, fp, #1
 8010498:	7013      	strb	r3, [r2, #0]
 801049a:	e73e      	b.n	801031a <_dtoa_r+0x9f2>
 801049c:	4615      	mov	r5, r2
 801049e:	e7b4      	b.n	801040a <_dtoa_r+0xae2>
 80104a0:	4b09      	ldr	r3, [pc, #36]	; (80104c8 <_dtoa_r+0xba0>)
 80104a2:	f7ff baa3 	b.w	800f9ec <_dtoa_r+0xc4>
 80104a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80104a8:	2b00      	cmp	r3, #0
 80104aa:	f47f aa7d 	bne.w	800f9a8 <_dtoa_r+0x80>
 80104ae:	4b07      	ldr	r3, [pc, #28]	; (80104cc <_dtoa_r+0xba4>)
 80104b0:	f7ff ba9c 	b.w	800f9ec <_dtoa_r+0xc4>
 80104b4:	9b04      	ldr	r3, [sp, #16]
 80104b6:	2b00      	cmp	r3, #0
 80104b8:	f73f af4f 	bgt.w	801035a <_dtoa_r+0xa32>
 80104bc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80104be:	2b02      	cmp	r3, #2
 80104c0:	f77f af4b 	ble.w	801035a <_dtoa_r+0xa32>
 80104c4:	e714      	b.n	80102f0 <_dtoa_r+0x9c8>
 80104c6:	bf00      	nop
 80104c8:	08013060 	.word	0x08013060
 80104cc:	08013082 	.word	0x08013082

080104d0 <__sflush_r>:
 80104d0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80104d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104d8:	b293      	uxth	r3, r2
 80104da:	4605      	mov	r5, r0
 80104dc:	0718      	lsls	r0, r3, #28
 80104de:	460c      	mov	r4, r1
 80104e0:	d461      	bmi.n	80105a6 <__sflush_r+0xd6>
 80104e2:	684b      	ldr	r3, [r1, #4]
 80104e4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80104e8:	2b00      	cmp	r3, #0
 80104ea:	818a      	strh	r2, [r1, #12]
 80104ec:	dc05      	bgt.n	80104fa <__sflush_r+0x2a>
 80104ee:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80104f0:	2b00      	cmp	r3, #0
 80104f2:	dc02      	bgt.n	80104fa <__sflush_r+0x2a>
 80104f4:	2000      	movs	r0, #0
 80104f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104fa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80104fc:	2e00      	cmp	r6, #0
 80104fe:	d0f9      	beq.n	80104f4 <__sflush_r+0x24>
 8010500:	2300      	movs	r3, #0
 8010502:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8010506:	682f      	ldr	r7, [r5, #0]
 8010508:	602b      	str	r3, [r5, #0]
 801050a:	d037      	beq.n	801057c <__sflush_r+0xac>
 801050c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801050e:	89a3      	ldrh	r3, [r4, #12]
 8010510:	075a      	lsls	r2, r3, #29
 8010512:	d505      	bpl.n	8010520 <__sflush_r+0x50>
 8010514:	6863      	ldr	r3, [r4, #4]
 8010516:	1ac0      	subs	r0, r0, r3
 8010518:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801051a:	b10b      	cbz	r3, 8010520 <__sflush_r+0x50>
 801051c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801051e:	1ac0      	subs	r0, r0, r3
 8010520:	2300      	movs	r3, #0
 8010522:	4602      	mov	r2, r0
 8010524:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8010526:	6a21      	ldr	r1, [r4, #32]
 8010528:	4628      	mov	r0, r5
 801052a:	47b0      	blx	r6
 801052c:	1c43      	adds	r3, r0, #1
 801052e:	89a3      	ldrh	r3, [r4, #12]
 8010530:	d106      	bne.n	8010540 <__sflush_r+0x70>
 8010532:	6829      	ldr	r1, [r5, #0]
 8010534:	291d      	cmp	r1, #29
 8010536:	d84f      	bhi.n	80105d8 <__sflush_r+0x108>
 8010538:	4a2d      	ldr	r2, [pc, #180]	; (80105f0 <__sflush_r+0x120>)
 801053a:	40ca      	lsrs	r2, r1
 801053c:	07d6      	lsls	r6, r2, #31
 801053e:	d54b      	bpl.n	80105d8 <__sflush_r+0x108>
 8010540:	2200      	movs	r2, #0
 8010542:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010546:	b21b      	sxth	r3, r3
 8010548:	6062      	str	r2, [r4, #4]
 801054a:	6922      	ldr	r2, [r4, #16]
 801054c:	04d9      	lsls	r1, r3, #19
 801054e:	81a3      	strh	r3, [r4, #12]
 8010550:	6022      	str	r2, [r4, #0]
 8010552:	d504      	bpl.n	801055e <__sflush_r+0x8e>
 8010554:	1c42      	adds	r2, r0, #1
 8010556:	d101      	bne.n	801055c <__sflush_r+0x8c>
 8010558:	682b      	ldr	r3, [r5, #0]
 801055a:	b903      	cbnz	r3, 801055e <__sflush_r+0x8e>
 801055c:	6560      	str	r0, [r4, #84]	; 0x54
 801055e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010560:	602f      	str	r7, [r5, #0]
 8010562:	2900      	cmp	r1, #0
 8010564:	d0c6      	beq.n	80104f4 <__sflush_r+0x24>
 8010566:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801056a:	4299      	cmp	r1, r3
 801056c:	d002      	beq.n	8010574 <__sflush_r+0xa4>
 801056e:	4628      	mov	r0, r5
 8010570:	f000 f9ac 	bl	80108cc <_free_r>
 8010574:	2000      	movs	r0, #0
 8010576:	6360      	str	r0, [r4, #52]	; 0x34
 8010578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801057c:	6a21      	ldr	r1, [r4, #32]
 801057e:	2301      	movs	r3, #1
 8010580:	4628      	mov	r0, r5
 8010582:	47b0      	blx	r6
 8010584:	1c41      	adds	r1, r0, #1
 8010586:	d1c2      	bne.n	801050e <__sflush_r+0x3e>
 8010588:	682b      	ldr	r3, [r5, #0]
 801058a:	2b00      	cmp	r3, #0
 801058c:	d0bf      	beq.n	801050e <__sflush_r+0x3e>
 801058e:	2b1d      	cmp	r3, #29
 8010590:	d001      	beq.n	8010596 <__sflush_r+0xc6>
 8010592:	2b16      	cmp	r3, #22
 8010594:	d101      	bne.n	801059a <__sflush_r+0xca>
 8010596:	602f      	str	r7, [r5, #0]
 8010598:	e7ac      	b.n	80104f4 <__sflush_r+0x24>
 801059a:	89a3      	ldrh	r3, [r4, #12]
 801059c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80105a0:	81a3      	strh	r3, [r4, #12]
 80105a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105a6:	690f      	ldr	r7, [r1, #16]
 80105a8:	2f00      	cmp	r7, #0
 80105aa:	d0a3      	beq.n	80104f4 <__sflush_r+0x24>
 80105ac:	079b      	lsls	r3, r3, #30
 80105ae:	bf18      	it	ne
 80105b0:	2300      	movne	r3, #0
 80105b2:	680e      	ldr	r6, [r1, #0]
 80105b4:	bf08      	it	eq
 80105b6:	694b      	ldreq	r3, [r1, #20]
 80105b8:	eba6 0807 	sub.w	r8, r6, r7
 80105bc:	600f      	str	r7, [r1, #0]
 80105be:	608b      	str	r3, [r1, #8]
 80105c0:	f1b8 0f00 	cmp.w	r8, #0
 80105c4:	dd96      	ble.n	80104f4 <__sflush_r+0x24>
 80105c6:	4643      	mov	r3, r8
 80105c8:	463a      	mov	r2, r7
 80105ca:	6a21      	ldr	r1, [r4, #32]
 80105cc:	4628      	mov	r0, r5
 80105ce:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80105d0:	47b0      	blx	r6
 80105d2:	2800      	cmp	r0, #0
 80105d4:	dc07      	bgt.n	80105e6 <__sflush_r+0x116>
 80105d6:	89a3      	ldrh	r3, [r4, #12]
 80105d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80105dc:	81a3      	strh	r3, [r4, #12]
 80105de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80105e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105e6:	4407      	add	r7, r0
 80105e8:	eba8 0800 	sub.w	r8, r8, r0
 80105ec:	e7e8      	b.n	80105c0 <__sflush_r+0xf0>
 80105ee:	bf00      	nop
 80105f0:	20400001 	.word	0x20400001

080105f4 <_fflush_r>:
 80105f4:	b538      	push	{r3, r4, r5, lr}
 80105f6:	690b      	ldr	r3, [r1, #16]
 80105f8:	4605      	mov	r5, r0
 80105fa:	460c      	mov	r4, r1
 80105fc:	b913      	cbnz	r3, 8010604 <_fflush_r+0x10>
 80105fe:	2500      	movs	r5, #0
 8010600:	4628      	mov	r0, r5
 8010602:	bd38      	pop	{r3, r4, r5, pc}
 8010604:	b118      	cbz	r0, 801060e <_fflush_r+0x1a>
 8010606:	6983      	ldr	r3, [r0, #24]
 8010608:	b90b      	cbnz	r3, 801060e <_fflush_r+0x1a>
 801060a:	f000 f887 	bl	801071c <__sinit>
 801060e:	4b14      	ldr	r3, [pc, #80]	; (8010660 <_fflush_r+0x6c>)
 8010610:	429c      	cmp	r4, r3
 8010612:	d11b      	bne.n	801064c <_fflush_r+0x58>
 8010614:	686c      	ldr	r4, [r5, #4]
 8010616:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801061a:	2b00      	cmp	r3, #0
 801061c:	d0ef      	beq.n	80105fe <_fflush_r+0xa>
 801061e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8010620:	07d0      	lsls	r0, r2, #31
 8010622:	d404      	bmi.n	801062e <_fflush_r+0x3a>
 8010624:	0599      	lsls	r1, r3, #22
 8010626:	d402      	bmi.n	801062e <_fflush_r+0x3a>
 8010628:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801062a:	f7fd f825 	bl	800d678 <__retarget_lock_acquire_recursive>
 801062e:	4628      	mov	r0, r5
 8010630:	4621      	mov	r1, r4
 8010632:	f7ff ff4d 	bl	80104d0 <__sflush_r>
 8010636:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8010638:	4605      	mov	r5, r0
 801063a:	07da      	lsls	r2, r3, #31
 801063c:	d4e0      	bmi.n	8010600 <_fflush_r+0xc>
 801063e:	89a3      	ldrh	r3, [r4, #12]
 8010640:	059b      	lsls	r3, r3, #22
 8010642:	d4dd      	bmi.n	8010600 <_fflush_r+0xc>
 8010644:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010646:	f7fd f819 	bl	800d67c <__retarget_lock_release_recursive>
 801064a:	e7d9      	b.n	8010600 <_fflush_r+0xc>
 801064c:	4b05      	ldr	r3, [pc, #20]	; (8010664 <_fflush_r+0x70>)
 801064e:	429c      	cmp	r4, r3
 8010650:	d101      	bne.n	8010656 <_fflush_r+0x62>
 8010652:	68ac      	ldr	r4, [r5, #8]
 8010654:	e7df      	b.n	8010616 <_fflush_r+0x22>
 8010656:	4b04      	ldr	r3, [pc, #16]	; (8010668 <_fflush_r+0x74>)
 8010658:	429c      	cmp	r4, r3
 801065a:	bf08      	it	eq
 801065c:	68ec      	ldreq	r4, [r5, #12]
 801065e:	e7da      	b.n	8010616 <_fflush_r+0x22>
 8010660:	080130b0 	.word	0x080130b0
 8010664:	080130d0 	.word	0x080130d0
 8010668:	08013090 	.word	0x08013090

0801066c <_cleanup_r>:
 801066c:	4901      	ldr	r1, [pc, #4]	; (8010674 <_cleanup_r+0x8>)
 801066e:	f000 b9e9 	b.w	8010a44 <_fwalk_reent>
 8010672:	bf00      	nop
 8010674:	080111f9 	.word	0x080111f9

08010678 <std.isra.0>:
 8010678:	2300      	movs	r3, #0
 801067a:	b510      	push	{r4, lr}
 801067c:	4604      	mov	r4, r0
 801067e:	6003      	str	r3, [r0, #0]
 8010680:	6043      	str	r3, [r0, #4]
 8010682:	6083      	str	r3, [r0, #8]
 8010684:	8181      	strh	r1, [r0, #12]
 8010686:	6643      	str	r3, [r0, #100]	; 0x64
 8010688:	81c2      	strh	r2, [r0, #14]
 801068a:	6103      	str	r3, [r0, #16]
 801068c:	6143      	str	r3, [r0, #20]
 801068e:	6183      	str	r3, [r0, #24]
 8010690:	4619      	mov	r1, r3
 8010692:	2208      	movs	r2, #8
 8010694:	305c      	adds	r0, #92	; 0x5c
 8010696:	f7fd facd 	bl	800dc34 <memset>
 801069a:	4b05      	ldr	r3, [pc, #20]	; (80106b0 <std.isra.0+0x38>)
 801069c:	6224      	str	r4, [r4, #32]
 801069e:	6263      	str	r3, [r4, #36]	; 0x24
 80106a0:	4b04      	ldr	r3, [pc, #16]	; (80106b4 <std.isra.0+0x3c>)
 80106a2:	62a3      	str	r3, [r4, #40]	; 0x28
 80106a4:	4b04      	ldr	r3, [pc, #16]	; (80106b8 <std.isra.0+0x40>)
 80106a6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80106a8:	4b04      	ldr	r3, [pc, #16]	; (80106bc <std.isra.0+0x44>)
 80106aa:	6323      	str	r3, [r4, #48]	; 0x30
 80106ac:	bd10      	pop	{r4, pc}
 80106ae:	bf00      	nop
 80106b0:	0800e0f1 	.word	0x0800e0f1
 80106b4:	0800e113 	.word	0x0800e113
 80106b8:	0800e14b 	.word	0x0800e14b
 80106bc:	0800e16f 	.word	0x0800e16f

080106c0 <__sfmoreglue>:
 80106c0:	b570      	push	{r4, r5, r6, lr}
 80106c2:	2568      	movs	r5, #104	; 0x68
 80106c4:	1e4a      	subs	r2, r1, #1
 80106c6:	4355      	muls	r5, r2
 80106c8:	460e      	mov	r6, r1
 80106ca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80106ce:	f7fd f851 	bl	800d774 <_malloc_r>
 80106d2:	4604      	mov	r4, r0
 80106d4:	b140      	cbz	r0, 80106e8 <__sfmoreglue+0x28>
 80106d6:	2100      	movs	r1, #0
 80106d8:	e880 0042 	stmia.w	r0, {r1, r6}
 80106dc:	300c      	adds	r0, #12
 80106de:	60a0      	str	r0, [r4, #8]
 80106e0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80106e4:	f7fd faa6 	bl	800dc34 <memset>
 80106e8:	4620      	mov	r0, r4
 80106ea:	bd70      	pop	{r4, r5, r6, pc}

080106ec <__sfp_lock_acquire>:
 80106ec:	4801      	ldr	r0, [pc, #4]	; (80106f4 <__sfp_lock_acquire+0x8>)
 80106ee:	f7fc bfc3 	b.w	800d678 <__retarget_lock_acquire_recursive>
 80106f2:	bf00      	nop
 80106f4:	20000b18 	.word	0x20000b18

080106f8 <__sfp_lock_release>:
 80106f8:	4801      	ldr	r0, [pc, #4]	; (8010700 <__sfp_lock_release+0x8>)
 80106fa:	f7fc bfbf 	b.w	800d67c <__retarget_lock_release_recursive>
 80106fe:	bf00      	nop
 8010700:	20000b18 	.word	0x20000b18

08010704 <__sinit_lock_acquire>:
 8010704:	4801      	ldr	r0, [pc, #4]	; (801070c <__sinit_lock_acquire+0x8>)
 8010706:	f7fc bfb7 	b.w	800d678 <__retarget_lock_acquire_recursive>
 801070a:	bf00      	nop
 801070c:	20000b17 	.word	0x20000b17

08010710 <__sinit_lock_release>:
 8010710:	4801      	ldr	r0, [pc, #4]	; (8010718 <__sinit_lock_release+0x8>)
 8010712:	f7fc bfb3 	b.w	800d67c <__retarget_lock_release_recursive>
 8010716:	bf00      	nop
 8010718:	20000b17 	.word	0x20000b17

0801071c <__sinit>:
 801071c:	b510      	push	{r4, lr}
 801071e:	4604      	mov	r4, r0
 8010720:	f7ff fff0 	bl	8010704 <__sinit_lock_acquire>
 8010724:	69a3      	ldr	r3, [r4, #24]
 8010726:	b11b      	cbz	r3, 8010730 <__sinit+0x14>
 8010728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801072c:	f7ff bff0 	b.w	8010710 <__sinit_lock_release>
 8010730:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8010734:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 8010738:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 801073c:	4b13      	ldr	r3, [pc, #76]	; (801078c <__sinit+0x70>)
 801073e:	4a14      	ldr	r2, [pc, #80]	; (8010790 <__sinit+0x74>)
 8010740:	681b      	ldr	r3, [r3, #0]
 8010742:	62a2      	str	r2, [r4, #40]	; 0x28
 8010744:	429c      	cmp	r4, r3
 8010746:	bf08      	it	eq
 8010748:	2301      	moveq	r3, #1
 801074a:	4620      	mov	r0, r4
 801074c:	bf08      	it	eq
 801074e:	61a3      	streq	r3, [r4, #24]
 8010750:	f000 f820 	bl	8010794 <__sfp>
 8010754:	6060      	str	r0, [r4, #4]
 8010756:	4620      	mov	r0, r4
 8010758:	f000 f81c 	bl	8010794 <__sfp>
 801075c:	60a0      	str	r0, [r4, #8]
 801075e:	4620      	mov	r0, r4
 8010760:	f000 f818 	bl	8010794 <__sfp>
 8010764:	2200      	movs	r2, #0
 8010766:	60e0      	str	r0, [r4, #12]
 8010768:	2104      	movs	r1, #4
 801076a:	6860      	ldr	r0, [r4, #4]
 801076c:	f7ff ff84 	bl	8010678 <std.isra.0>
 8010770:	2201      	movs	r2, #1
 8010772:	2109      	movs	r1, #9
 8010774:	68a0      	ldr	r0, [r4, #8]
 8010776:	f7ff ff7f 	bl	8010678 <std.isra.0>
 801077a:	2202      	movs	r2, #2
 801077c:	2112      	movs	r1, #18
 801077e:	68e0      	ldr	r0, [r4, #12]
 8010780:	f7ff ff7a 	bl	8010678 <std.isra.0>
 8010784:	2301      	movs	r3, #1
 8010786:	61a3      	str	r3, [r4, #24]
 8010788:	e7ce      	b.n	8010728 <__sinit+0xc>
 801078a:	bf00      	nop
 801078c:	08012984 	.word	0x08012984
 8010790:	0801066d 	.word	0x0801066d

08010794 <__sfp>:
 8010794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010796:	4607      	mov	r7, r0
 8010798:	f7ff ffa8 	bl	80106ec <__sfp_lock_acquire>
 801079c:	4b1f      	ldr	r3, [pc, #124]	; (801081c <__sfp+0x88>)
 801079e:	681e      	ldr	r6, [r3, #0]
 80107a0:	69b3      	ldr	r3, [r6, #24]
 80107a2:	b913      	cbnz	r3, 80107aa <__sfp+0x16>
 80107a4:	4630      	mov	r0, r6
 80107a6:	f7ff ffb9 	bl	801071c <__sinit>
 80107aa:	36d8      	adds	r6, #216	; 0xd8
 80107ac:	68b4      	ldr	r4, [r6, #8]
 80107ae:	6873      	ldr	r3, [r6, #4]
 80107b0:	3b01      	subs	r3, #1
 80107b2:	d503      	bpl.n	80107bc <__sfp+0x28>
 80107b4:	6833      	ldr	r3, [r6, #0]
 80107b6:	b133      	cbz	r3, 80107c6 <__sfp+0x32>
 80107b8:	6836      	ldr	r6, [r6, #0]
 80107ba:	e7f7      	b.n	80107ac <__sfp+0x18>
 80107bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80107c0:	b17d      	cbz	r5, 80107e2 <__sfp+0x4e>
 80107c2:	3468      	adds	r4, #104	; 0x68
 80107c4:	e7f4      	b.n	80107b0 <__sfp+0x1c>
 80107c6:	2104      	movs	r1, #4
 80107c8:	4638      	mov	r0, r7
 80107ca:	f7ff ff79 	bl	80106c0 <__sfmoreglue>
 80107ce:	4604      	mov	r4, r0
 80107d0:	6030      	str	r0, [r6, #0]
 80107d2:	2800      	cmp	r0, #0
 80107d4:	d1f0      	bne.n	80107b8 <__sfp+0x24>
 80107d6:	f7ff ff8f 	bl	80106f8 <__sfp_lock_release>
 80107da:	230c      	movs	r3, #12
 80107dc:	603b      	str	r3, [r7, #0]
 80107de:	4620      	mov	r0, r4
 80107e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80107e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80107e6:	81e3      	strh	r3, [r4, #14]
 80107e8:	2301      	movs	r3, #1
 80107ea:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80107ee:	81a3      	strh	r3, [r4, #12]
 80107f0:	6665      	str	r5, [r4, #100]	; 0x64
 80107f2:	f7fc ff3f 	bl	800d674 <__retarget_lock_init_recursive>
 80107f6:	f7ff ff7f 	bl	80106f8 <__sfp_lock_release>
 80107fa:	6025      	str	r5, [r4, #0]
 80107fc:	60a5      	str	r5, [r4, #8]
 80107fe:	6065      	str	r5, [r4, #4]
 8010800:	6125      	str	r5, [r4, #16]
 8010802:	6165      	str	r5, [r4, #20]
 8010804:	61a5      	str	r5, [r4, #24]
 8010806:	2208      	movs	r2, #8
 8010808:	4629      	mov	r1, r5
 801080a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801080e:	f7fd fa11 	bl	800dc34 <memset>
 8010812:	6365      	str	r5, [r4, #52]	; 0x34
 8010814:	63a5      	str	r5, [r4, #56]	; 0x38
 8010816:	64a5      	str	r5, [r4, #72]	; 0x48
 8010818:	64e5      	str	r5, [r4, #76]	; 0x4c
 801081a:	e7e0      	b.n	80107de <__sfp+0x4a>
 801081c:	08012984 	.word	0x08012984

08010820 <_malloc_trim_r>:
 8010820:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010824:	4689      	mov	r9, r1
 8010826:	4f25      	ldr	r7, [pc, #148]	; (80108bc <_malloc_trim_r+0x9c>)
 8010828:	4606      	mov	r6, r0
 801082a:	f7fd fa0b 	bl	800dc44 <__malloc_lock>
 801082e:	68bb      	ldr	r3, [r7, #8]
 8010830:	f8df 8094 	ldr.w	r8, [pc, #148]	; 80108c8 <_malloc_trim_r+0xa8>
 8010834:	685d      	ldr	r5, [r3, #4]
 8010836:	f1a8 0411 	sub.w	r4, r8, #17
 801083a:	f025 0503 	bic.w	r5, r5, #3
 801083e:	eba4 0409 	sub.w	r4, r4, r9
 8010842:	442c      	add	r4, r5
 8010844:	fbb4 f4f8 	udiv	r4, r4, r8
 8010848:	3c01      	subs	r4, #1
 801084a:	fb08 f404 	mul.w	r4, r8, r4
 801084e:	4544      	cmp	r4, r8
 8010850:	da05      	bge.n	801085e <_malloc_trim_r+0x3e>
 8010852:	4630      	mov	r0, r6
 8010854:	f7fd f9fc 	bl	800dc50 <__malloc_unlock>
 8010858:	2000      	movs	r0, #0
 801085a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801085e:	2100      	movs	r1, #0
 8010860:	4630      	mov	r0, r6
 8010862:	f7fd fbcd 	bl	800e000 <_sbrk_r>
 8010866:	68bb      	ldr	r3, [r7, #8]
 8010868:	442b      	add	r3, r5
 801086a:	4298      	cmp	r0, r3
 801086c:	d1f1      	bne.n	8010852 <_malloc_trim_r+0x32>
 801086e:	4261      	negs	r1, r4
 8010870:	4630      	mov	r0, r6
 8010872:	f7fd fbc5 	bl	800e000 <_sbrk_r>
 8010876:	3001      	adds	r0, #1
 8010878:	d110      	bne.n	801089c <_malloc_trim_r+0x7c>
 801087a:	2100      	movs	r1, #0
 801087c:	4630      	mov	r0, r6
 801087e:	f7fd fbbf 	bl	800e000 <_sbrk_r>
 8010882:	68ba      	ldr	r2, [r7, #8]
 8010884:	1a83      	subs	r3, r0, r2
 8010886:	2b0f      	cmp	r3, #15
 8010888:	dde3      	ble.n	8010852 <_malloc_trim_r+0x32>
 801088a:	490d      	ldr	r1, [pc, #52]	; (80108c0 <_malloc_trim_r+0xa0>)
 801088c:	f043 0301 	orr.w	r3, r3, #1
 8010890:	6809      	ldr	r1, [r1, #0]
 8010892:	6053      	str	r3, [r2, #4]
 8010894:	1a40      	subs	r0, r0, r1
 8010896:	490b      	ldr	r1, [pc, #44]	; (80108c4 <_malloc_trim_r+0xa4>)
 8010898:	6008      	str	r0, [r1, #0]
 801089a:	e7da      	b.n	8010852 <_malloc_trim_r+0x32>
 801089c:	68bb      	ldr	r3, [r7, #8]
 801089e:	4a09      	ldr	r2, [pc, #36]	; (80108c4 <_malloc_trim_r+0xa4>)
 80108a0:	1b2d      	subs	r5, r5, r4
 80108a2:	f045 0501 	orr.w	r5, r5, #1
 80108a6:	605d      	str	r5, [r3, #4]
 80108a8:	6813      	ldr	r3, [r2, #0]
 80108aa:	4630      	mov	r0, r6
 80108ac:	1b1c      	subs	r4, r3, r4
 80108ae:	6014      	str	r4, [r2, #0]
 80108b0:	f7fd f9ce 	bl	800dc50 <__malloc_unlock>
 80108b4:	2001      	movs	r0, #1
 80108b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80108ba:	bf00      	nop
 80108bc:	20000280 	.word	0x20000280
 80108c0:	20000688 	.word	0x20000688
 80108c4:	200009d0 	.word	0x200009d0
 80108c8:	00001000 	.word	0x00001000

080108cc <_free_r>:
 80108cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108d0:	4604      	mov	r4, r0
 80108d2:	4688      	mov	r8, r1
 80108d4:	2900      	cmp	r1, #0
 80108d6:	f000 80ab 	beq.w	8010a30 <_free_r+0x164>
 80108da:	f7fd f9b3 	bl	800dc44 <__malloc_lock>
 80108de:	f858 2c04 	ldr.w	r2, [r8, #-4]
 80108e2:	4d54      	ldr	r5, [pc, #336]	; (8010a34 <_free_r+0x168>)
 80108e4:	f022 0001 	bic.w	r0, r2, #1
 80108e8:	f1a8 0308 	sub.w	r3, r8, #8
 80108ec:	181f      	adds	r7, r3, r0
 80108ee:	68a9      	ldr	r1, [r5, #8]
 80108f0:	687e      	ldr	r6, [r7, #4]
 80108f2:	428f      	cmp	r7, r1
 80108f4:	f026 0603 	bic.w	r6, r6, #3
 80108f8:	f002 0201 	and.w	r2, r2, #1
 80108fc:	d11b      	bne.n	8010936 <_free_r+0x6a>
 80108fe:	4430      	add	r0, r6
 8010900:	b93a      	cbnz	r2, 8010912 <_free_r+0x46>
 8010902:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8010906:	1a9b      	subs	r3, r3, r2
 8010908:	6899      	ldr	r1, [r3, #8]
 801090a:	4410      	add	r0, r2
 801090c:	68da      	ldr	r2, [r3, #12]
 801090e:	60ca      	str	r2, [r1, #12]
 8010910:	6091      	str	r1, [r2, #8]
 8010912:	f040 0201 	orr.w	r2, r0, #1
 8010916:	605a      	str	r2, [r3, #4]
 8010918:	60ab      	str	r3, [r5, #8]
 801091a:	4b47      	ldr	r3, [pc, #284]	; (8010a38 <_free_r+0x16c>)
 801091c:	681b      	ldr	r3, [r3, #0]
 801091e:	4298      	cmp	r0, r3
 8010920:	d304      	bcc.n	801092c <_free_r+0x60>
 8010922:	4b46      	ldr	r3, [pc, #280]	; (8010a3c <_free_r+0x170>)
 8010924:	4620      	mov	r0, r4
 8010926:	6819      	ldr	r1, [r3, #0]
 8010928:	f7ff ff7a 	bl	8010820 <_malloc_trim_r>
 801092c:	4620      	mov	r0, r4
 801092e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010932:	f7fd b98d 	b.w	800dc50 <__malloc_unlock>
 8010936:	607e      	str	r6, [r7, #4]
 8010938:	2a00      	cmp	r2, #0
 801093a:	d139      	bne.n	80109b0 <_free_r+0xe4>
 801093c:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8010940:	f105 0e08 	add.w	lr, r5, #8
 8010944:	1a5b      	subs	r3, r3, r1
 8010946:	4408      	add	r0, r1
 8010948:	6899      	ldr	r1, [r3, #8]
 801094a:	4571      	cmp	r1, lr
 801094c:	d032      	beq.n	80109b4 <_free_r+0xe8>
 801094e:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8010952:	f8c1 e00c 	str.w	lr, [r1, #12]
 8010956:	f8ce 1008 	str.w	r1, [lr, #8]
 801095a:	19b9      	adds	r1, r7, r6
 801095c:	6849      	ldr	r1, [r1, #4]
 801095e:	07c9      	lsls	r1, r1, #31
 8010960:	d40a      	bmi.n	8010978 <_free_r+0xac>
 8010962:	4430      	add	r0, r6
 8010964:	68b9      	ldr	r1, [r7, #8]
 8010966:	bb3a      	cbnz	r2, 80109b8 <_free_r+0xec>
 8010968:	4e35      	ldr	r6, [pc, #212]	; (8010a40 <_free_r+0x174>)
 801096a:	42b1      	cmp	r1, r6
 801096c:	d124      	bne.n	80109b8 <_free_r+0xec>
 801096e:	2201      	movs	r2, #1
 8010970:	616b      	str	r3, [r5, #20]
 8010972:	612b      	str	r3, [r5, #16]
 8010974:	60d9      	str	r1, [r3, #12]
 8010976:	6099      	str	r1, [r3, #8]
 8010978:	f040 0101 	orr.w	r1, r0, #1
 801097c:	6059      	str	r1, [r3, #4]
 801097e:	5018      	str	r0, [r3, r0]
 8010980:	2a00      	cmp	r2, #0
 8010982:	d1d3      	bne.n	801092c <_free_r+0x60>
 8010984:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8010988:	d21a      	bcs.n	80109c0 <_free_r+0xf4>
 801098a:	2201      	movs	r2, #1
 801098c:	08c0      	lsrs	r0, r0, #3
 801098e:	1081      	asrs	r1, r0, #2
 8010990:	408a      	lsls	r2, r1
 8010992:	6869      	ldr	r1, [r5, #4]
 8010994:	3001      	adds	r0, #1
 8010996:	430a      	orrs	r2, r1
 8010998:	606a      	str	r2, [r5, #4]
 801099a:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 801099e:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80109a2:	3a08      	subs	r2, #8
 80109a4:	60da      	str	r2, [r3, #12]
 80109a6:	6099      	str	r1, [r3, #8]
 80109a8:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 80109ac:	60cb      	str	r3, [r1, #12]
 80109ae:	e7bd      	b.n	801092c <_free_r+0x60>
 80109b0:	2200      	movs	r2, #0
 80109b2:	e7d2      	b.n	801095a <_free_r+0x8e>
 80109b4:	2201      	movs	r2, #1
 80109b6:	e7d0      	b.n	801095a <_free_r+0x8e>
 80109b8:	68fe      	ldr	r6, [r7, #12]
 80109ba:	60ce      	str	r6, [r1, #12]
 80109bc:	60b1      	str	r1, [r6, #8]
 80109be:	e7db      	b.n	8010978 <_free_r+0xac>
 80109c0:	0a42      	lsrs	r2, r0, #9
 80109c2:	2a04      	cmp	r2, #4
 80109c4:	d813      	bhi.n	80109ee <_free_r+0x122>
 80109c6:	0982      	lsrs	r2, r0, #6
 80109c8:	3238      	adds	r2, #56	; 0x38
 80109ca:	1c51      	adds	r1, r2, #1
 80109cc:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 80109d0:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 80109d4:	428e      	cmp	r6, r1
 80109d6:	d124      	bne.n	8010a22 <_free_r+0x156>
 80109d8:	2001      	movs	r0, #1
 80109da:	1092      	asrs	r2, r2, #2
 80109dc:	fa00 f202 	lsl.w	r2, r0, r2
 80109e0:	6868      	ldr	r0, [r5, #4]
 80109e2:	4302      	orrs	r2, r0
 80109e4:	606a      	str	r2, [r5, #4]
 80109e6:	60de      	str	r6, [r3, #12]
 80109e8:	6099      	str	r1, [r3, #8]
 80109ea:	60b3      	str	r3, [r6, #8]
 80109ec:	e7de      	b.n	80109ac <_free_r+0xe0>
 80109ee:	2a14      	cmp	r2, #20
 80109f0:	d801      	bhi.n	80109f6 <_free_r+0x12a>
 80109f2:	325b      	adds	r2, #91	; 0x5b
 80109f4:	e7e9      	b.n	80109ca <_free_r+0xfe>
 80109f6:	2a54      	cmp	r2, #84	; 0x54
 80109f8:	d802      	bhi.n	8010a00 <_free_r+0x134>
 80109fa:	0b02      	lsrs	r2, r0, #12
 80109fc:	326e      	adds	r2, #110	; 0x6e
 80109fe:	e7e4      	b.n	80109ca <_free_r+0xfe>
 8010a00:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8010a04:	d802      	bhi.n	8010a0c <_free_r+0x140>
 8010a06:	0bc2      	lsrs	r2, r0, #15
 8010a08:	3277      	adds	r2, #119	; 0x77
 8010a0a:	e7de      	b.n	80109ca <_free_r+0xfe>
 8010a0c:	f240 5154 	movw	r1, #1364	; 0x554
 8010a10:	428a      	cmp	r2, r1
 8010a12:	bf9a      	itte	ls
 8010a14:	0c82      	lsrls	r2, r0, #18
 8010a16:	327c      	addls	r2, #124	; 0x7c
 8010a18:	227e      	movhi	r2, #126	; 0x7e
 8010a1a:	e7d6      	b.n	80109ca <_free_r+0xfe>
 8010a1c:	6889      	ldr	r1, [r1, #8]
 8010a1e:	428e      	cmp	r6, r1
 8010a20:	d004      	beq.n	8010a2c <_free_r+0x160>
 8010a22:	684a      	ldr	r2, [r1, #4]
 8010a24:	f022 0203 	bic.w	r2, r2, #3
 8010a28:	4290      	cmp	r0, r2
 8010a2a:	d3f7      	bcc.n	8010a1c <_free_r+0x150>
 8010a2c:	68ce      	ldr	r6, [r1, #12]
 8010a2e:	e7da      	b.n	80109e6 <_free_r+0x11a>
 8010a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a34:	20000280 	.word	0x20000280
 8010a38:	2000068c 	.word	0x2000068c
 8010a3c:	20000a00 	.word	0x20000a00
 8010a40:	20000288 	.word	0x20000288

08010a44 <_fwalk_reent>:
 8010a44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010a48:	4680      	mov	r8, r0
 8010a4a:	4689      	mov	r9, r1
 8010a4c:	2600      	movs	r6, #0
 8010a4e:	f100 04d8 	add.w	r4, r0, #216	; 0xd8
 8010a52:	b914      	cbnz	r4, 8010a5a <_fwalk_reent+0x16>
 8010a54:	4630      	mov	r0, r6
 8010a56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010a5a:	68a5      	ldr	r5, [r4, #8]
 8010a5c:	6867      	ldr	r7, [r4, #4]
 8010a5e:	3f01      	subs	r7, #1
 8010a60:	d501      	bpl.n	8010a66 <_fwalk_reent+0x22>
 8010a62:	6824      	ldr	r4, [r4, #0]
 8010a64:	e7f5      	b.n	8010a52 <_fwalk_reent+0xe>
 8010a66:	89ab      	ldrh	r3, [r5, #12]
 8010a68:	2b01      	cmp	r3, #1
 8010a6a:	d907      	bls.n	8010a7c <_fwalk_reent+0x38>
 8010a6c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8010a70:	3301      	adds	r3, #1
 8010a72:	d003      	beq.n	8010a7c <_fwalk_reent+0x38>
 8010a74:	4629      	mov	r1, r5
 8010a76:	4640      	mov	r0, r8
 8010a78:	47c8      	blx	r9
 8010a7a:	4306      	orrs	r6, r0
 8010a7c:	3568      	adds	r5, #104	; 0x68
 8010a7e:	e7ee      	b.n	8010a5e <_fwalk_reent+0x1a>

08010a80 <_isatty_r>:
 8010a80:	b538      	push	{r3, r4, r5, lr}
 8010a82:	2300      	movs	r3, #0
 8010a84:	4c05      	ldr	r4, [pc, #20]	; (8010a9c <_isatty_r+0x1c>)
 8010a86:	4605      	mov	r5, r0
 8010a88:	4608      	mov	r0, r1
 8010a8a:	6023      	str	r3, [r4, #0]
 8010a8c:	f000 fc38 	bl	8011300 <_isatty>
 8010a90:	1c43      	adds	r3, r0, #1
 8010a92:	d102      	bne.n	8010a9a <_isatty_r+0x1a>
 8010a94:	6823      	ldr	r3, [r4, #0]
 8010a96:	b103      	cbz	r3, 8010a9a <_isatty_r+0x1a>
 8010a98:	602b      	str	r3, [r5, #0]
 8010a9a:	bd38      	pop	{r3, r4, r5, pc}
 8010a9c:	20000b20 	.word	0x20000b20

08010aa0 <_localeconv_r>:
 8010aa0:	4b04      	ldr	r3, [pc, #16]	; (8010ab4 <_localeconv_r+0x14>)
 8010aa2:	681b      	ldr	r3, [r3, #0]
 8010aa4:	6a18      	ldr	r0, [r3, #32]
 8010aa6:	4b04      	ldr	r3, [pc, #16]	; (8010ab8 <_localeconv_r+0x18>)
 8010aa8:	2800      	cmp	r0, #0
 8010aaa:	bf08      	it	eq
 8010aac:	4618      	moveq	r0, r3
 8010aae:	30f0      	adds	r0, #240	; 0xf0
 8010ab0:	4770      	bx	lr
 8010ab2:	bf00      	nop
 8010ab4:	20000020 	.word	0x20000020
 8010ab8:	20000114 	.word	0x20000114

08010abc <_lseek_r>:
 8010abc:	b538      	push	{r3, r4, r5, lr}
 8010abe:	4605      	mov	r5, r0
 8010ac0:	4608      	mov	r0, r1
 8010ac2:	4611      	mov	r1, r2
 8010ac4:	2200      	movs	r2, #0
 8010ac6:	4c05      	ldr	r4, [pc, #20]	; (8010adc <_lseek_r+0x20>)
 8010ac8:	6022      	str	r2, [r4, #0]
 8010aca:	461a      	mov	r2, r3
 8010acc:	f000 fc28 	bl	8011320 <_lseek>
 8010ad0:	1c43      	adds	r3, r0, #1
 8010ad2:	d102      	bne.n	8010ada <_lseek_r+0x1e>
 8010ad4:	6823      	ldr	r3, [r4, #0]
 8010ad6:	b103      	cbz	r3, 8010ada <_lseek_r+0x1e>
 8010ad8:	602b      	str	r3, [r5, #0]
 8010ada:	bd38      	pop	{r3, r4, r5, pc}
 8010adc:	20000b20 	.word	0x20000b20

08010ae0 <_Balloc>:
 8010ae0:	b570      	push	{r4, r5, r6, lr}
 8010ae2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8010ae4:	4604      	mov	r4, r0
 8010ae6:	460e      	mov	r6, r1
 8010ae8:	b93d      	cbnz	r5, 8010afa <_Balloc+0x1a>
 8010aea:	2010      	movs	r0, #16
 8010aec:	f7fc fe32 	bl	800d754 <malloc>
 8010af0:	6260      	str	r0, [r4, #36]	; 0x24
 8010af2:	6045      	str	r5, [r0, #4]
 8010af4:	6085      	str	r5, [r0, #8]
 8010af6:	6005      	str	r5, [r0, #0]
 8010af8:	60c5      	str	r5, [r0, #12]
 8010afa:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8010afc:	68eb      	ldr	r3, [r5, #12]
 8010afe:	b183      	cbz	r3, 8010b22 <_Balloc+0x42>
 8010b00:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010b02:	68db      	ldr	r3, [r3, #12]
 8010b04:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8010b08:	b9b8      	cbnz	r0, 8010b3a <_Balloc+0x5a>
 8010b0a:	2101      	movs	r1, #1
 8010b0c:	fa01 f506 	lsl.w	r5, r1, r6
 8010b10:	1d6a      	adds	r2, r5, #5
 8010b12:	0092      	lsls	r2, r2, #2
 8010b14:	4620      	mov	r0, r4
 8010b16:	f000 fb41 	bl	801119c <_calloc_r>
 8010b1a:	b160      	cbz	r0, 8010b36 <_Balloc+0x56>
 8010b1c:	6046      	str	r6, [r0, #4]
 8010b1e:	6085      	str	r5, [r0, #8]
 8010b20:	e00e      	b.n	8010b40 <_Balloc+0x60>
 8010b22:	2221      	movs	r2, #33	; 0x21
 8010b24:	2104      	movs	r1, #4
 8010b26:	4620      	mov	r0, r4
 8010b28:	f000 fb38 	bl	801119c <_calloc_r>
 8010b2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010b2e:	60e8      	str	r0, [r5, #12]
 8010b30:	68db      	ldr	r3, [r3, #12]
 8010b32:	2b00      	cmp	r3, #0
 8010b34:	d1e4      	bne.n	8010b00 <_Balloc+0x20>
 8010b36:	2000      	movs	r0, #0
 8010b38:	bd70      	pop	{r4, r5, r6, pc}
 8010b3a:	6802      	ldr	r2, [r0, #0]
 8010b3c:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8010b40:	2300      	movs	r3, #0
 8010b42:	6103      	str	r3, [r0, #16]
 8010b44:	60c3      	str	r3, [r0, #12]
 8010b46:	bd70      	pop	{r4, r5, r6, pc}

08010b48 <_Bfree>:
 8010b48:	b570      	push	{r4, r5, r6, lr}
 8010b4a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8010b4c:	4606      	mov	r6, r0
 8010b4e:	460d      	mov	r5, r1
 8010b50:	b93c      	cbnz	r4, 8010b62 <_Bfree+0x1a>
 8010b52:	2010      	movs	r0, #16
 8010b54:	f7fc fdfe 	bl	800d754 <malloc>
 8010b58:	6270      	str	r0, [r6, #36]	; 0x24
 8010b5a:	6044      	str	r4, [r0, #4]
 8010b5c:	6084      	str	r4, [r0, #8]
 8010b5e:	6004      	str	r4, [r0, #0]
 8010b60:	60c4      	str	r4, [r0, #12]
 8010b62:	b13d      	cbz	r5, 8010b74 <_Bfree+0x2c>
 8010b64:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010b66:	686a      	ldr	r2, [r5, #4]
 8010b68:	68db      	ldr	r3, [r3, #12]
 8010b6a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8010b6e:	6029      	str	r1, [r5, #0]
 8010b70:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8010b74:	bd70      	pop	{r4, r5, r6, pc}

08010b76 <__multadd>:
 8010b76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b7a:	461f      	mov	r7, r3
 8010b7c:	4606      	mov	r6, r0
 8010b7e:	460c      	mov	r4, r1
 8010b80:	2300      	movs	r3, #0
 8010b82:	690d      	ldr	r5, [r1, #16]
 8010b84:	f101 0e14 	add.w	lr, r1, #20
 8010b88:	f8de 0000 	ldr.w	r0, [lr]
 8010b8c:	3301      	adds	r3, #1
 8010b8e:	b281      	uxth	r1, r0
 8010b90:	fb02 7101 	mla	r1, r2, r1, r7
 8010b94:	0c00      	lsrs	r0, r0, #16
 8010b96:	0c0f      	lsrs	r7, r1, #16
 8010b98:	fb02 7000 	mla	r0, r2, r0, r7
 8010b9c:	b289      	uxth	r1, r1
 8010b9e:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8010ba2:	429d      	cmp	r5, r3
 8010ba4:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8010ba8:	f84e 1b04 	str.w	r1, [lr], #4
 8010bac:	dcec      	bgt.n	8010b88 <__multadd+0x12>
 8010bae:	b1d7      	cbz	r7, 8010be6 <__multadd+0x70>
 8010bb0:	68a3      	ldr	r3, [r4, #8]
 8010bb2:	429d      	cmp	r5, r3
 8010bb4:	db12      	blt.n	8010bdc <__multadd+0x66>
 8010bb6:	6861      	ldr	r1, [r4, #4]
 8010bb8:	4630      	mov	r0, r6
 8010bba:	3101      	adds	r1, #1
 8010bbc:	f7ff ff90 	bl	8010ae0 <_Balloc>
 8010bc0:	4680      	mov	r8, r0
 8010bc2:	6922      	ldr	r2, [r4, #16]
 8010bc4:	f104 010c 	add.w	r1, r4, #12
 8010bc8:	3202      	adds	r2, #2
 8010bca:	0092      	lsls	r2, r2, #2
 8010bcc:	300c      	adds	r0, #12
 8010bce:	f7fd f80c 	bl	800dbea <memcpy>
 8010bd2:	4621      	mov	r1, r4
 8010bd4:	4630      	mov	r0, r6
 8010bd6:	f7ff ffb7 	bl	8010b48 <_Bfree>
 8010bda:	4644      	mov	r4, r8
 8010bdc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8010be0:	3501      	adds	r5, #1
 8010be2:	615f      	str	r7, [r3, #20]
 8010be4:	6125      	str	r5, [r4, #16]
 8010be6:	4620      	mov	r0, r4
 8010be8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010bec <__hi0bits>:
 8010bec:	0c02      	lsrs	r2, r0, #16
 8010bee:	0412      	lsls	r2, r2, #16
 8010bf0:	4603      	mov	r3, r0
 8010bf2:	b9b2      	cbnz	r2, 8010c22 <__hi0bits+0x36>
 8010bf4:	0403      	lsls	r3, r0, #16
 8010bf6:	2010      	movs	r0, #16
 8010bf8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010bfc:	bf04      	itt	eq
 8010bfe:	021b      	lsleq	r3, r3, #8
 8010c00:	3008      	addeq	r0, #8
 8010c02:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010c06:	bf04      	itt	eq
 8010c08:	011b      	lsleq	r3, r3, #4
 8010c0a:	3004      	addeq	r0, #4
 8010c0c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010c10:	bf04      	itt	eq
 8010c12:	009b      	lsleq	r3, r3, #2
 8010c14:	3002      	addeq	r0, #2
 8010c16:	2b00      	cmp	r3, #0
 8010c18:	db06      	blt.n	8010c28 <__hi0bits+0x3c>
 8010c1a:	005b      	lsls	r3, r3, #1
 8010c1c:	d503      	bpl.n	8010c26 <__hi0bits+0x3a>
 8010c1e:	3001      	adds	r0, #1
 8010c20:	4770      	bx	lr
 8010c22:	2000      	movs	r0, #0
 8010c24:	e7e8      	b.n	8010bf8 <__hi0bits+0xc>
 8010c26:	2020      	movs	r0, #32
 8010c28:	4770      	bx	lr

08010c2a <__lo0bits>:
 8010c2a:	6803      	ldr	r3, [r0, #0]
 8010c2c:	4601      	mov	r1, r0
 8010c2e:	f013 0207 	ands.w	r2, r3, #7
 8010c32:	d00b      	beq.n	8010c4c <__lo0bits+0x22>
 8010c34:	07da      	lsls	r2, r3, #31
 8010c36:	d423      	bmi.n	8010c80 <__lo0bits+0x56>
 8010c38:	0798      	lsls	r0, r3, #30
 8010c3a:	bf49      	itett	mi
 8010c3c:	085b      	lsrmi	r3, r3, #1
 8010c3e:	089b      	lsrpl	r3, r3, #2
 8010c40:	2001      	movmi	r0, #1
 8010c42:	600b      	strmi	r3, [r1, #0]
 8010c44:	bf5c      	itt	pl
 8010c46:	600b      	strpl	r3, [r1, #0]
 8010c48:	2002      	movpl	r0, #2
 8010c4a:	4770      	bx	lr
 8010c4c:	b298      	uxth	r0, r3
 8010c4e:	b9a8      	cbnz	r0, 8010c7c <__lo0bits+0x52>
 8010c50:	2010      	movs	r0, #16
 8010c52:	0c1b      	lsrs	r3, r3, #16
 8010c54:	f013 0fff 	tst.w	r3, #255	; 0xff
 8010c58:	bf04      	itt	eq
 8010c5a:	0a1b      	lsreq	r3, r3, #8
 8010c5c:	3008      	addeq	r0, #8
 8010c5e:	071a      	lsls	r2, r3, #28
 8010c60:	bf04      	itt	eq
 8010c62:	091b      	lsreq	r3, r3, #4
 8010c64:	3004      	addeq	r0, #4
 8010c66:	079a      	lsls	r2, r3, #30
 8010c68:	bf04      	itt	eq
 8010c6a:	089b      	lsreq	r3, r3, #2
 8010c6c:	3002      	addeq	r0, #2
 8010c6e:	07da      	lsls	r2, r3, #31
 8010c70:	d402      	bmi.n	8010c78 <__lo0bits+0x4e>
 8010c72:	085b      	lsrs	r3, r3, #1
 8010c74:	d006      	beq.n	8010c84 <__lo0bits+0x5a>
 8010c76:	3001      	adds	r0, #1
 8010c78:	600b      	str	r3, [r1, #0]
 8010c7a:	4770      	bx	lr
 8010c7c:	4610      	mov	r0, r2
 8010c7e:	e7e9      	b.n	8010c54 <__lo0bits+0x2a>
 8010c80:	2000      	movs	r0, #0
 8010c82:	4770      	bx	lr
 8010c84:	2020      	movs	r0, #32
 8010c86:	4770      	bx	lr

08010c88 <__i2b>:
 8010c88:	b510      	push	{r4, lr}
 8010c8a:	460c      	mov	r4, r1
 8010c8c:	2101      	movs	r1, #1
 8010c8e:	f7ff ff27 	bl	8010ae0 <_Balloc>
 8010c92:	2201      	movs	r2, #1
 8010c94:	6144      	str	r4, [r0, #20]
 8010c96:	6102      	str	r2, [r0, #16]
 8010c98:	bd10      	pop	{r4, pc}

08010c9a <__multiply>:
 8010c9a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c9e:	4614      	mov	r4, r2
 8010ca0:	690a      	ldr	r2, [r1, #16]
 8010ca2:	6923      	ldr	r3, [r4, #16]
 8010ca4:	4689      	mov	r9, r1
 8010ca6:	429a      	cmp	r2, r3
 8010ca8:	bfbe      	ittt	lt
 8010caa:	460b      	movlt	r3, r1
 8010cac:	46a1      	movlt	r9, r4
 8010cae:	461c      	movlt	r4, r3
 8010cb0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8010cb4:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8010cb8:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8010cbc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8010cc0:	eb07 060a 	add.w	r6, r7, sl
 8010cc4:	429e      	cmp	r6, r3
 8010cc6:	bfc8      	it	gt
 8010cc8:	3101      	addgt	r1, #1
 8010cca:	f7ff ff09 	bl	8010ae0 <_Balloc>
 8010cce:	f100 0514 	add.w	r5, r0, #20
 8010cd2:	462b      	mov	r3, r5
 8010cd4:	2200      	movs	r2, #0
 8010cd6:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8010cda:	4543      	cmp	r3, r8
 8010cdc:	d316      	bcc.n	8010d0c <__multiply+0x72>
 8010cde:	f104 0214 	add.w	r2, r4, #20
 8010ce2:	f109 0114 	add.w	r1, r9, #20
 8010ce6:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8010cea:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8010cee:	9301      	str	r3, [sp, #4]
 8010cf0:	9c01      	ldr	r4, [sp, #4]
 8010cf2:	4613      	mov	r3, r2
 8010cf4:	4294      	cmp	r4, r2
 8010cf6:	d80c      	bhi.n	8010d12 <__multiply+0x78>
 8010cf8:	2e00      	cmp	r6, #0
 8010cfa:	dd03      	ble.n	8010d04 <__multiply+0x6a>
 8010cfc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8010d00:	2b00      	cmp	r3, #0
 8010d02:	d054      	beq.n	8010dae <__multiply+0x114>
 8010d04:	6106      	str	r6, [r0, #16]
 8010d06:	b003      	add	sp, #12
 8010d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d0c:	f843 2b04 	str.w	r2, [r3], #4
 8010d10:	e7e3      	b.n	8010cda <__multiply+0x40>
 8010d12:	f8b3 a000 	ldrh.w	sl, [r3]
 8010d16:	3204      	adds	r2, #4
 8010d18:	f1ba 0f00 	cmp.w	sl, #0
 8010d1c:	d020      	beq.n	8010d60 <__multiply+0xc6>
 8010d1e:	46ae      	mov	lr, r5
 8010d20:	4689      	mov	r9, r1
 8010d22:	f04f 0c00 	mov.w	ip, #0
 8010d26:	f859 4b04 	ldr.w	r4, [r9], #4
 8010d2a:	f8be b000 	ldrh.w	fp, [lr]
 8010d2e:	b2a3      	uxth	r3, r4
 8010d30:	fb0a b303 	mla	r3, sl, r3, fp
 8010d34:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8010d38:	f8de 4000 	ldr.w	r4, [lr]
 8010d3c:	4463      	add	r3, ip
 8010d3e:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010d42:	fb0a c40b 	mla	r4, sl, fp, ip
 8010d46:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8010d4a:	b29b      	uxth	r3, r3
 8010d4c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8010d50:	454f      	cmp	r7, r9
 8010d52:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010d56:	f84e 3b04 	str.w	r3, [lr], #4
 8010d5a:	d8e4      	bhi.n	8010d26 <__multiply+0x8c>
 8010d5c:	f8ce c000 	str.w	ip, [lr]
 8010d60:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8010d64:	f1b9 0f00 	cmp.w	r9, #0
 8010d68:	d01f      	beq.n	8010daa <__multiply+0x110>
 8010d6a:	46ae      	mov	lr, r5
 8010d6c:	468c      	mov	ip, r1
 8010d6e:	f04f 0a00 	mov.w	sl, #0
 8010d72:	682b      	ldr	r3, [r5, #0]
 8010d74:	f8bc 4000 	ldrh.w	r4, [ip]
 8010d78:	f8be b002 	ldrh.w	fp, [lr, #2]
 8010d7c:	b29b      	uxth	r3, r3
 8010d7e:	fb09 b404 	mla	r4, r9, r4, fp
 8010d82:	44a2      	add	sl, r4
 8010d84:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8010d88:	f84e 3b04 	str.w	r3, [lr], #4
 8010d8c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8010d90:	f8be 4000 	ldrh.w	r4, [lr]
 8010d94:	0c1b      	lsrs	r3, r3, #16
 8010d96:	fb09 4303 	mla	r3, r9, r3, r4
 8010d9a:	4567      	cmp	r7, ip
 8010d9c:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8010da0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8010da4:	d8e6      	bhi.n	8010d74 <__multiply+0xda>
 8010da6:	f8ce 3000 	str.w	r3, [lr]
 8010daa:	3504      	adds	r5, #4
 8010dac:	e7a0      	b.n	8010cf0 <__multiply+0x56>
 8010dae:	3e01      	subs	r6, #1
 8010db0:	e7a2      	b.n	8010cf8 <__multiply+0x5e>
	...

08010db4 <__pow5mult>:
 8010db4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010db8:	4615      	mov	r5, r2
 8010dba:	f012 0203 	ands.w	r2, r2, #3
 8010dbe:	4606      	mov	r6, r0
 8010dc0:	460f      	mov	r7, r1
 8010dc2:	d007      	beq.n	8010dd4 <__pow5mult+0x20>
 8010dc4:	4c21      	ldr	r4, [pc, #132]	; (8010e4c <__pow5mult+0x98>)
 8010dc6:	3a01      	subs	r2, #1
 8010dc8:	2300      	movs	r3, #0
 8010dca:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8010dce:	f7ff fed2 	bl	8010b76 <__multadd>
 8010dd2:	4607      	mov	r7, r0
 8010dd4:	10ad      	asrs	r5, r5, #2
 8010dd6:	d035      	beq.n	8010e44 <__pow5mult+0x90>
 8010dd8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8010dda:	b93c      	cbnz	r4, 8010dec <__pow5mult+0x38>
 8010ddc:	2010      	movs	r0, #16
 8010dde:	f7fc fcb9 	bl	800d754 <malloc>
 8010de2:	6270      	str	r0, [r6, #36]	; 0x24
 8010de4:	6044      	str	r4, [r0, #4]
 8010de6:	6084      	str	r4, [r0, #8]
 8010de8:	6004      	str	r4, [r0, #0]
 8010dea:	60c4      	str	r4, [r0, #12]
 8010dec:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8010df0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8010df4:	b94c      	cbnz	r4, 8010e0a <__pow5mult+0x56>
 8010df6:	f240 2171 	movw	r1, #625	; 0x271
 8010dfa:	4630      	mov	r0, r6
 8010dfc:	f7ff ff44 	bl	8010c88 <__i2b>
 8010e00:	2300      	movs	r3, #0
 8010e02:	4604      	mov	r4, r0
 8010e04:	f8c8 0008 	str.w	r0, [r8, #8]
 8010e08:	6003      	str	r3, [r0, #0]
 8010e0a:	f04f 0800 	mov.w	r8, #0
 8010e0e:	07eb      	lsls	r3, r5, #31
 8010e10:	d50a      	bpl.n	8010e28 <__pow5mult+0x74>
 8010e12:	4639      	mov	r1, r7
 8010e14:	4622      	mov	r2, r4
 8010e16:	4630      	mov	r0, r6
 8010e18:	f7ff ff3f 	bl	8010c9a <__multiply>
 8010e1c:	4681      	mov	r9, r0
 8010e1e:	4639      	mov	r1, r7
 8010e20:	4630      	mov	r0, r6
 8010e22:	f7ff fe91 	bl	8010b48 <_Bfree>
 8010e26:	464f      	mov	r7, r9
 8010e28:	106d      	asrs	r5, r5, #1
 8010e2a:	d00b      	beq.n	8010e44 <__pow5mult+0x90>
 8010e2c:	6820      	ldr	r0, [r4, #0]
 8010e2e:	b938      	cbnz	r0, 8010e40 <__pow5mult+0x8c>
 8010e30:	4622      	mov	r2, r4
 8010e32:	4621      	mov	r1, r4
 8010e34:	4630      	mov	r0, r6
 8010e36:	f7ff ff30 	bl	8010c9a <__multiply>
 8010e3a:	6020      	str	r0, [r4, #0]
 8010e3c:	f8c0 8000 	str.w	r8, [r0]
 8010e40:	4604      	mov	r4, r0
 8010e42:	e7e4      	b.n	8010e0e <__pow5mult+0x5a>
 8010e44:	4638      	mov	r0, r7
 8010e46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010e4a:	bf00      	nop
 8010e4c:	080131e0 	.word	0x080131e0

08010e50 <__lshift>:
 8010e50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010e54:	460c      	mov	r4, r1
 8010e56:	4607      	mov	r7, r0
 8010e58:	4616      	mov	r6, r2
 8010e5a:	6923      	ldr	r3, [r4, #16]
 8010e5c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8010e60:	eb0a 0903 	add.w	r9, sl, r3
 8010e64:	6849      	ldr	r1, [r1, #4]
 8010e66:	68a3      	ldr	r3, [r4, #8]
 8010e68:	f109 0501 	add.w	r5, r9, #1
 8010e6c:	42ab      	cmp	r3, r5
 8010e6e:	db31      	blt.n	8010ed4 <__lshift+0x84>
 8010e70:	4638      	mov	r0, r7
 8010e72:	f7ff fe35 	bl	8010ae0 <_Balloc>
 8010e76:	2200      	movs	r2, #0
 8010e78:	4680      	mov	r8, r0
 8010e7a:	4611      	mov	r1, r2
 8010e7c:	f100 0314 	add.w	r3, r0, #20
 8010e80:	4552      	cmp	r2, sl
 8010e82:	db2a      	blt.n	8010eda <__lshift+0x8a>
 8010e84:	6920      	ldr	r0, [r4, #16]
 8010e86:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8010e8a:	f104 0114 	add.w	r1, r4, #20
 8010e8e:	f016 021f 	ands.w	r2, r6, #31
 8010e92:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8010e96:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8010e9a:	d022      	beq.n	8010ee2 <__lshift+0x92>
 8010e9c:	2000      	movs	r0, #0
 8010e9e:	f1c2 0c20 	rsb	ip, r2, #32
 8010ea2:	680e      	ldr	r6, [r1, #0]
 8010ea4:	4096      	lsls	r6, r2
 8010ea6:	4330      	orrs	r0, r6
 8010ea8:	f843 0b04 	str.w	r0, [r3], #4
 8010eac:	f851 0b04 	ldr.w	r0, [r1], #4
 8010eb0:	458e      	cmp	lr, r1
 8010eb2:	fa20 f00c 	lsr.w	r0, r0, ip
 8010eb6:	d8f4      	bhi.n	8010ea2 <__lshift+0x52>
 8010eb8:	6018      	str	r0, [r3, #0]
 8010eba:	b108      	cbz	r0, 8010ec0 <__lshift+0x70>
 8010ebc:	f109 0502 	add.w	r5, r9, #2
 8010ec0:	3d01      	subs	r5, #1
 8010ec2:	4638      	mov	r0, r7
 8010ec4:	f8c8 5010 	str.w	r5, [r8, #16]
 8010ec8:	4621      	mov	r1, r4
 8010eca:	f7ff fe3d 	bl	8010b48 <_Bfree>
 8010ece:	4640      	mov	r0, r8
 8010ed0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010ed4:	3101      	adds	r1, #1
 8010ed6:	005b      	lsls	r3, r3, #1
 8010ed8:	e7c8      	b.n	8010e6c <__lshift+0x1c>
 8010eda:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8010ede:	3201      	adds	r2, #1
 8010ee0:	e7ce      	b.n	8010e80 <__lshift+0x30>
 8010ee2:	3b04      	subs	r3, #4
 8010ee4:	f851 2b04 	ldr.w	r2, [r1], #4
 8010ee8:	458e      	cmp	lr, r1
 8010eea:	f843 2f04 	str.w	r2, [r3, #4]!
 8010eee:	d8f9      	bhi.n	8010ee4 <__lshift+0x94>
 8010ef0:	e7e6      	b.n	8010ec0 <__lshift+0x70>

08010ef2 <__mcmp>:
 8010ef2:	6903      	ldr	r3, [r0, #16]
 8010ef4:	690a      	ldr	r2, [r1, #16]
 8010ef6:	b530      	push	{r4, r5, lr}
 8010ef8:	1a9b      	subs	r3, r3, r2
 8010efa:	d10c      	bne.n	8010f16 <__mcmp+0x24>
 8010efc:	0092      	lsls	r2, r2, #2
 8010efe:	3014      	adds	r0, #20
 8010f00:	3114      	adds	r1, #20
 8010f02:	1884      	adds	r4, r0, r2
 8010f04:	4411      	add	r1, r2
 8010f06:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8010f0a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8010f0e:	4295      	cmp	r5, r2
 8010f10:	d003      	beq.n	8010f1a <__mcmp+0x28>
 8010f12:	d305      	bcc.n	8010f20 <__mcmp+0x2e>
 8010f14:	2301      	movs	r3, #1
 8010f16:	4618      	mov	r0, r3
 8010f18:	bd30      	pop	{r4, r5, pc}
 8010f1a:	42a0      	cmp	r0, r4
 8010f1c:	d3f3      	bcc.n	8010f06 <__mcmp+0x14>
 8010f1e:	e7fa      	b.n	8010f16 <__mcmp+0x24>
 8010f20:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010f24:	e7f7      	b.n	8010f16 <__mcmp+0x24>

08010f26 <__mdiff>:
 8010f26:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010f2a:	460d      	mov	r5, r1
 8010f2c:	4607      	mov	r7, r0
 8010f2e:	4611      	mov	r1, r2
 8010f30:	4628      	mov	r0, r5
 8010f32:	4614      	mov	r4, r2
 8010f34:	f7ff ffdd 	bl	8010ef2 <__mcmp>
 8010f38:	1e06      	subs	r6, r0, #0
 8010f3a:	d108      	bne.n	8010f4e <__mdiff+0x28>
 8010f3c:	4631      	mov	r1, r6
 8010f3e:	4638      	mov	r0, r7
 8010f40:	f7ff fdce 	bl	8010ae0 <_Balloc>
 8010f44:	2301      	movs	r3, #1
 8010f46:	6146      	str	r6, [r0, #20]
 8010f48:	6103      	str	r3, [r0, #16]
 8010f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010f4e:	bfa4      	itt	ge
 8010f50:	4623      	movge	r3, r4
 8010f52:	462c      	movge	r4, r5
 8010f54:	4638      	mov	r0, r7
 8010f56:	6861      	ldr	r1, [r4, #4]
 8010f58:	bfa6      	itte	ge
 8010f5a:	461d      	movge	r5, r3
 8010f5c:	2600      	movge	r6, #0
 8010f5e:	2601      	movlt	r6, #1
 8010f60:	f7ff fdbe 	bl	8010ae0 <_Balloc>
 8010f64:	f04f 0c00 	mov.w	ip, #0
 8010f68:	60c6      	str	r6, [r0, #12]
 8010f6a:	692b      	ldr	r3, [r5, #16]
 8010f6c:	6926      	ldr	r6, [r4, #16]
 8010f6e:	f104 0214 	add.w	r2, r4, #20
 8010f72:	f105 0914 	add.w	r9, r5, #20
 8010f76:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8010f7a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8010f7e:	f100 0114 	add.w	r1, r0, #20
 8010f82:	f852 ab04 	ldr.w	sl, [r2], #4
 8010f86:	f859 5b04 	ldr.w	r5, [r9], #4
 8010f8a:	fa1f f38a 	uxth.w	r3, sl
 8010f8e:	4463      	add	r3, ip
 8010f90:	b2ac      	uxth	r4, r5
 8010f92:	1b1b      	subs	r3, r3, r4
 8010f94:	0c2c      	lsrs	r4, r5, #16
 8010f96:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8010f9a:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8010f9e:	b29b      	uxth	r3, r3
 8010fa0:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8010fa4:	45c8      	cmp	r8, r9
 8010fa6:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8010faa:	4696      	mov	lr, r2
 8010fac:	f841 4b04 	str.w	r4, [r1], #4
 8010fb0:	d8e7      	bhi.n	8010f82 <__mdiff+0x5c>
 8010fb2:	45be      	cmp	lr, r7
 8010fb4:	d305      	bcc.n	8010fc2 <__mdiff+0x9c>
 8010fb6:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8010fba:	b18b      	cbz	r3, 8010fe0 <__mdiff+0xba>
 8010fbc:	6106      	str	r6, [r0, #16]
 8010fbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010fc2:	f85e 4b04 	ldr.w	r4, [lr], #4
 8010fc6:	b2a2      	uxth	r2, r4
 8010fc8:	4462      	add	r2, ip
 8010fca:	1413      	asrs	r3, r2, #16
 8010fcc:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8010fd0:	b292      	uxth	r2, r2
 8010fd2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8010fd6:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8010fda:	f841 2b04 	str.w	r2, [r1], #4
 8010fde:	e7e8      	b.n	8010fb2 <__mdiff+0x8c>
 8010fe0:	3e01      	subs	r6, #1
 8010fe2:	e7e8      	b.n	8010fb6 <__mdiff+0x90>

08010fe4 <__d2b>:
 8010fe4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010fe8:	461c      	mov	r4, r3
 8010fea:	2101      	movs	r1, #1
 8010fec:	4690      	mov	r8, r2
 8010fee:	9e08      	ldr	r6, [sp, #32]
 8010ff0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8010ff2:	f7ff fd75 	bl	8010ae0 <_Balloc>
 8010ff6:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8010ffa:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8010ffe:	4607      	mov	r7, r0
 8011000:	bb34      	cbnz	r4, 8011050 <__d2b+0x6c>
 8011002:	9201      	str	r2, [sp, #4]
 8011004:	f1b8 0f00 	cmp.w	r8, #0
 8011008:	d027      	beq.n	801105a <__d2b+0x76>
 801100a:	a802      	add	r0, sp, #8
 801100c:	f840 8d08 	str.w	r8, [r0, #-8]!
 8011010:	f7ff fe0b 	bl	8010c2a <__lo0bits>
 8011014:	9900      	ldr	r1, [sp, #0]
 8011016:	b1f0      	cbz	r0, 8011056 <__d2b+0x72>
 8011018:	9a01      	ldr	r2, [sp, #4]
 801101a:	f1c0 0320 	rsb	r3, r0, #32
 801101e:	fa02 f303 	lsl.w	r3, r2, r3
 8011022:	430b      	orrs	r3, r1
 8011024:	40c2      	lsrs	r2, r0
 8011026:	617b      	str	r3, [r7, #20]
 8011028:	9201      	str	r2, [sp, #4]
 801102a:	9b01      	ldr	r3, [sp, #4]
 801102c:	2b00      	cmp	r3, #0
 801102e:	bf14      	ite	ne
 8011030:	2102      	movne	r1, #2
 8011032:	2101      	moveq	r1, #1
 8011034:	61bb      	str	r3, [r7, #24]
 8011036:	6139      	str	r1, [r7, #16]
 8011038:	b1c4      	cbz	r4, 801106c <__d2b+0x88>
 801103a:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 801103e:	4404      	add	r4, r0
 8011040:	6034      	str	r4, [r6, #0]
 8011042:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011046:	6028      	str	r0, [r5, #0]
 8011048:	4638      	mov	r0, r7
 801104a:	b002      	add	sp, #8
 801104c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011050:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8011054:	e7d5      	b.n	8011002 <__d2b+0x1e>
 8011056:	6179      	str	r1, [r7, #20]
 8011058:	e7e7      	b.n	801102a <__d2b+0x46>
 801105a:	a801      	add	r0, sp, #4
 801105c:	f7ff fde5 	bl	8010c2a <__lo0bits>
 8011060:	2101      	movs	r1, #1
 8011062:	9b01      	ldr	r3, [sp, #4]
 8011064:	6139      	str	r1, [r7, #16]
 8011066:	617b      	str	r3, [r7, #20]
 8011068:	3020      	adds	r0, #32
 801106a:	e7e5      	b.n	8011038 <__d2b+0x54>
 801106c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8011070:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8011074:	6030      	str	r0, [r6, #0]
 8011076:	6918      	ldr	r0, [r3, #16]
 8011078:	f7ff fdb8 	bl	8010bec <__hi0bits>
 801107c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8011080:	e7e1      	b.n	8011046 <__d2b+0x62>
	...

08011084 <_read_r>:
 8011084:	b538      	push	{r3, r4, r5, lr}
 8011086:	4605      	mov	r5, r0
 8011088:	4608      	mov	r0, r1
 801108a:	4611      	mov	r1, r2
 801108c:	2200      	movs	r2, #0
 801108e:	4c05      	ldr	r4, [pc, #20]	; (80110a4 <_read_r+0x20>)
 8011090:	6022      	str	r2, [r4, #0]
 8011092:	461a      	mov	r2, r3
 8011094:	f000 f94c 	bl	8011330 <_read>
 8011098:	1c43      	adds	r3, r0, #1
 801109a:	d102      	bne.n	80110a2 <_read_r+0x1e>
 801109c:	6823      	ldr	r3, [r4, #0]
 801109e:	b103      	cbz	r3, 80110a2 <_read_r+0x1e>
 80110a0:	602b      	str	r3, [r5, #0]
 80110a2:	bd38      	pop	{r3, r4, r5, pc}
 80110a4:	20000b20 	.word	0x20000b20

080110a8 <__ssprint_r>:
 80110a8:	6893      	ldr	r3, [r2, #8]
 80110aa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110ae:	4681      	mov	r9, r0
 80110b0:	460c      	mov	r4, r1
 80110b2:	4617      	mov	r7, r2
 80110b4:	2b00      	cmp	r3, #0
 80110b6:	d060      	beq.n	801117a <__ssprint_r+0xd2>
 80110b8:	f04f 0b00 	mov.w	fp, #0
 80110bc:	465e      	mov	r6, fp
 80110be:	f8d2 a000 	ldr.w	sl, [r2]
 80110c2:	b356      	cbz	r6, 801111a <__ssprint_r+0x72>
 80110c4:	68a3      	ldr	r3, [r4, #8]
 80110c6:	429e      	cmp	r6, r3
 80110c8:	d344      	bcc.n	8011154 <__ssprint_r+0xac>
 80110ca:	89a2      	ldrh	r2, [r4, #12]
 80110cc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80110d0:	d03e      	beq.n	8011150 <__ssprint_r+0xa8>
 80110d2:	2302      	movs	r3, #2
 80110d4:	6825      	ldr	r5, [r4, #0]
 80110d6:	6921      	ldr	r1, [r4, #16]
 80110d8:	eba5 0801 	sub.w	r8, r5, r1
 80110dc:	6965      	ldr	r5, [r4, #20]
 80110de:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80110e2:	fb95 f5f3 	sdiv	r5, r5, r3
 80110e6:	f108 0301 	add.w	r3, r8, #1
 80110ea:	4433      	add	r3, r6
 80110ec:	429d      	cmp	r5, r3
 80110ee:	bf38      	it	cc
 80110f0:	461d      	movcc	r5, r3
 80110f2:	0553      	lsls	r3, r2, #21
 80110f4:	d546      	bpl.n	8011184 <__ssprint_r+0xdc>
 80110f6:	4629      	mov	r1, r5
 80110f8:	4648      	mov	r0, r9
 80110fa:	f7fc fb3b 	bl	800d774 <_malloc_r>
 80110fe:	b998      	cbnz	r0, 8011128 <__ssprint_r+0x80>
 8011100:	230c      	movs	r3, #12
 8011102:	f8c9 3000 	str.w	r3, [r9]
 8011106:	89a3      	ldrh	r3, [r4, #12]
 8011108:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801110c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011110:	81a3      	strh	r3, [r4, #12]
 8011112:	2300      	movs	r3, #0
 8011114:	60bb      	str	r3, [r7, #8]
 8011116:	607b      	str	r3, [r7, #4]
 8011118:	e031      	b.n	801117e <__ssprint_r+0xd6>
 801111a:	f8da b000 	ldr.w	fp, [sl]
 801111e:	f8da 6004 	ldr.w	r6, [sl, #4]
 8011122:	f10a 0a08 	add.w	sl, sl, #8
 8011126:	e7cc      	b.n	80110c2 <__ssprint_r+0x1a>
 8011128:	4642      	mov	r2, r8
 801112a:	6921      	ldr	r1, [r4, #16]
 801112c:	9001      	str	r0, [sp, #4]
 801112e:	f7fc fd5c 	bl	800dbea <memcpy>
 8011132:	89a2      	ldrh	r2, [r4, #12]
 8011134:	9b01      	ldr	r3, [sp, #4]
 8011136:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 801113a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801113e:	81a2      	strh	r2, [r4, #12]
 8011140:	6123      	str	r3, [r4, #16]
 8011142:	4443      	add	r3, r8
 8011144:	6023      	str	r3, [r4, #0]
 8011146:	4633      	mov	r3, r6
 8011148:	6165      	str	r5, [r4, #20]
 801114a:	eba5 0508 	sub.w	r5, r5, r8
 801114e:	60a5      	str	r5, [r4, #8]
 8011150:	429e      	cmp	r6, r3
 8011152:	d200      	bcs.n	8011156 <__ssprint_r+0xae>
 8011154:	4633      	mov	r3, r6
 8011156:	461a      	mov	r2, r3
 8011158:	4659      	mov	r1, fp
 801115a:	6820      	ldr	r0, [r4, #0]
 801115c:	9301      	str	r3, [sp, #4]
 801115e:	f7fc fd4f 	bl	800dc00 <memmove>
 8011162:	68a2      	ldr	r2, [r4, #8]
 8011164:	9b01      	ldr	r3, [sp, #4]
 8011166:	1ad2      	subs	r2, r2, r3
 8011168:	60a2      	str	r2, [r4, #8]
 801116a:	6822      	ldr	r2, [r4, #0]
 801116c:	4413      	add	r3, r2
 801116e:	6023      	str	r3, [r4, #0]
 8011170:	68bb      	ldr	r3, [r7, #8]
 8011172:	1b9e      	subs	r6, r3, r6
 8011174:	60be      	str	r6, [r7, #8]
 8011176:	2e00      	cmp	r6, #0
 8011178:	d1cf      	bne.n	801111a <__ssprint_r+0x72>
 801117a:	2000      	movs	r0, #0
 801117c:	6078      	str	r0, [r7, #4]
 801117e:	b003      	add	sp, #12
 8011180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011184:	462a      	mov	r2, r5
 8011186:	4648      	mov	r0, r9
 8011188:	f7fc fdb8 	bl	800dcfc <_realloc_r>
 801118c:	4603      	mov	r3, r0
 801118e:	2800      	cmp	r0, #0
 8011190:	d1d6      	bne.n	8011140 <__ssprint_r+0x98>
 8011192:	6921      	ldr	r1, [r4, #16]
 8011194:	4648      	mov	r0, r9
 8011196:	f7ff fb99 	bl	80108cc <_free_r>
 801119a:	e7b1      	b.n	8011100 <__ssprint_r+0x58>

0801119c <_calloc_r>:
 801119c:	b510      	push	{r4, lr}
 801119e:	4351      	muls	r1, r2
 80111a0:	f7fc fae8 	bl	800d774 <_malloc_r>
 80111a4:	4604      	mov	r4, r0
 80111a6:	b198      	cbz	r0, 80111d0 <_calloc_r+0x34>
 80111a8:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80111ac:	f022 0203 	bic.w	r2, r2, #3
 80111b0:	3a04      	subs	r2, #4
 80111b2:	2a24      	cmp	r2, #36	; 0x24
 80111b4:	d81b      	bhi.n	80111ee <_calloc_r+0x52>
 80111b6:	2a13      	cmp	r2, #19
 80111b8:	d917      	bls.n	80111ea <_calloc_r+0x4e>
 80111ba:	2100      	movs	r1, #0
 80111bc:	2a1b      	cmp	r2, #27
 80111be:	6001      	str	r1, [r0, #0]
 80111c0:	6041      	str	r1, [r0, #4]
 80111c2:	d807      	bhi.n	80111d4 <_calloc_r+0x38>
 80111c4:	f100 0308 	add.w	r3, r0, #8
 80111c8:	2200      	movs	r2, #0
 80111ca:	601a      	str	r2, [r3, #0]
 80111cc:	605a      	str	r2, [r3, #4]
 80111ce:	609a      	str	r2, [r3, #8]
 80111d0:	4620      	mov	r0, r4
 80111d2:	bd10      	pop	{r4, pc}
 80111d4:	2a24      	cmp	r2, #36	; 0x24
 80111d6:	6081      	str	r1, [r0, #8]
 80111d8:	60c1      	str	r1, [r0, #12]
 80111da:	bf11      	iteee	ne
 80111dc:	f100 0310 	addne.w	r3, r0, #16
 80111e0:	6101      	streq	r1, [r0, #16]
 80111e2:	f100 0318 	addeq.w	r3, r0, #24
 80111e6:	6141      	streq	r1, [r0, #20]
 80111e8:	e7ee      	b.n	80111c8 <_calloc_r+0x2c>
 80111ea:	4603      	mov	r3, r0
 80111ec:	e7ec      	b.n	80111c8 <_calloc_r+0x2c>
 80111ee:	2100      	movs	r1, #0
 80111f0:	f7fc fd20 	bl	800dc34 <memset>
 80111f4:	e7ec      	b.n	80111d0 <_calloc_r+0x34>
	...

080111f8 <_fclose_r>:
 80111f8:	b570      	push	{r4, r5, r6, lr}
 80111fa:	4605      	mov	r5, r0
 80111fc:	460c      	mov	r4, r1
 80111fe:	b911      	cbnz	r1, 8011206 <_fclose_r+0xe>
 8011200:	2600      	movs	r6, #0
 8011202:	4630      	mov	r0, r6
 8011204:	bd70      	pop	{r4, r5, r6, pc}
 8011206:	b118      	cbz	r0, 8011210 <_fclose_r+0x18>
 8011208:	6983      	ldr	r3, [r0, #24]
 801120a:	b90b      	cbnz	r3, 8011210 <_fclose_r+0x18>
 801120c:	f7ff fa86 	bl	801071c <__sinit>
 8011210:	4b2c      	ldr	r3, [pc, #176]	; (80112c4 <_fclose_r+0xcc>)
 8011212:	429c      	cmp	r4, r3
 8011214:	d114      	bne.n	8011240 <_fclose_r+0x48>
 8011216:	686c      	ldr	r4, [r5, #4]
 8011218:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801121a:	07d8      	lsls	r0, r3, #31
 801121c:	d405      	bmi.n	801122a <_fclose_r+0x32>
 801121e:	89a3      	ldrh	r3, [r4, #12]
 8011220:	0599      	lsls	r1, r3, #22
 8011222:	d402      	bmi.n	801122a <_fclose_r+0x32>
 8011224:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011226:	f7fc fa27 	bl	800d678 <__retarget_lock_acquire_recursive>
 801122a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801122e:	b98b      	cbnz	r3, 8011254 <_fclose_r+0x5c>
 8011230:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8011232:	f016 0601 	ands.w	r6, r6, #1
 8011236:	d1e3      	bne.n	8011200 <_fclose_r+0x8>
 8011238:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801123a:	f7fc fa1f 	bl	800d67c <__retarget_lock_release_recursive>
 801123e:	e7e0      	b.n	8011202 <_fclose_r+0xa>
 8011240:	4b21      	ldr	r3, [pc, #132]	; (80112c8 <_fclose_r+0xd0>)
 8011242:	429c      	cmp	r4, r3
 8011244:	d101      	bne.n	801124a <_fclose_r+0x52>
 8011246:	68ac      	ldr	r4, [r5, #8]
 8011248:	e7e6      	b.n	8011218 <_fclose_r+0x20>
 801124a:	4b20      	ldr	r3, [pc, #128]	; (80112cc <_fclose_r+0xd4>)
 801124c:	429c      	cmp	r4, r3
 801124e:	bf08      	it	eq
 8011250:	68ec      	ldreq	r4, [r5, #12]
 8011252:	e7e1      	b.n	8011218 <_fclose_r+0x20>
 8011254:	4621      	mov	r1, r4
 8011256:	4628      	mov	r0, r5
 8011258:	f7ff f93a 	bl	80104d0 <__sflush_r>
 801125c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801125e:	4606      	mov	r6, r0
 8011260:	b133      	cbz	r3, 8011270 <_fclose_r+0x78>
 8011262:	6a21      	ldr	r1, [r4, #32]
 8011264:	4628      	mov	r0, r5
 8011266:	4798      	blx	r3
 8011268:	2800      	cmp	r0, #0
 801126a:	bfb8      	it	lt
 801126c:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
 8011270:	89a3      	ldrh	r3, [r4, #12]
 8011272:	061a      	lsls	r2, r3, #24
 8011274:	d503      	bpl.n	801127e <_fclose_r+0x86>
 8011276:	6921      	ldr	r1, [r4, #16]
 8011278:	4628      	mov	r0, r5
 801127a:	f7ff fb27 	bl	80108cc <_free_r>
 801127e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011280:	b141      	cbz	r1, 8011294 <_fclose_r+0x9c>
 8011282:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8011286:	4299      	cmp	r1, r3
 8011288:	d002      	beq.n	8011290 <_fclose_r+0x98>
 801128a:	4628      	mov	r0, r5
 801128c:	f7ff fb1e 	bl	80108cc <_free_r>
 8011290:	2300      	movs	r3, #0
 8011292:	6363      	str	r3, [r4, #52]	; 0x34
 8011294:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011296:	b121      	cbz	r1, 80112a2 <_fclose_r+0xaa>
 8011298:	4628      	mov	r0, r5
 801129a:	f7ff fb17 	bl	80108cc <_free_r>
 801129e:	2300      	movs	r3, #0
 80112a0:	64a3      	str	r3, [r4, #72]	; 0x48
 80112a2:	f7ff fa23 	bl	80106ec <__sfp_lock_acquire>
 80112a6:	2300      	movs	r3, #0
 80112a8:	81a3      	strh	r3, [r4, #12]
 80112aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80112ac:	07db      	lsls	r3, r3, #31
 80112ae:	d402      	bmi.n	80112b6 <_fclose_r+0xbe>
 80112b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80112b2:	f7fc f9e3 	bl	800d67c <__retarget_lock_release_recursive>
 80112b6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80112b8:	f7fc f9dd 	bl	800d676 <__retarget_lock_close_recursive>
 80112bc:	f7ff fa1c 	bl	80106f8 <__sfp_lock_release>
 80112c0:	e79f      	b.n	8011202 <_fclose_r+0xa>
 80112c2:	bf00      	nop
 80112c4:	080130b0 	.word	0x080130b0
 80112c8:	080130d0 	.word	0x080130d0
 80112cc:	08013090 	.word	0x08013090

080112d0 <_close>:
 80112d0:	2258      	movs	r2, #88	; 0x58
 80112d2:	4b02      	ldr	r3, [pc, #8]	; (80112dc <_close+0xc>)
 80112d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80112d8:	601a      	str	r2, [r3, #0]
 80112da:	4770      	bx	lr
 80112dc:	20000b20 	.word	0x20000b20

080112e0 <_fstat>:
 80112e0:	2258      	movs	r2, #88	; 0x58
 80112e2:	4b02      	ldr	r3, [pc, #8]	; (80112ec <_fstat+0xc>)
 80112e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80112e8:	601a      	str	r2, [r3, #0]
 80112ea:	4770      	bx	lr
 80112ec:	20000b20 	.word	0x20000b20

080112f0 <_getpid>:
 80112f0:	2258      	movs	r2, #88	; 0x58
 80112f2:	4b02      	ldr	r3, [pc, #8]	; (80112fc <_getpid+0xc>)
 80112f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80112f8:	601a      	str	r2, [r3, #0]
 80112fa:	4770      	bx	lr
 80112fc:	20000b20 	.word	0x20000b20

08011300 <_isatty>:
 8011300:	2258      	movs	r2, #88	; 0x58
 8011302:	4b02      	ldr	r3, [pc, #8]	; (801130c <_isatty+0xc>)
 8011304:	2000      	movs	r0, #0
 8011306:	601a      	str	r2, [r3, #0]
 8011308:	4770      	bx	lr
 801130a:	bf00      	nop
 801130c:	20000b20 	.word	0x20000b20

08011310 <_kill>:
 8011310:	2258      	movs	r2, #88	; 0x58
 8011312:	4b02      	ldr	r3, [pc, #8]	; (801131c <_kill+0xc>)
 8011314:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011318:	601a      	str	r2, [r3, #0]
 801131a:	4770      	bx	lr
 801131c:	20000b20 	.word	0x20000b20

08011320 <_lseek>:
 8011320:	2258      	movs	r2, #88	; 0x58
 8011322:	4b02      	ldr	r3, [pc, #8]	; (801132c <_lseek+0xc>)
 8011324:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011328:	601a      	str	r2, [r3, #0]
 801132a:	4770      	bx	lr
 801132c:	20000b20 	.word	0x20000b20

08011330 <_read>:
 8011330:	2258      	movs	r2, #88	; 0x58
 8011332:	4b02      	ldr	r3, [pc, #8]	; (801133c <_read+0xc>)
 8011334:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011338:	601a      	str	r2, [r3, #0]
 801133a:	4770      	bx	lr
 801133c:	20000b20 	.word	0x20000b20

08011340 <_sbrk>:
 8011340:	4b04      	ldr	r3, [pc, #16]	; (8011354 <_sbrk+0x14>)
 8011342:	4602      	mov	r2, r0
 8011344:	6819      	ldr	r1, [r3, #0]
 8011346:	b909      	cbnz	r1, 801134c <_sbrk+0xc>
 8011348:	4903      	ldr	r1, [pc, #12]	; (8011358 <_sbrk+0x18>)
 801134a:	6019      	str	r1, [r3, #0]
 801134c:	6818      	ldr	r0, [r3, #0]
 801134e:	4402      	add	r2, r0
 8011350:	601a      	str	r2, [r3, #0]
 8011352:	4770      	bx	lr
 8011354:	20000b0c 	.word	0x20000b0c
 8011358:	20000b24 	.word	0x20000b24

0801135c <_write>:
 801135c:	2258      	movs	r2, #88	; 0x58
 801135e:	4b02      	ldr	r3, [pc, #8]	; (8011368 <_write+0xc>)
 8011360:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011364:	601a      	str	r2, [r3, #0]
 8011366:	4770      	bx	lr
 8011368:	20000b20 	.word	0x20000b20

0801136c <_exit>:
 801136c:	e7fe      	b.n	801136c <_exit>
	...

08011370 <_init>:
 8011370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011372:	bf00      	nop
 8011374:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8011376:	bc08      	pop	{r3}
 8011378:	469e      	mov	lr, r3
 801137a:	4770      	bx	lr

0801137c <_fini>:
 801137c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801137e:	bf00      	nop
 8011380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8011382:	bc08      	pop	{r3}
 8011384:	469e      	mov	lr, r3
 8011386:	4770      	bx	lr
